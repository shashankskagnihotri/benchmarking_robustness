Started at Sun Oct  6 01:04:53 CEST 2024
Processing corruption type: gaussian_noise
10/06 01:05:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 495005566
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 495005566
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:05:02 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/gaussian_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:05:29,564 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:05:29,564 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:05:29,564 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:05:29,564 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:05:29,564 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:05:29,564 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:05:29,564 - mmseg - INFO - res_post_norm: False
2024-10-06 01:05:29,564 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:05:36 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:05:36 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:05:37 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:05:42 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:06:50 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:44:05  time: 0.5407  data_time: 0.0016  memory: 26523  
10/06 01:07:19 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:32  time: 0.6683  data_time: 0.0016  memory: 16856  
10/06 01:07:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:29  time: 0.3374  data_time: 0.0015  memory: 14216  
10/06 01:08:01 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:47  time: 0.4419  data_time: 0.0015  memory: 16860  
10/06 01:08:25 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:59  time: 0.2857  data_time: 0.0015  memory: 16833  
10/06 01:08:45 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:17:18  time: 0.1760  data_time: 0.0016  memory: 16865  
10/06 01:09:08 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:08  time: 0.3131  data_time: 0.0015  memory: 16876  
10/06 01:09:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:14:57  time: 0.3224  data_time: 0.0014  memory: 16835  
10/06 01:09:38 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:31  time: 0.2640  data_time: 0.0014  memory: 10734  
10/06 01:09:49 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:20  time: 0.1648  data_time: 0.0013  memory: 14197  
10/06 01:10:01 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:22  time: 0.3255  data_time: 0.0015  memory: 11109  
10/06 01:10:12 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:29  time: 0.3210  data_time: 0.0015  memory: 10918  
10/06 01:10:27 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:51  time: 0.3626  data_time: 0.0014  memory: 14248  
10/06 01:10:45 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:21  time: 0.1759  data_time: 0.0016  memory: 16874  
10/06 01:11:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:54  time: 0.6674  data_time: 0.0014  memory: 14252  
10/06 01:11:13 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:15  time: 0.1675  data_time: 0.0015  memory: 10919  
10/06 01:11:21 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:38  time: 0.1686  data_time: 0.0016  memory: 1909  
10/06 01:11:32 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:08  time: 0.2559  data_time: 0.0014  memory: 10174  
10/06 01:11:50 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:46  time: 0.4294  data_time: 0.0015  memory: 14199  
10/06 01:12:02 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:19  time: 0.1606  data_time: 0.0015  memory: 12046  
10/06 01:12:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:57  time: 0.5155  data_time: 0.0015  memory: 14251  
10/06 01:12:31 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:34  time: 0.1649  data_time: 0.0015  memory: 14217  
10/06 01:12:43 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:10  time: 0.2966  data_time: 0.0015  memory: 14204  
10/06 01:12:51 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:46  time: 0.1658  data_time: 0.0014  memory: 3077  
10/06 01:13:03 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:24  time: 0.2883  data_time: 0.0015  memory: 16863  
10/06 01:13:11 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:01  time: 0.1676  data_time: 0.0014  memory: 1912  
10/06 01:13:20 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:40  time: 0.1578  data_time: 0.0015  memory: 8487  
10/06 01:13:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:22  time: 0.3542  data_time: 0.0014  memory: 14228  
10/06 01:13:46 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:03  time: 0.3180  data_time: 0.0014  memory: 10174  
10/06 01:13:54 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:44  time: 0.1587  data_time: 0.0021  memory: 1911  
10/06 01:14:05 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:25  time: 0.1711  data_time: 0.0015  memory: 11855  
10/06 01:14:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:07  time: 0.1652  data_time: 0.0016  memory: 1909  
10/06 01:14:27 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:51  time: 0.1888  data_time: 0.0014  memory: 16874  
10/06 01:14:40 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:34  time: 0.1681  data_time: 0.0015  memory: 10360  
10/06 01:14:51 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:18  time: 0.1683  data_time: 0.0015  memory: 11484  
10/06 01:15:01 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:02  time: 0.1694  data_time: 0.0016  memory: 8858  
10/06 01:15:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:45  time: 0.1671  data_time: 0.0016  memory: 1857  
10/06 01:15:19 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:30  time: 0.1654  data_time: 0.0014  memory: 6220  
10/06 01:15:31 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.1611  data_time: 0.0014  memory: 14207  
10/06 01:15:43 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1502  data_time: 0.0014  memory: 9799  
10/06 01:15:43 - mmengine - INFO - per class results:
10/06 01:15:43 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.34 | 88.35 |
|       building      | 82.98 | 90.48 |
|         sky         |  94.1 | 96.76 |
|        floor        | 80.21 | 90.59 |
|         tree        | 75.25 | 89.89 |
|       ceiling       |  84.3 |  91.6 |
|         road        | 84.21 | 91.54 |
|         bed         | 89.73 | 96.29 |
|      windowpane     | 62.55 |  80.4 |
|        grass        | 62.98 | 77.61 |
|       cabinet       |  60.2 | 71.13 |
|       sidewalk      | 66.95 | 77.51 |
|        person       | 79.79 | 89.14 |
|        earth        | 37.52 | 55.99 |
|         door        | 54.37 | 68.07 |
|        table        | 62.76 | 77.32 |
|       mountain      |  58.3 |  69.9 |
|        plant        | 50.86 | 59.05 |
|       curtain       | 74.18 | 84.04 |
|        chair        | 58.15 |  70.5 |
|         car         | 84.05 | 93.41 |
|        water        | 57.39 | 71.42 |
|       painting      | 72.07 | 85.77 |
|         sofa        | 74.07 | 89.26 |
|        shelf        | 45.31 | 64.25 |
|        house        | 50.11 | 77.37 |
|         sea         | 63.12 | 84.67 |
|        mirror       | 68.68 |  74.8 |
|         rug         | 64.72 | 77.59 |
|        field        | 27.45 | 48.84 |
|       armchair      | 50.93 | 66.88 |
|         seat        | 59.01 | 78.43 |
|        fence        | 46.66 |  62.5 |
|         desk        | 48.59 | 74.84 |
|         rock        | 52.78 | 78.17 |
|       wardrobe      | 50.99 |  73.9 |
|         lamp        | 62.89 | 74.54 |
|       bathtub       | 77.39 | 84.09 |
|       railing       | 38.55 | 51.71 |
|       cushion       | 64.57 | 76.01 |
|         base        | 39.59 | 54.59 |
|         box         | 27.93 | 35.44 |
|        column       | 51.48 | 61.75 |
|      signboard      | 38.66 | 52.44 |
|   chest of drawers  | 41.03 | 70.27 |
|       counter       | 26.28 | 34.83 |
|         sand        | 50.74 | 70.91 |
|         sink        | 71.11 | 79.32 |
|      skyscraper     | 64.16 | 86.08 |
|      fireplace      | 71.13 | 89.15 |
|     refrigerator    | 74.74 | 84.49 |
|      grandstand     | 42.32 | 84.31 |
|         path        | 23.13 | 37.85 |
|        stairs       | 29.25 | 40.48 |
|        runway       | 67.23 | 84.06 |
|         case        | 51.35 | 65.89 |
|      pool table     | 91.85 | 96.94 |
|        pillow       | 56.25 | 63.65 |
|     screen door     | 66.54 | 73.94 |
|       stairway      | 39.47 | 53.39 |
|        river        | 13.14 | 28.41 |
|        bridge       |  46.2 | 56.59 |
|       bookcase      | 41.18 | 69.94 |
|        blind        | 39.22 | 42.95 |
|     coffee table    | 57.79 |  84.6 |
|        toilet       | 84.29 | 91.16 |
|        flower       | 45.05 | 60.24 |
|         book        | 47.86 |  66.1 |
|         hill        | 12.14 | 23.38 |
|        bench        | 59.24 | 70.53 |
|      countertop     | 57.66 |  75.2 |
|        stove        | 80.03 | 89.13 |
|         palm        | 53.55 | 69.86 |
|    kitchen island   | 40.73 | 80.94 |
|       computer      | 75.76 |  90.5 |
|     swivel chair    | 51.13 | 67.02 |
|         boat        | 72.43 | 86.47 |
|         bar         | 50.26 | 63.62 |
|    arcade machine   | 79.96 | 84.69 |
|        hovel        | 58.33 | 65.04 |
|         bus         | 90.28 | 96.96 |
|        towel        | 64.79 |  75.6 |
|        light        | 48.19 | 56.38 |
|        truck        | 42.07 | 55.82 |
|        tower        | 18.95 | 33.32 |
|      chandelier     | 66.92 | 83.79 |
|        awning       | 29.63 | 37.91 |
|     streetlight     | 27.53 | 35.81 |
|        booth        | 35.54 | 48.46 |
| television receiver | 73.01 | 82.94 |
|       airplane      | 65.36 |  72.7 |
|      dirt track     | 10.36 | 20.34 |
|       apparel       | 55.34 | 68.03 |
|         pole        | 17.92 | 25.26 |
|         land        |  3.24 |  4.42 |
|      bannister      | 12.41 | 16.76 |
|      escalator      | 53.83 | 82.23 |
|       ottoman       |  57.1 | 67.69 |
|        bottle       | 34.71 | 49.34 |
|        buffet       |  42.8 | 52.34 |
|        poster       | 33.38 | 43.46 |
|        stage        | 19.29 | 27.29 |
|         van         | 43.28 | 58.84 |
|         ship        | 57.57 | 64.62 |
|       fountain      | 35.12 | 35.49 |
|    conveyer belt    | 74.65 | 92.95 |
|        canopy       | 49.86 | 66.63 |
|        washer       | 70.88 | 73.25 |
|      plaything      | 37.74 | 53.51 |
|    swimming pool    | 68.72 | 78.67 |
|        stool        | 41.61 | 56.65 |
|        barrel       |  48.4 | 67.44 |
|        basket       | 31.91 | 40.53 |
|      waterfall      |  53.9 | 67.49 |
|         tent        | 92.31 | 98.46 |
|         bag         | 15.54 | 17.95 |
|       minibike      |  71.0 | 82.28 |
|        cradle       |  82.0 | 96.81 |
|         oven        | 48.85 | 58.46 |
|         ball        | 26.66 | 28.02 |
|         food        | 45.79 | 55.69 |
|         step        | 16.43 | 20.14 |
|         tank        | 62.19 | 65.88 |
|      trade name     | 28.54 | 33.43 |
|      microwave      | 83.77 | 94.29 |
|         pot         | 49.39 | 59.09 |
|        animal       | 58.45 | 60.25 |
|       bicycle       |  54.7 | 73.38 |
|         lake        | 55.49 |  65.5 |
|      dishwasher     |  59.7 | 70.19 |
|        screen       | 60.75 | 83.84 |
|       blanket       | 22.05 | 24.68 |
|      sculpture      | 70.82 | 81.91 |
|         hood        | 58.71 | 61.72 |
|        sconce       | 44.94 | 52.56 |
|         vase        | 40.25 | 53.21 |
|    traffic light    | 35.11 | 47.62 |
|         tray        |  8.33 | 13.77 |
|        ashcan       | 43.93 | 56.28 |
|         fan         |  61.2 |  76.0 |
|         pier        | 40.32 | 62.52 |
|      crt screen     | 13.66 | 31.19 |
|        plate        | 55.07 | 76.74 |
|       monitor       | 11.65 | 16.25 |
|    bulletin board   | 56.93 | 66.22 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 58.29 | 67.72 |
|        glass        | 13.88 | 14.94 |
|        clock        | 41.57 | 49.15 |
|         flag        | 64.43 | 73.91 |
+---------------------+-------+-------+
10/06 01:15:43 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.5400  mIoU: 52.1100  mAcc: 64.4900  data_time: 0.0016  time: 0.3002
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
10/06 01:15:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2121697858
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2121697858
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:15:47 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/shot_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:15:51,218 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:15:51,219 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:15:51,219 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:15:51,219 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:15:51,219 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:15:51,219 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:15:51,219 - mmseg - INFO - res_post_norm: False
2024-10-06 01:15:51,219 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:15:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:15:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:15:58 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:16:01 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:16:52 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:24  time: 0.6185  data_time: 0.0016  memory: 26523  
10/06 01:17:24 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:25  time: 0.7456  data_time: 0.0015  memory: 16856  
10/06 01:17:46 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:21:35  time: 0.4167  data_time: 0.0034  memory: 14216  
10/06 01:18:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:00  time: 0.5197  data_time: 0.0015  memory: 16860  
10/06 01:18:42 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:47  time: 0.3585  data_time: 0.0014  memory: 16833  
10/06 01:19:06 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:17:29  time: 0.2486  data_time: 0.0016  memory: 16865  
10/06 01:19:32 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:34  time: 0.3855  data_time: 0.0014  memory: 16876  
10/06 01:19:54 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:34  time: 0.3988  data_time: 0.0014  memory: 16835  
10/06 01:20:09 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:15  time: 0.3348  data_time: 0.0014  memory: 10734  
10/06 01:20:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:13:09  time: 0.2351  data_time: 0.0015  memory: 14197  
10/06 01:20:40 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:15  time: 0.4066  data_time: 0.0015  memory: 11109  
10/06 01:20:54 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:25  time: 0.3952  data_time: 0.0014  memory: 10918  
10/06 01:21:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:48  time: 0.4348  data_time: 0.0013  memory: 14248  
10/06 01:21:34 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:19  time: 0.2502  data_time: 0.0014  memory: 16874  
10/06 01:21:56 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:52  time: 0.7369  data_time: 0.0014  memory: 14252  
10/06 01:22:09 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:12  time: 0.2416  data_time: 0.0015  memory: 10919  
10/06 01:22:21 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:34  time: 0.2435  data_time: 0.0015  memory: 1909  
10/06 01:22:36 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:03  time: 0.3214  data_time: 0.0013  memory: 10174  
10/06 01:22:57 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:40  time: 0.4995  data_time: 0.0014  memory: 14199  
10/06 01:23:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:12  time: 0.2300  data_time: 0.0017  memory: 12046  
10/06 01:23:32 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:48  time: 0.5900  data_time: 0.0014  memory: 14251  
10/06 01:23:50 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:23  time: 0.2362  data_time: 0.0014  memory: 14217  
10/06 01:24:04 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:57  time: 0.3686  data_time: 0.0015  memory: 14204  
10/06 01:24:17 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:30  time: 0.2472  data_time: 0.0015  memory: 3077  
10/06 01:24:32 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:06  time: 0.3592  data_time: 0.0015  memory: 16863  
10/06 01:24:43 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:41  time: 0.2438  data_time: 0.0015  memory: 1912  
10/06 01:24:57 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:18  time: 0.2251  data_time: 0.0014  memory: 8487  
10/06 01:25:16 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:57  time: 0.4562  data_time: 0.0014  memory: 14228  
10/06 01:25:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:35  time: 0.3931  data_time: 0.0014  memory: 10174  
10/06 01:25:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:13  time: 0.2193  data_time: 0.0014  memory: 1911  
10/06 01:25:56 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:52  time: 0.2469  data_time: 0.0014  memory: 11855  
10/06 01:26:07 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:31  time: 0.2437  data_time: 0.0016  memory: 1909  
10/06 01:26:24 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:12  time: 0.2191  data_time: 0.0014  memory: 16874  
10/06 01:26:41 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:52  time: 0.2424  data_time: 0.0015  memory: 10360  
10/06 01:26:56 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:33  time: 0.2424  data_time: 0.0013  memory: 11484  
10/06 01:27:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:14  time: 0.2462  data_time: 0.0016  memory: 8858  
10/06 01:27:21 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:55  time: 0.2415  data_time: 0.0016  memory: 1857  
10/06 01:27:34 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:36  time: 0.2320  data_time: 0.0014  memory: 6220  
10/06 01:27:49 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:18  time: 0.2377  data_time: 0.0015  memory: 14207  
10/06 01:28:05 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2173  data_time: 0.0014  memory: 9799  
10/06 01:28:05 - mmengine - INFO - per class results:
10/06 01:28:05 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  78.1 | 88.09 |
|       building      | 82.83 | 90.26 |
|         sky         | 93.86 | 96.56 |
|        floor        | 80.87 | 90.78 |
|         tree        |  75.2 | 90.09 |
|       ceiling       | 83.84 | 91.64 |
|         road        | 84.39 | 92.19 |
|         bed         | 89.52 | 96.55 |
|      windowpane     | 62.55 |  81.1 |
|        grass        | 64.83 | 79.16 |
|       cabinet       | 61.13 | 71.67 |
|       sidewalk      | 66.25 |  76.4 |
|        person       | 80.44 | 89.92 |
|        earth        | 37.75 | 56.42 |
|         door        | 52.84 | 65.71 |
|        table        | 62.34 | 77.71 |
|       mountain      | 58.95 | 68.43 |
|        plant        | 50.53 | 59.17 |
|       curtain       | 73.44 | 83.34 |
|        chair        | 58.44 | 71.08 |
|         car         | 84.34 | 93.51 |
|        water        | 60.17 | 74.94 |
|       painting      | 71.79 |  85.7 |
|         sofa        | 76.01 | 90.42 |
|        shelf        | 45.29 | 64.14 |
|        house        |  47.8 | 75.07 |
|         sea         | 66.37 | 85.39 |
|        mirror       | 68.45 | 73.92 |
|         rug         | 64.94 | 77.55 |
|        field        | 31.88 | 52.43 |
|       armchair      | 52.19 | 69.13 |
|         seat        | 58.28 | 77.78 |
|        fence        | 46.14 | 62.68 |
|         desk        |  49.2 | 75.49 |
|         rock        | 51.87 | 78.05 |
|       wardrobe      | 54.72 | 75.92 |
|         lamp        | 61.74 | 73.67 |
|       bathtub       | 76.95 | 83.65 |
|       railing       | 39.87 | 52.27 |
|       cushion       | 64.36 | 75.86 |
|         base        | 40.66 | 57.84 |
|         box         | 27.19 |  34.2 |
|        column       | 52.32 | 62.29 |
|      signboard      | 38.87 |  52.8 |
|   chest of drawers  | 38.96 | 70.68 |
|       counter       | 30.15 | 39.41 |
|         sand        | 49.28 | 67.98 |
|         sink        |  70.2 |  79.3 |
|      skyscraper     | 63.23 | 85.77 |
|      fireplace      | 71.84 | 89.38 |
|     refrigerator    | 75.42 | 85.55 |
|      grandstand     | 44.93 | 84.11 |
|         path        | 21.41 | 36.97 |
|        stairs       | 29.53 | 42.63 |
|        runway       | 68.26 | 84.25 |
|         case        | 51.92 | 66.96 |
|      pool table     | 92.15 | 97.16 |
|        pillow       |  54.9 | 61.96 |
|     screen door     | 62.98 | 69.49 |
|       stairway      | 38.07 | 50.97 |
|        river        | 15.73 | 32.43 |
|        bridge       | 45.97 | 55.25 |
|       bookcase      | 41.77 | 68.81 |
|        blind        | 38.63 | 41.14 |
|     coffee table    | 57.69 | 84.71 |
|        toilet       | 83.85 |  90.2 |
|        flower       | 45.26 |  60.2 |
|         book        | 46.99 |  65.4 |
|         hill        | 10.73 | 24.62 |
|        bench        | 61.03 | 72.96 |
|      countertop     | 56.61 | 71.57 |
|        stove        | 80.25 | 89.19 |
|         palm        | 52.22 | 72.94 |
|    kitchen island   |  41.9 |  80.7 |
|       computer      | 72.97 | 88.49 |
|     swivel chair    |  47.3 | 64.44 |
|         boat        | 76.69 | 87.87 |
|         bar         | 50.65 | 62.87 |
|    arcade machine   | 83.32 | 88.21 |
|        hovel        | 58.29 | 64.55 |
|         bus         | 90.76 | 96.45 |
|        towel        | 63.33 | 73.23 |
|        light        | 45.96 | 53.47 |
|        truck        | 40.37 |  55.8 |
|        tower        | 23.18 | 39.76 |
|      chandelier     | 66.03 | 83.64 |
|        awning       | 30.42 | 38.96 |
|     streetlight     | 27.38 | 35.91 |
|        booth        | 33.92 | 47.23 |
| television receiver | 73.48 | 82.89 |
|       airplane      | 67.01 |  74.3 |
|      dirt track     |  6.73 | 11.33 |
|       apparel       | 45.37 | 56.06 |
|         pole        | 19.58 | 27.31 |
|         land        |  3.7  |  5.82 |
|      bannister      | 12.82 | 17.11 |
|      escalator      |  54.1 | 83.14 |
|       ottoman       |  53.3 | 66.16 |
|        bottle       | 35.35 |  51.2 |
|        buffet       | 42.51 | 52.27 |
|        poster       | 30.32 | 41.77 |
|        stage        | 19.51 | 27.07 |
|         van         | 41.81 | 57.21 |
|         ship        | 48.71 | 54.53 |
|       fountain      | 31.04 |  31.6 |
|    conveyer belt    | 72.09 | 92.92 |
|        canopy       | 48.31 | 69.39 |
|        washer       |  69.8 | 72.11 |
|      plaything      | 37.41 | 52.83 |
|    swimming pool    | 57.89 | 76.84 |
|        stool        |  42.3 | 60.48 |
|        barrel       | 40.25 | 64.79 |
|        basket       |  31.7 |  42.5 |
|      waterfall      | 50.08 | 59.62 |
|         tent        | 92.98 |  98.6 |
|         bag         | 20.64 | 24.35 |
|       minibike      | 72.44 | 84.46 |
|        cradle       | 82.92 | 96.97 |
|         oven        |  49.1 | 58.57 |
|         ball        | 30.29 |  31.9 |
|         food        | 47.79 | 56.23 |
|         step        | 19.51 | 23.56 |
|         tank        | 62.01 | 65.07 |
|      trade name     | 27.93 | 32.75 |
|      microwave      | 82.52 | 92.69 |
|         pot         | 48.56 | 59.47 |
|        animal       | 58.92 | 60.48 |
|       bicycle       | 54.05 | 74.85 |
|         lake        | 57.97 | 63.76 |
|      dishwasher     | 58.19 | 68.69 |
|        screen       | 61.21 | 83.07 |
|       blanket       | 25.47 | 28.53 |
|      sculpture      | 69.49 | 82.14 |
|         hood        | 58.28 | 62.58 |
|        sconce       | 44.33 | 51.22 |
|         vase        | 38.88 | 52.79 |
|    traffic light    | 35.95 | 48.64 |
|         tray        |  8.44 | 15.25 |
|        ashcan       | 35.73 | 49.02 |
|         fan         | 61.18 | 76.23 |
|         pier        | 40.33 | 56.79 |
|      crt screen     | 12.27 | 28.68 |
|        plate        | 54.36 | 75.86 |
|       monitor       | 11.26 | 16.31 |
|    bulletin board   | 58.99 |  68.5 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 55.26 | 63.41 |
|        glass        | 14.45 | 15.48 |
|        clock        | 40.51 | 48.24 |
|         flag        |  63.5 | 72.94 |
+---------------------+-------+-------+
10/06 01:28:05 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.5700  mIoU: 51.8200  mAcc: 64.2900  data_time: 0.0016  time: 0.3621
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
10/06 01:28:08 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 210145297
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 210145297
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:28:10 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/impulse_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:28:13,359 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:28:13,359 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:28:13,359 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:28:13,359 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:28:13,359 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:28:13,359 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:28:13,360 - mmseg - INFO - res_post_norm: False
2024-10-06 01:28:13,360 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:28:19 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:28:19 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:28:20 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:28:23 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:29:09 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:30:25  time: 0.5276  data_time: 0.0017  memory: 26523  
10/06 01:29:37 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:31  time: 0.6530  data_time: 0.0017  memory: 16856  
10/06 01:29:54 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:44  time: 0.3192  data_time: 0.0015  memory: 14216  
10/06 01:30:17 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:11  time: 0.4257  data_time: 0.0014  memory: 16860  
10/06 01:30:41 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:16:04  time: 0.2656  data_time: 0.0015  memory: 16833  
10/06 01:31:00 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:52  time: 0.1561  data_time: 0.0016  memory: 16865  
10/06 01:31:21 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:02  time: 0.2947  data_time: 0.0015  memory: 16876  
10/06 01:31:39 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:06  time: 0.3034  data_time: 0.0014  memory: 16835  
10/06 01:31:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:53  time: 0.2492  data_time: 0.0014  memory: 10734  
10/06 01:32:00 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:51  time: 0.1455  data_time: 0.0014  memory: 14197  
10/06 01:32:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:02  time: 0.3051  data_time: 0.0014  memory: 11109  
10/06 01:32:22 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:17  time: 0.3024  data_time: 0.0015  memory: 10918  
10/06 01:32:36 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:45  time: 0.3429  data_time: 0.0013  memory: 14248  
10/06 01:32:53 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:21  time: 0.1557  data_time: 0.0015  memory: 16874  
10/06 01:33:10 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:58  time: 0.6515  data_time: 0.0014  memory: 14252  
10/06 01:33:19 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:23  time: 0.1479  data_time: 0.0014  memory: 10919  
10/06 01:33:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:50  time: 0.1496  data_time: 0.0015  memory: 1909  
10/06 01:33:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:23  time: 0.2385  data_time: 0.0013  memory: 10174  
10/06 01:33:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:05  time: 0.4102  data_time: 0.0014  memory: 14199  
10/06 01:34:04 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:41  time: 0.1412  data_time: 0.0014  memory: 12046  
10/06 01:34:19 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:22  time: 0.4977  data_time: 0.0016  memory: 14251  
10/06 01:34:32 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:02  time: 0.1462  data_time: 0.0016  memory: 14217  
10/06 01:34:42 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:40  time: 0.2799  data_time: 0.0015  memory: 14204  
10/06 01:34:50 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:17  time: 0.1453  data_time: 0.0014  memory: 3077  
10/06 01:35:00 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:58  time: 0.2719  data_time: 0.0015  memory: 16863  
10/06 01:35:07 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:37  time: 0.1504  data_time: 0.0016  memory: 1912  
10/06 01:35:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:18  time: 0.1400  data_time: 0.0015  memory: 8487  
10/06 01:35:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:03  time: 0.3356  data_time: 0.0014  memory: 14228  
10/06 01:35:40 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:45  time: 0.3015  data_time: 0.0016  memory: 10174  
10/06 01:35:47 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:28  time: 0.1402  data_time: 0.0014  memory: 1911  
10/06 01:35:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:11  time: 0.1549  data_time: 0.0015  memory: 11855  
10/06 01:36:04 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:55  time: 0.1480  data_time: 0.0016  memory: 1909  
10/06 01:36:17 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:40  time: 0.1381  data_time: 0.0014  memory: 16874  
10/06 01:36:29 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:25  time: 0.1513  data_time: 0.0016  memory: 10360  
10/06 01:36:39 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:10  time: 0.1502  data_time: 0.0014  memory: 11484  
10/06 01:36:48 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:56  time: 0.1524  data_time: 0.0016  memory: 8858  
10/06 01:36:55 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:41  time: 0.1516  data_time: 0.0016  memory: 1857  
10/06 01:37:04 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:27  time: 0.1481  data_time: 0.0015  memory: 6220  
10/06 01:37:15 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1444  data_time: 0.0015  memory: 14207  
10/06 01:37:26 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1335  data_time: 0.0013  memory: 9799  
10/06 01:37:26 - mmengine - INFO - per class results:
10/06 01:37:26 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  78.7 | 89.46 |
|       building      | 83.04 |  90.8 |
|         sky         | 94.33 | 96.98 |
|        floor        |  80.7 |  90.5 |
|         tree        | 74.08 | 89.37 |
|       ceiling       | 84.23 | 91.03 |
|         road        | 83.41 | 89.87 |
|         bed         | 89.51 | 96.44 |
|      windowpane     | 63.47 | 81.01 |
|        grass        | 64.48 | 77.74 |
|       cabinet       |  60.1 | 70.19 |
|       sidewalk      | 66.15 | 78.97 |
|        person       | 80.29 |  89.0 |
|        earth        | 39.69 |  60.0 |
|         door        | 54.51 | 65.21 |
|        table        |  60.9 |  75.5 |
|       mountain      |  59.1 | 70.55 |
|        plant        | 49.23 | 56.63 |
|       curtain       | 73.48 | 81.64 |
|        chair        | 58.27 | 71.59 |
|         car         | 84.25 | 92.77 |
|        water        | 57.59 | 71.52 |
|       painting      | 72.29 | 86.25 |
|         sofa        |  73.4 | 90.03 |
|        shelf        | 45.83 | 64.75 |
|        house        | 50.03 | 75.76 |
|         sea         | 67.53 | 89.46 |
|        mirror       | 68.05 | 74.35 |
|         rug         | 61.46 | 73.03 |
|        field        | 28.92 |  45.3 |
|       armchair      |  49.1 | 64.66 |
|         seat        | 60.62 | 80.76 |
|        fence        | 48.76 | 68.04 |
|         desk        | 46.92 | 73.09 |
|         rock        | 49.82 | 72.46 |
|       wardrobe      | 49.48 | 67.81 |
|         lamp        | 62.45 | 73.19 |
|       bathtub       | 77.08 | 83.74 |
|       railing       | 38.49 | 50.67 |
|       cushion       | 64.18 | 74.97 |
|         base        | 40.82 | 55.16 |
|         box         | 28.24 | 35.79 |
|        column       | 49.68 | 60.49 |
|      signboard      | 37.66 | 50.59 |
|   chest of drawers  | 41.93 | 73.28 |
|       counter       | 29.45 | 36.27 |
|         sand        | 51.58 | 70.42 |
|         sink        | 71.04 | 80.35 |
|      skyscraper     | 63.44 | 87.39 |
|      fireplace      |  71.4 | 90.62 |
|     refrigerator    | 78.14 |  88.9 |
|      grandstand     | 45.77 |  84.4 |
|         path        | 19.66 | 37.69 |
|        stairs       | 32.14 | 44.18 |
|        runway       | 66.85 | 86.59 |
|         case        | 57.96 | 71.77 |
|      pool table     | 91.96 | 96.91 |
|        pillow       |  56.0 | 64.47 |
|     screen door     |  67.3 | 76.95 |
|       stairway      | 37.37 | 46.89 |
|        river        | 15.28 | 30.91 |
|        bridge       | 49.55 | 57.43 |
|       bookcase      | 41.04 | 67.86 |
|        blind        | 39.42 | 43.76 |
|     coffee table    | 59.57 | 85.78 |
|        toilet       | 83.68 | 91.59 |
|        flower       | 45.36 |  63.0 |
|         book        | 48.34 | 66.82 |
|         hill        | 11.06 |  22.5 |
|        bench        |  58.1 | 67.49 |
|      countertop     | 55.99 |  72.6 |
|        stove        | 78.78 | 89.65 |
|         palm        | 53.54 | 71.31 |
|    kitchen island   | 42.13 | 78.63 |
|       computer      | 74.35 | 89.48 |
|     swivel chair    | 48.88 | 66.89 |
|         boat        | 73.56 | 85.73 |
|         bar         | 49.89 | 63.32 |
|    arcade machine   | 80.82 | 86.12 |
|        hovel        | 56.03 |  64.7 |
|         bus         | 89.99 | 96.65 |
|        towel        |  64.7 | 74.24 |
|        light        | 48.97 | 55.65 |
|        truck        |  41.6 | 54.99 |
|        tower        |  9.57 |  18.9 |
|      chandelier     | 66.98 | 84.63 |
|        awning       | 32.17 |  40.3 |
|     streetlight     | 26.49 | 34.85 |
|        booth        | 35.03 | 50.89 |
| television receiver | 71.47 | 83.15 |
|       airplane      | 69.91 | 76.89 |
|      dirt track     |  8.89 | 19.25 |
|       apparel       | 57.05 | 67.02 |
|         pole        | 19.72 | 27.92 |
|         land        |  3.55 |  4.54 |
|      bannister      | 13.14 | 16.76 |
|      escalator      | 52.07 | 78.09 |
|       ottoman       | 54.47 | 66.27 |
|        bottle       | 34.73 |  50.2 |
|        buffet       | 43.49 | 52.39 |
|        poster       |  31.9 | 42.66 |
|        stage        |  18.6 | 25.88 |
|         van         | 41.09 | 57.39 |
|         ship        | 58.58 | 64.94 |
|       fountain      | 28.85 | 28.96 |
|    conveyer belt    | 72.73 | 92.37 |
|        canopy       | 45.19 | 64.68 |
|        washer       | 74.87 | 77.66 |
|      plaything      | 39.89 | 55.79 |
|    swimming pool    | 59.64 | 78.82 |
|        stool        | 41.11 | 60.57 |
|        barrel       | 40.01 | 64.87 |
|        basket       | 31.89 | 45.01 |
|      waterfall      | 50.66 | 58.88 |
|         tent        | 93.04 |  98.7 |
|         bag         | 17.53 | 20.37 |
|       minibike      | 71.29 | 84.28 |
|        cradle       | 82.13 | 96.79 |
|         oven        | 43.93 | 54.71 |
|         ball        | 31.81 | 33.83 |
|         food        | 50.05 | 56.93 |
|         step        | 19.02 | 23.14 |
|         tank        | 62.36 | 66.48 |
|      trade name     | 25.97 |  30.1 |
|      microwave      | 82.67 |  93.6 |
|         pot         | 47.62 | 57.78 |
|        animal       | 58.53 | 60.51 |
|       bicycle       | 54.07 | 74.13 |
|         lake        | 56.22 | 65.07 |
|      dishwasher     | 59.63 |  72.3 |
|        screen       | 59.76 | 74.38 |
|       blanket       | 19.12 | 21.59 |
|      sculpture      | 70.45 | 82.05 |
|         hood        | 56.24 | 59.15 |
|        sconce       | 45.81 | 53.14 |
|         vase        | 38.33 | 51.45 |
|    traffic light    |  34.5 | 46.39 |
|         tray        |  8.02 | 15.25 |
|        ashcan       | 41.28 | 54.22 |
|         fan         | 61.88 | 75.75 |
|         pier        | 44.15 |  81.2 |
|      crt screen     | 12.72 | 28.69 |
|        plate        | 54.73 | 76.52 |
|       monitor       | 24.04 | 32.93 |
|    bulletin board   | 54.77 |  65.3 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 59.15 | 70.53 |
|        glass        | 14.61 |  15.7 |
|        clock        | 40.95 | 50.27 |
|         flag        | 60.12 | 67.85 |
+---------------------+-------+-------+
10/06 01:37:26 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.6100  mIoU: 51.9500  mAcc: 64.4900  data_time: 0.0017  time: 0.2718
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
10/06 01:37:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 232543222
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 232543222
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:37:31 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/defocus_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:37:34,914 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:37:34,914 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:37:34,914 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:37:34,914 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:37:34,914 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:37:34,914 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:37:34,914 - mmseg - INFO - res_post_norm: False
2024-10-06 01:37:34,914 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:37:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:37:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:37:42 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:37:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:38:31 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:30:38  time: 0.5288  data_time: 0.0015  memory: 26523  
10/06 01:38:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:44  time: 0.6607  data_time: 0.0015  memory: 16856  
10/06 01:39:17 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:59  time: 0.3281  data_time: 0.0015  memory: 14216  
10/06 01:39:41 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:27  time: 0.4329  data_time: 0.0015  memory: 16860  
10/06 01:40:04 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:16:19  time: 0.2745  data_time: 0.0015  memory: 16833  
10/06 01:40:24 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:06  time: 0.1644  data_time: 0.0016  memory: 16865  
10/06 01:40:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:16  time: 0.3024  data_time: 0.0015  memory: 16876  
10/06 01:41:05 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:20  time: 0.3115  data_time: 0.0015  memory: 16835  
10/06 01:41:16 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:07  time: 0.2562  data_time: 0.0014  memory: 10734  
10/06 01:41:26 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:11:04  time: 0.1530  data_time: 0.0014  memory: 14197  
10/06 01:41:38 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:14  time: 0.3163  data_time: 0.0015  memory: 11109  
10/06 01:41:48 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:28  time: 0.3099  data_time: 0.0015  memory: 10918  
10/06 01:42:02 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:56  time: 0.3516  data_time: 0.0013  memory: 14248  
10/06 01:42:20 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:31  time: 0.1664  data_time: 0.0016  memory: 16874  
10/06 01:42:38 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:08  time: 0.6589  data_time: 0.0014  memory: 14252  
10/06 01:42:47 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:33  time: 0.1568  data_time: 0.0016  memory: 10919  
10/06 01:42:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:59  time: 0.1596  data_time: 0.0016  memory: 1909  
10/06 01:43:06 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:32  time: 0.2482  data_time: 0.0014  memory: 10174  
10/06 01:43:23 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:13  time: 0.4196  data_time: 0.0015  memory: 14199  
10/06 01:43:34 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:50  time: 0.1499  data_time: 0.0014  memory: 12046  
10/06 01:43:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:30  time: 0.5058  data_time: 0.0015  memory: 14251  
10/06 01:44:03 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:09  time: 0.1551  data_time: 0.0016  memory: 14217  
10/06 01:44:13 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:47  time: 0.2863  data_time: 0.0015  memory: 14204  
10/06 01:44:21 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:24  time: 0.1539  data_time: 0.0016  memory: 3077  
10/06 01:44:32 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:04  time: 0.2780  data_time: 0.0014  memory: 16863  
10/06 01:44:40 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:43  time: 0.1580  data_time: 0.0014  memory: 1912  
10/06 01:44:49 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:24  time: 0.1486  data_time: 0.0014  memory: 8487  
10/06 01:45:03 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:08  time: 0.3430  data_time: 0.0015  memory: 14228  
10/06 01:45:14 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:50  time: 0.3071  data_time: 0.0014  memory: 10174  
10/06 01:45:21 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:32  time: 0.1459  data_time: 0.0015  memory: 1911  
10/06 01:45:31 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:15  time: 0.1630  data_time: 0.0016  memory: 11855  
10/06 01:45:39 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:58  time: 0.1554  data_time: 0.0016  memory: 1909  
10/06 01:45:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:43  time: 0.1439  data_time: 0.0013  memory: 16874  
10/06 01:46:04 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:28  time: 0.1592  data_time: 0.0017  memory: 10360  
10/06 01:46:15 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:12  time: 0.1594  data_time: 0.0014  memory: 11484  
10/06 01:46:24 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:57  time: 0.1604  data_time: 0.0034  memory: 8858  
10/06 01:46:32 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:42  time: 0.1557  data_time: 0.0015  memory: 1857  
10/06 01:46:41 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:28  time: 0.1540  data_time: 0.0015  memory: 6220  
10/06 01:46:52 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.1509  data_time: 0.0014  memory: 14207  
10/06 01:47:04 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1406  data_time: 0.0014  memory: 9799  
10/06 01:47:04 - mmengine - INFO - per class results:
10/06 01:47:04 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.91 |  88.2 |
|       building      | 83.25 |  93.1 |
|         sky         | 94.05 | 97.26 |
|        floor        | 81.46 | 89.88 |
|         tree        | 74.42 | 85.44 |
|       ceiling       | 85.16 | 92.38 |
|         road        | 84.04 | 91.68 |
|         bed         | 89.28 | 96.63 |
|      windowpane     | 61.86 | 80.18 |
|        grass        | 62.24 | 74.29 |
|       cabinet       | 60.27 | 72.78 |
|       sidewalk      | 67.26 | 78.71 |
|        person       | 80.01 | 89.78 |
|        earth        | 35.57 | 50.79 |
|         door        | 53.05 | 65.83 |
|        table        | 61.09 | 78.71 |
|       mountain      | 59.27 | 72.39 |
|        plant        | 52.25 | 65.42 |
|       curtain       | 73.08 | 85.03 |
|        chair        | 57.94 | 73.04 |
|         car         | 83.02 | 93.44 |
|        water        | 64.79 | 83.12 |
|       painting      | 72.48 | 87.48 |
|         sofa        |  75.6 | 88.93 |
|        shelf        | 42.63 | 62.78 |
|        house        | 50.46 | 63.31 |
|         sea         |  64.9 |  74.5 |
|        mirror       | 70.36 | 77.46 |
|         rug         | 63.96 | 79.38 |
|        field        | 30.18 | 55.63 |
|       armchair      | 52.85 | 67.92 |
|         seat        | 57.28 | 78.68 |
|        fence        | 46.49 | 64.73 |
|         desk        | 52.72 | 72.13 |
|         rock        |  51.0 | 77.59 |
|       wardrobe      | 53.23 | 77.63 |
|         lamp        |  62.7 | 77.07 |
|       bathtub       | 80.14 |  85.2 |
|       railing       | 39.36 | 56.66 |
|       cushion       | 63.03 | 74.27 |
|         base        | 39.56 | 57.36 |
|         box         | 28.14 | 37.14 |
|        column       | 51.03 | 63.35 |
|      signboard      | 36.98 | 48.27 |
|   chest of drawers  | 44.18 | 63.35 |
|       counter       | 26.52 | 34.63 |
|         sand        | 57.27 | 80.03 |
|         sink        | 71.26 | 79.07 |
|      skyscraper     | 44.98 | 49.66 |
|      fireplace      | 68.84 |  91.9 |
|     refrigerator    | 73.97 | 81.34 |
|      grandstand     | 45.84 | 87.04 |
|         path        | 22.24 | 34.03 |
|        stairs       |  33.4 | 43.76 |
|        runway       | 67.17 | 89.28 |
|         case        | 56.02 | 72.99 |
|      pool table     | 92.36 |  97.3 |
|        pillow       | 55.72 | 64.27 |
|     screen door     | 73.87 | 79.55 |
|       stairway      | 43.21 | 52.42 |
|        river        |  8.6  | 14.49 |
|        bridge       | 44.17 | 50.81 |
|       bookcase      | 38.58 |  71.5 |
|        blind        | 34.05 | 35.98 |
|     coffee table    | 58.46 | 83.47 |
|        toilet       | 85.71 | 91.82 |
|        flower       | 44.67 | 62.11 |
|         book        | 43.19 | 61.32 |
|         hill        |  8.05 | 12.36 |
|        bench        | 54.97 | 65.05 |
|      countertop     | 56.38 | 76.14 |
|        stove        |  77.4 |  88.4 |
|         palm        |  51.2 | 74.21 |
|    kitchen island   | 38.21 | 65.13 |
|       computer      |  72.8 | 89.21 |
|     swivel chair    | 45.79 | 70.35 |
|         boat        | 76.39 | 87.95 |
|         bar         | 45.92 | 62.43 |
|    arcade machine   | 83.56 | 90.47 |
|        hovel        | 58.34 | 68.61 |
|         bus         | 89.53 | 96.25 |
|        towel        | 64.97 | 77.02 |
|        light        | 50.84 | 62.04 |
|        truck        | 39.43 | 56.43 |
|        tower        | 21.22 | 39.14 |
|      chandelier     | 66.26 | 82.82 |
|        awning       | 32.74 | 41.05 |
|     streetlight     | 25.78 | 36.52 |
|        booth        | 40.71 | 49.73 |
| television receiver | 70.84 | 85.25 |
|       airplane      | 75.77 | 85.94 |
|      dirt track     |  6.77 | 12.81 |
|       apparel       | 50.23 |  58.5 |
|         pole        | 10.62 |  14.3 |
|         land        |  3.07 |  6.02 |
|      bannister      | 12.67 | 16.79 |
|      escalator      | 54.13 | 82.11 |
|       ottoman       | 50.43 | 61.43 |
|        bottle       | 36.46 |  52.2 |
|        buffet       | 45.05 | 56.09 |
|        poster       | 30.63 | 40.75 |
|        stage        | 16.19 | 33.85 |
|         van         | 35.09 | 44.32 |
|         ship        | 55.23 | 59.53 |
|       fountain      | 27.39 | 27.81 |
|    conveyer belt    |  80.3 |  92.4 |
|        canopy       | 39.09 | 64.16 |
|        washer       | 71.24 |  73.4 |
|      plaything      | 25.86 | 44.21 |
|    swimming pool    | 67.43 | 86.07 |
|        stool        | 43.68 | 58.61 |
|        barrel       | 50.28 | 76.82 |
|        basket       | 26.11 | 34.33 |
|      waterfall      | 64.72 | 92.31 |
|         tent        | 92.75 | 98.71 |
|         bag         | 16.32 | 18.58 |
|       minibike      | 66.52 | 83.88 |
|        cradle       | 81.64 | 96.94 |
|         oven        | 48.63 | 59.82 |
|         ball        | 49.53 | 57.02 |
|         food        | 48.17 | 51.63 |
|         step        | 12.96 | 15.59 |
|         tank        | 62.58 | 65.09 |
|      trade name     | 24.39 | 28.14 |
|      microwave      | 83.75 | 92.91 |
|         pot         | 49.99 | 62.07 |
|        animal       | 62.01 | 64.02 |
|       bicycle       | 53.34 |  71.5 |
|         lake        | 48.88 | 64.56 |
|      dishwasher     | 59.17 | 65.34 |
|        screen       | 61.84 | 86.77 |
|       blanket       | 20.05 | 23.36 |
|      sculpture      |  66.2 | 82.14 |
|         hood        | 62.28 | 70.17 |
|        sconce       |  47.2 | 59.16 |
|         vase        | 39.24 | 53.19 |
|    traffic light    | 29.65 | 48.81 |
|         tray        |  5.41 |  7.14 |
|        ashcan       | 38.41 | 53.11 |
|         fan         | 61.37 | 78.04 |
|         pier        | 53.08 |  86.3 |
|      crt screen     | 14.88 | 33.51 |
|        plate        | 53.31 | 76.14 |
|       monitor       | 15.79 | 20.91 |
|    bulletin board   | 46.92 | 52.47 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 54.67 | 59.93 |
|        glass        | 12.38 | 13.23 |
|        clock        | 39.89 | 45.51 |
|         flag        |  53.6 | 58.29 |
+---------------------+-------+-------+
10/06 01:47:04 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.6600  mIoU: 51.6500  mAcc: 64.3500  data_time: 0.0017  time: 0.2796
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
10/06 01:47:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 664668545
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 664668545
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:47:08 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/glass_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:47:12,120 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:47:12,120 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:47:12,120 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:47:12,120 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:47:12,121 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:47:12,121 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:47:12,121 - mmseg - INFO - res_post_norm: False
2024-10-06 01:47:12,121 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:47:18 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:47:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:47:19 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:47:21 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 01:53:59 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:18:08  time: 7.9319  data_time: 0.0017  memory: 26523  
10/06 02:00:11 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:03:41  time: 7.8075  data_time: 0.0018  memory: 16856  
10/06 02:06:14 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:52:49  time: 7.3985  data_time: 0.0016  memory: 14216  
10/06 02:12:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:45:52  time: 7.2804  data_time: 0.0016  memory: 16860  
10/06 02:18:23 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:37:08  time: 6.9739  data_time: 0.0016  memory: 16833  
10/06 02:24:12 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:28:47  time: 7.1188  data_time: 0.0018  memory: 16865  
10/06 02:30:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:21:51  time: 6.7456  data_time: 0.0016  memory: 16876  
10/06 02:36:05 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:14:53  time: 7.2211  data_time: 0.0016  memory: 16835  
10/06 02:41:22 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:06:02  time: 6.4320  data_time: 0.0016  memory: 10734  
10/06 02:47:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:59:15  time: 6.6458  data_time: 0.0016  memory: 14197  
10/06 02:53:14 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:53:39  time: 7.3854  data_time: 0.0017  memory: 11109  
10/06 02:58:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:47:02  time: 7.3257  data_time: 0.0018  memory: 10918  
10/06 03:04:45 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:40:45  time: 7.1306  data_time: 0.0015  memory: 14248  
10/06 03:11:03 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:35:24  time: 7.2877  data_time: 0.0017  memory: 16874  
10/06 03:17:14 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:29:46  time: 7.6136  data_time: 0.0017  memory: 14252  
10/06 03:22:53 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:23:17  time: 7.1019  data_time: 0.0017  memory: 10919  
10/06 03:28:48 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:17:14  time: 7.1286  data_time: 0.0017  memory: 1909  
10/06 03:34:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:10:34  time: 6.2568  data_time: 0.0015  memory: 10174  
10/06 03:40:10 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:04:41  time: 6.9833  data_time: 0.0016  memory: 14199  
10/06 03:45:45 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:58:23  time: 6.6114  data_time: 0.0016  memory: 12046  
10/06 03:51:44 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:52:32  time: 7.5061  data_time: 0.0016  memory: 14251  
10/06 03:57:34 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:46:32  time: 6.7851  data_time: 0.0017  memory: 14217  
10/06 04:03:16 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:40:27  time: 7.0514  data_time: 0.0016  memory: 14204  
10/06 04:09:05 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:34:29  time: 6.7032  data_time: 0.0016  memory: 3077  
10/06 04:14:40 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:28:22  time: 6.7689  data_time: 0.0017  memory: 16863  
10/06 04:20:02 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:22:12  time: 6.9300  data_time: 0.0016  memory: 1912  
10/06 04:25:41 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:16:13  time: 6.3784  data_time: 0.0016  memory: 8487  
10/06 04:31:29 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:10:20  time: 7.3934  data_time: 0.0016  memory: 14228  
10/06 04:37:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:04:20  time: 7.2942  data_time: 0.0015  memory: 10174  
10/06 04:42:34 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:58:24  time: 6.3772  data_time: 0.0015  memory: 1911  
10/06 04:48:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:52:36  time: 7.0576  data_time: 0.0016  memory: 11855  
10/06 04:54:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:46:41  time: 6.7796  data_time: 0.0017  memory: 1909  
10/06 04:59:51 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:40:49  time: 6.3293  data_time: 0.0017  memory: 16874  
10/06 05:05:42 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:35:00  time: 6.8837  data_time: 0.0017  memory: 10360  
10/06 05:11:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:29:10  time: 6.8498  data_time: 0.0018  memory: 11484  
10/06 05:17:08 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:23:18  time: 7.0561  data_time: 0.0017  memory: 8858  
10/06 05:23:04 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:17:29  time: 7.0992  data_time: 0.0018  memory: 1857  
10/06 05:28:39 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:11:38  time: 7.0277  data_time: 0.0016  memory: 6220  
10/06 05:34:43 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:49  time: 6.8131  data_time: 0.0016  memory: 14207  
10/06 05:40:23 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 6.3267  data_time: 0.0014  memory: 9799  
10/06 05:40:23 - mmengine - INFO - per class results:
10/06 05:40:23 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.18 |  89.3 |
|       building      | 82.29 | 90.78 |
|         sky         |  94.1 | 98.02 |
|        floor        | 80.83 | 89.62 |
|         tree        | 73.64 | 86.67 |
|       ceiling       | 84.55 | 93.81 |
|         road        | 84.89 | 90.21 |
|         bed         | 89.19 | 95.68 |
|      windowpane     | 60.93 | 79.11 |
|        grass        | 64.19 | 78.45 |
|       cabinet       | 58.99 | 69.08 |
|       sidewalk      | 64.08 |  74.3 |
|        person       | 80.13 | 89.24 |
|        earth        |  36.1 |  54.9 |
|         door        | 52.64 | 65.32 |
|        table        | 60.77 | 76.54 |
|       mountain      | 57.01 | 66.85 |
|        plant        | 51.46 | 66.01 |
|       curtain       | 71.59 | 86.12 |
|        chair        | 57.19 | 73.52 |
|         car         | 83.77 | 92.07 |
|        water        | 63.04 | 83.58 |
|       painting      | 69.86 | 86.55 |
|         sofa        | 73.14 | 87.88 |
|        shelf        | 45.79 |  68.7 |
|        house        |  48.7 | 72.43 |
|         sea         | 56.47 | 68.07 |
|        mirror       | 69.19 | 76.29 |
|         rug         | 66.57 | 85.26 |
|        field        | 29.96 | 57.84 |
|       armchair      | 46.45 | 61.21 |
|         seat        | 57.68 | 81.12 |
|        fence        |  40.4 | 59.82 |
|         desk        | 52.61 | 70.82 |
|         rock        | 43.51 | 59.93 |
|       wardrobe      | 50.95 | 76.17 |
|         lamp        | 61.13 | 73.29 |
|       bathtub       | 78.76 | 83.28 |
|       railing       | 37.74 | 49.03 |
|       cushion       |  61.5 | 78.81 |
|         base        | 24.35 | 34.02 |
|         box         | 26.53 | 32.65 |
|        column       |  49.9 | 63.47 |
|      signboard      | 35.37 | 44.99 |
|   chest of drawers  | 42.15 | 68.58 |
|       counter       | 20.47 | 26.67 |
|         sand        | 57.81 | 70.63 |
|         sink        |  71.4 |  77.1 |
|      skyscraper     | 64.88 | 78.68 |
|      fireplace      | 72.23 |  88.8 |
|     refrigerator    | 70.68 | 76.61 |
|      grandstand     | 49.04 | 88.43 |
|         path        | 24.89 | 34.49 |
|        stairs       | 37.14 | 47.64 |
|        runway       | 77.23 |  89.6 |
|         case        | 54.09 | 68.75 |
|      pool table     | 92.68 | 96.15 |
|        pillow       | 50.59 | 56.64 |
|     screen door     | 62.46 | 69.75 |
|       stairway      | 41.95 | 51.92 |
|        river        |  7.56 | 12.31 |
|        bridge       | 38.15 |  45.3 |
|       bookcase      | 42.74 |  68.8 |
|        blind        | 20.56 | 21.36 |
|     coffee table    | 58.37 | 84.14 |
|        toilet       | 85.49 | 90.64 |
|        flower       | 42.62 | 68.65 |
|         book        | 41.16 | 53.63 |
|         hill        |  9.58 | 19.47 |
|        bench        | 50.72 | 56.78 |
|      countertop     |  54.1 | 68.51 |
|        stove        | 78.89 | 85.41 |
|         palm        | 47.57 | 57.75 |
|    kitchen island   | 40.29 | 74.48 |
|       computer      | 71.09 | 87.74 |
|     swivel chair    | 45.53 | 65.27 |
|         boat        | 76.23 | 81.21 |
|         bar         | 42.63 |  58.7 |
|    arcade machine   | 84.44 | 92.23 |
|        hovel        | 53.18 | 64.27 |
|         bus         | 90.81 | 93.32 |
|        towel        | 67.34 |  78.0 |
|        light        | 50.96 | 63.16 |
|        truck        | 39.53 |  54.1 |
|        tower        | 22.54 | 38.38 |
|      chandelier     | 66.24 | 82.22 |
|        awning       | 35.25 |  43.5 |
|     streetlight     | 22.72 | 29.31 |
|        booth        | 34.19 | 43.39 |
| television receiver | 69.22 | 79.64 |
|       airplane      | 60.09 | 64.63 |
|      dirt track     |  9.87 | 17.03 |
|       apparel       | 58.55 | 72.69 |
|         pole        | 17.05 |  21.0 |
|         land        |  4.13 |  6.19 |
|      bannister      |  8.65 | 10.02 |
|      escalator      | 58.09 | 77.19 |
|       ottoman       | 51.87 | 62.81 |
|        bottle       | 26.41 | 31.49 |
|        buffet       | 49.45 | 58.69 |
|        poster       | 20.69 | 29.09 |
|        stage        | 20.61 | 29.43 |
|         van         | 44.48 | 56.26 |
|         ship        | 35.27 |  37.5 |
|       fountain      |  20.8 | 21.38 |
|    conveyer belt    | 78.51 | 83.32 |
|        canopy       | 26.29 | 34.43 |
|        washer       | 66.86 | 68.64 |
|      plaything      | 31.07 | 51.13 |
|    swimming pool    | 65.25 | 84.71 |
|        stool        | 44.26 | 59.48 |
|        barrel       | 41.67 | 64.99 |
|        basket       | 26.34 | 35.02 |
|      waterfall      | 61.19 | 88.57 |
|         tent        | 95.54 | 98.29 |
|         bag         | 10.12 |  10.9 |
|       minibike      | 67.11 | 80.63 |
|        cradle       | 83.55 | 95.46 |
|         oven        | 48.92 | 58.64 |
|         ball        | 49.77 | 56.85 |
|         food        | 43.57 |  49.1 |
|         step        | 11.95 | 12.85 |
|         tank        | 62.72 | 65.66 |
|      trade name     |  17.6 |  18.8 |
|      microwave      | 82.12 |  90.9 |
|         pot         | 47.85 | 56.17 |
|        animal       | 57.84 | 59.43 |
|       bicycle       | 48.76 | 61.56 |
|         lake        |  57.1 |  65.2 |
|      dishwasher     | 63.24 | 69.53 |
|        screen       | 69.96 | 86.86 |
|       blanket       | 18.17 | 22.28 |
|      sculpture      | 59.93 |  65.3 |
|         hood        | 53.51 | 56.88 |
|        sconce       | 41.15 | 47.78 |
|         vase        | 36.02 | 45.87 |
|    traffic light    | 27.06 |  35.2 |
|         tray        |  4.0  |  4.7  |
|        ashcan       | 38.19 | 48.19 |
|         fan         | 58.97 | 72.94 |
|         pier        |  54.3 | 64.79 |
|      crt screen     | 12.84 | 19.66 |
|        plate        | 51.21 | 64.88 |
|       monitor       |  25.9 | 31.96 |
|    bulletin board   | 30.45 | 35.29 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 50.54 | 56.82 |
|        glass        |  9.48 |  9.72 |
|        clock        | 34.81 | 38.97 |
|         flag        | 36.48 | 38.27 |
+---------------------+-------+-------+
10/06 05:40:23 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.1800  mIoU: 50.1600  mAcc: 61.1700  data_time: 0.0018  time: 6.9909
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
10/06 05:40:27 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1036533253
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1036533253
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 05:40:28 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/motion_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 05:40:31,686 - mmseg - INFO - using core type: DCNv3
2024-10-06 05:40:31,686 - mmseg - INFO - using activation layer: GELU
2024-10-06 05:40:31,686 - mmseg - INFO - using main norm layer: LN
2024-10-06 05:40:31,686 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 05:40:31,686 - mmseg - INFO - level2_post_norm: False
2024-10-06 05:40:31,686 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 05:40:31,686 - mmseg - INFO - res_post_norm: False
2024-10-06 05:40:31,686 - mmseg - INFO - use_dcn_v4_op: False
10/06 05:40:37 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 05:40:37 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 05:40:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 05:40:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 05:42:07 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:58  time: 1.2695  data_time: 0.0016  memory: 26523  
10/06 05:43:11 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:46:38  time: 1.4160  data_time: 0.0016  memory: 16856  
10/06 05:44:04 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:41:04  time: 1.0279  data_time: 0.0015  memory: 14216  
10/06 05:45:04 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:39:00  time: 1.1453  data_time: 0.0015  memory: 16860  
10/06 05:46:03 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:37:15  time: 0.9891  data_time: 0.0015  memory: 16833  
10/06 05:46:59 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:35:22  time: 0.9228  data_time: 0.0016  memory: 16865  
10/06 05:47:55 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:33:51  time: 0.9895  data_time: 0.0015  memory: 16876  
10/06 05:48:49 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:32:20  time: 1.0399  data_time: 0.0015  memory: 16835  
10/06 05:49:32 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:30:18  time: 0.9130  data_time: 0.0015  memory: 10734  
10/06 05:50:18 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:28:42  time: 0.8128  data_time: 0.0015  memory: 14197  
10/06 05:51:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:27:19  time: 1.0500  data_time: 0.0016  memory: 11109  
10/06 05:51:49 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:25:52  time: 0.9837  data_time: 0.0016  memory: 10918  
10/06 05:52:39 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:24:45  time: 1.0563  data_time: 0.0014  memory: 14248  
10/06 05:53:33 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:23:48  time: 0.8983  data_time: 0.0016  memory: 16874  
10/06 05:54:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:22:53  time: 1.3608  data_time: 0.0015  memory: 14252  
10/06 05:55:10 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:21:38  time: 0.8263  data_time: 0.0017  memory: 10919  
10/06 05:55:52 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:20:28  time: 0.8420  data_time: 0.0016  memory: 1909  
10/06 05:56:35 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:19:22  time: 0.8808  data_time: 0.0015  memory: 10174  
10/06 05:57:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:18:29  time: 1.1268  data_time: 0.0016  memory: 14199  
10/06 05:58:14 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:17:29  time: 0.8280  data_time: 0.0015  memory: 12046  
10/06 05:59:05 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:16:35  time: 1.2677  data_time: 0.0015  memory: 14251  
10/06 05:59:54 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:15:40  time: 0.8542  data_time: 0.0016  memory: 14217  
10/06 06:00:39 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:14:43  time: 0.9955  data_time: 0.0016  memory: 14204  
10/06 06:01:23 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:13:46  time: 0.8563  data_time: 0.0016  memory: 3077  
10/06 06:02:09 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:50  time: 0.9720  data_time: 0.0015  memory: 16863  
10/06 06:02:50 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:53  time: 0.8478  data_time: 0.0016  memory: 1912  
10/06 06:03:34 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:59  time: 0.8055  data_time: 0.0015  memory: 8487  
10/06 06:04:24 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:10:08  time: 1.1106  data_time: 0.0015  memory: 14228  
10/06 06:05:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:09:15  time: 1.0579  data_time: 0.0015  memory: 10174  
10/06 06:05:51 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:08:22  time: 0.7864  data_time: 0.0015  memory: 1911  
10/06 06:06:37 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:07:30  time: 0.8845  data_time: 0.0015  memory: 11855  
10/06 06:07:17 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:38  time: 0.8089  data_time: 0.0016  memory: 1909  
10/06 06:08:05 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:48  time: 0.8053  data_time: 0.0014  memory: 16874  
10/06 06:08:53 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:58  time: 0.8879  data_time: 0.0016  memory: 10360  
10/06 06:09:40 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:08  time: 0.9099  data_time: 0.0015  memory: 11484  
10/06 06:10:22 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:17  time: 0.8546  data_time: 0.0016  memory: 8858  
10/06 06:11:04 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:27  time: 0.8214  data_time: 0.0016  memory: 1857  
10/06 06:11:46 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:37  time: 0.8526  data_time: 0.0016  memory: 6220  
10/06 06:12:34 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:48  time: 0.8622  data_time: 0.0015  memory: 14207  
10/06 06:13:19 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7600  data_time: 0.0014  memory: 9799  
10/06 06:13:19 - mmengine - INFO - per class results:
10/06 06:13:19 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.43 | 87.92 |
|       building      | 82.22 | 91.75 |
|         sky         | 93.83 |  96.8 |
|        floor        | 80.96 | 89.57 |
|         tree        | 74.26 | 86.05 |
|       ceiling       | 85.02 | 93.16 |
|         road        | 83.84 | 90.98 |
|         bed         | 89.44 | 96.31 |
|      windowpane     | 63.19 | 79.27 |
|        grass        | 63.26 | 77.15 |
|       cabinet       | 61.65 | 74.86 |
|       sidewalk      | 67.42 | 80.71 |
|        person       | 79.02 | 89.35 |
|        earth        | 34.56 | 47.45 |
|         door        | 52.69 | 65.17 |
|        table        | 61.39 | 77.26 |
|       mountain      | 57.51 | 72.01 |
|        plant        | 51.56 | 69.51 |
|       curtain       | 73.41 | 83.89 |
|        chair        | 58.18 |  72.8 |
|         car         | 83.25 | 93.14 |
|        water        | 64.41 | 78.87 |
|       painting      | 72.15 | 85.33 |
|         sofa        | 75.41 | 87.16 |
|        shelf        | 44.01 | 68.07 |
|        house        | 47.98 | 70.04 |
|         sea         | 69.49 | 86.07 |
|        mirror       |  70.2 | 77.98 |
|         rug         | 61.97 | 77.32 |
|        field        | 22.66 | 45.29 |
|       armchair      | 52.62 | 68.98 |
|         seat        | 58.69 | 80.52 |
|        fence        | 44.59 | 67.84 |
|         desk        | 51.66 | 72.26 |
|         rock        | 50.11 | 70.57 |
|       wardrobe      | 56.38 | 73.07 |
|         lamp        | 60.72 | 75.17 |
|       bathtub       | 80.37 | 84.73 |
|       railing       | 38.56 |  56.2 |
|       cushion       | 62.37 | 75.74 |
|         base        | 34.99 | 49.85 |
|         box         | 28.01 | 36.57 |
|        column       | 49.41 | 60.34 |
|      signboard      | 36.43 | 49.95 |
|   chest of drawers  | 43.66 | 68.86 |
|       counter       | 30.69 | 38.61 |
|         sand        | 56.02 | 76.78 |
|         sink        | 72.42 | 79.21 |
|      skyscraper     | 46.52 | 52.52 |
|      fireplace      | 73.14 | 92.36 |
|     refrigerator    | 73.02 | 81.67 |
|      grandstand     | 48.84 | 86.57 |
|         path        | 26.17 | 41.38 |
|        stairs       | 34.24 | 44.88 |
|        runway       | 65.23 | 85.45 |
|         case        | 49.94 | 62.24 |
|      pool table     | 91.74 |  96.6 |
|        pillow       | 56.82 | 66.45 |
|     screen door     | 77.39 | 81.19 |
|       stairway      |  42.0 | 50.61 |
|        river        | 10.01 | 16.72 |
|        bridge       | 37.52 | 42.59 |
|       bookcase      | 41.03 | 70.14 |
|        blind        | 41.23 | 46.98 |
|     coffee table    | 58.77 | 81.54 |
|        toilet       |  85.7 | 91.33 |
|        flower       | 41.93 | 57.11 |
|         book        | 46.93 | 63.54 |
|         hill        | 11.39 |  19.7 |
|        bench        | 52.69 | 61.78 |
|      countertop     | 54.28 | 72.41 |
|        stove        | 79.12 | 89.13 |
|         palm        | 51.13 | 71.63 |
|    kitchen island   |  38.3 | 60.85 |
|       computer      | 71.65 | 88.65 |
|     swivel chair    |  51.2 |  71.8 |
|         boat        | 74.94 | 85.45 |
|         bar         | 41.65 |  53.7 |
|    arcade machine   | 73.84 | 79.23 |
|        hovel        | 56.42 |  66.4 |
|         bus         | 89.54 | 95.46 |
|        towel        |  65.7 | 76.89 |
|        light        | 53.61 | 64.18 |
|        truck        | 40.51 | 57.53 |
|        tower        | 30.63 | 56.75 |
|      chandelier     | 66.79 | 82.39 |
|        awning       | 33.95 | 44.32 |
|     streetlight     | 23.41 | 31.95 |
|        booth        |  36.3 | 46.27 |
| television receiver | 68.54 | 81.53 |
|       airplane      | 70.21 | 76.96 |
|      dirt track     | 11.14 | 38.06 |
|       apparel       | 46.81 | 55.95 |
|         pole        | 17.41 | 22.15 |
|         land        |  4.79 |  6.43 |
|      bannister      | 14.98 | 18.84 |
|      escalator      | 54.58 |  81.3 |
|       ottoman       | 48.44 | 60.53 |
|        bottle       | 36.84 | 52.36 |
|        buffet       | 41.81 | 53.44 |
|        poster       | 30.14 | 41.37 |
|        stage        | 22.47 | 32.18 |
|         van         |  41.8 | 52.49 |
|         ship        | 33.58 | 34.58 |
|       fountain      | 23.75 |  23.9 |
|    conveyer belt    | 79.34 | 90.94 |
|        canopy       | 37.53 | 63.42 |
|        washer       |  71.6 |  73.7 |
|      plaything      | 34.04 | 47.39 |
|    swimming pool    | 68.36 | 79.49 |
|        stool        | 42.83 | 61.88 |
|        barrel       | 52.44 | 77.04 |
|        basket       | 29.19 | 43.13 |
|      waterfall      | 67.96 | 92.33 |
|         tent        | 94.63 | 98.37 |
|         bag         | 21.76 |  27.6 |
|       minibike      | 68.18 | 83.41 |
|        cradle       | 81.59 | 95.36 |
|         oven        |  45.9 | 57.52 |
|         ball        | 45.74 | 50.82 |
|         food        | 47.89 |  52.4 |
|         step        | 13.51 | 15.76 |
|         tank        | 61.89 | 64.69 |
|      trade name     | 24.64 |  28.1 |
|      microwave      | 80.93 | 91.17 |
|         pot         | 49.95 | 63.06 |
|        animal       | 57.82 | 59.86 |
|       bicycle       | 51.43 |  73.8 |
|         lake        | 51.91 | 67.27 |
|      dishwasher     | 60.02 | 68.59 |
|        screen       | 61.62 | 85.96 |
|       blanket       | 20.85 | 24.39 |
|      sculpture      | 65.45 | 76.26 |
|         hood        | 57.08 | 62.75 |
|        sconce       | 45.81 | 58.24 |
|         vase        |  37.1 | 50.73 |
|    traffic light    |  31.3 | 44.98 |
|         tray        |  7.52 |  9.51 |
|        ashcan       | 34.96 | 55.66 |
|         fan         | 59.94 | 79.28 |
|         pier        | 55.52 | 88.01 |
|      crt screen     | 12.55 | 23.12 |
|        plate        | 52.94 | 78.76 |
|       monitor       | 28.26 | 34.57 |
|    bulletin board   | 52.05 | 61.21 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 57.42 |  68.6 |
|        glass        | 13.12 | 14.19 |
|        clock        | 41.97 | 49.51 |
|         flag        | 47.64 | 51.88 |
+---------------------+-------+-------+
10/06 06:13:19 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.4400  mIoU: 51.6500  mAcc: 64.2800  data_time: 0.0017  time: 0.9775
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
10/06 06:13:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1942431151
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1942431151
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:13:24 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/zoom_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:13:27,263 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:13:27,263 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:13:27,263 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:13:27,263 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 06:13:27,263 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:13:27,263 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:13:27,263 - mmseg - INFO - res_post_norm: False
2024-10-06 06:13:27,263 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:13:33 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:13:33 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:13:34 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 06:13:37 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 06:14:56 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:51:31  time: 1.2164  data_time: 0.0017  memory: 26523  
10/06 06:15:56 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:44:02  time: 1.3317  data_time: 0.0017  memory: 16856  
10/06 06:16:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:38:43  time: 0.9871  data_time: 0.0016  memory: 14216  
10/06 06:17:42 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:36:45  time: 1.0711  data_time: 0.0015  memory: 16860  
10/06 06:18:37 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:35:01  time: 0.9006  data_time: 0.0015  memory: 16833  
10/06 06:19:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:33:09  time: 0.8193  data_time: 0.0016  memory: 16865  
10/06 06:20:21 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:31:45  time: 0.9045  data_time: 0.0015  memory: 16876  
10/06 06:21:10 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:30:15  time: 0.9507  data_time: 0.0014  memory: 16835  
10/06 06:21:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:28:19  time: 0.8309  data_time: 0.0015  memory: 10734  
10/06 06:22:32 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:26:44  time: 0.7624  data_time: 0.0015  memory: 14197  
10/06 06:23:16 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:25:27  time: 0.9718  data_time: 0.0016  memory: 11109  
10/06 06:23:58 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:24:09  time: 0.9665  data_time: 0.0015  memory: 10918  
10/06 06:24:43 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:23:04  time: 0.9810  data_time: 0.0014  memory: 14248  
10/06 06:25:33 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:22:10  time: 0.8179  data_time: 0.0015  memory: 16874  
10/06 06:26:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:21:16  time: 1.2686  data_time: 0.0014  memory: 14252  
10/06 06:27:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:20:07  time: 0.7853  data_time: 0.0017  memory: 10919  
10/06 06:27:41 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:19:02  time: 0.7943  data_time: 0.0016  memory: 1909  
10/06 06:28:21 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:18:00  time: 0.8079  data_time: 0.0014  memory: 10174  
10/06 06:29:10 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:17:11  time: 1.0297  data_time: 0.0016  memory: 14199  
10/06 06:29:52 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:16:15  time: 0.7544  data_time: 0.0015  memory: 12046  
10/06 06:30:39 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:15:24  time: 1.1586  data_time: 0.0015  memory: 14251  
10/06 06:31:23 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:14:32  time: 0.7683  data_time: 0.0015  memory: 14217  
10/06 06:32:05 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:13:38  time: 0.9128  data_time: 0.0015  memory: 14204  
10/06 06:32:45 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:12:45  time: 0.7820  data_time: 0.0016  memory: 3077  
10/06 06:33:26 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:11:53  time: 0.8823  data_time: 0.0015  memory: 16863  
10/06 06:34:03 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:00  time: 0.7901  data_time: 0.0015  memory: 1912  
10/06 06:34:43 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:09  time: 0.7303  data_time: 0.0034  memory: 8487  
10/06 06:35:29 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:09:22  time: 1.0015  data_time: 0.0015  memory: 14228  
10/06 06:36:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:33  time: 0.9559  data_time: 0.0015  memory: 10174  
10/06 06:36:48 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:43  time: 0.7268  data_time: 0.0014  memory: 1911  
10/06 06:37:30 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:56  time: 0.8068  data_time: 0.0015  memory: 11855  
10/06 06:38:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:07  time: 0.7751  data_time: 0.0016  memory: 1909  
10/06 06:38:53 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:21  time: 0.7234  data_time: 0.0014  memory: 16874  
10/06 06:39:36 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:35  time: 0.7884  data_time: 0.0016  memory: 10360  
10/06 06:40:20 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:48  time: 0.7783  data_time: 0.0015  memory: 11484  
10/06 06:40:59 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:02  time: 0.8149  data_time: 0.0016  memory: 8858  
10/06 06:41:38 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:16  time: 0.7888  data_time: 0.0017  memory: 1857  
10/06 06:42:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:30  time: 0.7646  data_time: 0.0015  memory: 6220  
10/06 06:43:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:45  time: 0.7677  data_time: 0.0014  memory: 14207  
10/06 06:43:41 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7063  data_time: 0.0014  memory: 9799  
10/06 06:43:41 - mmengine - INFO - per class results:
10/06 06:43:41 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 66.17 | 81.55 |
|       building      | 75.14 | 89.97 |
|         sky         | 88.58 | 91.38 |
|        floor        | 67.77 | 85.01 |
|         tree        | 63.83 | 79.22 |
|       ceiling       | 69.58 | 91.85 |
|         road        | 63.83 | 69.62 |
|         bed         | 80.24 | 94.09 |
|      windowpane     | 54.14 | 70.62 |
|        grass        | 61.65 | 76.41 |
|       cabinet       | 50.61 | 66.86 |
|       sidewalk      | 43.42 | 70.46 |
|        person       | 66.91 | 81.73 |
|        earth        |  24.1 | 33.43 |
|         door        | 34.81 | 40.89 |
|        table        | 49.97 | 65.97 |
|       mountain      | 43.62 | 49.48 |
|        plant        | 39.54 | 54.78 |
|       curtain       |  50.2 | 65.72 |
|        chair        | 43.06 | 56.53 |
|         car         | 71.54 | 89.78 |
|        water        | 41.58 | 59.02 |
|       painting      | 58.19 | 76.03 |
|         sofa        | 58.81 | 73.27 |
|        shelf        | 34.07 | 56.82 |
|        house        | 44.33 | 61.68 |
|         sea         | 61.62 | 69.46 |
|        mirror       | 57.94 |  62.4 |
|         rug         | 32.31 | 36.89 |
|        field        | 25.91 | 66.86 |
|       armchair      | 37.79 | 55.92 |
|         seat        | 43.65 | 69.07 |
|        fence        | 30.98 |  52.6 |
|         desk        | 45.82 | 65.82 |
|         rock        | 28.79 | 42.29 |
|       wardrobe      | 44.84 | 63.83 |
|         lamp        | 46.16 | 62.17 |
|       bathtub       | 74.55 | 82.86 |
|       railing       | 26.03 | 42.21 |
|       cushion       |  43.3 | 52.22 |
|         base        | 21.58 | 36.01 |
|         box         | 13.74 | 15.88 |
|        column       | 35.17 | 43.37 |
|      signboard      | 25.55 | 31.58 |
|   chest of drawers  | 38.55 | 52.91 |
|       counter       | 21.67 | 30.58 |
|         sand        | 36.14 | 54.29 |
|         sink        | 61.92 | 71.21 |
|      skyscraper     | 48.11 | 56.36 |
|      fireplace      | 63.52 | 83.55 |
|     refrigerator    | 58.96 | 67.68 |
|      grandstand     | 39.09 | 73.08 |
|         path        | 13.42 | 19.76 |
|        stairs       |  9.17 |  12.0 |
|        runway       | 59.84 |  81.5 |
|         case        | 43.26 | 51.66 |
|      pool table     | 88.23 |  96.3 |
|        pillow       | 46.99 | 58.39 |
|     screen door     | 47.03 | 52.34 |
|       stairway      | 30.42 | 39.28 |
|        river        |  4.53 |  11.9 |
|        bridge       |  27.2 | 34.11 |
|       bookcase      | 32.61 | 68.92 |
|        blind        | 23.59 | 28.44 |
|     coffee table    |  48.0 | 65.91 |
|        toilet       | 75.96 | 86.39 |
|        flower       | 28.64 |  36.1 |
|         book        | 32.04 | 41.71 |
|         hill        |  9.31 | 15.11 |
|        bench        | 37.26 | 45.42 |
|      countertop     | 46.25 | 61.48 |
|        stove        | 70.33 | 83.44 |
|         palm        | 30.99 | 45.47 |
|    kitchen island   | 27.69 | 42.95 |
|       computer      | 52.45 | 66.35 |
|     swivel chair    | 30.17 | 46.69 |
|         boat        | 69.86 | 81.63 |
|         bar         | 18.69 | 22.94 |
|    arcade machine   | 51.63 | 77.71 |
|        hovel        |  7.47 |  8.18 |
|         bus         | 69.06 | 81.42 |
|        towel        | 39.78 | 46.84 |
|        light        | 26.85 | 36.86 |
|        truck        |  20.6 | 29.78 |
|        tower        | 21.04 |  27.8 |
|      chandelier     | 53.82 |  71.9 |
|        awning       | 29.97 |  36.1 |
|     streetlight     |  7.17 |  8.26 |
|        booth        | 32.39 | 39.09 |
| television receiver | 49.14 | 63.89 |
|       airplane      | 46.55 | 56.61 |
|      dirt track     |  9.66 | 21.17 |
|       apparel       | 14.94 | 19.61 |
|         pole        |  4.06 |  4.27 |
|         land        |  0.28 |  0.44 |
|      bannister      |  4.14 |  5.4  |
|      escalator      | 51.26 | 75.99 |
|       ottoman       | 34.43 | 44.28 |
|        bottle       | 11.59 | 12.57 |
|        buffet       | 41.42 | 53.34 |
|        poster       | 30.28 | 37.73 |
|        stage        | 11.25 | 24.83 |
|         van         | 34.38 | 39.59 |
|         ship        |  6.52 |  6.85 |
|       fountain      | 17.47 | 21.51 |
|    conveyer belt    | 44.87 | 45.69 |
|        canopy       | 25.84 | 32.91 |
|        washer       | 70.81 | 73.39 |
|      plaything      | 13.36 | 19.75 |
|    swimming pool    | 44.92 | 56.46 |
|        stool        | 34.22 | 50.34 |
|        barrel       | 40.53 | 41.32 |
|        basket       | 17.17 | 23.66 |
|      waterfall      | 35.76 | 78.08 |
|         tent        | 85.44 | 99.42 |
|         bag         |  7.35 |  8.98 |
|       minibike      |  49.6 | 68.16 |
|        cradle       | 73.87 |  97.0 |
|         oven        | 33.92 | 41.13 |
|         ball        | 27.37 | 49.38 |
|         food        | 41.91 | 44.82 |
|         step        | 10.78 | 12.71 |
|         tank        | 57.45 | 60.61 |
|      trade name     | 20.74 | 24.91 |
|      microwave      | 33.72 |  38.6 |
|         pot         | 20.32 | 22.34 |
|        animal       | 46.96 | 60.85 |
|       bicycle       | 31.75 | 49.52 |
|         lake        | 31.29 | 62.84 |
|      dishwasher     | 45.07 | 57.94 |
|        screen       | 54.74 |  86.6 |
|       blanket       | 12.68 | 18.62 |
|      sculpture      | 39.25 | 43.17 |
|         hood        | 43.55 | 49.54 |
|        sconce       |  23.5 | 29.88 |
|         vase        | 24.22 | 31.49 |
|    traffic light    | 17.51 | 19.71 |
|         tray        |  5.24 |  7.67 |
|        ashcan       | 23.96 | 35.88 |
|         fan         | 32.49 |  62.6 |
|         pier        | 22.03 | 32.87 |
|      crt screen     | 23.21 | 29.02 |
|        plate        |  28.7 | 38.83 |
|       monitor       | 24.95 | 37.17 |
|    bulletin board   | 14.24 | 15.54 |
|        shower       |  0.16 |  0.16 |
|       radiator      | 30.89 | 45.94 |
|        glass        |  3.31 |  3.43 |
|        clock        |  8.94 |  9.75 |
|         flag        | 41.99 | 48.76 |
+---------------------+-------+-------+
10/06 06:43:41 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 74.9400  mIoU: 37.7400  mAcc: 49.2600  data_time: 0.0017  time: 0.9022
Finished processing corruption type: zoom_blur
Processing corruption type: snow
10/06 06:43:44 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 206335321
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 206335321
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:43:45 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/snow'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:43:49,172 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:43:49,172 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:43:49,172 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:43:49,173 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 06:43:49,173 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:43:49,173 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:43:49,173 - mmseg - INFO - res_post_norm: False
2024-10-06 06:43:49,173 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:43:55 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:43:55 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:43:56 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 06:43:59 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 06:44:57 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:37:37  time: 0.7623  data_time: 0.0016  memory: 26523  
10/06 06:45:35 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:31  time: 0.8827  data_time: 0.0016  memory: 16856  
10/06 06:46:03 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:25:34  time: 0.5488  data_time: 0.0016  memory: 14216  
10/06 06:46:38 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:53  time: 0.6415  data_time: 0.0016  memory: 16860  
10/06 06:47:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:22:32  time: 0.4875  data_time: 0.0016  memory: 16833  
10/06 06:47:42 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:06  time: 0.3823  data_time: 0.0017  memory: 16865  
10/06 06:48:14 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:06  time: 0.5044  data_time: 0.0015  memory: 16876  
10/06 06:48:43 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:58  time: 0.5227  data_time: 0.0014  memory: 16835  
10/06 06:49:04 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:31  time: 0.4476  data_time: 0.0015  memory: 10734  
10/06 06:49:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:18  time: 0.3598  data_time: 0.0015  memory: 14197  
10/06 06:49:47 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:19  time: 0.5349  data_time: 0.0030  memory: 11109  
10/06 06:50:08 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:22  time: 0.5285  data_time: 0.0015  memory: 10918  
10/06 06:50:33 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:39  time: 0.5632  data_time: 0.0014  memory: 14248  
10/06 06:51:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:13:04  time: 0.3839  data_time: 0.0016  memory: 16874  
10/06 06:51:30 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:32  time: 0.8593  data_time: 0.0014  memory: 14252  
10/06 06:51:49 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:45  time: 0.3641  data_time: 0.0016  memory: 10919  
10/06 06:52:08 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:01  time: 0.3683  data_time: 0.0016  memory: 1909  
10/06 06:52:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:23  time: 0.4334  data_time: 0.0014  memory: 10174  
10/06 06:52:56 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:54  time: 0.6284  data_time: 0.0016  memory: 14199  
10/06 06:53:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:19  time: 0.3519  data_time: 0.0015  memory: 12046  
10/06 06:53:44 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:49  time: 0.7221  data_time: 0.0016  memory: 14251  
10/06 06:54:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:18  time: 0.3569  data_time: 0.0016  memory: 14217  
10/06 06:54:29 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:45  time: 0.4974  data_time: 0.0015  memory: 14204  
10/06 06:54:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:12  time: 0.3548  data_time: 0.0015  memory: 3077  
10/06 06:55:08 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:41  time: 0.4786  data_time: 0.0014  memory: 16863  
10/06 06:55:26 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:09  time: 0.3629  data_time: 0.0015  memory: 1912  
10/06 06:55:45 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:39  time: 0.3378  data_time: 0.0014  memory: 8487  
10/06 06:56:09 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:13  time: 0.5589  data_time: 0.0014  memory: 14228  
10/06 06:56:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:44  time: 0.5278  data_time: 0.0016  memory: 10174  
10/06 06:56:47 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:16  time: 0.3388  data_time: 0.0015  memory: 1911  
10/06 06:57:08 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:49  time: 0.3756  data_time: 0.0015  memory: 11855  
10/06 06:57:26 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:21  time: 0.3613  data_time: 0.0016  memory: 1909  
10/06 06:57:50 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:56  time: 0.3339  data_time: 0.0014  memory: 16874  
10/06 06:58:12 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:30  time: 0.3687  data_time: 0.0016  memory: 10360  
10/06 06:58:34 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:05  time: 0.3632  data_time: 0.0015  memory: 11484  
10/06 06:58:53 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:39  time: 0.3744  data_time: 0.0016  memory: 8858  
10/06 06:59:11 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:13  time: 0.3625  data_time: 0.0016  memory: 1857  
10/06 06:59:30 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:49  time: 0.3574  data_time: 0.0015  memory: 6220  
10/06 06:59:52 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:24  time: 0.3522  data_time: 0.0015  memory: 14207  
10/06 07:00:13 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.3296  data_time: 0.0019  memory: 9799  
10/06 07:00:13 - mmengine - INFO - per class results:
10/06 07:00:13 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.64 | 87.36 |
|       building      | 82.07 | 92.36 |
|         sky         | 92.86 |  95.8 |
|        floor        | 77.25 |  91.0 |
|         tree        | 72.89 | 86.98 |
|       ceiling       | 80.95 | 92.86 |
|         road        | 78.84 | 84.43 |
|         bed         |  88.3 | 95.39 |
|      windowpane     | 62.26 |  79.1 |
|        grass        | 65.43 | 81.93 |
|       cabinet       | 59.62 | 70.46 |
|       sidewalk      | 57.36 | 83.01 |
|        person       |  78.5 | 88.69 |
|        earth        |  33.0 | 40.87 |
|         door        | 41.99 |  48.7 |
|        table        | 59.18 | 78.17 |
|       mountain      | 55.04 | 65.74 |
|        plant        | 47.54 |  59.4 |
|       curtain       |  69.5 | 83.41 |
|        chair        | 55.31 | 68.79 |
|         car         | 81.57 | 92.55 |
|        water        | 52.01 | 72.93 |
|       painting      | 71.86 | 84.98 |
|         sofa        | 71.27 | 85.17 |
|        shelf        | 41.51 |  69.4 |
|        house        | 52.92 | 60.71 |
|         sea         | 60.01 | 86.99 |
|        mirror       | 65.15 | 79.12 |
|         rug         | 46.46 | 52.68 |
|        field        | 26.87 | 54.73 |
|       armchair      | 47.02 | 65.84 |
|         seat        | 58.31 | 81.67 |
|        fence        | 41.34 | 63.89 |
|         desk        | 49.19 | 60.61 |
|         rock        |  51.4 | 66.68 |
|       wardrobe      | 44.89 | 58.32 |
|         lamp        | 59.67 | 71.03 |
|       bathtub       | 77.62 | 84.99 |
|       railing       | 34.74 | 46.71 |
|       cushion       | 54.78 | 63.09 |
|         base        | 24.47 | 41.94 |
|         box         | 28.35 |  37.9 |
|        column       | 48.71 | 64.31 |
|      signboard      | 35.54 | 46.41 |
|   chest of drawers  | 43.65 | 61.67 |
|       counter       | 31.91 |  35.4 |
|         sand        | 39.73 |  54.7 |
|         sink        | 71.32 | 78.54 |
|      skyscraper     | 46.12 | 52.12 |
|      fireplace      | 70.26 | 86.01 |
|     refrigerator    | 73.22 |  78.6 |
|      grandstand     | 30.59 | 88.23 |
|         path        |  17.2 | 24.45 |
|        stairs       | 32.25 |  44.1 |
|        runway       | 72.47 | 94.09 |
|         case        |  55.7 | 68.39 |
|      pool table     | 91.88 | 96.31 |
|        pillow       | 53.17 | 63.35 |
|     screen door     | 56.99 | 75.41 |
|       stairway      | 34.65 |  41.0 |
|        river        |  12.0 | 20.57 |
|        bridge       | 47.78 | 55.49 |
|       bookcase      | 41.38 |  59.2 |
|        blind        | 38.86 | 42.43 |
|     coffee table    | 58.16 | 82.22 |
|        toilet       |  78.7 |  89.3 |
|        flower       | 43.27 | 58.03 |
|         book        | 43.58 |  54.9 |
|         hill        |  9.48 | 15.93 |
|        bench        | 45.01 | 52.47 |
|      countertop     | 50.02 | 78.39 |
|        stove        | 76.68 |  85.8 |
|         palm        | 55.36 | 73.61 |
|    kitchen island   | 36.83 | 64.94 |
|       computer      | 73.08 | 86.94 |
|     swivel chair    | 40.79 | 48.33 |
|         boat        | 59.22 | 65.96 |
|         bar         | 47.61 | 63.98 |
|    arcade machine   | 73.72 |  78.9 |
|        hovel        | 55.52 | 64.13 |
|         bus         | 88.32 | 96.43 |
|        towel        | 58.94 | 63.45 |
|        light        |  43.3 | 48.59 |
|        truck        | 40.18 |  55.1 |
|        tower        | 24.82 | 50.06 |
|      chandelier     | 61.53 | 79.21 |
|        awning       | 25.19 | 27.26 |
|     streetlight     | 22.23 | 29.27 |
|        booth        | 32.73 |  38.8 |
| television receiver | 67.03 | 76.08 |
|       airplane      | 58.53 | 64.22 |
|      dirt track     |  1.15 |  1.61 |
|       apparel       | 43.64 | 54.08 |
|         pole        | 19.77 | 24.14 |
|         land        |  1.46 |  1.67 |
|      bannister      | 11.59 | 13.76 |
|      escalator      | 22.21 | 30.28 |
|       ottoman       | 49.46 | 60.72 |
|        bottle       | 37.58 | 57.57 |
|        buffet       | 48.82 | 61.84 |
|        poster       | 29.48 | 38.99 |
|        stage        |  13.5 | 23.92 |
|         van         | 40.96 | 57.12 |
|         ship        |  10.9 | 16.35 |
|       fountain      | 22.22 | 26.13 |
|    conveyer belt    |  78.4 | 83.27 |
|        canopy       |  41.3 | 46.26 |
|        washer       |  69.8 | 72.75 |
|      plaything      | 27.08 | 37.61 |
|    swimming pool    |  56.5 | 76.38 |
|        stool        | 41.51 | 57.64 |
|        barrel       |  8.06 | 10.33 |
|        basket       | 28.34 | 42.67 |
|      waterfall      | 41.61 | 49.19 |
|         tent        |  93.6 | 97.92 |
|         bag         |  12.9 | 14.89 |
|       minibike      | 69.35 |  81.0 |
|        cradle       | 78.22 | 95.49 |
|         oven        | 36.57 | 42.77 |
|         ball        | 42.54 | 65.33 |
|         food        |  45.9 |  48.8 |
|         step        |  20.6 | 25.19 |
|         tank        | 62.03 |  65.3 |
|      trade name     | 18.36 | 19.64 |
|      microwave      | 71.68 | 79.42 |
|         pot         | 44.44 |  50.1 |
|        animal       | 54.85 | 58.59 |
|       bicycle       | 49.46 | 72.31 |
|         lake        | 56.78 | 59.65 |
|      dishwasher     | 54.86 | 65.69 |
|        screen       | 63.97 | 86.64 |
|       blanket       |  8.94 |  9.08 |
|      sculpture      | 58.47 | 74.94 |
|         hood        | 56.27 | 59.03 |
|        sconce       | 45.41 | 55.03 |
|         vase        | 38.32 | 52.05 |
|    traffic light    | 35.25 |  46.4 |
|         tray        | 10.54 | 13.77 |
|        ashcan       | 33.95 | 47.48 |
|         fan         | 57.03 | 70.58 |
|         pier        | 55.09 | 64.55 |
|      crt screen     | 12.19 | 34.31 |
|        plate        |  54.2 | 71.11 |
|       monitor       | 20.94 | 22.18 |
|    bulletin board   | 34.02 | 38.73 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 52.49 | 56.68 |
|        glass        | 12.07 | 13.17 |
|        clock        | 31.35 | 43.89 |
|         flag        | 44.22 |  47.0 |
+---------------------+-------+-------+
10/06 07:00:13 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.7500  mIoU: 47.8200  mAcc: 59.1500  data_time: 0.0017  time: 0.4873
Finished processing corruption type: snow
Processing corruption type: frost
10/06 07:00:17 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1656066387
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1656066387
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:00:18 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/frost'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:00:21,614 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:00:21,614 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:00:21,614 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:00:21,614 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:00:21,614 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:00:21,614 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:00:21,614 - mmseg - INFO - res_post_norm: False
2024-10-06 07:00:21,614 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:00:27 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:00:27 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:00:29 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:00:31 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:01:17 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:30:09  time: 0.5172  data_time: 0.0015  memory: 26523  
10/06 07:01:45 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:19  time: 0.6487  data_time: 0.0016  memory: 16856  
10/06 07:02:02 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:35  time: 0.3201  data_time: 0.0015  memory: 14216  
10/06 07:02:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:05  time: 0.4212  data_time: 0.0015  memory: 16860  
10/06 07:02:48 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:59  time: 0.2672  data_time: 0.0015  memory: 16833  
10/06 07:03:08 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:47  time: 0.1552  data_time: 0.0015  memory: 16865  
10/06 07:03:29 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:59  time: 0.2953  data_time: 0.0014  memory: 16876  
10/06 07:03:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:04  time: 0.3019  data_time: 0.0014  memory: 16835  
10/06 07:03:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:52  time: 0.2454  data_time: 0.0014  memory: 10734  
10/06 07:04:08 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:50  time: 0.1455  data_time: 0.0014  memory: 14197  
10/06 07:04:19 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:00  time: 0.3041  data_time: 0.0015  memory: 11109  
10/06 07:04:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:14  time: 0.2998  data_time: 0.0016  memory: 10918  
10/06 07:04:43 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:42  time: 0.3458  data_time: 0.0015  memory: 14248  
10/06 07:05:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:18  time: 0.1568  data_time: 0.0015  memory: 16874  
10/06 07:05:17 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:56  time: 0.6494  data_time: 0.0014  memory: 14252  
10/06 07:05:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:21  time: 0.1473  data_time: 0.0016  memory: 10919  
10/06 07:05:33 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:48  time: 0.1470  data_time: 0.0015  memory: 1909  
10/06 07:05:44 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:22  time: 0.2393  data_time: 0.0014  memory: 10174  
10/06 07:06:00 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:03  time: 0.4091  data_time: 0.0015  memory: 14199  
10/06 07:06:11 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:40  time: 0.1378  data_time: 0.0014  memory: 12046  
10/06 07:06:26 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:20  time: 0.4931  data_time: 0.0015  memory: 14251  
10/06 07:06:38 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:00  time: 0.1443  data_time: 0.0014  memory: 14217  
10/06 07:06:49 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:39  time: 0.2791  data_time: 0.0014  memory: 14204  
10/06 07:06:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:16  time: 0.1434  data_time: 0.0014  memory: 3077  
10/06 07:07:07 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:57  time: 0.2687  data_time: 0.0014  memory: 16863  
10/06 07:07:13 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:36  time: 0.1463  data_time: 0.0014  memory: 1912  
10/06 07:07:22 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:17  time: 0.1373  data_time: 0.0015  memory: 8487  
10/06 07:07:36 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:02  time: 0.3367  data_time: 0.0014  memory: 14228  
10/06 07:07:46 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:44  time: 0.2993  data_time: 0.0015  memory: 10174  
10/06 07:07:53 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:27  time: 0.1407  data_time: 0.0015  memory: 1911  
10/06 07:08:02 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:11  time: 0.1540  data_time: 0.0015  memory: 11855  
10/06 07:08:10 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:54  time: 0.1442  data_time: 0.0015  memory: 1909  
10/06 07:08:22 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:39  time: 0.1346  data_time: 0.0014  memory: 16874  
10/06 07:08:34 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:25  time: 0.1502  data_time: 0.0016  memory: 10360  
10/06 07:08:45 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:10  time: 0.1493  data_time: 0.0014  memory: 11484  
10/06 07:08:53 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:55  time: 0.1484  data_time: 0.0016  memory: 8858  
10/06 07:09:00 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:41  time: 0.1483  data_time: 0.0016  memory: 1857  
10/06 07:09:09 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:27  time: 0.1445  data_time: 0.0014  memory: 6220  
10/06 07:09:20 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1419  data_time: 0.0014  memory: 14207  
10/06 07:09:31 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1311  data_time: 0.0013  memory: 9799  
10/06 07:09:31 - mmengine - INFO - per class results:
10/06 07:09:31 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.03 | 88.28 |
|       building      | 81.82 | 89.59 |
|         sky         |  65.8 | 67.64 |
|        floor        | 78.36 | 90.74 |
|         tree        | 69.63 | 88.43 |
|       ceiling       | 76.74 | 86.94 |
|         road        | 81.24 | 87.65 |
|         bed         | 88.61 | 95.32 |
|      windowpane     | 61.27 |  78.0 |
|        grass        | 61.98 | 75.86 |
|       cabinet       | 60.57 | 71.02 |
|       sidewalk      | 62.95 | 75.25 |
|        person       | 79.43 | 88.98 |
|        earth        | 34.01 | 52.42 |
|         door        | 45.35 | 56.93 |
|        table        | 60.52 | 77.45 |
|       mountain      | 24.19 | 76.86 |
|        plant        | 50.38 | 59.68 |
|       curtain       | 65.32 | 75.59 |
|        chair        | 56.91 | 70.76 |
|         car         | 83.79 | 92.04 |
|        water        | 56.58 | 74.11 |
|       painting      | 69.54 | 84.99 |
|         sofa        | 71.59 | 86.58 |
|        shelf        | 43.62 | 61.24 |
|        house        |  49.6 | 76.92 |
|         sea         | 47.08 | 62.76 |
|        mirror       | 65.58 | 75.31 |
|         rug         | 59.37 | 70.15 |
|        field        | 26.46 |  42.5 |
|       armchair      |  48.7 |  64.6 |
|         seat        | 58.86 | 78.05 |
|        fence        | 40.95 | 54.68 |
|         desk        | 46.76 | 64.78 |
|         rock        | 44.55 | 57.99 |
|       wardrobe      | 45.54 | 62.68 |
|         lamp        | 60.73 | 71.99 |
|       bathtub       | 67.21 | 73.56 |
|       railing       | 39.14 | 51.74 |
|       cushion       | 61.38 | 72.94 |
|         base        | 27.37 | 35.61 |
|         box         | 25.58 | 32.97 |
|        column       | 49.53 | 59.79 |
|      signboard      | 37.75 | 48.43 |
|   chest of drawers  | 43.32 |  58.3 |
|       counter       | 35.68 | 44.19 |
|         sand        | 40.31 | 51.79 |
|         sink        | 70.16 | 76.81 |
|      skyscraper     | 63.72 | 80.25 |
|      fireplace      |  71.6 | 90.07 |
|     refrigerator    | 68.99 | 76.81 |
|      grandstand     | 47.26 | 82.99 |
|         path        | 22.12 | 34.71 |
|        stairs       | 34.98 | 49.85 |
|        runway       | 65.52 | 85.11 |
|         case        | 58.54 | 80.47 |
|      pool table     | 91.28 | 95.62 |
|        pillow       | 58.27 |  69.0 |
|     screen door     | 55.03 | 85.94 |
|       stairway      | 36.56 | 48.76 |
|        river        | 13.61 | 21.55 |
|        bridge       | 44.41 | 50.95 |
|       bookcase      | 41.28 | 64.98 |
|        blind        | 34.06 | 37.06 |
|     coffee table    | 57.44 |  84.1 |
|        toilet       | 80.44 | 85.66 |
|        flower       | 45.71 | 59.63 |
|         book        | 45.07 | 64.67 |
|         hill        | 12.65 |  19.7 |
|        bench        | 58.91 | 70.27 |
|      countertop     | 57.99 | 79.25 |
|        stove        |  77.0 | 83.39 |
|         palm        | 51.51 | 70.42 |
|    kitchen island   | 42.08 | 81.18 |
|       computer      | 75.21 | 89.42 |
|     swivel chair    | 47.96 | 62.15 |
|         boat        | 74.66 | 83.91 |
|         bar         | 50.35 | 57.83 |
|    arcade machine   |  45.1 | 47.02 |
|        hovel        | 58.61 | 66.97 |
|         bus         | 90.99 | 95.69 |
|        towel        |  61.6 | 69.54 |
|        light        |  49.9 | 58.83 |
|        truck        |  40.1 | 53.95 |
|        tower        | 20.67 | 41.47 |
|      chandelier     | 64.56 | 82.64 |
|        awning       | 30.53 | 34.83 |
|     streetlight     | 23.47 |  29.6 |
|        booth        | 36.11 | 43.72 |
| television receiver | 62.28 | 71.63 |
|       airplane      | 58.18 | 63.41 |
|      dirt track     |  0.85 |  4.46 |
|       apparel       |  46.3 | 52.95 |
|         pole        | 19.19 | 27.18 |
|         land        |  1.68 |  2.78 |
|      bannister      | 12.59 | 15.69 |
|      escalator      | 40.44 | 53.25 |
|       ottoman       | 49.68 |  59.7 |
|        bottle       | 38.07 | 57.71 |
|        buffet       | 39.79 | 51.06 |
|        poster       | 31.14 |  39.1 |
|        stage        | 15.78 | 21.27 |
|         van         | 41.76 | 58.09 |
|         ship        |  9.58 |  9.76 |
|       fountain      | 22.52 | 22.78 |
|    conveyer belt    | 77.53 | 87.43 |
|        canopy       | 41.67 | 58.65 |
|        washer       | 69.95 | 71.98 |
|      plaything      | 36.36 | 42.66 |
|    swimming pool    | 57.44 | 83.18 |
|        stool        | 38.57 |  54.7 |
|        barrel       | 33.39 |  45.9 |
|        basket       | 32.99 | 44.97 |
|      waterfall      | 50.28 | 59.62 |
|         tent        | 92.85 | 97.52 |
|         bag         | 14.46 | 17.04 |
|       minibike      |  69.9 | 81.85 |
|        cradle       | 84.17 | 94.39 |
|         oven        | 42.83 | 53.07 |
|         ball        | 43.67 |  53.7 |
|         food        | 45.98 | 53.54 |
|         step        | 16.46 | 20.67 |
|         tank        | 62.56 | 64.69 |
|      trade name     | 21.91 |  24.3 |
|      microwave      | 83.32 | 90.57 |
|         pot         | 48.02 | 55.19 |
|        animal       | 56.69 |  58.2 |
|       bicycle       | 52.88 | 70.16 |
|         lake        | 53.31 | 77.31 |
|      dishwasher     | 53.44 | 61.33 |
|        screen       | 66.41 |  82.1 |
|       blanket       | 17.95 | 19.79 |
|      sculpture      | 61.38 | 76.44 |
|         hood        | 54.24 | 58.93 |
|        sconce       | 43.59 | 52.84 |
|         vase        | 37.23 | 53.27 |
|    traffic light    | 31.94 | 41.17 |
|         tray        |  8.17 | 12.29 |
|        ashcan       | 36.37 | 42.95 |
|         fan         | 59.63 | 72.91 |
|         pier        | 45.11 | 63.48 |
|      crt screen     |  2.37 |  3.56 |
|        plate        | 54.42 | 74.62 |
|       monitor       |  8.78 | 10.94 |
|    bulletin board   | 45.64 |  50.9 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 58.06 | 65.85 |
|        glass        | 14.79 | 15.75 |
|        clock        | 33.57 |  38.1 |
|         flag        |  43.7 | 49.02 |
+---------------------+-------+-------+
10/06 07:09:31 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.2800  mIoU: 48.6400  mAcc: 60.1900  data_time: 0.0016  time: 0.2697
Finished processing corruption type: frost
Processing corruption type: fog
10/06 07:09:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 875985856
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 875985856
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:09:35 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/fog'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:09:38,955 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:09:38,955 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:09:38,955 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:09:38,955 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:09:38,955 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:09:38,955 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:09:38,955 - mmseg - INFO - res_post_norm: False
2024-10-06 07:09:38,955 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:09:45 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:09:45 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:09:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:09:48 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:10:41 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:34:19  time: 0.6416  data_time: 0.0015  memory: 26523  
10/06 07:11:15 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:27:27  time: 0.7721  data_time: 0.0016  memory: 16856  
10/06 07:11:38 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:22:32  time: 0.4406  data_time: 0.0016  memory: 14216  
10/06 07:12:08 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:55  time: 0.5480  data_time: 0.0015  memory: 16860  
10/06 07:12:37 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:19:41  time: 0.3884  data_time: 0.0015  memory: 16833  
10/06 07:13:03 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:21  time: 0.2794  data_time: 0.0016  memory: 16865  
10/06 07:13:30 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:26  time: 0.4187  data_time: 0.0015  memory: 16876  
10/06 07:13:54 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:16:23  time: 0.4284  data_time: 0.0014  memory: 16835  
10/06 07:14:11 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:04  time: 0.3684  data_time: 0.0014  memory: 10734  
10/06 07:14:27 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:13:56  time: 0.2667  data_time: 0.0014  memory: 14197  
10/06 07:14:44 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:59  time: 0.4249  data_time: 0.0015  memory: 11109  
10/06 07:15:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:08  time: 0.4229  data_time: 0.0015  memory: 10918  
10/06 07:15:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:11:29  time: 0.4641  data_time: 0.0013  memory: 14248  
10/06 07:15:43 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:58  time: 0.2768  data_time: 0.0016  memory: 16874  
10/06 07:16:07 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:30  time: 0.7682  data_time: 0.0014  memory: 14252  
10/06 07:16:22 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:49  time: 0.2680  data_time: 0.0015  memory: 10919  
10/06 07:16:35 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:09  time: 0.2729  data_time: 0.0015  memory: 1909  
10/06 07:16:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:37  time: 0.3637  data_time: 0.0015  memory: 10174  
10/06 07:17:14 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:12  time: 0.5363  data_time: 0.0016  memory: 14199  
10/06 07:17:32 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:43  time: 0.2657  data_time: 0.0015  memory: 12046  
10/06 07:17:53 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:17  time: 0.6169  data_time: 0.0015  memory: 14251  
10/06 07:18:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:51  time: 0.2681  data_time: 0.0015  memory: 14217  
10/06 07:18:28 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:23  time: 0.3974  data_time: 0.0014  memory: 14204  
10/06 07:18:41 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:55  time: 0.2658  data_time: 0.0014  memory: 3077  
10/06 07:18:58 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:29  time: 0.3940  data_time: 0.0015  memory: 16863  
10/06 07:19:11 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:02  time: 0.2713  data_time: 0.0015  memory: 1912  
10/06 07:19:26 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:37  time: 0.2595  data_time: 0.0014  memory: 8487  
10/06 07:19:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:15  time: 0.4561  data_time: 0.0015  memory: 14228  
10/06 07:20:02 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:52  time: 0.4194  data_time: 0.0015  memory: 10174  
10/06 07:20:15 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:28  time: 0.2609  data_time: 0.0013  memory: 1911  
10/06 07:20:31 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:06  time: 0.2756  data_time: 0.0014  memory: 11855  
10/06 07:20:44 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:43  time: 0.2660  data_time: 0.0015  memory: 1909  
10/06 07:21:03 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:23  time: 0.2575  data_time: 0.0014  memory: 16874  
10/06 07:21:21 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:02  time: 0.2689  data_time: 0.0015  memory: 10360  
10/06 07:21:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:41  time: 0.2707  data_time: 0.0013  memory: 11484  
10/06 07:21:52 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:20  time: 0.2710  data_time: 0.0015  memory: 8858  
10/06 07:22:05 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:59  time: 0.2734  data_time: 0.0016  memory: 1857  
10/06 07:22:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:39  time: 0.2666  data_time: 0.0014  memory: 6220  
10/06 07:22:37 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:19  time: 0.2638  data_time: 0.0013  memory: 14207  
10/06 07:22:54 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2619  data_time: 0.0013  memory: 9799  
10/06 07:22:54 - mmengine - INFO - per class results:
10/06 07:22:54 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.49 | 89.36 |
|       building      | 82.95 |  91.1 |
|         sky         |  94.4 | 97.52 |
|        floor        | 82.32 | 90.94 |
|         tree        | 75.33 | 88.63 |
|       ceiling       |  86.2 | 93.35 |
|         road        | 85.13 | 91.93 |
|         bed         | 90.62 | 96.26 |
|      windowpane     | 63.51 | 79.52 |
|        grass        | 66.61 | 79.35 |
|       cabinet       | 64.06 | 75.34 |
|       sidewalk      | 69.42 | 82.67 |
|        person       | 81.35 | 90.83 |
|        earth        |  35.1 | 50.05 |
|         door        | 55.93 | 70.24 |
|        table        | 63.56 |  78.0 |
|       mountain      | 58.17 | 73.71 |
|        plant        | 51.29 | 60.59 |
|       curtain       | 74.91 | 84.65 |
|        chair        |  61.0 | 74.12 |
|         car         | 85.05 | 92.61 |
|        water        | 57.92 | 73.61 |
|       painting      | 74.09 | 88.61 |
|         sofa        | 73.72 | 88.79 |
|        shelf        | 46.18 | 66.29 |
|        house        | 49.83 | 72.33 |
|         sea         | 64.85 | 83.31 |
|        mirror       | 69.58 | 77.66 |
|         rug         | 67.21 | 81.18 |
|        field        | 30.29 | 45.65 |
|       armchair      | 47.74 | 63.15 |
|         seat        | 63.29 | 80.42 |
|        fence        | 48.66 | 62.18 |
|         desk        | 49.25 | 71.54 |
|         rock        | 53.42 | 76.72 |
|       wardrobe      | 57.45 | 74.81 |
|         lamp        | 63.86 | 76.89 |
|       bathtub       | 80.77 | 84.72 |
|       railing       | 40.42 | 54.48 |
|       cushion       | 64.03 | 76.41 |
|         base        | 37.71 |  48.0 |
|         box         | 33.17 | 43.19 |
|        column       | 52.68 |  62.7 |
|      signboard      | 39.45 | 53.49 |
|   chest of drawers  | 43.74 |  65.9 |
|       counter       | 32.16 | 40.11 |
|         sand        | 56.52 | 81.22 |
|         sink        | 74.39 | 81.81 |
|      skyscraper     | 56.18 | 67.31 |
|      fireplace      | 70.45 | 91.55 |
|     refrigerator    | 77.11 | 85.71 |
|      grandstand     | 47.87 | 85.42 |
|         path        | 26.08 | 40.62 |
|        stairs       | 32.44 |  44.3 |
|        runway       | 64.77 | 86.56 |
|         case        | 56.43 | 71.84 |
|      pool table     | 93.15 | 96.91 |
|        pillow       | 58.76 | 69.77 |
|     screen door     | 69.79 | 85.36 |
|       stairway      | 35.32 | 42.91 |
|        river        | 10.03 | 21.89 |
|        bridge       | 47.53 |  55.2 |
|       bookcase      | 44.48 | 69.95 |
|        blind        | 42.16 | 47.12 |
|     coffee table    | 59.78 | 86.19 |
|        toilet       | 86.65 | 92.62 |
|        flower       | 44.57 | 57.93 |
|         book        | 47.78 | 69.69 |
|         hill        |  8.33 | 12.47 |
|        bench        | 63.94 | 76.01 |
|      countertop     | 57.21 | 76.23 |
|        stove        | 81.33 | 88.08 |
|         palm        | 55.08 | 76.54 |
|    kitchen island   | 43.29 | 77.66 |
|       computer      | 73.06 | 89.53 |
|     swivel chair    | 49.82 | 69.05 |
|         boat        | 73.85 |  85.4 |
|         bar         | 54.52 | 67.28 |
|    arcade machine   |  76.9 | 82.49 |
|        hovel        | 59.35 | 66.67 |
|         bus         | 91.85 | 96.35 |
|        towel        | 66.49 | 81.95 |
|        light        | 53.16 | 62.57 |
|        truck        | 42.73 | 57.14 |
|        tower        | 23.05 | 41.69 |
|      chandelier     | 68.14 | 82.59 |
|        awning       |  32.2 | 38.83 |
|     streetlight     | 28.38 | 38.72 |
|        booth        | 40.69 | 54.21 |
| television receiver | 74.81 | 86.22 |
|       airplane      | 79.73 | 86.51 |
|      dirt track     | 16.66 | 33.52 |
|       apparel       | 59.24 | 72.37 |
|         pole        | 19.14 | 25.49 |
|         land        |  5.25 |  8.34 |
|      bannister      | 15.84 |  21.3 |
|      escalator      | 59.06 | 81.76 |
|       ottoman       | 55.81 | 68.83 |
|        bottle       | 37.67 | 57.27 |
|        buffet       | 44.05 | 52.48 |
|        poster       | 28.76 | 45.12 |
|        stage        | 20.28 | 28.06 |
|         van         | 45.74 | 63.54 |
|         ship        | 65.53 | 71.49 |
|       fountain      | 26.49 | 26.58 |
|    conveyer belt    | 78.96 | 92.55 |
|        canopy       | 50.97 | 75.52 |
|        washer       | 71.75 | 74.55 |
|      plaything      | 39.86 | 53.61 |
|    swimming pool    | 69.08 | 80.21 |
|        stool        | 44.79 | 61.72 |
|        barrel       | 45.75 |  72.5 |
|        basket       | 35.28 | 48.14 |
|      waterfall      | 61.23 | 71.22 |
|         tent        | 94.22 | 98.39 |
|         bag         | 19.46 | 23.81 |
|       minibike      | 72.89 | 84.85 |
|        cradle       | 82.88 |  96.1 |
|         oven        | 45.95 | 55.03 |
|         ball        | 43.46 | 46.03 |
|         food        |  50.7 | 56.96 |
|         step        | 22.35 | 27.85 |
|         tank        | 62.47 | 65.54 |
|      trade name     | 26.49 | 30.21 |
|      microwave      | 83.24 | 94.48 |
|         pot         | 50.41 | 62.43 |
|        animal       |  57.4 | 59.03 |
|       bicycle       | 56.74 | 74.64 |
|         lake        | 50.69 | 63.84 |
|      dishwasher     | 66.06 | 80.82 |
|        screen       | 61.89 | 85.65 |
|       blanket       | 19.91 | 23.39 |
|      sculpture      | 70.59 | 83.14 |
|         hood        | 60.65 | 65.47 |
|        sconce       | 50.86 | 60.62 |
|         vase        |  42.2 | 57.84 |
|    traffic light    | 36.82 | 50.42 |
|         tray        |  8.95 | 14.03 |
|        ashcan       | 39.07 | 53.71 |
|         fan         | 62.82 | 75.55 |
|         pier        | 45.97 |  70.1 |
|      crt screen     | 12.39 | 26.83 |
|        plate        | 55.38 | 77.95 |
|       monitor       | 14.65 | 18.96 |
|    bulletin board   | 58.13 | 68.16 |
|        shower       |  0.01 |  0.01 |
|       radiator      | 60.33 | 71.28 |
|        glass        | 15.96 | 17.44 |
|        clock        | 45.51 |  52.3 |
|         flag        | 44.34 | 49.13 |
+---------------------+-------+-------+
10/06 07:22:54 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.3600  mIoU: 53.5800  mAcc: 65.9800  data_time: 0.0016  time: 0.3929
Finished processing corruption type: fog
Processing corruption type: brightness
10/06 07:22:58 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2073407862
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2073407862
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:22:59 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/brightness'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:23:02,661 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:23:02,661 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:23:02,661 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:23:02,661 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:23:02,661 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:23:02,661 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:23:02,661 - mmseg - INFO - res_post_norm: False
2024-10-06 07:23:02,661 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:23:08 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:23:08 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:23:10 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:23:12 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:24:05 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:34:34  time: 0.6629  data_time: 0.0016  memory: 26523  
10/06 07:24:39 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:27:34  time: 0.7851  data_time: 0.0017  memory: 16856  
10/06 07:25:02 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:22:42  time: 0.4545  data_time: 0.0017  memory: 14216  
10/06 07:25:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:21:06  time: 0.5558  data_time: 0.0016  memory: 16860  
10/06 07:26:02 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:19:50  time: 0.3968  data_time: 0.0015  memory: 16833  
10/06 07:26:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:30  time: 0.2932  data_time: 0.0017  memory: 16865  
10/06 07:26:56 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:34  time: 0.4180  data_time: 0.0016  memory: 16876  
10/06 07:27:20 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:16:31  time: 0.4375  data_time: 0.0016  memory: 16835  
10/06 07:27:36 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:10  time: 0.3694  data_time: 0.0015  memory: 10734  
10/06 07:27:53 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:02  time: 0.2737  data_time: 0.0016  memory: 14197  
10/06 07:28:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:08  time: 0.4448  data_time: 0.0017  memory: 11109  
10/06 07:28:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:16  time: 0.4403  data_time: 0.0017  memory: 10918  
10/06 07:28:48 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:11:38  time: 0.4739  data_time: 0.0015  memory: 14248  
10/06 07:29:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:08  time: 0.2967  data_time: 0.0017  memory: 16874  
10/06 07:29:36 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:40  time: 0.7787  data_time: 0.0016  memory: 14252  
10/06 07:29:51 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:58  time: 0.2830  data_time: 0.0017  memory: 10919  
10/06 07:30:05 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:18  time: 0.2875  data_time: 0.0017  memory: 1909  
10/06 07:30:21 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:44  time: 0.3493  data_time: 0.0015  memory: 10174  
10/06 07:30:44 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:20  time: 0.5379  data_time: 0.0016  memory: 14199  
10/06 07:31:02 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:50  time: 0.2647  data_time: 0.0015  memory: 12046  
10/06 07:31:23 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:24  time: 0.6318  data_time: 0.0015  memory: 14251  
10/06 07:31:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:57  time: 0.2746  data_time: 0.0017  memory: 14217  
10/06 07:31:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:29  time: 0.4087  data_time: 0.0015  memory: 14204  
10/06 07:32:13 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:00  time: 0.2737  data_time: 0.0015  memory: 3077  
10/06 07:32:30 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:34  time: 0.3953  data_time: 0.0015  memory: 16863  
10/06 07:32:43 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:07  time: 0.2812  data_time: 0.0015  memory: 1912  
10/06 07:32:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:42  time: 0.2581  data_time: 0.0015  memory: 8487  
10/06 07:33:18 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:19  time: 0.4686  data_time: 0.0015  memory: 14228  
10/06 07:33:34 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:55  time: 0.4338  data_time: 0.0015  memory: 10174  
10/06 07:33:48 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:31  time: 0.2580  data_time: 0.0015  memory: 1911  
10/06 07:34:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:09  time: 0.2880  data_time: 0.0015  memory: 11855  
10/06 07:34:17 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:46  time: 0.2719  data_time: 0.0016  memory: 1909  
10/06 07:34:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:25  time: 0.2518  data_time: 0.0015  memory: 16874  
10/06 07:34:55 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:03  time: 0.2843  data_time: 0.0034  memory: 10360  
10/06 07:35:12 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:42  time: 0.2734  data_time: 0.0014  memory: 11484  
10/06 07:35:26 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:21  time: 0.2893  data_time: 0.0017  memory: 8858  
10/06 07:35:41 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:00  time: 0.2864  data_time: 0.0018  memory: 1857  
10/06 07:35:55 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:40  time: 0.2713  data_time: 0.0015  memory: 6220  
10/06 07:36:13 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:20  time: 0.2709  data_time: 0.0016  memory: 14207  
10/06 07:36:30 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2492  data_time: 0.0015  memory: 9799  
10/06 07:36:30 - mmengine - INFO - per class results:
10/06 07:36:30 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.64 | 88.96 |
|       building      |  83.3 | 91.23 |
|         sky         | 94.51 | 97.77 |
|        floor        | 82.25 | 90.65 |
|         tree        | 75.35 | 88.95 |
|       ceiling       |  85.8 | 92.91 |
|         road        |  85.2 | 91.01 |
|         bed         | 90.44 | 96.32 |
|      windowpane     | 63.46 | 80.47 |
|        grass        | 66.53 |  80.2 |
|       cabinet       | 63.57 | 75.42 |
|       sidewalk      | 68.67 | 82.45 |
|        person       | 81.44 |  91.2 |
|        earth        | 39.43 | 56.06 |
|         door        | 55.39 | 69.52 |
|        table        | 63.42 | 77.83 |
|       mountain      | 59.51 | 73.95 |
|        plant        | 52.07 |  60.4 |
|       curtain       | 75.63 | 85.42 |
|        chair        | 60.76 | 73.94 |
|         car         | 84.87 |  92.8 |
|        water        | 56.66 |  70.5 |
|       painting      | 74.02 | 88.38 |
|         sofa        | 74.12 | 88.63 |
|        shelf        | 45.77 | 65.67 |
|        house        | 49.06 | 72.74 |
|         sea         | 64.35 | 83.17 |
|        mirror       | 70.73 | 78.15 |
|         rug         | 67.92 | 82.32 |
|        field        |  31.3 | 46.74 |
|       armchair      |  48.5 | 64.45 |
|         seat        | 62.55 | 79.98 |
|        fence        |  48.6 | 63.55 |
|         desk        | 49.63 | 72.17 |
|         rock        | 52.92 | 74.15 |
|       wardrobe      | 57.29 | 75.12 |
|         lamp        | 63.96 | 76.29 |
|       bathtub       | 80.46 | 84.33 |
|       railing       | 40.81 | 55.16 |
|       cushion       | 66.74 | 80.79 |
|         base        | 36.82 |  47.7 |
|         box         | 32.29 | 41.83 |
|        column       | 52.48 | 64.52 |
|      signboard      | 39.26 |  54.1 |
|   chest of drawers  | 43.37 |  67.3 |
|       counter       | 31.57 | 40.77 |
|         sand        | 55.71 | 79.98 |
|         sink        | 74.39 | 81.66 |
|      skyscraper     | 57.93 | 71.63 |
|      fireplace      | 70.61 | 91.67 |
|     refrigerator    | 77.29 |  84.6 |
|      grandstand     | 48.83 | 84.46 |
|         path        | 25.54 |  41.0 |
|        stairs       | 33.45 | 46.25 |
|        runway       | 64.74 | 85.73 |
|         case        | 57.28 | 72.32 |
|      pool table     | 92.81 | 97.04 |
|        pillow       | 59.13 | 67.37 |
|     screen door     | 72.08 | 84.61 |
|       stairway      | 36.93 |  45.1 |
|        river        |  9.79 | 23.51 |
|        bridge       | 49.78 | 57.18 |
|       bookcase      | 45.44 | 68.64 |
|        blind        | 41.45 | 46.17 |
|     coffee table    | 59.73 |  87.2 |
|        toilet       | 86.32 | 92.67 |
|        flower       | 46.26 |  61.3 |
|         book        | 48.65 | 72.36 |
|         hill        |  7.18 | 11.96 |
|        bench        | 64.77 | 77.17 |
|      countertop     | 58.84 | 77.97 |
|        stove        | 81.79 | 88.26 |
|         palm        | 55.16 | 76.54 |
|    kitchen island   | 43.66 | 76.37 |
|       computer      |  73.7 | 89.32 |
|     swivel chair    | 51.01 | 71.09 |
|         boat        |  76.5 | 85.63 |
|         bar         | 48.29 | 59.61 |
|    arcade machine   | 68.88 | 73.91 |
|        hovel        |  58.2 | 65.74 |
|         bus         |  91.3 |  96.5 |
|        towel        | 67.58 | 82.66 |
|        light        |  53.8 | 63.67 |
|        truck        |  42.8 | 56.96 |
|        tower        | 22.31 | 41.64 |
|      chandelier     | 67.38 | 83.07 |
|        awning       | 35.17 | 43.03 |
|     streetlight     | 28.92 | 39.25 |
|        booth        | 33.72 | 46.69 |
| television receiver | 72.94 | 84.21 |
|       airplane      | 76.49 | 83.61 |
|      dirt track     | 18.63 |  35.3 |
|       apparel       | 57.08 | 69.23 |
|         pole        | 20.06 | 27.74 |
|         land        |  4.73 |  7.72 |
|      bannister      |  14.4 | 19.64 |
|      escalator      | 55.91 | 78.91 |
|       ottoman       | 54.24 | 66.55 |
|        bottle       |  39.3 | 61.72 |
|        buffet       | 44.87 | 53.88 |
|        poster       | 27.86 | 44.26 |
|        stage        | 21.94 | 29.88 |
|         van         | 45.61 | 65.62 |
|         ship        | 65.09 | 71.44 |
|       fountain      | 26.02 | 26.13 |
|    conveyer belt    | 79.56 |  92.4 |
|        canopy       | 50.26 | 72.94 |
|        washer       |  71.5 | 73.93 |
|      plaything      | 40.63 | 58.01 |
|    swimming pool    | 54.69 | 78.46 |
|        stool        |  46.4 | 61.64 |
|        barrel       | 45.79 | 70.45 |
|        basket       | 34.83 |  48.1 |
|      waterfall      | 66.06 | 78.44 |
|         tent        | 93.97 | 98.44 |
|         bag         | 19.61 | 23.72 |
|       minibike      |  73.2 | 85.65 |
|        cradle       | 82.97 | 96.46 |
|         oven        | 49.61 | 59.06 |
|         ball        | 49.52 |  53.7 |
|         food        | 51.31 | 58.19 |
|         step        | 19.88 | 24.83 |
|         tank        | 62.32 |  65.9 |
|      trade name     |  26.0 | 29.87 |
|      microwave      | 83.64 | 94.79 |
|         pot         | 50.78 |  61.6 |
|        animal       | 58.84 | 60.58 |
|       bicycle       | 56.32 |  74.4 |
|         lake        | 51.09 |  63.6 |
|      dishwasher     | 66.41 | 79.36 |
|        screen       | 60.77 |  84.4 |
|       blanket       | 21.91 |  25.9 |
|      sculpture      | 69.19 | 83.35 |
|         hood        | 59.74 | 65.03 |
|        sconce       | 51.41 | 60.99 |
|         vase        | 41.49 | 57.04 |
|    traffic light    | 37.01 | 50.54 |
|         tray        |  7.75 | 11.66 |
|        ashcan       |  43.6 | 57.51 |
|         fan         | 63.23 | 77.14 |
|         pier        | 48.22 | 74.39 |
|      crt screen     | 11.08 | 25.39 |
|        plate        | 55.67 | 78.67 |
|       monitor       |  16.9 | 22.15 |
|    bulletin board   | 58.06 | 67.63 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 60.04 | 72.13 |
|        glass        | 15.94 | 17.36 |
|        clock        | 45.24 | 53.04 |
|         flag        | 46.71 | 53.94 |
+---------------------+-------+-------+
10/06 07:36:30 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.4200  mIoU: 53.6100  mAcc: 66.2300  data_time: 0.0017  time: 0.3991
Finished processing corruption type: brightness
Processing corruption type: contrast
10/06 07:36:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 852638266
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 852638266
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:36:35 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/contrast'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:36:38,516 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:36:38,516 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:36:38,516 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:36:38,516 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:36:38,516 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:36:38,516 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:36:38,516 - mmseg - INFO - res_post_norm: False
2024-10-06 07:36:38,516 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:36:44 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:36:44 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:36:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:36:48 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:37:35 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:30:10  time: 0.5172  data_time: 0.0017  memory: 26523  
10/06 07:38:02 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:19  time: 0.6483  data_time: 0.0017  memory: 16856  
10/06 07:38:18 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:34  time: 0.3160  data_time: 0.0017  memory: 14216  
10/06 07:38:42 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:03  time: 0.4220  data_time: 0.0016  memory: 16860  
10/06 07:39:05 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:58  time: 0.2638  data_time: 0.0016  memory: 16833  
10/06 07:39:25 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:46  time: 0.1549  data_time: 0.0018  memory: 16865  
10/06 07:39:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:57  time: 0.2906  data_time: 0.0015  memory: 16876  
10/06 07:40:03 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:01  time: 0.3002  data_time: 0.0016  memory: 16835  
10/06 07:40:14 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:48  time: 0.2432  data_time: 0.0014  memory: 10734  
10/06 07:40:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:46  time: 0.1425  data_time: 0.0014  memory: 14197  
10/06 07:40:35 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:57  time: 0.3026  data_time: 0.0016  memory: 11109  
10/06 07:40:45 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:11  time: 0.3004  data_time: 0.0017  memory: 10918  
10/06 07:40:58 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:39  time: 0.3409  data_time: 0.0014  memory: 14248  
10/06 07:41:15 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:15  time: 0.1553  data_time: 0.0017  memory: 16874  
10/06 07:41:33 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:53  time: 0.6466  data_time: 0.0014  memory: 14252  
10/06 07:41:41 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:19  time: 0.1467  data_time: 0.0017  memory: 10919  
10/06 07:41:48 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:46  time: 0.1469  data_time: 0.0017  memory: 1909  
10/06 07:41:59 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:19  time: 0.2364  data_time: 0.0015  memory: 10174  
10/06 07:42:15 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:01  time: 0.4076  data_time: 0.0016  memory: 14199  
10/06 07:42:26 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:38  time: 0.1398  data_time: 0.0016  memory: 12046  
10/06 07:42:41 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:19  time: 0.4944  data_time: 0.0016  memory: 14251  
10/06 07:42:54 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:58  time: 0.1441  data_time: 0.0017  memory: 14217  
10/06 07:43:04 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:37  time: 0.2762  data_time: 0.0015  memory: 14204  
10/06 07:43:11 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:15  time: 0.1426  data_time: 0.0015  memory: 3077  
10/06 07:43:21 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:55  time: 0.2664  data_time: 0.0015  memory: 16863  
10/06 07:43:28 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:35  time: 0.1458  data_time: 0.0016  memory: 1912  
10/06 07:43:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:16  time: 0.1370  data_time: 0.0016  memory: 8487  
10/06 07:43:51 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:01  time: 0.3315  data_time: 0.0015  memory: 14228  
10/06 07:44:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:43  time: 0.2949  data_time: 0.0014  memory: 10174  
10/06 07:44:07 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:26  time: 0.1345  data_time: 0.0014  memory: 1911  
10/06 07:44:17 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:10  time: 0.1487  data_time: 0.0015  memory: 11855  
10/06 07:44:24 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:53  time: 0.1416  data_time: 0.0016  memory: 1909  
10/06 07:44:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:39  time: 0.1322  data_time: 0.0013  memory: 16874  
10/06 07:44:48 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:24  time: 0.1447  data_time: 0.0016  memory: 10360  
10/06 07:44:58 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:09  time: 0.1455  data_time: 0.0015  memory: 11484  
10/06 07:45:06 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:55  time: 0.1455  data_time: 0.0015  memory: 8858  
10/06 07:45:14 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:40  time: 0.1454  data_time: 0.0015  memory: 1857  
10/06 07:45:22 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:27  time: 0.1429  data_time: 0.0014  memory: 6220  
10/06 07:45:33 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1397  data_time: 0.0015  memory: 14207  
10/06 07:45:44 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1306  data_time: 0.0021  memory: 9799  
10/06 07:45:44 - mmengine - INFO - per class results:
10/06 07:45:44 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.62 | 89.44 |
|       building      | 83.05 | 90.88 |
|         sky         | 94.58 | 97.69 |
|        floor        |  82.2 | 90.97 |
|         tree        | 75.25 | 89.18 |
|       ceiling       | 85.88 | 93.18 |
|         road        | 84.64 | 91.02 |
|         bed         | 90.39 | 96.11 |
|      windowpane     | 63.39 | 79.62 |
|        grass        | 64.22 | 76.36 |
|       cabinet       | 64.11 | 76.01 |
|       sidewalk      | 68.52 | 82.82 |
|        person       | 81.31 | 90.66 |
|        earth        | 37.83 | 53.68 |
|         door        |  55.1 |  68.5 |
|        table        | 63.31 | 77.48 |
|       mountain      | 59.15 | 72.65 |
|        plant        | 51.21 | 58.48 |
|       curtain       | 75.22 | 84.45 |
|        chair        | 60.82 | 74.59 |
|         car         | 85.02 | 92.53 |
|        water        | 55.22 | 70.28 |
|       painting      | 73.35 | 88.92 |
|         sofa        | 74.85 | 88.07 |
|        shelf        | 46.75 | 66.78 |
|        house        | 49.21 | 73.17 |
|         sea         | 63.87 | 83.11 |
|        mirror       | 70.46 | 77.21 |
|         rug         | 66.91 | 79.66 |
|        field        | 30.18 |  51.4 |
|       armchair      | 50.95 | 67.77 |
|         seat        | 62.04 |  79.7 |
|        fence        | 47.07 | 60.96 |
|         desk        | 50.05 | 71.23 |
|         rock        | 53.65 | 77.88 |
|       wardrobe      | 57.56 | 74.73 |
|         lamp        | 64.55 | 76.97 |
|       bathtub       | 80.66 | 84.69 |
|       railing       | 38.92 | 52.88 |
|       cushion       | 66.13 | 79.06 |
|         base        | 38.25 | 48.59 |
|         box         | 32.01 |  41.6 |
|        column       | 53.49 | 63.03 |
|      signboard      | 38.96 | 53.46 |
|   chest of drawers  | 42.55 | 66.01 |
|       counter       | 32.47 |  41.1 |
|         sand        | 58.81 | 79.62 |
|         sink        | 74.57 | 81.51 |
|      skyscraper     | 65.57 | 82.57 |
|      fireplace      | 70.35 | 90.77 |
|     refrigerator    | 77.28 |  83.9 |
|      grandstand     | 47.64 | 84.84 |
|         path        | 23.75 | 39.87 |
|        stairs       | 35.27 | 47.64 |
|        runway       | 64.03 | 86.39 |
|         case        | 57.35 | 76.96 |
|      pool table     | 93.12 | 96.86 |
|        pillow       | 59.65 | 69.29 |
|     screen door     | 73.16 | 82.98 |
|       stairway      | 37.25 | 44.21 |
|        river        |  8.6  | 21.14 |
|        bridge       | 48.12 | 57.36 |
|       bookcase      | 45.21 | 70.74 |
|        blind        | 43.68 | 49.29 |
|     coffee table    | 58.65 | 86.66 |
|        toilet       | 86.81 | 92.63 |
|        flower       |  46.0 | 58.51 |
|         book        | 48.84 | 71.64 |
|         hill        |  7.73 | 13.87 |
|        bench        | 64.72 | 77.87 |
|      countertop     | 57.96 | 78.71 |
|        stove        | 81.24 | 86.11 |
|         palm        | 53.95 |  74.2 |
|    kitchen island   | 42.98 | 76.61 |
|       computer      | 73.84 | 89.18 |
|     swivel chair    | 50.85 | 68.33 |
|         boat        |  72.0 | 83.24 |
|         bar         | 47.57 | 58.16 |
|    arcade machine   | 72.95 | 77.38 |
|        hovel        |  56.3 | 64.23 |
|         bus         | 91.95 |  96.4 |
|        towel        | 69.43 | 84.56 |
|        light        |  52.8 |  61.9 |
|        truck        | 42.48 | 55.99 |
|        tower        | 21.94 | 42.05 |
|      chandelier     | 68.58 | 82.21 |
|        awning       | 32.98 | 40.11 |
|     streetlight     | 27.63 | 37.49 |
|        booth        | 41.75 | 55.09 |
| television receiver | 72.43 | 81.94 |
|       airplane      |  75.7 | 82.85 |
|      dirt track     | 13.08 | 25.97 |
|       apparel       |  58.0 | 71.35 |
|         pole        | 18.54 | 24.54 |
|         land        |  6.52 |  9.58 |
|      bannister      | 13.87 | 18.54 |
|      escalator      | 57.03 | 81.73 |
|       ottoman       | 54.79 | 68.02 |
|        bottle       | 36.31 | 54.25 |
|        buffet       | 45.22 | 53.69 |
|        poster       | 28.46 | 44.26 |
|        stage        | 21.24 | 29.15 |
|         van         | 45.26 | 63.06 |
|         ship        | 70.34 | 77.67 |
|       fountain      | 23.65 | 23.72 |
|    conveyer belt    | 79.09 | 91.62 |
|        canopy       | 50.84 | 73.79 |
|        washer       | 72.06 | 74.88 |
|      plaything      | 37.91 | 51.49 |
|    swimming pool    | 62.63 | 78.77 |
|        stool        | 45.04 | 59.17 |
|        barrel       | 43.99 | 67.22 |
|        basket       |  35.9 | 46.73 |
|      waterfall      | 61.84 | 74.46 |
|         tent        | 94.09 | 98.32 |
|         bag         | 21.88 | 26.52 |
|       minibike      | 72.12 | 84.85 |
|        cradle       | 82.97 | 96.44 |
|         oven        | 49.52 | 59.83 |
|         ball        | 52.02 | 57.33 |
|         food        |  50.0 | 55.89 |
|         step        | 20.71 | 25.94 |
|         tank        | 62.46 | 65.65 |
|      trade name     | 26.58 | 30.66 |
|      microwave      | 83.53 | 94.12 |
|         pot         | 50.63 | 61.65 |
|        animal       | 57.06 | 58.71 |
|       bicycle       | 56.27 |  73.5 |
|         lake        | 50.65 | 63.71 |
|      dishwasher     | 68.65 | 79.36 |
|        screen       | 60.19 |  81.9 |
|       blanket       |  20.4 |  24.1 |
|      sculpture      | 70.69 | 82.53 |
|         hood        | 60.31 | 64.48 |
|        sconce       | 51.35 | 60.27 |
|         vase        | 42.48 | 56.79 |
|    traffic light    | 35.42 | 49.56 |
|         tray        |  7.69 | 10.22 |
|        ashcan       | 38.39 | 50.72 |
|         fan         | 62.18 | 74.51 |
|         pier        | 47.19 | 71.33 |
|      crt screen     |  6.41 | 14.99 |
|        plate        | 55.81 | 76.85 |
|       monitor       | 11.03 | 14.51 |
|    bulletin board   | 57.64 | 67.24 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 60.07 | 71.92 |
|        glass        | 15.51 | 16.84 |
|        clock        | 45.56 | 52.57 |
|         flag        | 46.73 | 51.96 |
+---------------------+-------+-------+
10/06 07:45:44 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.3100  mIoU: 53.4900  mAcc: 65.7200  data_time: 0.0017  time: 0.2678
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
10/06 07:45:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1647219086
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1647219086
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:45:49 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:45:52,448 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:45:52,448 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:45:52,448 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:45:52,449 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:45:52,449 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:45:52,449 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:45:52,449 - mmseg - INFO - res_post_norm: False
2024-10-06 07:45:52,449 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:45:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:45:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:46:00 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:46:02 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 07:47:36 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:01:01  time: 1.5180  data_time: 0.0015  memory: 26523  
10/06 07:48:50 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:53:11  time: 1.6166  data_time: 0.0016  memory: 16856  
10/06 07:49:53 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:47:33  time: 1.2751  data_time: 0.0015  memory: 14216  
10/06 07:51:04 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:45:20  time: 1.3560  data_time: 0.0016  memory: 16860  
10/06 07:52:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:43:12  time: 1.1700  data_time: 0.0015  memory: 16833  
10/06 07:53:16 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:41:00  time: 1.0895  data_time: 0.0016  memory: 16865  
10/06 07:54:23 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:39:21  time: 1.1649  data_time: 0.0015  memory: 16876  
10/06 07:55:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:37:37  time: 1.2229  data_time: 0.0015  memory: 16835  
10/06 07:56:18 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:35:21  time: 1.0832  data_time: 0.0015  memory: 10734  
10/06 07:57:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:33:31  time: 1.0144  data_time: 0.0014  memory: 14197  
10/06 07:58:12 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:32:03  time: 1.2506  data_time: 0.0016  memory: 11109  
10/06 07:59:06 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:30:29  time: 1.2335  data_time: 0.0016  memory: 10918  
10/06 08:00:05 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:29:10  time: 1.2477  data_time: 0.0014  memory: 14248  
10/06 08:01:09 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:03  time: 1.1072  data_time: 0.0016  memory: 16874  
10/06 08:02:13 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:26:57  time: 1.5318  data_time: 0.0015  memory: 14252  
10/06 08:03:05 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:33  time: 1.0711  data_time: 0.0016  memory: 10919  
10/06 08:03:58 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:15  time: 1.0799  data_time: 0.0016  memory: 1909  
10/06 08:04:51 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:59  time: 1.0398  data_time: 0.0015  memory: 10174  
10/06 08:05:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:56  time: 1.2950  data_time: 0.0016  memory: 14199  
10/06 08:06:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:45  time: 1.0126  data_time: 0.0020  memory: 12046  
10/06 08:07:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:42  time: 1.4374  data_time: 0.0015  memory: 14251  
10/06 08:08:47 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:36  time: 1.0402  data_time: 0.0016  memory: 14217  
10/06 08:09:42 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:29  time: 1.1896  data_time: 0.0015  memory: 14204  
10/06 08:10:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:22  time: 1.0375  data_time: 0.0015  memory: 3077  
10/06 08:11:30 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:15:16  time: 1.1475  data_time: 0.0014  memory: 16863  
10/06 08:12:19 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:14:09  time: 1.0581  data_time: 0.0015  memory: 1912  
10/06 08:13:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:13:05  time: 0.9861  data_time: 0.0015  memory: 8487  
10/06 08:14:12 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:12:04  time: 1.2825  data_time: 0.0015  memory: 14228  
10/06 08:15:05 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:11:01  time: 1.2393  data_time: 0.0014  memory: 10174  
10/06 08:15:56 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:57  time: 0.9740  data_time: 0.0014  memory: 1911  
10/06 08:16:52 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:56  time: 1.0654  data_time: 0.0015  memory: 11855  
10/06 08:17:43 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:55  time: 1.0401  data_time: 0.0017  memory: 1909  
10/06 08:18:40 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:55  time: 0.9699  data_time: 0.0014  memory: 16874  
10/06 08:19:37 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:55  time: 1.0611  data_time: 0.0017  memory: 10360  
10/06 08:20:34 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:55  time: 1.0529  data_time: 0.0015  memory: 11484  
10/06 08:21:25 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:55  time: 1.0674  data_time: 0.0016  memory: 8858  
10/06 08:22:18 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:56  time: 1.0592  data_time: 0.0017  memory: 1857  
10/06 08:23:09 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:57  time: 1.0096  data_time: 0.0015  memory: 6220  
10/06 08:24:05 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:58  time: 1.0114  data_time: 0.0015  memory: 14207  
10/06 08:24:59 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9445  data_time: 0.0014  memory: 9799  
10/06 08:24:59 - mmengine - INFO - per class results:
10/06 08:24:59 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 65.66 | 79.03 |
|       building      | 75.11 | 86.74 |
|         sky         | 84.49 | 91.74 |
|        floor        | 69.83 | 82.41 |
|         tree        | 63.97 | 80.05 |
|       ceiling       | 70.75 |  83.2 |
|         road        | 77.63 | 87.04 |
|         bed         | 77.99 | 89.36 |
|      windowpane     | 50.69 | 69.85 |
|        grass        | 59.41 | 74.68 |
|       cabinet       | 52.99 | 66.93 |
|       sidewalk      | 54.92 | 70.74 |
|        person       |  62.3 | 77.85 |
|        earth        | 35.49 | 50.65 |
|         door        | 42.63 | 55.31 |
|        table        |  46.4 | 65.33 |
|       mountain      | 54.53 | 67.78 |
|        plant        | 43.67 | 57.35 |
|       curtain       | 56.32 | 71.97 |
|        chair        | 42.89 | 59.65 |
|         car         | 63.88 | 79.03 |
|        water        | 58.67 | 74.67 |
|       painting      | 49.59 | 69.42 |
|         sofa        | 60.56 | 77.88 |
|        shelf        | 38.94 | 60.42 |
|        house        | 41.25 | 60.63 |
|         sea         | 59.85 | 77.05 |
|        mirror       | 56.81 | 69.57 |
|         rug         | 50.57 | 68.75 |
|        field        | 28.23 | 44.17 |
|       armchair      | 39.09 | 55.51 |
|         seat        |  56.1 |  77.4 |
|        fence        | 37.89 | 55.42 |
|         desk        |  41.2 | 62.61 |
|         rock        | 44.31 | 68.76 |
|       wardrobe      | 46.01 |  64.7 |
|         lamp        | 33.51 | 51.91 |
|       bathtub       | 66.55 | 75.34 |
|       railing       | 31.85 | 47.58 |
|       cushion       | 45.65 | 62.87 |
|         base        | 31.72 | 44.32 |
|         box         | 26.29 |  36.9 |
|        column       | 32.82 | 54.25 |
|      signboard      | 23.16 | 36.19 |
|   chest of drawers  | 36.04 | 55.55 |
|       counter       | 28.39 | 37.16 |
|         sand        | 54.21 | 77.52 |
|         sink        | 52.27 | 65.51 |
|      skyscraper     |  56.6 | 73.11 |
|      fireplace      | 62.38 | 86.31 |
|     refrigerator    | 64.23 | 75.28 |
|      grandstand     |  44.6 | 80.35 |
|         path        | 21.36 | 32.55 |
|        stairs       | 30.22 | 43.54 |
|        runway       | 61.88 | 83.69 |
|         case        | 56.27 | 71.09 |
|      pool table     | 78.33 | 90.01 |
|        pillow       | 43.56 | 56.15 |
|     screen door     | 64.86 |  75.1 |
|       stairway      | 28.92 | 36.69 |
|        river        |  9.12 | 17.49 |
|        bridge       | 34.22 |  41.3 |
|       bookcase      | 34.74 | 62.65 |
|        blind        |  39.9 |  46.2 |
|     coffee table    | 46.76 |  72.2 |
|        toilet       | 61.82 | 76.06 |
|        flower       | 32.22 | 49.03 |
|         book        | 33.82 | 54.15 |
|         hill        |  5.54 |  9.86 |
|        bench        | 48.88 | 64.31 |
|      countertop     | 42.81 | 64.42 |
|        stove        | 66.21 | 79.54 |
|         palm        | 39.75 | 59.84 |
|    kitchen island   | 33.94 | 65.03 |
|       computer      | 63.59 | 83.42 |
|     swivel chair    | 35.37 | 54.74 |
|         boat        | 67.06 | 80.28 |
|         bar         | 47.89 | 61.76 |
|    arcade machine   | 70.02 | 80.86 |
|        hovel        | 51.48 | 64.15 |
|         bus         | 75.18 | 85.37 |
|        towel        | 36.91 | 53.71 |
|        light        | 16.14 | 25.86 |
|        truck        | 32.34 | 47.61 |
|        tower        | 18.28 |  36.2 |
|      chandelier     | 45.68 | 64.63 |
|        awning       | 27.48 |  36.0 |
|     streetlight     | 11.45 | 19.12 |
|        booth        | 32.34 | 46.23 |
| television receiver | 52.49 | 69.02 |
|       airplane      | 62.06 | 78.36 |
|      dirt track     | 18.51 |  33.0 |
|       apparel       | 34.43 | 50.78 |
|         pole        |  9.56 | 13.98 |
|         land        |  5.36 |  8.13 |
|      bannister      |  6.28 |  8.77 |
|      escalator      | 45.53 | 69.75 |
|       ottoman       | 44.93 |  60.6 |
|        bottle       | 26.51 | 44.21 |
|        buffet       | 35.66 | 44.86 |
|        poster       | 24.69 | 39.04 |
|        stage        | 20.14 | 29.89 |
|         van         | 34.45 | 48.62 |
|         ship        |  65.8 |  73.1 |
|       fountain      | 26.21 | 26.95 |
|    conveyer belt    |  75.6 | 91.23 |
|        canopy       | 35.07 | 54.87 |
|        washer       | 65.38 | 69.04 |
|      plaything      |  25.0 |  41.5 |
|    swimming pool    | 63.66 | 82.64 |
|        stool        | 29.58 | 48.52 |
|        barrel       | 33.65 | 74.56 |
|        basket       | 23.14 | 33.48 |
|      waterfall      | 63.83 | 77.18 |
|         tent        | 83.89 | 88.82 |
|         bag         | 17.45 | 22.96 |
|       minibike      | 51.25 | 70.26 |
|        cradle       | 73.97 | 91.27 |
|         oven        | 38.09 | 48.78 |
|         ball        | 30.71 | 37.83 |
|         food        | 43.79 | 51.33 |
|         step        | 17.91 | 20.32 |
|         tank        | 58.72 | 63.82 |
|      trade name     | 17.55 | 21.18 |
|      microwave      | 68.66 | 83.99 |
|         pot         | 31.72 | 42.78 |
|        animal       | 45.47 | 50.26 |
|       bicycle       | 37.69 | 56.81 |
|         lake        | 47.44 | 62.89 |
|      dishwasher     | 52.99 | 66.96 |
|        screen       | 53.25 | 78.42 |
|       blanket       | 18.69 | 23.26 |
|      sculpture      | 53.48 | 74.34 |
|         hood        | 41.47 | 52.32 |
|        sconce       |  19.2 | 29.53 |
|         vase        | 20.87 | 37.61 |
|    traffic light    | 19.89 |  33.3 |
|         tray        |  5.44 |  7.91 |
|        ashcan       | 30.81 | 50.28 |
|         fan         | 26.82 | 42.57 |
|         pier        | 46.09 | 74.04 |
|      crt screen     | 10.23 | 26.61 |
|        plate        | 38.93 | 61.64 |
|       monitor       |  7.17 |  8.97 |
|    bulletin board   | 48.04 | 59.35 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 36.94 | 51.86 |
|        glass        |  9.29 | 10.58 |
|        clock        | 20.96 | 29.86 |
|         flag        | 30.06 | 38.11 |
+---------------------+-------+-------+
10/06 08:24:59 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 76.2400  mIoU: 42.5300  mAcc: 56.8500  data_time: 0.0017  time: 1.1683
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
10/06 08:25:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 739643212
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 739643212
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:25:03 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:25:06,817 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:25:06,817 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:25:06,817 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:25:06,818 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 08:25:06,818 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:25:06,818 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:25:06,818 - mmseg - INFO - res_post_norm: False
2024-10-06 08:25:06,818 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:25:12 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:25:12 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:25:14 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 08:25:16 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 08:26:02 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:29:40  time: 0.5012  data_time: 0.0015  memory: 26523  
10/06 08:26:28 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:51  time: 0.6335  data_time: 0.0016  memory: 16856  
10/06 08:26:44 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:08  time: 0.3038  data_time: 0.0015  memory: 14216  
10/06 08:27:07 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:39  time: 0.4092  data_time: 0.0015  memory: 16860  
10/06 08:27:30 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:34  time: 0.2513  data_time: 0.0014  memory: 16833  
10/06 08:27:48 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:23  time: 0.1414  data_time: 0.0016  memory: 16865  
10/06 08:28:09 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:35  time: 0.2807  data_time: 0.0014  memory: 16876  
10/06 08:28:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:40  time: 0.2882  data_time: 0.0015  memory: 16835  
10/06 08:28:36 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:28  time: 0.2339  data_time: 0.0014  memory: 10734  
10/06 08:28:45 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:28  time: 0.1329  data_time: 0.0014  memory: 14197  
10/06 08:28:56 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:39  time: 0.2903  data_time: 0.0015  memory: 11109  
10/06 08:29:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:54  time: 0.2894  data_time: 0.0016  memory: 10918  
10/06 08:29:19 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:23  time: 0.3291  data_time: 0.0014  memory: 14248  
10/06 08:29:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:59  time: 0.1419  data_time: 0.0015  memory: 16874  
10/06 08:29:51 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:38  time: 0.6366  data_time: 0.0014  memory: 14252  
10/06 08:29:59 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:04  time: 0.1365  data_time: 0.0016  memory: 10919  
10/06 08:30:06 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:32  time: 0.1363  data_time: 0.0016  memory: 1909  
10/06 08:30:16 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:06  time: 0.2262  data_time: 0.0014  memory: 10174  
10/06 08:30:32 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:48  time: 0.3970  data_time: 0.0014  memory: 14199  
10/06 08:30:42 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:26  time: 0.1285  data_time: 0.0014  memory: 12046  
10/06 08:30:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:07  time: 0.4819  data_time: 0.0014  memory: 14251  
10/06 08:31:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:48  time: 0.1314  data_time: 0.0015  memory: 14217  
10/06 08:31:18 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:27  time: 0.2642  data_time: 0.0015  memory: 14204  
10/06 08:31:25 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:05  time: 0.1319  data_time: 0.0014  memory: 3077  
10/06 08:31:35 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:47  time: 0.2560  data_time: 0.0014  memory: 16863  
10/06 08:31:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:27  time: 0.1348  data_time: 0.0014  memory: 1912  
10/06 08:31:49 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:09  time: 0.1253  data_time: 0.0014  memory: 8487  
10/06 08:32:02 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:53  time: 0.3188  data_time: 0.0014  memory: 14228  
10/06 08:32:11 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:37  time: 0.2844  data_time: 0.0014  memory: 10174  
10/06 08:32:18 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:20  time: 0.1247  data_time: 0.0013  memory: 1911  
10/06 08:32:27 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:04  time: 0.1372  data_time: 0.0014  memory: 11855  
10/06 08:32:33 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:49  time: 0.1310  data_time: 0.0015  memory: 1909  
10/06 08:32:45 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:35  time: 0.1228  data_time: 0.0014  memory: 16874  
10/06 08:32:56 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:21  time: 0.1347  data_time: 0.0015  memory: 10360  
10/06 08:33:06 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:07  time: 0.1356  data_time: 0.0014  memory: 11484  
10/06 08:33:14 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:53  time: 0.1365  data_time: 0.0016  memory: 8858  
10/06 08:33:21 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:39  time: 0.1353  data_time: 0.0015  memory: 1857  
10/06 08:33:28 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:25  time: 0.1322  data_time: 0.0015  memory: 6220  
10/06 08:33:39 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:12  time: 0.1292  data_time: 0.0014  memory: 14207  
10/06 08:33:49 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1203  data_time: 0.0012  memory: 9799  
10/06 08:33:49 - mmengine - INFO - per class results:
10/06 08:33:49 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.16 | 88.99 |
|       building      | 83.15 | 93.41 |
|         sky         |  94.7 | 97.63 |
|        floor        | 81.69 | 90.64 |
|         tree        | 75.03 | 87.59 |
|       ceiling       | 85.59 | 93.05 |
|         road        | 84.98 | 90.28 |
|         bed         | 90.01 | 96.17 |
|      windowpane     | 63.68 | 81.14 |
|        grass        | 65.02 | 79.63 |
|       cabinet       | 60.54 | 74.34 |
|       sidewalk      | 67.89 | 82.52 |
|        person       | 80.09 | 88.85 |
|        earth        | 36.04 | 49.43 |
|         door        | 53.75 | 65.08 |
|        table        | 62.25 |  79.5 |
|       mountain      | 60.33 |  71.6 |
|        plant        | 52.89 | 65.34 |
|       curtain       | 74.79 | 87.06 |
|        chair        |  58.9 | 71.07 |
|         car         | 83.97 | 91.46 |
|        water        | 57.36 | 75.63 |
|       painting      |  73.9 | 86.41 |
|         sofa        | 73.73 | 90.71 |
|        shelf        | 44.68 | 66.87 |
|        house        | 54.95 | 68.89 |
|         sea         | 59.89 | 78.63 |
|        mirror       | 70.05 | 75.29 |
|         rug         | 65.53 | 80.13 |
|        field        | 30.58 | 54.25 |
|       armchair      |  46.3 | 59.17 |
|         seat        | 60.83 | 80.18 |
|        fence        | 46.04 | 61.71 |
|         desk        | 52.78 | 69.41 |
|         rock        | 53.04 | 76.21 |
|       wardrobe      | 55.15 | 75.27 |
|         lamp        | 63.18 | 75.24 |
|       bathtub       | 80.47 | 83.73 |
|       railing       | 39.66 | 55.63 |
|       cushion       | 64.49 | 77.27 |
|         base        | 35.65 | 47.02 |
|         box         | 30.42 | 40.28 |
|        column       | 52.16 | 62.64 |
|      signboard      | 38.13 | 50.84 |
|   chest of drawers  | 41.74 | 63.16 |
|       counter       | 31.37 | 40.22 |
|         sand        | 59.95 | 82.56 |
|         sink        | 73.11 | 79.81 |
|      skyscraper     | 47.41 | 50.96 |
|      fireplace      | 75.56 | 89.42 |
|     refrigerator    | 75.24 | 82.73 |
|      grandstand     | 47.34 |  86.9 |
|         path        | 28.07 | 41.96 |
|        stairs       | 36.26 | 48.21 |
|        runway       | 69.19 | 91.42 |
|         case        | 57.31 | 72.99 |
|      pool table     | 92.73 | 96.95 |
|        pillow       | 58.24 | 66.89 |
|     screen door     | 67.21 | 83.43 |
|       stairway      | 45.07 | 56.45 |
|        river        | 11.18 | 19.75 |
|        bridge       |  42.1 | 47.27 |
|       bookcase      | 42.35 | 68.44 |
|        blind        |  40.8 | 45.03 |
|     coffee table    | 59.08 | 85.23 |
|        toilet       | 86.58 | 92.06 |
|        flower       |  43.9 | 57.25 |
|         book        | 46.79 | 66.78 |
|         hill        | 12.62 |  22.4 |
|        bench        | 58.61 | 67.39 |
|      countertop     | 53.87 | 70.25 |
|        stove        | 81.08 | 87.09 |
|         palm        | 49.82 | 62.95 |
|    kitchen island   | 41.61 | 75.65 |
|       computer      | 72.28 | 89.25 |
|     swivel chair    | 48.71 | 69.55 |
|         boat        | 75.98 | 81.97 |
|         bar         | 47.52 | 59.72 |
|    arcade machine   | 85.39 | 92.83 |
|        hovel        | 43.49 |  45.9 |
|         bus         | 90.27 | 96.18 |
|        towel        | 69.34 | 79.36 |
|        light        |  51.5 | 61.06 |
|        truck        | 43.21 | 61.63 |
|        tower        | 24.58 | 41.01 |
|      chandelier     | 66.08 | 83.32 |
|        awning       | 33.89 | 41.18 |
|     streetlight     | 24.99 | 33.62 |
|        booth        | 32.13 | 41.53 |
| television receiver | 73.48 | 85.56 |
|       airplane      |  63.8 | 68.06 |
|      dirt track     | 27.49 | 51.08 |
|       apparel       | 59.38 | 72.73 |
|         pole        | 19.46 | 25.33 |
|         land        |  5.41 |  7.36 |
|      bannister      | 13.33 | 16.04 |
|      escalator      | 53.94 | 76.94 |
|       ottoman       | 53.08 | 62.52 |
|        bottle       | 32.34 | 44.49 |
|        buffet       | 50.55 | 60.52 |
|        poster       | 30.39 | 44.08 |
|        stage        | 20.44 | 27.74 |
|         van         | 45.92 | 63.71 |
|         ship        | 15.46 |  16.6 |
|       fountain      | 25.26 | 25.34 |
|    conveyer belt    | 82.37 | 90.71 |
|        canopy       | 45.24 | 61.15 |
|        washer       | 70.76 | 72.79 |
|      plaything      | 30.99 | 42.88 |
|    swimming pool    | 69.88 | 76.37 |
|        stool        | 44.74 | 55.91 |
|        barrel       | 43.61 | 72.45 |
|        basket       | 30.39 |  37.2 |
|      waterfall      | 53.45 | 66.87 |
|         tent        | 92.44 | 98.42 |
|         bag         | 20.02 |  23.3 |
|       minibike      |  69.6 | 80.98 |
|        cradle       | 83.46 | 96.42 |
|         oven        | 45.29 | 60.01 |
|         ball        | 50.86 | 58.97 |
|         food        | 48.98 | 53.93 |
|         step        | 19.51 | 24.25 |
|         tank        | 61.79 | 65.41 |
|      trade name     | 26.44 | 29.29 |
|      microwave      | 80.54 |  90.5 |
|         pot         | 51.64 | 62.38 |
|        animal       | 55.72 | 56.89 |
|       bicycle       | 52.33 | 66.22 |
|         lake        | 54.85 |  63.9 |
|      dishwasher     | 65.86 | 78.24 |
|        screen       | 59.62 | 83.46 |
|       blanket       | 23.18 | 25.53 |
|      sculpture      | 75.47 | 80.19 |
|         hood        | 59.99 | 64.05 |
|        sconce       | 50.69 | 59.89 |
|         vase        | 40.62 | 51.99 |
|    traffic light    | 32.76 | 43.99 |
|         tray        |  7.21 |  9.41 |
|        ashcan       | 40.51 | 54.46 |
|         fan         | 63.13 | 73.13 |
|         pier        | 57.53 | 84.59 |
|      crt screen     | 13.12 | 29.99 |
|        plate        |  54.0 | 74.56 |
|       monitor       | 19.41 | 25.57 |
|    bulletin board   | 58.82 | 70.47 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 59.44 | 70.64 |
|        glass        |  14.6 | 15.83 |
|        clock        | 38.79 | 48.88 |
|         flag        | 45.49 | 48.48 |
+---------------------+-------+-------+
10/06 08:33:49 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.1000  mIoU: 52.5600  mAcc: 64.3000  data_time: 0.0016  time: 0.2565
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
10/06 08:33:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1001869289
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1001869289
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:33:54 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:33:57,406 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:33:57,407 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:33:57,407 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:33:57,407 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 08:33:57,407 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:33:57,407 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:33:57,407 - mmseg - INFO - res_post_norm: False
2024-10-06 08:33:57,407 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:34:03 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:34:03 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:34:05 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 08:34:07 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 08:34:53 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:30:01  time: 0.5103  data_time: 0.0015  memory: 26523  
10/06 08:35:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:09  time: 0.6429  data_time: 0.0016  memory: 16856  
10/06 08:35:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:25  time: 0.3106  data_time: 0.0015  memory: 14216  
10/06 08:36:00 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:55  time: 0.4177  data_time: 0.0016  memory: 16860  
10/06 08:36:22 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:49  time: 0.2582  data_time: 0.0015  memory: 16833  
10/06 08:36:41 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:36  time: 0.1463  data_time: 0.0015  memory: 16865  
10/06 08:37:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:47  time: 0.2881  data_time: 0.0015  memory: 16876  
10/06 08:37:20 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:52  time: 0.2948  data_time: 0.0013  memory: 16835  
10/06 08:37:30 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:40  time: 0.2397  data_time: 0.0015  memory: 10734  
10/06 08:37:40 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:38  time: 0.1392  data_time: 0.0014  memory: 14197  
10/06 08:37:50 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:49  time: 0.2986  data_time: 0.0015  memory: 11109  
10/06 08:38:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:04  time: 0.2959  data_time: 0.0015  memory: 10918  
10/06 08:38:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:32  time: 0.3360  data_time: 0.0013  memory: 14248  
10/06 08:38:30 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:08  time: 0.1495  data_time: 0.0016  memory: 16874  
10/06 08:38:47 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:47  time: 0.6433  data_time: 0.0015  memory: 14252  
10/06 08:38:55 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:12  time: 0.1409  data_time: 0.0015  memory: 10919  
10/06 08:39:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:40  time: 0.1432  data_time: 0.0017  memory: 1909  
10/06 08:39:13 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:13  time: 0.2315  data_time: 0.0013  memory: 10174  
10/06 08:39:29 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:55  time: 0.4019  data_time: 0.0015  memory: 14199  
10/06 08:39:40 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:33  time: 0.1338  data_time: 0.0014  memory: 12046  
10/06 08:39:54 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:14  time: 0.4890  data_time: 0.0014  memory: 14251  
10/06 08:40:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:54  time: 0.1645  data_time: 0.0015  memory: 14217  
10/06 08:40:16 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:33  time: 0.2683  data_time: 0.0014  memory: 14204  
10/06 08:40:24 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:11  time: 0.1376  data_time: 0.0015  memory: 3077  
10/06 08:40:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:52  time: 0.2626  data_time: 0.0015  memory: 16863  
10/06 08:40:40 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:31  time: 0.1410  data_time: 0.0014  memory: 1912  
10/06 08:40:49 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:13  time: 0.1324  data_time: 0.0014  memory: 8487  
10/06 08:41:02 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:57  time: 0.3287  data_time: 0.0014  memory: 14228  
10/06 08:41:12 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:41  time: 0.2905  data_time: 0.0014  memory: 10174  
10/06 08:41:19 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:23  time: 0.1311  data_time: 0.0014  memory: 1911  
10/06 08:41:28 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:07  time: 0.1439  data_time: 0.0014  memory: 11855  
10/06 08:41:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:51  time: 0.1372  data_time: 0.0015  memory: 1909  
10/06 08:41:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:37  time: 0.1282  data_time: 0.0013  memory: 16874  
10/06 08:41:58 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:23  time: 0.1410  data_time: 0.0016  memory: 10360  
10/06 08:42:08 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:08  time: 0.1404  data_time: 0.0013  memory: 11484  
10/06 08:42:16 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:54  time: 0.1416  data_time: 0.0015  memory: 8858  
10/06 08:42:23 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:40  time: 0.1405  data_time: 0.0015  memory: 1857  
10/06 08:42:31 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:26  time: 0.1369  data_time: 0.0014  memory: 6220  
10/06 08:42:42 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1343  data_time: 0.0013  memory: 14207  
10/06 08:42:53 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1252  data_time: 0.0013  memory: 9799  
10/06 08:42:53 - mmengine - INFO - per class results:
10/06 08:42:53 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.84 | 89.47 |
|       building      | 83.82 | 93.01 |
|         sky         | 94.48 | 97.52 |
|        floor        |  81.0 |  91.2 |
|         tree        | 74.26 | 89.08 |
|       ceiling       | 84.74 | 92.46 |
|         road        | 83.55 | 88.15 |
|         bed         | 89.86 | 96.16 |
|      windowpane     | 61.96 | 78.56 |
|        grass        | 68.62 | 79.52 |
|       cabinet       | 59.87 | 71.34 |
|       sidewalk      | 66.47 | 83.74 |
|        person       | 80.55 |  89.7 |
|        earth        | 37.04 | 58.25 |
|         door        |  52.2 | 65.81 |
|        table        | 62.17 | 77.58 |
|       mountain      |  57.8 | 72.27 |
|        plant        | 49.49 | 56.21 |
|       curtain       | 74.69 | 83.81 |
|        chair        | 57.09 | 67.26 |
|         car         | 84.33 | 92.18 |
|        water        | 58.14 | 72.04 |
|       painting      | 73.26 | 84.69 |
|         sofa        | 72.02 | 90.65 |
|        shelf        | 45.42 | 67.09 |
|        house        |  55.5 | 71.02 |
|         sea         | 65.77 | 89.15 |
|        mirror       | 68.67 | 75.82 |
|         rug         | 61.53 | 74.39 |
|        field        | 32.87 | 43.82 |
|       armchair      | 44.93 | 58.62 |
|         seat        | 59.61 | 79.98 |
|        fence        |  48.2 | 62.57 |
|         desk        |  50.0 | 75.53 |
|         rock        | 51.31 | 73.03 |
|       wardrobe      | 46.88 | 68.72 |
|         lamp        | 62.43 | 72.73 |
|       bathtub       | 78.37 | 83.37 |
|       railing       |  38.1 | 51.51 |
|       cushion       | 64.36 | 77.47 |
|         base        | 37.24 | 47.51 |
|         box         | 26.35 | 32.39 |
|        column       | 51.59 | 62.27 |
|      signboard      | 37.88 | 48.85 |
|   chest of drawers  | 43.55 | 69.74 |
|       counter       | 31.77 | 38.96 |
|         sand        | 51.73 | 71.43 |
|         sink        | 72.55 | 78.95 |
|      skyscraper     | 53.45 | 63.48 |
|      fireplace      |  77.3 |  91.4 |
|     refrigerator    | 75.21 | 82.75 |
|      grandstand     | 48.81 | 85.74 |
|         path        | 23.27 | 39.72 |
|        stairs       | 34.42 | 44.84 |
|        runway       |  69.9 | 90.84 |
|         case        | 58.66 | 73.71 |
|      pool table     |  92.0 | 96.65 |
|        pillow       | 52.66 | 58.09 |
|     screen door     |  75.4 | 80.88 |
|       stairway      | 37.25 | 46.56 |
|        river        | 16.59 |  28.2 |
|        bridge       | 37.85 | 43.95 |
|       bookcase      | 41.19 | 68.31 |
|        blind        | 34.25 | 36.05 |
|     coffee table    | 57.54 | 84.77 |
|        toilet       | 85.49 |  91.6 |
|        flower       | 43.81 | 55.66 |
|         book        |  46.6 | 66.97 |
|         hill        |  7.86 | 10.69 |
|        bench        |  58.0 |  66.8 |
|      countertop     | 56.51 | 70.56 |
|        stove        | 80.85 | 88.33 |
|         palm        | 51.35 | 69.22 |
|    kitchen island   | 39.25 | 72.67 |
|       computer      |  74.6 | 88.38 |
|     swivel chair    | 52.33 | 73.37 |
|         boat        | 72.79 | 84.27 |
|         bar         | 50.73 | 62.78 |
|    arcade machine   | 80.39 | 85.15 |
|        hovel        | 57.65 | 64.21 |
|         bus         | 90.04 | 95.63 |
|        towel        |  65.1 | 74.93 |
|        light        | 51.19 | 57.61 |
|        truck        | 43.25 | 54.99 |
|        tower        | 24.88 | 50.84 |
|      chandelier     | 66.28 | 82.81 |
|        awning       | 32.69 |  38.0 |
|     streetlight     | 25.48 | 34.87 |
|        booth        | 36.61 | 49.55 |
| television receiver | 71.25 | 82.93 |
|       airplane      | 64.43 | 70.78 |
|      dirt track     | 15.01 | 26.01 |
|       apparel       | 52.63 | 62.05 |
|         pole        | 19.35 |  25.8 |
|         land        |  4.97 |  8.84 |
|      bannister      | 14.42 | 18.82 |
|      escalator      | 51.47 | 74.18 |
|       ottoman       | 52.06 | 62.24 |
|        bottle       | 33.29 | 47.51 |
|        buffet       | 44.71 | 54.61 |
|        poster       | 26.25 | 44.13 |
|        stage        | 18.62 | 25.89 |
|         van         | 45.14 | 65.61 |
|         ship        | 72.15 | 79.17 |
|       fountain      | 26.93 |  27.3 |
|    conveyer belt    | 76.84 | 92.21 |
|        canopy       | 46.54 | 67.99 |
|        washer       | 70.39 | 73.44 |
|      plaything      | 40.39 |  51.2 |
|    swimming pool    | 63.62 |  77.7 |
|        stool        | 42.34 | 58.57 |
|        barrel       | 51.75 | 63.19 |
|        basket       | 30.63 | 40.14 |
|      waterfall      | 71.23 | 83.63 |
|         tent        | 93.93 | 98.16 |
|         bag         | 15.16 | 16.72 |
|       minibike      | 70.12 | 80.91 |
|        cradle       | 84.11 | 95.61 |
|         oven        | 45.24 | 54.67 |
|         ball        | 48.07 | 56.82 |
|         food        | 46.18 | 54.46 |
|         step        | 17.07 |  20.6 |
|         tank        | 62.54 | 65.26 |
|      trade name     | 26.31 | 29.93 |
|      microwave      | 83.06 | 92.73 |
|         pot         |  51.2 |  61.0 |
|        animal       | 60.48 |  62.2 |
|       bicycle       | 53.73 | 69.64 |
|         lake        | 62.14 | 63.45 |
|      dishwasher     | 66.59 | 75.21 |
|        screen       | 58.84 | 82.09 |
|       blanket       | 17.59 | 19.07 |
|      sculpture      | 69.07 | 81.54 |
|         hood        | 56.27 | 60.46 |
|        sconce       | 48.58 | 55.99 |
|         vase        | 40.13 | 49.73 |
|    traffic light    | 30.13 | 39.56 |
|         tray        |  9.61 | 14.26 |
|        ashcan       | 39.39 | 49.53 |
|         fan         | 60.37 | 75.64 |
|         pier        | 47.88 | 87.02 |
|      crt screen     | 11.05 | 27.93 |
|        plate        |  53.8 | 74.99 |
|       monitor       |  8.15 | 10.76 |
|    bulletin board   | 48.43 | 55.33 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 58.04 | 65.11 |
|        glass        | 13.95 | 14.88 |
|        clock        | 38.02 | 44.08 |
|         flag        | 51.54 | 55.81 |
+---------------------+-------+-------+
10/06 08:42:53 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.8500  mIoU: 52.3000  mAcc: 63.9100  data_time: 0.0016  time: 0.2629
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
10/06 08:42:56 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1818617826
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1818617826
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:42:57 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:43:00,920 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:43:00,920 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:43:00,920 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:43:00,920 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 08:43:00,920 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:43:00,920 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:43:00,920 - mmseg - INFO - res_post_norm: False
2024-10-06 08:43:00,920 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:43:07 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:43:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:43:08 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 08:43:10 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 08:44:44 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:00:49  time: 1.5210  data_time: 0.0017  memory: 26523  
10/06 08:45:57 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:52:59  time: 1.6178  data_time: 0.0017  memory: 16856  
10/06 08:47:01 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:47:28  time: 1.2802  data_time: 0.0016  memory: 14216  
10/06 08:48:12 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:45:14  time: 1.3470  data_time: 0.0016  memory: 16860  
10/06 08:49:20 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:43:06  time: 1.1736  data_time: 0.0015  memory: 16833  
10/06 08:50:24 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:40:56  time: 1.0898  data_time: 0.0017  memory: 16865  
10/06 08:51:31 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:39:19  time: 1.1679  data_time: 0.0016  memory: 16876  
10/06 08:52:34 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:37:36  time: 1.2480  data_time: 0.0014  memory: 16835  
10/06 08:53:26 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:35:22  time: 1.0879  data_time: 0.0014  memory: 10734  
10/06 08:54:22 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:33:35  time: 1.0246  data_time: 0.0015  memory: 14197  
10/06 08:55:23 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:32:10  time: 1.2885  data_time: 0.0016  memory: 11109  
10/06 08:56:18 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:30:38  time: 1.2495  data_time: 0.0017  memory: 10918  
10/06 08:57:17 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:29:19  time: 1.2576  data_time: 0.0015  memory: 14248  
10/06 08:58:22 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:13  time: 1.1211  data_time: 0.0017  memory: 16874  
10/06 08:59:26 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:07  time: 1.5456  data_time: 0.0015  memory: 14252  
10/06 09:00:19 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:42  time: 1.0782  data_time: 0.0017  memory: 10919  
10/06 09:01:13 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:24  time: 1.0867  data_time: 0.0017  memory: 1909  
10/06 09:02:06 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:23:07  time: 1.0489  data_time: 0.0014  memory: 10174  
10/06 09:03:09 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:22:04  time: 1.3066  data_time: 0.0015  memory: 14199  
10/06 09:04:04 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:54  time: 1.0384  data_time: 0.0015  memory: 12046  
10/06 09:05:06 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:50  time: 1.4615  data_time: 0.0015  memory: 14251  
10/06 09:06:06 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:45  time: 1.0558  data_time: 0.0015  memory: 14217  
10/06 09:07:01 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:37  time: 1.2072  data_time: 0.0015  memory: 14204  
10/06 09:07:55 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:30  time: 1.0438  data_time: 0.0015  memory: 3077  
10/06 09:08:50 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:15:23  time: 1.1576  data_time: 0.0015  memory: 16863  
10/06 09:09:40 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:14:16  time: 1.0853  data_time: 0.0015  memory: 1912  
10/06 09:10:34 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:13:11  time: 0.9978  data_time: 0.0015  memory: 8487  
10/06 09:11:34 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:12:10  time: 1.3038  data_time: 0.0015  memory: 14228  
10/06 09:12:28 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:11:06  time: 1.2504  data_time: 0.0015  memory: 10174  
10/06 09:13:20 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:03  time: 0.9920  data_time: 0.0015  memory: 1911  
10/06 09:14:17 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:02  time: 1.0982  data_time: 0.0015  memory: 11855  
10/06 09:15:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:59  time: 1.0577  data_time: 0.0017  memory: 1909  
10/06 09:16:07 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:59  time: 0.9870  data_time: 0.0015  memory: 16874  
10/06 09:17:05 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:59  time: 1.0799  data_time: 0.0017  memory: 10360  
10/06 09:18:03 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:58  time: 1.0625  data_time: 0.0016  memory: 11484  
10/06 09:18:55 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:58  time: 1.0786  data_time: 0.0017  memory: 8858  
10/06 09:19:48 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:58  time: 1.0619  data_time: 0.0017  memory: 1857  
10/06 09:20:40 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:58  time: 1.0347  data_time: 0.0015  memory: 6220  
10/06 09:21:36 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:59  time: 1.0289  data_time: 0.0015  memory: 14207  
10/06 09:22:31 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9541  data_time: 0.0014  memory: 9799  
10/06 09:22:31 - mmengine - INFO - per class results:
10/06 09:22:31 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 65.38 | 78.88 |
|       building      | 75.11 | 86.55 |
|         sky         | 84.44 | 91.64 |
|        floor        | 69.65 | 82.33 |
|         tree        | 64.36 |  80.4 |
|       ceiling       | 71.24 | 84.38 |
|         road        | 77.68 | 86.56 |
|         bed         | 77.28 | 88.23 |
|      windowpane     | 50.24 | 69.72 |
|        grass        | 58.81 | 73.48 |
|       cabinet       | 52.38 | 66.66 |
|       sidewalk      | 55.13 |  70.6 |
|        person       | 62.44 | 77.85 |
|        earth        | 34.49 | 49.88 |
|         door        | 43.39 |  55.9 |
|        table        | 45.77 | 65.32 |
|       mountain      | 52.31 | 66.44 |
|        plant        | 43.84 | 57.48 |
|       curtain       | 56.28 | 72.33 |
|        chair        |  42.9 |  59.6 |
|         car         | 63.04 | 79.08 |
|        water        | 57.19 | 73.89 |
|       painting      | 48.38 | 67.31 |
|         sofa        | 60.94 | 77.11 |
|        shelf        | 38.04 |  59.6 |
|        house        | 42.91 | 64.54 |
|         sea         | 62.26 | 75.51 |
|        mirror       | 58.71 | 70.76 |
|         rug         | 51.59 | 69.66 |
|        field        | 27.77 | 43.53 |
|       armchair      |  40.2 |  56.8 |
|         seat        | 55.72 | 76.24 |
|        fence        |  35.8 | 51.66 |
|         desk        | 40.23 | 62.48 |
|         rock        | 42.53 | 66.32 |
|       wardrobe      | 52.79 | 71.62 |
|         lamp        | 30.63 | 48.44 |
|       bathtub       | 63.55 | 73.76 |
|       railing       | 33.64 | 50.33 |
|       cushion       |  44.8 | 61.97 |
|         base        | 29.03 | 43.13 |
|         box         |  23.7 | 33.64 |
|        column       | 32.59 | 49.64 |
|      signboard      | 24.14 | 37.31 |
|   chest of drawers  | 38.23 | 57.01 |
|       counter       | 30.02 | 38.87 |
|         sand        | 55.99 | 78.77 |
|         sink        | 51.17 |  65.3 |
|      skyscraper     | 54.96 | 70.31 |
|      fireplace      | 61.13 | 84.98 |
|     refrigerator    |  64.5 | 75.02 |
|      grandstand     | 44.36 | 83.01 |
|         path        |  19.8 | 30.72 |
|        stairs       | 27.85 | 41.36 |
|        runway       | 61.01 | 84.79 |
|         case        | 56.88 | 73.96 |
|      pool table     | 73.08 | 85.49 |
|        pillow       | 41.12 | 53.91 |
|     screen door     | 63.76 | 78.42 |
|       stairway      | 30.04 | 36.82 |
|        river        |  10.2 | 20.89 |
|        bridge       | 35.97 |  45.2 |
|       bookcase      | 36.55 | 60.68 |
|        blind        | 35.96 | 42.14 |
|     coffee table    | 47.65 | 71.77 |
|        toilet       | 59.52 | 74.17 |
|        flower       | 31.55 | 48.72 |
|         book        | 34.35 | 55.21 |
|         hill        |  5.73 | 11.34 |
|        bench        | 53.03 | 67.21 |
|      countertop     | 40.88 | 63.15 |
|        stove        | 62.95 | 75.93 |
|         palm        | 42.57 | 68.19 |
|    kitchen island   | 32.29 | 59.13 |
|       computer      | 61.42 | 80.36 |
|     swivel chair    | 32.93 | 51.34 |
|         boat        | 64.67 |  80.9 |
|         bar         | 43.38 | 56.72 |
|    arcade machine   | 65.55 | 76.89 |
|        hovel        | 54.58 | 65.18 |
|         bus         | 73.47 | 85.27 |
|        towel        | 33.94 | 51.35 |
|        light        | 14.81 | 24.13 |
|        truck        | 32.24 | 48.31 |
|        tower        | 14.85 | 32.84 |
|      chandelier     |  43.5 | 63.32 |
|        awning       | 21.66 | 29.36 |
|     streetlight     | 11.61 |  19.9 |
|        booth        | 34.87 | 50.88 |
| television receiver |  51.8 | 67.18 |
|       airplane      | 51.74 | 64.17 |
|      dirt track     |  13.0 | 27.92 |
|       apparel       | 36.37 | 51.62 |
|         pole        |  5.48 |  8.11 |
|         land        |  5.04 |  8.18 |
|      bannister      |  9.09 |  12.2 |
|      escalator      | 43.34 | 65.68 |
|       ottoman       | 40.93 | 54.95 |
|        bottle       | 28.51 | 50.35 |
|        buffet       | 36.98 | 46.77 |
|        poster       | 23.87 | 37.96 |
|        stage        |  18.1 |  27.3 |
|         van         | 35.39 | 50.44 |
|         ship        | 39.22 |  44.8 |
|       fountain      | 22.81 |  23.3 |
|    conveyer belt    | 73.89 | 85.93 |
|        canopy       | 37.16 | 58.56 |
|        washer       | 65.46 |  68.5 |
|      plaything      | 24.66 | 39.36 |
|    swimming pool    |  52.5 |  71.4 |
|        stool        | 26.03 | 41.51 |
|        barrel       | 33.55 | 61.38 |
|        basket       | 23.42 | 34.93 |
|      waterfall      | 49.99 | 64.69 |
|         tent        | 72.03 | 86.98 |
|         bag         | 17.73 | 22.79 |
|       minibike      | 55.72 |  74.2 |
|        cradle       | 73.26 | 90.12 |
|         oven        | 34.09 | 42.97 |
|         ball        | 32.81 | 36.79 |
|         food        |  39.3 | 46.41 |
|         step        | 19.19 | 23.54 |
|         tank        | 57.25 | 62.26 |
|      trade name     | 18.14 | 22.11 |
|      microwave      | 67.99 | 81.46 |
|         pot         | 31.39 | 44.34 |
|        animal       | 48.89 | 53.89 |
|       bicycle       |  39.0 | 62.69 |
|         lake        |  50.3 | 63.16 |
|      dishwasher     | 50.02 | 62.38 |
|        screen       |  54.0 | 79.84 |
|       blanket       | 16.49 | 19.88 |
|      sculpture      | 48.63 | 67.89 |
|         hood        | 38.36 | 49.85 |
|        sconce       | 24.59 | 35.09 |
|         vase        | 18.37 | 32.98 |
|    traffic light    | 17.28 |  30.2 |
|         tray        |  5.24 |  7.37 |
|        ashcan       | 25.03 | 43.66 |
|         fan         | 26.34 |  42.3 |
|         pier        | 43.41 | 68.02 |
|      crt screen     | 10.93 | 27.04 |
|        plate        |  34.2 |  57.8 |
|       monitor       |  8.8  | 10.22 |
|    bulletin board   | 41.28 | 55.33 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 37.61 | 51.98 |
|        glass        |  9.9  | 11.25 |
|        clock        | 19.15 | 28.15 |
|         flag        |  29.3 | 39.02 |
+---------------------+-------+-------+
10/06 09:22:31 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 76.0200  mIoU: 41.4300  mAcc: 55.6600  data_time: 0.0017  time: 1.1803
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
10/06 09:22:35 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1281399502
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1281399502
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 09:22:36 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 09:22:40,103 - mmseg - INFO - using core type: DCNv3
2024-10-06 09:22:40,103 - mmseg - INFO - using activation layer: GELU
2024-10-06 09:22:40,103 - mmseg - INFO - using main norm layer: LN
2024-10-06 09:22:40,103 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 09:22:40,103 - mmseg - INFO - level2_post_norm: False
2024-10-06 09:22:40,103 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 09:22:40,103 - mmseg - INFO - res_post_norm: False
2024-10-06 09:22:40,103 - mmseg - INFO - use_dcn_v4_op: False
10/06 09:22:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 09:22:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 09:22:47 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 09:22:50 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 09:23:35 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:29:48  time: 0.5073  data_time: 0.0034  memory: 26523  
10/06 09:24:02 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:56  time: 0.6344  data_time: 0.0016  memory: 16856  
10/06 09:24:18 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:12  time: 0.3033  data_time: 0.0014  memory: 14216  
10/06 09:24:41 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:41  time: 0.4086  data_time: 0.0015  memory: 16860  
10/06 09:25:03 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:35  time: 0.2517  data_time: 0.0015  memory: 16833  
10/06 09:25:22 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:24  time: 0.1406  data_time: 0.0015  memory: 16865  
10/06 09:25:43 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:35  time: 0.2802  data_time: 0.0014  memory: 16876  
10/06 09:26:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:40  time: 0.2878  data_time: 0.0013  memory: 16835  
10/06 09:26:10 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:28  time: 0.2329  data_time: 0.0013  memory: 10734  
10/06 09:26:19 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:27  time: 0.1311  data_time: 0.0013  memory: 14197  
10/06 09:26:29 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:38  time: 0.2893  data_time: 0.0014  memory: 11109  
10/06 09:26:39 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:54  time: 0.2874  data_time: 0.0015  memory: 10918  
10/06 09:26:52 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:22  time: 0.3273  data_time: 0.0013  memory: 14248  
10/06 09:27:08 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:59  time: 0.1409  data_time: 0.0015  memory: 16874  
10/06 09:27:24 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:37  time: 0.6340  data_time: 0.0014  memory: 14252  
10/06 09:27:32 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:04  time: 0.1349  data_time: 0.0015  memory: 10919  
10/06 09:27:39 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:31  time: 0.1342  data_time: 0.0015  memory: 1909  
10/06 09:27:49 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:05  time: 0.2260  data_time: 0.0013  memory: 10174  
10/06 09:28:05 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:48  time: 0.3976  data_time: 0.0036  memory: 14199  
10/06 09:28:15 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:25  time: 0.1290  data_time: 0.0015  memory: 12046  
10/06 09:28:29 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:07  time: 0.4806  data_time: 0.0015  memory: 14251  
10/06 09:28:41 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:47  time: 0.1309  data_time: 0.0015  memory: 14217  
10/06 09:28:51 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:26  time: 0.2625  data_time: 0.0014  memory: 14204  
10/06 09:28:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:05  time: 0.1327  data_time: 0.0015  memory: 3077  
10/06 09:29:07 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:46  time: 0.2566  data_time: 0.0015  memory: 16863  
10/06 09:29:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:26  time: 0.1349  data_time: 0.0014  memory: 1912  
10/06 09:29:22 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:08  time: 0.1256  data_time: 0.0014  memory: 8487  
10/06 09:29:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:53  time: 0.3200  data_time: 0.0015  memory: 14228  
10/06 09:29:44 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:37  time: 0.2854  data_time: 0.0025  memory: 10174  
10/06 09:29:51 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:20  time: 0.1283  data_time: 0.0014  memory: 1911  
10/06 09:30:00 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:04  time: 0.1384  data_time: 0.0015  memory: 11855  
10/06 09:30:06 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:49  time: 0.1313  data_time: 0.0016  memory: 1909  
10/06 09:30:18 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:35  time: 0.1245  data_time: 0.0014  memory: 16874  
10/06 09:30:29 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:21  time: 0.1354  data_time: 0.0016  memory: 10360  
10/06 09:30:39 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:07  time: 0.1351  data_time: 0.0014  memory: 11484  
10/06 09:30:47 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:53  time: 0.1362  data_time: 0.0016  memory: 8858  
10/06 09:30:54 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:39  time: 0.1358  data_time: 0.0015  memory: 1857  
10/06 09:31:01 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:25  time: 0.1315  data_time: 0.0014  memory: 6220  
10/06 09:31:12 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:12  time: 0.1285  data_time: 0.0014  memory: 14207  
10/06 09:31:22 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1203  data_time: 0.0013  memory: 9799  
10/06 09:31:22 - mmengine - INFO - per class results:
10/06 09:31:22 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.16 | 88.99 |
|       building      | 83.15 | 93.41 |
|         sky         |  94.7 | 97.63 |
|        floor        | 81.69 | 90.64 |
|         tree        | 75.03 | 87.59 |
|       ceiling       | 85.59 | 93.05 |
|         road        | 84.98 | 90.28 |
|         bed         | 90.01 | 96.17 |
|      windowpane     | 63.68 | 81.14 |
|        grass        | 65.02 | 79.63 |
|       cabinet       | 60.54 | 74.34 |
|       sidewalk      | 67.89 | 82.52 |
|        person       | 80.09 | 88.85 |
|        earth        | 36.04 | 49.43 |
|         door        | 53.75 | 65.08 |
|        table        | 62.25 |  79.5 |
|       mountain      | 60.33 |  71.6 |
|        plant        | 52.89 | 65.34 |
|       curtain       | 74.79 | 87.06 |
|        chair        |  58.9 | 71.07 |
|         car         | 83.97 | 91.46 |
|        water        | 57.36 | 75.63 |
|       painting      |  73.9 | 86.41 |
|         sofa        | 73.73 | 90.71 |
|        shelf        | 44.68 | 66.87 |
|        house        | 54.95 | 68.89 |
|         sea         | 59.89 | 78.63 |
|        mirror       | 70.05 | 75.29 |
|         rug         | 65.53 | 80.13 |
|        field        | 30.58 | 54.25 |
|       armchair      |  46.3 | 59.17 |
|         seat        | 60.83 | 80.18 |
|        fence        | 46.04 | 61.71 |
|         desk        | 52.78 | 69.41 |
|         rock        | 53.04 | 76.21 |
|       wardrobe      | 55.15 | 75.27 |
|         lamp        | 63.18 | 75.24 |
|       bathtub       | 80.47 | 83.73 |
|       railing       | 39.66 | 55.63 |
|       cushion       | 64.49 | 77.27 |
|         base        | 35.65 | 47.02 |
|         box         | 30.42 | 40.28 |
|        column       | 52.16 | 62.64 |
|      signboard      | 38.13 | 50.84 |
|   chest of drawers  | 41.74 | 63.16 |
|       counter       | 31.37 | 40.22 |
|         sand        | 59.95 | 82.56 |
|         sink        | 73.11 | 79.81 |
|      skyscraper     | 47.41 | 50.96 |
|      fireplace      | 75.56 | 89.42 |
|     refrigerator    | 75.24 | 82.73 |
|      grandstand     | 47.34 |  86.9 |
|         path        | 28.07 | 41.96 |
|        stairs       | 36.26 | 48.21 |
|        runway       | 69.19 | 91.42 |
|         case        | 57.31 | 72.99 |
|      pool table     | 92.73 | 96.95 |
|        pillow       | 58.24 | 66.89 |
|     screen door     | 67.21 | 83.43 |
|       stairway      | 45.07 | 56.45 |
|        river        | 11.18 | 19.75 |
|        bridge       |  42.1 | 47.27 |
|       bookcase      | 42.35 | 68.44 |
|        blind        |  40.8 | 45.03 |
|     coffee table    | 59.08 | 85.23 |
|        toilet       | 86.58 | 92.06 |
|        flower       |  43.9 | 57.25 |
|         book        | 46.79 | 66.78 |
|         hill        | 12.62 |  22.4 |
|        bench        | 58.61 | 67.39 |
|      countertop     | 53.87 | 70.25 |
|        stove        | 81.08 | 87.09 |
|         palm        | 49.82 | 62.95 |
|    kitchen island   | 41.61 | 75.65 |
|       computer      | 72.28 | 89.25 |
|     swivel chair    | 48.71 | 69.55 |
|         boat        | 75.98 | 81.97 |
|         bar         | 47.52 | 59.72 |
|    arcade machine   | 85.39 | 92.83 |
|        hovel        | 43.49 |  45.9 |
|         bus         | 90.27 | 96.18 |
|        towel        | 69.34 | 79.36 |
|        light        |  51.5 | 61.06 |
|        truck        | 43.21 | 61.63 |
|        tower        | 24.58 | 41.01 |
|      chandelier     | 66.08 | 83.32 |
|        awning       | 33.89 | 41.18 |
|     streetlight     | 24.99 | 33.62 |
|        booth        | 32.13 | 41.53 |
| television receiver | 73.48 | 85.56 |
|       airplane      |  63.8 | 68.06 |
|      dirt track     | 27.49 | 51.08 |
|       apparel       | 59.38 | 72.73 |
|         pole        | 19.46 | 25.33 |
|         land        |  5.41 |  7.36 |
|      bannister      | 13.33 | 16.04 |
|      escalator      | 53.94 | 76.94 |
|       ottoman       | 53.08 | 62.52 |
|        bottle       | 32.34 | 44.49 |
|        buffet       | 50.55 | 60.52 |
|        poster       | 30.39 | 44.08 |
|        stage        | 20.44 | 27.74 |
|         van         | 45.92 | 63.71 |
|         ship        | 15.46 |  16.6 |
|       fountain      | 25.26 | 25.34 |
|    conveyer belt    | 82.37 | 90.71 |
|        canopy       | 45.24 | 61.15 |
|        washer       | 70.76 | 72.79 |
|      plaything      | 30.99 | 42.88 |
|    swimming pool    | 69.88 | 76.37 |
|        stool        | 44.74 | 55.91 |
|        barrel       | 43.61 | 72.45 |
|        basket       | 30.39 |  37.2 |
|      waterfall      | 53.45 | 66.87 |
|         tent        | 92.44 | 98.42 |
|         bag         | 20.02 |  23.3 |
|       minibike      |  69.6 | 80.98 |
|        cradle       | 83.46 | 96.42 |
|         oven        | 45.29 | 60.01 |
|         ball        | 50.86 | 58.97 |
|         food        | 48.98 | 53.93 |
|         step        | 19.51 | 24.25 |
|         tank        | 61.79 | 65.41 |
|      trade name     | 26.44 | 29.29 |
|      microwave      | 80.54 |  90.5 |
|         pot         | 51.64 | 62.38 |
|        animal       | 55.72 | 56.89 |
|       bicycle       | 52.33 | 66.22 |
|         lake        | 54.85 |  63.9 |
|      dishwasher     | 65.86 | 78.24 |
|        screen       | 59.62 | 83.46 |
|       blanket       | 23.18 | 25.53 |
|      sculpture      | 75.47 | 80.19 |
|         hood        | 59.99 | 64.05 |
|        sconce       | 50.69 | 59.89 |
|         vase        | 40.62 | 51.99 |
|    traffic light    | 32.76 | 43.99 |
|         tray        |  7.21 |  9.41 |
|        ashcan       | 40.51 | 54.46 |
|         fan         | 63.13 | 73.13 |
|         pier        | 57.53 | 84.59 |
|      crt screen     | 13.12 | 29.99 |
|        plate        |  54.0 | 74.56 |
|       monitor       | 19.41 | 25.57 |
|    bulletin board   | 58.82 | 70.47 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 59.44 | 70.64 |
|        glass        |  14.6 | 15.83 |
|        clock        | 38.79 | 48.88 |
|         flag        | 45.49 | 48.48 |
+---------------------+-------+-------+
10/06 09:31:22 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.1000  mIoU: 52.5600  mAcc: 64.3000  data_time: 0.0016  time: 0.2562
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
10/06 09:31:26 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 877031380
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 877031380
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 09:31:27 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=768,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=192,
        core_op='DCNv3',
        depths=[
            5,
            5,
            24,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            12,
            24,
            48,
            96,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            192,
            384,
            768,
            1536,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            24,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=39,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_xl_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 09:31:30,449 - mmseg - INFO - using core type: DCNv3
2024-10-06 09:31:30,449 - mmseg - INFO - using activation layer: GELU
2024-10-06 09:31:30,449 - mmseg - INFO - using main norm layer: LN
2024-10-06 09:31:30,449 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 09:31:30,449 - mmseg - INFO - level2_post_norm: False
2024-10-06 09:31:30,449 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 09:31:30,449 - mmseg - INFO - res_post_norm: False
2024-10-06 09:31:30,449 - mmseg - INFO - use_dcn_v4_op: False
10/06 09:31:36 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 09:31:36 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 09:31:38 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 09:31:40 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_xl_640_160k_ade20k.pth
10/06 09:32:26 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:29:57  time: 0.5095  data_time: 0.0016  memory: 26523  
10/06 09:32:53 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:07  time: 0.6409  data_time: 0.0015  memory: 16856  
10/06 09:33:09 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:22  time: 0.3102  data_time: 0.0015  memory: 14216  
10/06 09:33:32 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:52  time: 0.4187  data_time: 0.0015  memory: 16860  
10/06 09:33:55 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:46  time: 0.2596  data_time: 0.0018  memory: 16833  
10/06 09:34:14 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:35  time: 0.1477  data_time: 0.0015  memory: 16865  
10/06 09:34:35 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:46  time: 0.2875  data_time: 0.0015  memory: 16876  
10/06 09:34:53 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:51  time: 0.2943  data_time: 0.0014  memory: 16835  
10/06 09:35:03 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:39  time: 0.2402  data_time: 0.0015  memory: 10734  
10/06 09:35:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:37  time: 0.1390  data_time: 0.0014  memory: 14197  
10/06 09:35:23 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:48  time: 0.2965  data_time: 0.0016  memory: 11109  
10/06 09:35:33 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:03  time: 0.2941  data_time: 0.0015  memory: 10918  
10/06 09:35:46 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:32  time: 0.3350  data_time: 0.0014  memory: 14248  
10/06 09:36:03 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:08  time: 0.1482  data_time: 0.0016  memory: 16874  
10/06 09:36:20 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:46  time: 0.6414  data_time: 0.0014  memory: 14252  
10/06 09:36:28 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:12  time: 0.1401  data_time: 0.0015  memory: 10919  
10/06 09:36:35 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:39  time: 0.1418  data_time: 0.0015  memory: 1909  
10/06 09:36:45 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:13  time: 0.2321  data_time: 0.0014  memory: 10174  
10/06 09:37:01 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:55  time: 0.4029  data_time: 0.0015  memory: 14199  
10/06 09:37:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:32  time: 0.1343  data_time: 0.0015  memory: 12046  
10/06 09:37:27 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:13  time: 0.4895  data_time: 0.0015  memory: 14251  
10/06 09:37:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:53  time: 0.1381  data_time: 0.0015  memory: 14217  
10/06 09:37:49 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:32  time: 0.2694  data_time: 0.0015  memory: 14204  
10/06 09:37:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:10  time: 0.1368  data_time: 0.0014  memory: 3077  
10/06 09:38:06 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:51  time: 0.2630  data_time: 0.0015  memory: 16863  
10/06 09:38:13 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:31  time: 0.1415  data_time: 0.0015  memory: 1912  
10/06 09:38:21 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:13  time: 0.1319  data_time: 0.0015  memory: 8487  
10/06 09:38:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:57  time: 0.3265  data_time: 0.0014  memory: 14228  
10/06 09:38:44 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:40  time: 0.2920  data_time: 0.0028  memory: 10174  
10/06 09:38:51 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:23  time: 0.1319  data_time: 0.0015  memory: 1911  
10/06 09:39:00 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:07  time: 0.1458  data_time: 0.0016  memory: 11855  
10/06 09:39:07 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:51  time: 0.1382  data_time: 0.0017  memory: 1909  
10/06 09:39:20 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:37  time: 0.1289  data_time: 0.0015  memory: 16874  
10/06 09:39:31 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:23  time: 0.1406  data_time: 0.0016  memory: 10360  
10/06 09:39:41 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:08  time: 0.1428  data_time: 0.0015  memory: 11484  
10/06 09:39:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:54  time: 0.1427  data_time: 0.0016  memory: 8858  
10/06 09:39:56 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:40  time: 0.1416  data_time: 0.0016  memory: 1857  
10/06 09:40:04 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:26  time: 0.1392  data_time: 0.0016  memory: 6220  
10/06 09:40:15 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1364  data_time: 0.0015  memory: 14207  
10/06 09:40:26 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1259  data_time: 0.0014  memory: 9799  
10/06 09:40:26 - mmengine - INFO - per class results:
10/06 09:40:26 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.84 | 89.47 |
|       building      | 83.82 | 93.01 |
|         sky         | 94.48 | 97.52 |
|        floor        |  81.0 |  91.2 |
|         tree        | 74.26 | 89.08 |
|       ceiling       | 84.74 | 92.46 |
|         road        | 83.55 | 88.15 |
|         bed         | 89.86 | 96.16 |
|      windowpane     | 61.96 | 78.56 |
|        grass        | 68.62 | 79.52 |
|       cabinet       | 59.87 | 71.34 |
|       sidewalk      | 66.47 | 83.74 |
|        person       | 80.55 |  89.7 |
|        earth        | 37.04 | 58.25 |
|         door        |  52.2 | 65.81 |
|        table        | 62.17 | 77.58 |
|       mountain      |  57.8 | 72.27 |
|        plant        | 49.49 | 56.21 |
|       curtain       | 74.69 | 83.81 |
|        chair        | 57.09 | 67.26 |
|         car         | 84.33 | 92.18 |
|        water        | 58.14 | 72.04 |
|       painting      | 73.26 | 84.69 |
|         sofa        | 72.02 | 90.65 |
|        shelf        | 45.42 | 67.09 |
|        house        |  55.5 | 71.02 |
|         sea         | 65.77 | 89.15 |
|        mirror       | 68.67 | 75.82 |
|         rug         | 61.53 | 74.39 |
|        field        | 32.87 | 43.82 |
|       armchair      | 44.93 | 58.62 |
|         seat        | 59.61 | 79.98 |
|        fence        |  48.2 | 62.57 |
|         desk        |  50.0 | 75.53 |
|         rock        | 51.31 | 73.03 |
|       wardrobe      | 46.88 | 68.72 |
|         lamp        | 62.43 | 72.73 |
|       bathtub       | 78.37 | 83.37 |
|       railing       |  38.1 | 51.51 |
|       cushion       | 64.36 | 77.47 |
|         base        | 37.24 | 47.51 |
|         box         | 26.35 | 32.39 |
|        column       | 51.59 | 62.27 |
|      signboard      | 37.88 | 48.85 |
|   chest of drawers  | 43.55 | 69.74 |
|       counter       | 31.77 | 38.96 |
|         sand        | 51.73 | 71.43 |
|         sink        | 72.55 | 78.95 |
|      skyscraper     | 53.45 | 63.48 |
|      fireplace      |  77.3 |  91.4 |
|     refrigerator    | 75.21 | 82.75 |
|      grandstand     | 48.81 | 85.74 |
|         path        | 23.27 | 39.72 |
|        stairs       | 34.42 | 44.84 |
|        runway       |  69.9 | 90.84 |
|         case        | 58.66 | 73.71 |
|      pool table     |  92.0 | 96.65 |
|        pillow       | 52.66 | 58.09 |
|     screen door     |  75.4 | 80.88 |
|       stairway      | 37.25 | 46.56 |
|        river        | 16.59 |  28.2 |
|        bridge       | 37.85 | 43.95 |
|       bookcase      | 41.19 | 68.31 |
|        blind        | 34.25 | 36.05 |
|     coffee table    | 57.54 | 84.77 |
|        toilet       | 85.49 |  91.6 |
|        flower       | 43.81 | 55.66 |
|         book        |  46.6 | 66.97 |
|         hill        |  7.86 | 10.69 |
|        bench        |  58.0 |  66.8 |
|      countertop     | 56.51 | 70.56 |
|        stove        | 80.85 | 88.33 |
|         palm        | 51.35 | 69.22 |
|    kitchen island   | 39.25 | 72.67 |
|       computer      |  74.6 | 88.38 |
|     swivel chair    | 52.33 | 73.37 |
|         boat        | 72.79 | 84.27 |
|         bar         | 50.73 | 62.78 |
|    arcade machine   | 80.39 | 85.15 |
|        hovel        | 57.65 | 64.21 |
|         bus         | 90.04 | 95.63 |
|        towel        |  65.1 | 74.93 |
|        light        | 51.19 | 57.61 |
|        truck        | 43.25 | 54.99 |
|        tower        | 24.88 | 50.84 |
|      chandelier     | 66.28 | 82.81 |
|        awning       | 32.69 |  38.0 |
|     streetlight     | 25.48 | 34.87 |
|        booth        | 36.61 | 49.55 |
| television receiver | 71.25 | 82.93 |
|       airplane      | 64.43 | 70.78 |
|      dirt track     | 15.01 | 26.01 |
|       apparel       | 52.63 | 62.05 |
|         pole        | 19.35 |  25.8 |
|         land        |  4.97 |  8.84 |
|      bannister      | 14.42 | 18.82 |
|      escalator      | 51.47 | 74.18 |
|       ottoman       | 52.06 | 62.24 |
|        bottle       | 33.29 | 47.51 |
|        buffet       | 44.71 | 54.61 |
|        poster       | 26.25 | 44.13 |
|        stage        | 18.62 | 25.89 |
|         van         | 45.14 | 65.61 |
|         ship        | 72.15 | 79.17 |
|       fountain      | 26.93 |  27.3 |
|    conveyer belt    | 76.84 | 92.21 |
|        canopy       | 46.54 | 67.99 |
|        washer       | 70.39 | 73.44 |
|      plaything      | 40.39 |  51.2 |
|    swimming pool    | 63.62 |  77.7 |
|        stool        | 42.34 | 58.57 |
|        barrel       | 51.75 | 63.19 |
|        basket       | 30.63 | 40.14 |
|      waterfall      | 71.23 | 83.63 |
|         tent        | 93.93 | 98.16 |
|         bag         | 15.16 | 16.72 |
|       minibike      | 70.12 | 80.91 |
|        cradle       | 84.11 | 95.61 |
|         oven        | 45.24 | 54.67 |
|         ball        | 48.07 | 56.82 |
|         food        | 46.18 | 54.46 |
|         step        | 17.07 |  20.6 |
|         tank        | 62.54 | 65.26 |
|      trade name     | 26.31 | 29.93 |
|      microwave      | 83.06 | 92.73 |
|         pot         |  51.2 |  61.0 |
|        animal       | 60.48 |  62.2 |
|       bicycle       | 53.73 | 69.64 |
|         lake        | 62.14 | 63.45 |
|      dishwasher     | 66.59 | 75.21 |
|        screen       | 58.84 | 82.09 |
|       blanket       | 17.59 | 19.07 |
|      sculpture      | 69.07 | 81.54 |
|         hood        | 56.27 | 60.46 |
|        sconce       | 48.58 | 55.99 |
|         vase        | 40.13 | 49.73 |
|    traffic light    | 30.13 | 39.56 |
|         tray        |  9.61 | 14.26 |
|        ashcan       | 39.39 | 49.53 |
|         fan         | 60.37 | 75.64 |
|         pier        | 47.88 | 87.02 |
|      crt screen     | 11.05 | 27.93 |
|        plate        |  53.8 | 74.99 |
|       monitor       |  8.15 | 10.76 |
|    bulletin board   | 48.43 | 55.33 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 58.04 | 65.11 |
|        glass        | 13.95 | 14.88 |
|        clock        | 38.02 | 44.08 |
|         flag        | 51.54 | 55.81 |
+---------------------+-------+-------+
10/06 09:40:26 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.8500  mIoU: 52.3000  mAcc: 63.9100  data_time: 0.0017  time: 0.2629
Finished processing corruption type: jpeg_compression
Runtime: 1728200427

============================= JOB FEEDBACK =============================

NodeName=uc2n484
Job ID: 24369581
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 07:23:03
CPU Efficiency: 5.37% of 5-17:38:08 core-walltime
Job Wall-clock time: 08:36:08
Memory Utilized: 2.77 GB
Memory Efficiency: 2.77% of 100.00 GB
