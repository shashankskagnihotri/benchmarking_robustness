Started at Sat Apr 13 21:52:13 CEST 2024
/var/spool/slurmd/job23375940/slurm_script: line 16: activate: No such file or directory
04/13 21:54:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 686878110
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.2.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.2 (Git Hash 2dc95a2ad0841e29db8b22fbccaf3e5da7992b01)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.2.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.17.1
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 686878110
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

04/13 21:54:53 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/pspnet_r50-d8_512x512_160k_ade20k_20200615_184358-1890b0bd.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='PSPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/pspnet_r50-d8_4xb4-160k_ade20k-512x512'

04/13 21:55:22 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
04/13 21:55:23 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
04/13 21:55:25 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/pspnet_r50-d8_512x512_160k_ade20k_20200615_184358-1890b0bd.pth
04/13 21:55:25 - mmengine - INFO - Load checkpoint from ../checkpoint_files/pspnet_r50-d8_512x512_160k_ade20k_20200615_184358-1890b0bd.pth
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/backbones/resnet.py:431: UserWarning: DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is a deprecated, '
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
04/13 21:56:57 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:59:19  time: 0.6477  data_time: 0.0014  memory: 17171  
04/13 21:57:29 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:07  time: 0.7070  data_time: 0.0015  memory: 16952  
04/13 21:57:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:37  time: 0.3350  data_time: 0.0014  memory: 16944  
04/13 21:58:09 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:24:31  time: 0.3948  data_time: 0.0014  memory: 16953  
04/13 21:58:32 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:44  time: 0.3169  data_time: 0.0013  memory: 16951  
04/13 21:58:50 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:16  time: 0.0529  data_time: 0.0014  memory: 16947  
04/13 21:59:13 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:51  time: 0.3387  data_time: 0.0014  memory: 16951  
04/13 21:59:28 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:16:10  time: 0.3009  data_time: 0.0013  memory: 16950  
04/13 21:59:33 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:11  time: 0.1205  data_time: 0.0013  memory: 16873  
04/13 21:59:39 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:41  time: 0.0448  data_time: 0.0013  memory: 16933  
04/13 21:59:47 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:30  time: 0.3153  data_time: 0.0014  memory: 16951  
04/13 21:59:51 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:19  time: 0.1143  data_time: 0.0015  memory: 16879  
04/13 22:00:03 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:35  time: 0.3338  data_time: 0.0012  memory: 16953  
04/13 22:00:16 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:59  time: 0.0547  data_time: 0.0015  memory: 16954  
04/13 22:00:30 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:27  time: 0.8188  data_time: 0.0014  memory: 16956  
04/13 22:00:35 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:44  time: 0.0426  data_time: 0.0015  memory: 16944  
04/13 22:00:37 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:02  time: 0.0429  data_time: 0.0015  memory: 649  
04/13 22:00:42 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:26  time: 0.1189  data_time: 0.0013  memory: 16869  
04/13 22:00:55 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:04  time: 0.1986  data_time: 0.0014  memory: 16951  
04/13 22:01:01 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:35  time: 0.0423  data_time: 0.0013  memory: 16927  
04/13 22:01:11 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:12  time: 0.3907  data_time: 0.0014  memory: 16954  
04/13 22:01:18 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:48  time: 0.0457  data_time: 0.0014  memory: 16940  
04/13 22:01:23 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:24  time: 0.1171  data_time: 0.0013  memory: 16867  
04/13 22:01:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:00  time: 0.0435  data_time: 0.0013  memory: 1844  
04/13 22:01:31 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:39  time: 0.1198  data_time: 0.0013  memory: 16944  
04/13 22:01:33 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:18  time: 0.0427  data_time: 0.0013  memory: 1484  
04/13 22:01:38 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:59  time: 0.0428  data_time: 0.0013  memory: 16861  
04/13 22:01:50 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:44  time: 0.3029  data_time: 0.0013  memory: 16948  
04/13 22:01:56 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:28  time: 0.2968  data_time: 0.0013  memory: 16936  
04/13 22:01:58 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:10  time: 0.0405  data_time: 0.0013  memory: 649  
04/13 22:02:01 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:54  time: 0.0458  data_time: 0.0013  memory: 16878  
04/13 22:02:03 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:39  time: 0.0424  data_time: 0.0014  memory: 1527  
04/13 22:02:10 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:25  time: 0.0404  data_time: 0.0012  memory: 16951  
04/13 22:02:16 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:12  time: 0.0461  data_time: 0.0015  memory: 16942  
04/13 22:02:22 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:59  time: 0.0495  data_time: 0.0012  memory: 16878  
04/13 22:02:26 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:46  time: 0.0446  data_time: 0.0015  memory: 16863  
04/13 22:02:28 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:34  time: 0.0443  data_time: 0.0015  memory: 597  
04/13 22:02:32 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:22  time: 0.0524  data_time: 0.0013  memory: 16955  
04/13 22:02:38 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:11  time: 0.0429  data_time: 0.0013  memory: 16866  
04/13 22:02:43 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0430  data_time: 0.0011  memory: 16883  
04/13 22:02:43 - mmengine - INFO - per class results:
04/13 22:02:43 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.14 | 87.79 |
|       building      | 79.54 | 92.26 |
|         sky         | 93.43 | 96.81 |
|        floor        | 77.89 | 90.41 |
|         tree        | 72.02 | 86.96 |
|       ceiling       | 80.45 |  89.7 |
|         road        | 80.65 | 89.76 |
|         bed         | 85.83 | 94.64 |
|      windowpane     | 58.33 | 74.45 |
|        grass        | 63.78 | 83.18 |
|       cabinet       | 56.28 |  70.7 |
|       sidewalk      | 65.06 | 79.09 |
|        person       | 74.72 |  89.9 |
|        earth        | 31.17 | 43.15 |
|         door        | 38.55 | 49.87 |
|        table        | 56.72 | 73.43 |
|       mountain      | 50.47 | 67.07 |
|        plant        | 47.08 |  61.2 |
|       curtain       | 66.79 | 80.05 |
|        chair        | 52.66 | 68.32 |
|         car         | 80.74 | 89.71 |
|        water        | 44.34 | 59.45 |
|       painting      |  66.4 | 82.24 |
|         sofa        | 61.28 | 81.24 |
|        shelf        | 41.31 | 62.07 |
|        house        | 42.01 | 47.63 |
|         sea         | 42.34 | 69.27 |
|        mirror       | 55.51 |  63.3 |
|         rug         | 52.16 | 57.63 |
|        field        | 22.58 | 31.61 |
|       armchair      | 39.89 | 53.64 |
|         seat        | 58.21 | 77.04 |
|        fence        | 31.66 | 41.58 |
|         desk        | 45.51 | 63.01 |
|         rock        | 29.04 | 44.77 |
|       wardrobe      | 40.67 | 58.62 |
|         lamp        | 58.67 | 72.06 |
|       bathtub       | 70.99 | 77.08 |
|       railing       | 31.79 | 42.77 |
|       cushion       |  52.1 |  66.9 |
|         base        | 15.72 | 18.47 |
|         box         | 19.83 | 25.42 |
|        column       | 38.11 | 47.87 |
|      signboard      | 31.98 | 46.27 |
|   chest of drawers  | 37.74 |  51.6 |
|       counter       |  26.5 | 32.38 |
|         sand        | 35.76 | 50.69 |
|         sink        | 65.81 | 77.56 |
|      skyscraper     |  45.9 | 55.79 |
|      fireplace      | 64.45 | 78.91 |
|     refrigerator    | 61.66 | 74.13 |
|      grandstand     | 41.65 | 62.11 |
|         path        | 17.41 |  25.1 |
|        stairs       | 35.55 | 41.32 |
|        runway       | 62.39 | 82.02 |
|         case        | 54.64 | 73.01 |
|      pool table     | 91.14 | 94.31 |
|        pillow       | 51.47 | 62.46 |
|     screen door     | 56.31 | 72.04 |
|       stairway      | 29.94 |  34.4 |
|        river        | 12.36 | 24.61 |
|        bridge       | 63.24 | 70.08 |
|       bookcase      | 38.54 | 50.82 |
|        blind        | 39.64 | 44.58 |
|     coffee table    | 61.26 | 76.41 |
|        toilet       | 81.86 |  90.1 |
|        flower       | 34.06 | 50.85 |
|         book        | 42.52 | 64.95 |
|         hill        |  4.4  |  6.41 |
|        bench        | 38.94 | 46.01 |
|      countertop     | 48.51 | 66.95 |
|        stove        | 71.81 | 81.61 |
|         palm        | 45.69 | 61.45 |
|    kitchen island   | 40.78 | 67.03 |
|       computer      | 53.35 | 63.88 |
|     swivel chair    | 42.27 | 54.11 |
|         boat        | 44.41 | 52.23 |
|         bar         | 13.31 | 16.01 |
|    arcade machine   | 32.78 | 34.61 |
|        hovel        | 38.53 | 42.14 |
|         bus         | 78.45 | 92.44 |
|        towel        | 51.09 | 60.05 |
|        light        | 50.25 | 58.32 |
|        truck        | 15.77 | 20.24 |
|        tower        | 27.17 | 33.97 |
|      chandelier     | 65.25 | 78.51 |
|        awning       | 21.57 | 23.24 |
|     streetlight     | 19.57 | 24.75 |
|        booth        | 32.64 | 32.96 |
| television receiver | 60.59 | 72.07 |
|       airplane      | 51.78 | 63.65 |
|      dirt track     | 11.04 | 18.92 |
|       apparel       |  31.1 |  46.9 |
|         pole        | 17.24 | 24.96 |
|         land        |  1.21 |  1.45 |
|      bannister      |  3.55 |  4.5  |
|      escalator      |  19.7 | 20.73 |
|       ottoman       | 33.53 | 43.91 |
|        bottle       | 11.86 | 22.89 |
|        buffet       | 34.26 | 40.89 |
|        poster       | 22.73 | 25.83 |
|        stage        |  8.18 |  9.97 |
|         van         |  38.8 | 47.27 |
|         ship        | 77.59 |  78.9 |
|       fountain      |  7.69 |  7.89 |
|    conveyer belt    | 53.17 | 65.95 |
|        canopy       |  4.99 |  5.46 |
|        washer       | 66.65 | 69.92 |
|      plaything      | 16.66 | 21.78 |
|    swimming pool    | 29.88 | 34.49 |
|        stool        | 35.69 | 43.18 |
|        barrel       | 40.51 | 61.87 |
|        basket       | 26.43 | 34.15 |
|      waterfall      |  49.1 |  61.0 |
|         tent        | 88.43 | 98.38 |
|         bag         |  8.05 |  9.37 |
|       minibike      | 43.24 | 49.64 |
|        cradle       | 72.51 | 96.45 |
|         oven        | 24.57 | 54.88 |
|         ball        | 45.39 | 59.55 |
|         food        | 47.56 | 59.01 |
|         step        |  1.66 |  1.81 |
|         tank        | 32.86 |  36.5 |
|      trade name     | 23.15 | 26.42 |
|      microwave      |  37.0 | 39.83 |
|         pot         | 37.39 | 42.73 |
|        animal       | 46.14 |  48.9 |
|       bicycle       |  43.1 | 65.12 |
|         lake        | 62.82 | 63.53 |
|      dishwasher     | 54.04 | 57.73 |
|        screen       | 59.97 | 72.29 |
|       blanket       |  4.06 |  4.3  |
|      sculpture      |  30.3 |  36.4 |
|         hood        | 55.13 | 59.98 |
|        sconce       | 33.91 | 40.39 |
|         vase        | 27.08 | 41.34 |
|    traffic light    | 24.58 | 32.67 |
|         tray        |  6.61 |  9.14 |
|        ashcan       | 39.79 | 52.98 |
|         fan         | 54.34 | 64.45 |
|         pier        | 26.42 | 30.47 |
|      crt screen     |  0.42 |  0.89 |
|        plate        | 42.25 | 58.62 |
|       monitor       | 38.56 | 46.88 |
|    bulletin board   | 33.85 | 41.41 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 36.14 | 42.42 |
|        glass        | 11.98 | 13.16 |
|        clock        | 26.96 | 33.49 |
|         flag        | 31.51 | 34.13 |
+---------------------+-------+-------+
04/13 22:02:43 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.2900  mIoU: 42.4800  mAcc: 52.4000  data_time: 0.0023  time: 0.2186
/var/spool/slurmd/job23375940/slurm_script: line 21: date +%s: syntax error: operand expected (error token is "%s")
Runtime:

============================= JOB FEEDBACK =============================

NodeName=uc2n484
Job ID: 23375940
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:04:03
CPU Efficiency: 2.27% of 02:58:24 core-walltime
Job Wall-clock time: 00:11:09
Memory Utilized: 1.56 GB
Memory Efficiency: 1.56% of 100.00 GB
