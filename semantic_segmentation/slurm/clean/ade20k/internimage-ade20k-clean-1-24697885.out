Started at Fri Nov 15 12:42:39 CET 2024
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/cuda/__init__.py:155: UserWarning: 
NVIDIA H100 PCIe with CUDA capability sm_90 is not compatible with the current PyTorch installation.
The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 sm_75 sm_80 sm_86 compute_37.
If you want to use the NVIDIA H100 PCIe GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/

  warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
11/15 12:44:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 685056928
    GPU 0: NVIDIA H100 PCIe
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 685056928
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/15 12:44:26 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/upernet/upernet_internimage_s_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=320,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=80,
        core_op='DCNv3',
        depths=[
            4,
            4,
            21,
            4,
        ],
        drop_path_rate=0.3,
        groups=[
            5,
            10,
            20,
            40,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_s_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            80,
            160,
            320,
            640,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=False,
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            21,
            4,
        ], layer_decay_rate=1.0, num_layers=33),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_s_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../clean_workdir/ade20k/upernet/upernet_internimage_s_512_160k_ade20k/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../clean_workdir/ade20k/upernet/upernet_internimage_s_512_160k_ade20k'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-11-15 12:45:25,652 - mmseg - INFO - using core type: DCNv3
2024-11-15 12:45:25,653 - mmseg - INFO - using activation layer: GELU
2024-11-15 12:45:25,653 - mmseg - INFO - using main norm layer: LN
2024-11-15 12:45:25,653 - mmseg - INFO - using dpr: linear, 0.3
2024-11-15 12:45:25,653 - mmseg - INFO - level2_post_norm: False
2024-11-15 12:45:25,653 - mmseg - INFO - level2_post_norm_block_ids: None
2024-11-15 12:45:25,653 - mmseg - INFO - res_post_norm: False
2024-11-15 12:45:25,653 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  79866956
11/15 13:02:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/15 13:02:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/15 13:02:43 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/upernet/upernet_internimage_s_512_160k_ade20k.pth
11/15 13:02:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/upernet/upernet_internimage_s_512_160k_ade20k.pth
11/15 13:18:58 - mmengine - INFO - Iter(test) [  50/2000]    eta: 10:31:08  time: 0.4798  data_time: 0.0012  memory: 39371  
11/15 13:19:30 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 5:18:14  time: 0.6972  data_time: 0.0012  memory: 39369  
11/15 13:19:47 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:29:57  time: 0.2586  data_time: 0.0011  memory: 39354  
11/15 13:20:12 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:37:06  time: 0.4646  data_time: 0.0011  memory: 41794  
11/15 13:20:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:05:00  time: 0.3092  data_time: 0.0012  memory: 41806  
11/15 13:20:56 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:43:02  time: 0.0524  data_time: 0.0012  memory: 39368  
11/15 13:21:19 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:27:32  time: 0.3088  data_time: 0.0011  memory: 39368  
11/15 13:21:36 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:15:25  time: 0.2961  data_time: 0.0010  memory: 39367  
11/15 13:21:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:05:18  time: 0.1556  data_time: 0.0011  memory: 39353  
11/15 13:21:50 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:57:13  time: 0.0493  data_time: 0.0011  memory: 39333  
11/15 13:21:58 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:50:37  time: 0.2908  data_time: 0.0011  memory: 39367  
11/15 13:22:04 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:45:04  time: 0.2288  data_time: 0.0012  memory: 39368  
11/15 13:22:16 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:40:32  time: 0.3542  data_time: 0.0010  memory: 44907  
11/15 13:22:31 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:36:42  time: 0.0546  data_time: 0.0012  memory: 39372  
11/15 13:22:47 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:33:22  time: 0.8739  data_time: 0.0010  memory: 39378  
11/15 13:22:53 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:30:10  time: 0.0483  data_time: 0.0011  memory: 39355  
11/15 13:22:56 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:27:17  time: 0.0489  data_time: 0.0011  memory: 779  
11/15 13:23:03 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:24:48  time: 0.2113  data_time: 0.0010  memory: 39347  
11/15 13:23:18 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:22:42  time: 0.3927  data_time: 0.0011  memory: 39366  
11/15 13:23:26 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:41  time: 0.0491  data_time: 0.0010  memory: 39366  
11/15 13:23:38 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:53  time: 0.4381  data_time: 0.0011  memory: 44912  
11/15 13:23:47 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:12  time: 0.0482  data_time: 0.0011  memory: 39355  
11/15 13:23:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:15:37  time: 0.1325  data_time: 0.0011  memory: 39341  
11/15 13:23:57 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:14:07  time: 0.0483  data_time: 0.0011  memory: 1962  
11/15 13:24:03 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:46  time: 0.1979  data_time: 0.0011  memory: 39357  
11/15 13:24:06 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:29  time: 0.0486  data_time: 0.0011  memory: 782  
11/15 13:24:11 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:19  time: 0.0499  data_time: 0.0010  memory: 39330  
11/15 13:24:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:09:16  time: 0.2432  data_time: 0.0010  memory: 39361  
11/15 13:24:28 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:14  time: 0.2340  data_time: 0.0011  memory: 39347  
11/15 13:24:31 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:15  time: 0.0477  data_time: 0.0010  memory: 780  
11/15 13:24:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:20  time: 0.0502  data_time: 0.0010  memory: 39364  
11/15 13:24:37 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:05:28  time: 0.0478  data_time: 0.0011  memory: 778  
11/15 13:24:45 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:04:40  time: 0.0459  data_time: 0.0010  memory: 41793  
11/15 13:24:52 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:54  time: 0.0488  data_time: 0.0012  memory: 39350  
11/15 13:25:00 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:10  time: 0.0520  data_time: 0.0010  memory: 39361  
11/15 13:25:05 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:28  time: 0.0489  data_time: 0.0012  memory: 39333  
11/15 13:25:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:48  time: 0.0483  data_time: 0.0012  memory: 728  
11/15 13:25:13 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:10  time: 0.0509  data_time: 0.0010  memory: 39375  
11/15 13:25:20 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:34  time: 0.0480  data_time: 0.0011  memory: 41801  
11/15 13:25:26 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0450  data_time: 0.0009  memory: 39375  
11/15 13:25:26 - mmengine - INFO - per class results:
11/15 13:25:26 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.27 | 88.25 |
|       building      | 82.36 | 91.81 |
|         sky         | 94.27 | 97.44 |
|        floor        | 80.58 | 90.87 |
|         tree        | 73.26 | 87.77 |
|       ceiling       | 84.61 | 91.61 |
|         road        | 84.62 | 91.71 |
|         bed         | 89.61 | 95.55 |
|      windowpane     | 61.87 | 78.65 |
|        grass        | 66.07 | 80.32 |
|       cabinet       | 59.47 | 71.99 |
|       sidewalk      | 67.45 | 80.18 |
|        person       |  80.3 | 92.05 |
|        earth        | 34.53 | 48.99 |
|         door        | 53.05 | 67.58 |
|        table        | 61.23 | 75.88 |
|       mountain      | 54.53 | 73.65 |
|        plant        | 50.43 | 62.14 |
|       curtain       |  73.0 | 85.36 |
|        chair        | 57.69 | 71.92 |
|         car         | 84.21 | 92.32 |
|        water        | 57.17 | 72.29 |
|       painting      | 73.16 | 89.97 |
|         sofa        | 62.29 | 80.44 |
|        shelf        | 39.96 | 56.62 |
|        house        | 46.91 | 67.04 |
|         sea         | 58.28 | 73.32 |
|        mirror       | 66.21 | 73.13 |
|         rug         | 58.08 | 68.51 |
|        field        | 28.14 | 43.99 |
|       armchair      | 36.94 | 54.78 |
|         seat        | 60.23 | 79.77 |
|        fence        | 42.61 | 60.24 |
|         desk        | 47.52 | 67.75 |
|         rock        | 37.88 | 58.39 |
|       wardrobe      |  51.0 | 72.05 |
|         lamp        |  63.8 |  77.2 |
|       bathtub       | 74.34 | 81.68 |
|       railing       | 32.33 | 45.21 |
|       cushion       | 59.52 | 72.38 |
|         base        | 21.39 | 25.58 |
|         box         | 27.18 | 33.55 |
|        column       | 44.86 | 56.81 |
|      signboard      | 38.06 |  51.1 |
|   chest of drawers  | 38.82 | 61.97 |
|       counter       | 28.78 | 35.63 |
|         sand        | 37.63 | 56.21 |
|         sink        | 70.65 | 77.92 |
|      skyscraper     |  59.4 | 77.39 |
|      fireplace      | 74.16 | 89.19 |
|     refrigerator    |  74.7 | 84.96 |
|      grandstand     | 39.11 | 70.38 |
|         path        | 22.81 | 34.26 |
|        stairs       | 32.68 | 43.31 |
|        runway       | 69.16 | 90.75 |
|         case        | 43.25 | 56.46 |
|      pool table     | 92.38 | 95.66 |
|        pillow       | 61.65 |  70.7 |
|     screen door     | 75.18 | 80.04 |
|       stairway      | 32.14 | 38.61 |
|        river        | 10.57 | 24.14 |
|        bridge       | 65.11 | 73.39 |
|       bookcase      | 36.38 | 55.48 |
|        blind        | 40.73 | 46.02 |
|     coffee table    | 60.67 | 83.85 |
|        toilet       | 85.33 | 90.91 |
|        flower       | 42.19 | 55.01 |
|         book        | 46.93 | 71.49 |
|         hill        | 10.68 | 13.84 |
|        bench        | 45.79 | 56.23 |
|      countertop     | 52.51 | 75.98 |
|        stove        | 78.95 | 85.36 |
|         palm        | 50.99 | 68.22 |
|    kitchen island   | 37.99 | 63.95 |
|       computer      | 71.69 | 80.06 |
|     swivel chair    | 41.42 | 56.49 |
|         boat        | 56.18 | 64.56 |
|         bar         | 30.71 | 41.99 |
|    arcade machine   | 73.18 | 77.35 |
|        hovel        | 18.13 | 19.33 |
|         bus         | 90.05 | 96.64 |
|        towel        | 65.96 | 76.29 |
|        light        | 55.53 | 63.82 |
|        truck        | 39.71 | 51.46 |
|        tower        | 35.05 | 51.47 |
|      chandelier     | 69.68 | 82.92 |
|        awning       | 24.99 | 30.97 |
|     streetlight     | 26.55 | 34.84 |
|        booth        | 50.04 | 56.33 |
| television receiver |  69.6 | 79.35 |
|       airplane      |  62.2 | 72.27 |
|      dirt track     | 17.84 | 37.48 |
|       apparel       | 40.17 | 51.89 |
|         pole        | 20.46 | 30.89 |
|         land        |  4.49 |  5.8  |
|      bannister      | 16.85 | 22.35 |
|      escalator      | 26.14 | 31.25 |
|       ottoman       |  46.7 | 62.39 |
|        bottle       | 31.02 |  42.4 |
|        buffet       | 36.37 | 42.03 |
|        poster       | 24.56 | 34.07 |
|        stage        |  18.7 | 26.73 |
|         van         | 47.05 | 62.23 |
|         ship        | 19.53 | 26.11 |
|       fountain      | 20.43 | 21.29 |
|    conveyer belt    | 66.24 | 87.67 |
|        canopy       | 37.43 | 49.23 |
|        washer       | 73.97 | 76.45 |
|      plaything      |  31.1 |  46.8 |
|    swimming pool    | 40.03 | 61.59 |
|        stool        |  35.9 | 52.18 |
|        barrel       | 53.73 | 68.55 |
|        basket       | 35.16 | 46.82 |
|      waterfall      | 57.26 | 69.38 |
|         tent        | 95.23 | 98.05 |
|         bag         | 11.16 | 13.08 |
|       minibike      | 67.18 | 79.67 |
|        cradle       | 82.73 | 95.38 |
|         oven        | 41.62 | 64.99 |
|         ball        | 51.49 | 60.98 |
|         food        | 56.46 | 70.75 |
|         step        |  17.1 | 18.88 |
|         tank        |  58.2 | 61.22 |
|      trade name     | 29.96 | 36.77 |
|      microwave      | 74.43 | 78.82 |
|         pot         | 41.55 | 48.93 |
|        animal       | 59.72 | 61.49 |
|       bicycle       | 56.32 | 76.75 |
|         lake        | 61.81 | 63.51 |
|      dishwasher     | 69.49 | 81.17 |
|        screen       | 59.46 | 70.15 |
|       blanket       | 16.49 | 19.32 |
|      sculpture      | 66.48 | 82.88 |
|         hood        | 60.57 | 64.16 |
|        sconce       | 45.02 | 54.76 |
|         vase        | 40.55 |  51.0 |
|    traffic light    | 30.56 | 46.97 |
|         tray        |  6.59 | 11.63 |
|        ashcan       | 49.25 | 60.81 |
|         fan         | 63.61 | 73.16 |
|         pier        | 57.27 | 76.13 |
|      crt screen     | 10.45 | 21.64 |
|        plate        | 50.98 | 68.76 |
|       monitor       |  39.8 | 50.74 |
|    bulletin board   | 41.62 | 56.07 |
|        shower       |  6.83 | 10.76 |
|       radiator      | 50.57 | 60.89 |
|        glass        | 15.15 | 16.39 |
|        clock        | 37.28 | 48.46 |
|         flag        | 45.07 | 49.84 |
+---------------------+-------+-------+
11/15 13:25:26 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.8900  mIoU: 49.7700  mAcc: 61.3500  data_time: 0.0134  time: 0.6808
Runtime: 2575

============================= JOB FEEDBACK =============================

NodeName=uc2n915
Job ID: 24697885
Array Job ID: 24697885_1
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 00:33:58
CPU Efficiency: 9.79% of 05:47:04 core-walltime
Job Wall-clock time: 00:43:23
Memory Utilized: 6.39 GB
Memory Efficiency: 63.90% of 10.00 GB
