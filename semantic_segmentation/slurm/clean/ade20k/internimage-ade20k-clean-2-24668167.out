Started at Wed Nov 13 03:13:52 CET 2024
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/cuda/__init__.py:155: UserWarning: 
NVIDIA H100 PCIe with CUDA capability sm_90 is not compatible with the current PyTorch installation.
The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 sm_75 sm_80 sm_86 compute_37.
If you want to use the NVIDIA H100 PCIe GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/

  warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
11/13 03:13:55 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2026742448
    GPU 0: NVIDIA H100 PCIe
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2026742448
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/13 03:13:56 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/upernet/upernet_internimage_b_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=448,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=112,
        core_op='DCNv3',
        depths=[
            4,
            4,
            21,
            4,
        ],
        drop_path_rate=0.4,
        groups=[
            7,
            14,
            28,
            56,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_b_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            112,
            224,
            448,
            896,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=False,
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            21,
            4,
        ], layer_decay_rate=1.0, num_layers=33),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_b_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../clean_workdir/ade20k/upernet/upernet_internimage_b_512_160k_ade20k/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../clean_workdir/ade20k/upernet/upernet_internimage_b_512_160k_ade20k'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-11-13 03:13:59,390 - mmseg - INFO - using core type: DCNv3
2024-11-13 03:13:59,390 - mmseg - INFO - using activation layer: GELU
2024-11-13 03:13:59,390 - mmseg - INFO - using main norm layer: LN
2024-11-13 03:13:59,390 - mmseg - INFO - using dpr: linear, 0.4
2024-11-13 03:13:59,390 - mmseg - INFO - level2_post_norm: False
2024-11-13 03:13:59,390 - mmseg - INFO - level2_post_norm_block_ids: None
2024-11-13 03:13:59,390 - mmseg - INFO - res_post_norm: False
2024-11-13 03:13:59,390 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  128387852
11/13 03:34:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/13 03:34:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/13 03:34:12 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/upernet/upernet_internimage_b_512_160k_ade20k.pth
11/13 03:34:15 - mmengine - INFO - Load checkpoint from ../checkpoint_files/upernet/upernet_internimage_b_512_160k_ade20k.pth
11/13 03:48:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 9:26:34  time: 0.6416  data_time: 0.0016  memory: 39564  
11/13 03:49:26 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:48:13  time: 0.8386  data_time: 0.0036  memory: 39561  
11/13 03:49:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:11:02  time: 0.3212  data_time: 0.0017  memory: 39546  
11/13 03:50:15 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:23:56  time: 0.5264  data_time: 0.0016  memory: 58532  
11/13 03:50:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:55:15  time: 0.3392  data_time: 0.0016  memory: 58546  
11/13 03:51:06 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:35:28  time: 0.0660  data_time: 0.0019  memory: 39561  
11/13 03:51:35 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:21:40  time: 0.3288  data_time: 0.0016  memory: 39560  
11/13 03:51:56 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:10:44  time: 0.4708  data_time: 0.0057  memory: 39560  
11/13 03:52:04 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:01:21  time: 0.2213  data_time: 0.0015  memory: 39545  
11/13 03:52:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:53:51  time: 0.0606  data_time: 0.0015  memory: 39524  
11/13 03:52:22 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:47:43  time: 0.3132  data_time: 0.0018  memory: 39560  
11/13 03:52:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:42:32  time: 0.2559  data_time: 0.0018  memory: 39560  
11/13 03:52:43 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:38:20  time: 0.4158  data_time: 0.0013  memory: 49338  
11/13 03:53:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:34:48  time: 0.0670  data_time: 0.0016  memory: 39565  
11/13 03:53:18 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:31:44  time: 0.9814  data_time: 0.0015  memory: 39569  
11/13 03:53:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:28:44  time: 0.0611  data_time: 0.0017  memory: 39547  
11/13 03:53:30 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:26:01  time: 0.0616  data_time: 0.0017  memory: 971  
11/13 03:53:38 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:23:41  time: 0.2455  data_time: 0.0014  memory: 39538  
11/13 03:53:55 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:43  time: 0.4482  data_time: 0.0054  memory: 39558  
11/13 03:54:05 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:19:49  time: 0.0602  data_time: 0.0015  memory: 39559  
11/13 03:54:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:07  time: 0.4903  data_time: 0.0016  memory: 49341  
11/13 03:54:30 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:16:32  time: 0.0602  data_time: 0.0017  memory: 39547  
11/13 03:54:37 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:15:02  time: 0.1656  data_time: 0.0016  memory: 39532  
11/13 03:54:41 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:13:37  time: 0.0601  data_time: 0.0015  memory: 2148  
11/13 03:54:51 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:21  time: 0.3682  data_time: 0.0014  memory: 39549  
11/13 03:54:55 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:07  time: 0.0606  data_time: 0.0014  memory: 974  
11/13 03:55:02 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:00  time: 0.0606  data_time: 0.0015  memory: 39520  
11/13 03:55:14 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:08:59  time: 0.2634  data_time: 0.0015  memory: 39553  
11/13 03:55:21 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:00  time: 0.2538  data_time: 0.0016  memory: 39539  
11/13 03:55:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:03  time: 0.0581  data_time: 0.0014  memory: 972  
11/13 03:55:29 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:09  time: 0.0627  data_time: 0.0015  memory: 39556  
11/13 03:55:33 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:05:19  time: 0.0634  data_time: 0.0053  memory: 971  
11/13 03:55:42 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:04:33  time: 0.0560  data_time: 0.0014  memory: 58532  
11/13 03:55:51 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:48  time: 0.0609  data_time: 0.0017  memory: 39541  
11/13 03:55:59 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:06  time: 0.0643  data_time: 0.0015  memory: 39553  
11/13 03:56:05 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:25  time: 0.0615  data_time: 0.0016  memory: 39523  
11/13 03:56:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:46  time: 0.0610  data_time: 0.0017  memory: 919  
11/13 03:56:15 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:09  time: 0.0628  data_time: 0.0016  memory: 39566  
11/13 03:56:24 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:34  time: 0.0636  data_time: 0.0062  memory: 58541  
11/13 03:56:31 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0554  data_time: 0.0013  memory: 39567  
11/13 03:56:31 - mmengine - INFO - per class results:
11/13 03:56:31 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  78.2 | 88.09 |
|       building      | 82.72 | 92.59 |
|         sky         | 94.31 | 97.71 |
|        floor        | 82.26 | 90.66 |
|         tree        | 73.35 | 87.19 |
|       ceiling       |  84.6 | 92.61 |
|         road        | 85.02 | 89.92 |
|         bed         | 89.38 | 95.67 |
|      windowpane     | 62.86 | 80.36 |
|        grass        | 64.79 | 79.48 |
|       cabinet       | 60.56 | 73.74 |
|       sidewalk      | 67.29 | 83.33 |
|        person       | 81.22 | 92.88 |
|        earth        | 38.31 | 52.33 |
|         door        | 52.95 | 68.76 |
|        table        | 62.36 | 77.72 |
|       mountain      | 58.44 | 73.83 |
|        plant        | 49.29 | 60.77 |
|       curtain       | 73.83 | 84.15 |
|        chair        | 58.71 | 72.71 |
|         car         | 84.79 | 92.29 |
|        water        | 52.91 |  67.8 |
|       painting      |  73.6 | 87.45 |
|         sofa        | 65.25 | 83.81 |
|        shelf        |  42.4 | 59.44 |
|        house        | 43.09 | 58.26 |
|         sea         | 57.12 | 75.05 |
|        mirror       | 66.74 | 75.23 |
|         rug         | 61.42 | 75.04 |
|        field        | 27.07 | 47.81 |
|       armchair      | 41.05 | 55.29 |
|         seat        | 59.93 | 80.38 |
|        fence        | 44.44 |  56.0 |
|         desk        | 51.62 | 67.47 |
|         rock        | 40.92 | 66.35 |
|       wardrobe      | 45.29 | 64.27 |
|         lamp        | 64.49 | 78.21 |
|       bathtub       | 79.35 | 84.97 |
|       railing       | 33.26 | 47.25 |
|       cushion       | 61.19 | 76.11 |
|         base        | 36.22 | 46.25 |
|         box         | 29.65 | 39.15 |
|        column       | 47.96 | 60.16 |
|      signboard      | 38.49 | 52.42 |
|   chest of drawers  |  40.2 | 60.83 |
|       counter       | 34.35 | 41.08 |
|         sand        | 55.25 | 75.65 |
|         sink        |  72.2 | 81.12 |
|      skyscraper     |  60.7 | 77.53 |
|      fireplace      | 74.98 | 88.18 |
|     refrigerator    | 72.95 | 82.91 |
|      grandstand     | 44.62 | 69.93 |
|         path        | 27.44 |  41.1 |
|        stairs       |  34.5 | 42.81 |
|        runway       | 71.64 | 95.96 |
|         case        | 48.74 | 69.22 |
|      pool table     |  92.6 | 96.07 |
|        pillow       | 57.74 | 68.39 |
|     screen door     | 78.39 | 83.52 |
|       stairway      |  32.0 | 37.75 |
|        river        | 10.48 | 23.69 |
|        bridge       | 57.01 | 74.57 |
|       bookcase      | 44.39 | 62.52 |
|        blind        | 41.61 | 45.82 |
|     coffee table    | 61.71 |  82.6 |
|        toilet       | 85.69 | 90.97 |
|        flower       | 45.82 | 61.17 |
|         book        | 47.73 | 71.68 |
|         hill        |  6.3  |  7.9  |
|        bench        | 49.44 | 57.07 |
|      countertop     | 55.16 | 75.15 |
|        stove        | 80.74 | 86.53 |
|         palm        | 51.94 | 68.04 |
|    kitchen island   | 34.42 | 68.33 |
|       computer      | 66.26 | 74.69 |
|     swivel chair    | 39.88 | 52.79 |
|         boat        | 45.34 | 51.86 |
|         bar         | 33.77 |  43.2 |
|    arcade machine   | 41.85 | 43.84 |
|        hovel        | 46.45 | 50.94 |
|         bus         | 89.85 | 96.62 |
|        towel        | 70.05 | 80.15 |
|        light        |  56.3 | 64.92 |
|        truck        |  35.1 | 44.99 |
|        tower        | 23.03 | 37.89 |
|      chandelier     | 70.16 | 82.09 |
|        awning       | 29.54 | 36.78 |
|     streetlight     | 27.81 | 37.53 |
|        booth        | 37.82 | 43.23 |
| television receiver | 67.27 | 76.45 |
|       airplane      | 71.77 | 82.39 |
|      dirt track     |  5.31 | 11.65 |
|       apparel       | 41.95 | 55.85 |
|         pole        | 24.88 | 35.69 |
|         land        |  5.61 |  7.47 |
|      bannister      | 15.87 | 19.97 |
|      escalator      | 37.11 |  52.2 |
|       ottoman       | 44.34 |  61.2 |
|        bottle       |  36.4 | 58.36 |
|        buffet       | 42.52 | 47.95 |
|        poster       | 32.65 | 41.82 |
|        stage        | 17.74 | 26.53 |
|         van         | 45.86 | 67.27 |
|         ship        | 59.51 | 90.49 |
|       fountain      | 20.52 | 20.93 |
|    conveyer belt    | 74.02 | 87.72 |
|        canopy       | 28.81 | 41.31 |
|        washer       | 73.33 | 75.99 |
|      plaything      | 31.49 | 43.57 |
|    swimming pool    | 42.35 | 75.66 |
|        stool        |  41.7 | 56.29 |
|        barrel       | 29.99 | 74.31 |
|        basket       | 34.07 |  49.6 |
|      waterfall      | 45.05 |  56.9 |
|         tent        | 95.12 | 98.42 |
|         bag         | 15.99 | 18.96 |
|       minibike      | 73.14 | 85.76 |
|        cradle       | 86.89 | 97.38 |
|         oven        | 39.56 | 69.85 |
|         ball        | 44.31 | 47.69 |
|         food        | 50.08 | 60.69 |
|         step        | 20.37 | 26.01 |
|         tank        | 50.96 | 59.13 |
|      trade name     | 26.85 | 33.92 |
|      microwave      | 69.33 | 77.13 |
|         pot         | 46.57 | 54.71 |
|        animal       | 57.95 | 59.92 |
|       bicycle       | 56.84 | 72.06 |
|         lake        | 67.64 | 74.57 |
|      dishwasher     | 74.05 | 83.17 |
|        screen       | 61.28 | 80.57 |
|       blanket       | 14.78 | 17.43 |
|      sculpture      | 65.19 |  75.6 |
|         hood        | 61.21 |  69.3 |
|        sconce       | 44.09 | 54.38 |
|         vase        | 45.83 | 58.08 |
|    traffic light    | 36.55 |  52.8 |
|         tray        |  9.72 | 19.76 |
|        ashcan       | 46.12 | 60.91 |
|         fan         | 63.97 | 74.66 |
|         pier        | 53.29 | 80.48 |
|      crt screen     |  5.13 | 15.18 |
|        plate        | 56.15 | 70.34 |
|       monitor       |  6.17 |  9.43 |
|    bulletin board   | 54.44 | 72.64 |
|        shower       |  3.44 |  3.66 |
|       radiator      | 62.95 | 71.32 |
|        glass        |  15.0 | 15.89 |
|        clock        | 38.48 | 52.43 |
|         flag        | 46.54 | 49.91 |
+---------------------+-------+-------+
11/13 03:56:31 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.3500  mIoU: 50.4600  mAcc: 62.6800  data_time: 0.0159  time: 0.6679
Runtime: 2560

============================= JOB FEEDBACK =============================

NodeName=uc2n906
Job ID: 24668903
Array Job ID: 24668167_2
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 00:36:14
CPU Efficiency: 10.49% of 05:45:20 core-walltime
Job Wall-clock time: 00:43:10
Memory Utilized: 6.39 GB
Memory Efficiency: 63.86% of 10.00 GB
