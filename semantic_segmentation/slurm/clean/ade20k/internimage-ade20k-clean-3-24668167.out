Started at Wed Nov 13 03:35:57 CET 2024
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/cuda/__init__.py:155: UserWarning: 
NVIDIA H100 PCIe with CUDA capability sm_90 is not compatible with the current PyTorch installation.
The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 sm_75 sm_80 sm_86 compute_37.
If you want to use the NVIDIA H100 PCIe GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/

  warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
11/13 03:36:00 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1201510967
    GPU 0: NVIDIA H100 PCIe
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1201510967
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/13 03:36:01 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/upernet/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=False,
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../clean_workdir/ade20k/upernet/upernet_internimage_l_640_160k_ade20k/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../clean_workdir/ade20k/upernet/upernet_internimage_l_640_160k_ade20k'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-11-13 03:36:03,965 - mmseg - INFO - using core type: DCNv3
2024-11-13 03:36:03,965 - mmseg - INFO - using activation layer: GELU
2024-11-13 03:36:03,965 - mmseg - INFO - using main norm layer: LN
2024-11-13 03:36:03,965 - mmseg - INFO - using dpr: linear, 0.4
2024-11-13 03:36:03,965 - mmseg - INFO - level2_post_norm: False
2024-11-13 03:36:03,965 - mmseg - INFO - level2_post_norm_block_ids: None
2024-11-13 03:36:03,965 - mmseg - INFO - res_post_norm: False
2024-11-13 03:36:03,965 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  255600606
11/13 03:43:02 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/13 03:43:02 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/13 03:43:03 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/upernet/upernet_internimage_l_640_160k_ade20k.pth
11/13 03:43:06 - mmengine - INFO - Load checkpoint from ../checkpoint_files/upernet/upernet_internimage_l_640_160k_ade20k.pth
11/13 03:48:39 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:34:59  time: 0.6381  data_time: 0.0015  memory: 42434  
11/13 03:49:09 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:54:37  time: 0.8055  data_time: 0.0014  memory: 40074  
11/13 03:49:28 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:18:17  time: 0.3369  data_time: 0.0014  memory: 40058  
11/13 03:49:52 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:00:44  time: 0.4792  data_time: 0.0014  memory: 40075  
11/13 03:50:15 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:49:56  time: 0.2657  data_time: 0.0013  memory: 40072  
11/13 03:50:35 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:42:19  time: 0.1721  data_time: 0.0014  memory: 40073  
11/13 03:50:56 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:36:54  time: 0.3110  data_time: 0.0013  memory: 40072  
11/13 03:51:14 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:32:29  time: 0.3390  data_time: 0.0013  memory: 40072  
11/13 03:51:29 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:28:50  time: 0.3170  data_time: 0.0013  memory: 40056  
11/13 03:51:42 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:25:44  time: 0.1627  data_time: 0.0013  memory: 40032  
11/13 03:51:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:23:09  time: 0.3448  data_time: 0.0014  memory: 40072  
11/13 03:52:03 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:20:49  time: 0.2042  data_time: 0.0014  memory: 40073  
11/13 03:52:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:18:57  time: 0.2005  data_time: 0.0013  memory: 40079  
11/13 03:52:29 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:17:22  time: 0.1738  data_time: 0.0014  memory: 40078  
11/13 03:52:45 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:16:03  time: 0.6267  data_time: 0.0014  memory: 40082  
11/13 03:52:55 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:14:41  time: 0.1327  data_time: 0.0014  memory: 40058  
11/13 03:53:02 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:13:25  time: 0.0893  data_time: 0.0014  memory: 1481  
11/13 03:53:12 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:12:19  time: 0.2509  data_time: 0.0013  memory: 40048  
11/13 03:53:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:11:26  time: 0.2424  data_time: 0.0013  memory: 40070  
11/13 03:53:37 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:10:30  time: 0.1636  data_time: 0.0014  memory: 40070  
11/13 03:53:50 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:09:41  time: 0.3344  data_time: 0.0013  memory: 40083  
11/13 03:54:04 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:57  time: 0.1675  data_time: 0.0014  memory: 40058  
11/13 03:54:14 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:08:12  time: 0.2596  data_time: 0.0013  memory: 40041  
11/13 03:54:21 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:28  time: 0.0873  data_time: 0.0013  memory: 2650  
11/13 03:54:30 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:49  time: 0.1606  data_time: 0.0014  memory: 40061  
11/13 03:54:36 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:10  time: 0.0887  data_time: 0.0014  memory: 1484  
11/13 03:54:42 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:34  time: 0.0839  data_time: 0.0013  memory: 40028  
11/13 03:54:54 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:03  time: 0.2060  data_time: 0.0013  memory: 40065  
11/13 03:55:03 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:31  time: 0.3699  data_time: 0.0013  memory: 40049  
11/13 03:55:11 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:01  time: 0.0831  data_time: 0.0013  memory: 1487  
11/13 03:55:18 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:32  time: 0.0944  data_time: 0.0013  memory: 40067  
11/13 03:55:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:04  time: 0.0864  data_time: 0.0013  memory: 1487  
11/13 03:55:31 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:37  time: 0.0823  data_time: 0.0011  memory: 40071  
11/13 03:55:41 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:13  time: 0.1523  data_time: 0.0014  memory: 40051  
11/13 03:55:49 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:48  time: 0.0896  data_time: 0.0012  memory: 40064  
11/13 03:55:57 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:25  time: 0.1731  data_time: 0.0014  memory: 40032  
11/13 03:56:03 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:02  time: 0.1635  data_time: 0.0014  memory: 1428  
11/13 03:56:09 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:41  time: 0.0874  data_time: 0.0013  memory: 40078  
11/13 03:56:19 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:20  time: 0.2035  data_time: 0.0012  memory: 40038  
11/13 03:56:26 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0817  data_time: 0.0012  memory: 40079  
11/13 03:56:26 - mmengine - INFO - per class results:
11/13 03:56:26 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.53 | 87.75 |
|       building      | 83.46 | 91.74 |
|         sky         |  94.5 | 97.27 |
|        floor        | 82.39 | 90.57 |
|         tree        | 74.97 |  89.3 |
|       ceiling       | 84.79 | 92.84 |
|         road        | 84.08 | 90.49 |
|         bed         | 89.56 | 96.41 |
|      windowpane     | 62.77 | 76.47 |
|        grass        | 67.35 | 83.23 |
|       cabinet       | 60.65 | 71.71 |
|       sidewalk      | 66.02 | 82.57 |
|        person       | 81.12 | 91.05 |
|        earth        | 38.65 | 52.01 |
|         door        | 54.54 | 71.33 |
|        table        |  62.9 | 77.58 |
|       mountain      | 60.34 | 72.86 |
|        plant        | 52.51 | 62.91 |
|       curtain       | 75.33 | 88.33 |
|        chair        |  59.5 |  72.2 |
|         car         | 84.79 | 93.22 |
|        water        | 55.66 | 66.84 |
|       painting      | 73.38 | 89.31 |
|         sofa        | 73.82 | 88.03 |
|        shelf        | 45.83 | 64.31 |
|        house        |  50.3 | 78.63 |
|         sea         | 65.21 | 84.12 |
|        mirror       |  69.0 | 77.55 |
|         rug         | 62.97 | 72.43 |
|        field        | 31.88 | 45.38 |
|       armchair      | 50.16 | 68.81 |
|         seat        | 61.26 | 80.59 |
|        fence        | 48.16 | 60.76 |
|         desk        |  49.8 | 66.67 |
|         rock        | 53.93 | 77.78 |
|       wardrobe      | 52.54 | 75.48 |
|         lamp        | 63.21 | 77.65 |
|       bathtub       | 79.15 | 85.58 |
|       railing       |  34.6 |  47.1 |
|       cushion       | 62.82 | 78.81 |
|         base        | 38.82 | 47.94 |
|         box         |  28.9 |  37.2 |
|        column       | 50.66 |  63.7 |
|      signboard      | 37.74 | 50.54 |
|   chest of drawers  | 35.97 | 63.83 |
|       counter       | 32.31 | 40.71 |
|         sand        | 56.08 | 76.12 |
|         sink        | 71.36 | 79.21 |
|      skyscraper     | 64.57 | 82.83 |
|      fireplace      | 70.61 | 91.24 |
|     refrigerator    | 76.32 | 87.86 |
|      grandstand     | 47.02 | 78.99 |
|         path        | 24.66 | 37.63 |
|        stairs       | 21.73 | 30.36 |
|        runway       |  67.0 | 88.88 |
|         case        |  57.4 | 78.09 |
|      pool table     | 92.16 | 96.91 |
|        pillow       | 55.32 | 61.04 |
|     screen door     | 71.96 | 83.31 |
|       stairway      | 32.72 | 46.98 |
|        river        | 12.97 | 32.19 |
|        bridge       | 55.11 |  67.0 |
|       bookcase      | 39.16 | 62.37 |
|        blind        | 46.11 | 57.07 |
|     coffee table    |  57.3 | 82.69 |
|        toilet       | 82.72 | 89.92 |
|        flower       | 44.91 | 59.23 |
|         book        | 50.75 | 72.77 |
|         hill        |  9.38 | 14.84 |
|        bench        | 53.49 | 61.12 |
|      countertop     | 58.32 | 78.15 |
|        stove        |  79.0 | 89.55 |
|         palm        | 52.22 | 80.87 |
|    kitchen island   | 40.27 | 75.06 |
|       computer      | 76.22 | 90.71 |
|     swivel chair    | 52.25 | 69.02 |
|         boat        |  64.6 |  84.7 |
|         bar         | 51.27 | 70.98 |
|    arcade machine   | 86.46 | 95.65 |
|        hovel        | 56.93 | 63.02 |
|         bus         | 89.68 | 96.45 |
|        towel        | 70.59 | 82.13 |
|        light        | 54.46 | 61.77 |
|        truck        | 40.24 | 53.27 |
|        tower        |  34.9 | 72.73 |
|      chandelier     | 69.45 | 84.72 |
|        awning       | 29.17 | 32.16 |
|     streetlight     | 28.43 | 37.16 |
|        booth        | 46.63 | 68.42 |
| television receiver | 74.02 | 84.34 |
|       airplane      | 71.43 |  82.1 |
|      dirt track     | 18.78 | 33.93 |
|       apparel       |  45.0 | 57.82 |
|         pole        | 19.91 | 26.07 |
|         land        |  2.83 |  4.99 |
|      bannister      | 16.72 | 22.45 |
|      escalator      | 52.88 | 85.05 |
|       ottoman       | 50.92 | 70.37 |
|        bottle       | 38.62 |  65.0 |
|        buffet       | 43.74 | 52.64 |
|        poster       | 27.53 | 37.16 |
|        stage        | 16.76 | 29.28 |
|         van         | 46.15 | 59.48 |
|         ship        |  79.4 |  96.1 |
|       fountain      | 24.54 | 24.93 |
|    conveyer belt    | 78.65 | 94.24 |
|        canopy       |  32.8 | 50.22 |
|        washer       | 78.75 | 82.74 |
|      plaything      | 43.45 | 61.57 |
|    swimming pool    | 57.12 | 64.59 |
|        stool        |  44.4 |  53.9 |
|        barrel       | 58.02 | 93.45 |
|        basket       | 33.38 | 47.98 |
|      waterfall      | 55.04 | 64.54 |
|         tent        | 91.96 | 99.12 |
|         bag         | 15.77 | 17.99 |
|       minibike      |  72.8 | 84.87 |
|        cradle       | 81.24 |  96.9 |
|         oven        | 44.49 | 61.55 |
|         ball        | 49.66 | 58.42 |
|         food        | 59.52 | 65.88 |
|         step        | 11.13 | 12.33 |
|         tank        | 60.17 | 66.51 |
|      trade name     | 20.12 | 22.39 |
|      microwave      | 79.53 | 90.76 |
|         pot         | 49.79 | 60.22 |
|        animal       | 61.58 | 63.48 |
|       bicycle       | 57.06 | 74.54 |
|         lake        |  50.2 | 67.31 |
|      dishwasher     | 64.63 | 73.21 |
|        screen       | 56.89 |  84.5 |
|       blanket       | 17.78 |  20.5 |
|      sculpture      | 67.82 | 84.99 |
|         hood        | 55.38 |  67.8 |
|        sconce       | 49.41 | 59.95 |
|         vase        | 38.55 | 49.95 |
|    traffic light    | 32.13 | 50.69 |
|         tray        |  7.33 |  9.66 |
|        ashcan       | 39.18 | 50.94 |
|         fan         | 61.37 | 79.44 |
|         pier        | 44.21 | 57.11 |
|      crt screen     |  5.46 |  15.9 |
|        plate        | 55.58 | 72.75 |
|       monitor       | 13.14 | 13.97 |
|    bulletin board   |  47.1 | 63.24 |
|        shower       |  0.04 |  0.04 |
|       radiator      | 57.88 | 71.97 |
|        glass        | 13.13 |  14.2 |
|        clock        |  39.1 | 45.36 |
|         flag        | 61.69 | 69.97 |
+---------------------+-------+-------+
11/13 03:56:26 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.0100  mIoU: 52.6200  mAcc: 65.8000  data_time: 0.0135  time: 0.3998
Runtime: 1230

============================= JOB FEEDBACK =============================

NodeName=uc2n906
Job ID: 24668912
Array Job ID: 24668167_3
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 00:14:50
CPU Efficiency: 8.82% of 02:48:08 core-walltime
Job Wall-clock time: 00:21:01
Memory Utilized: 4.76 GB
Memory Efficiency: 47.64% of 10.00 GB
