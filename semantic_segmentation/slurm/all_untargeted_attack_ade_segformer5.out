Started at Sat Jul 13 15:50:52 CEST 2024
07/13 15:50:55 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 226691933
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 226691933
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 15:50:55 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 15:51:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 15:51:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 15:51:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 15:51:03 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 15:57:05 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:55:35  time: 5.7565  data_time: 0.0037  memory: 27183  
07/13 16:01:27 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:17:33  time: 5.6686  data_time: 0.0032  memory: 27009  
07/13 16:05:13 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:54:48  time: 4.4633  data_time: 0.0022  memory: 25857  
07/13 16:09:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:44:33  time: 4.8953  data_time: 0.0022  memory: 27120  
07/13 16:13:13 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:35:14  time: 4.3109  data_time: 0.0020  memory: 26797  
07/13 16:17:07 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:27:43  time: 4.0251  data_time: 0.0022  memory: 26899  
07/13 16:21:07 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:21:45  time: 4.2286  data_time: 0.0021  memory: 26804  
07/13 16:24:54 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:15:25  time: 4.3879  data_time: 0.0019  memory: 26869  
07/13 16:28:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:07:45  time: 4.0420  data_time: 0.0035  memory: 25643  
07/13 16:31:34 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:01:32  time: 3.8532  data_time: 0.0019  memory: 24193  
07/13 16:35:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:56:08  time: 4.5053  data_time: 0.0020  memory: 26853  
07/13 16:38:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:50:39  time: 4.3918  data_time: 0.0021  memory: 26898  
07/13 16:42:01 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:45:51  time: 4.5665  data_time: 0.0017  memory: 27293  
07/13 16:45:47 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:41:37  time: 4.0403  data_time: 0.0020  memory: 27229  
07/13 16:49:29 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:37:22  time: 5.3149  data_time: 0.0019  memory: 27619  
07/13 16:52:42 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:32:28  time: 4.0418  data_time: 0.0043  memory: 25862  
07/13 16:56:04 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:27:57  time: 4.0306  data_time: 0.0020  memory: 9471  
07/13 16:59:16 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:23:22  time: 3.8467  data_time: 0.0018  memory: 25207  
07/13 17:02:55 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:19:25  time: 4.3760  data_time: 0.0020  memory: 26724  
07/13 17:06:15 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:15:11  time: 3.8071  data_time: 0.0018  memory: 26753  
07/13 17:09:54 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:11:20  time: 4.8424  data_time: 0.0021  memory: 27630  
07/13 17:13:24 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:07:22  time: 3.8842  data_time: 0.0019  memory: 25874  
07/13 17:16:46 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:03:21  time: 4.1416  data_time: 0.0018  memory: 24801  
07/13 17:20:08 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:59:22  time: 3.9252  data_time: 0.0018  memory: 11136  
07/13 17:23:26 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:55:25  time: 4.0948  data_time: 0.0018  memory: 25983  
07/13 17:26:33 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:51:24  time: 3.9187  data_time: 0.0042  memory: 9589  
07/13 17:29:51 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:47:33  time: 3.7304  data_time: 0.0018  memory: 23990  
07/13 17:33:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:43:50  time: 4.4073  data_time: 0.0018  memory: 26339  
07/13 17:36:34 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:40:01  time: 4.2891  data_time: 0.0018  memory: 25238  
07/13 17:39:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:36:13  time: 3.6694  data_time: 0.0017  memory: 9472  
07/13 17:43:09 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:32:32  time: 3.9951  data_time: 0.0015  memory: 26565  
07/13 17:46:24 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:28:49  time: 3.9599  data_time: 0.0016  memory: 9369  
07/13 17:49:46 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:25:10  time: 3.6915  data_time: 0.0014  memory: 26774  
07/13 17:53:13 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:21:33  time: 3.9697  data_time: 0.0016  memory: 25442  
07/13 17:56:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:17:56  time: 3.8512  data_time: 0.0014  memory: 26297  
07/13 17:59:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:14:18  time: 3.9729  data_time: 0.0016  memory: 24184  
07/13 18:03:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:10:42  time: 3.9994  data_time: 0.0017  memory: 8379  
07/13 18:06:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:07:06  time: 3.6998  data_time: 0.0014  memory: 27339  
07/13 18:09:36 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:33  time: 3.7720  data_time: 0.0014  memory: 24602  
07/13 18:12:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.6099  data_time: 0.0023  memory: 27386  
07/13 18:12:51 - mmengine - INFO - per class results:
07/13 18:12:51 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 33.61 | 83.67 |
|       building      | 35.76 | 44.89 |
|         sky         | 61.89 | 82.99 |
|        floor        | 26.11 | 37.64 |
|         tree        | 29.18 | 61.73 |
|       ceiling       | 25.19 | 30.68 |
|         road        | 34.79 | 42.58 |
|         bed         | 16.29 | 17.32 |
|      windowpane     |  17.7 | 22.41 |
|        grass        | 19.98 | 27.03 |
|       cabinet       |  4.2  |  4.44 |
|       sidewalk      |  0.45 |  0.46 |
|        person       | 36.35 | 54.28 |
|        earth        |  10.0 | 32.53 |
|         door        |  2.52 |  2.99 |
|        table        |  9.92 |  11.7 |
|       mountain      | 15.54 | 28.33 |
|        plant        |  0.54 |  0.56 |
|       curtain       |  4.91 |  6.06 |
|        chair        |  7.61 |  7.99 |
|         car         | 39.19 | 55.42 |
|        water        |  8.36 | 25.22 |
|       painting      | 15.12 | 16.32 |
|         sofa        | 15.48 | 17.78 |
|        shelf        |  0.07 |  0.07 |
|        house        | 18.98 | 50.55 |
|         sea         |  8.9  | 12.58 |
|        mirror       |  7.46 |  8.17 |
|         rug         |  0.53 |  0.53 |
|        field        |  3.72 |  6.85 |
|       armchair      |  0.98 |  1.02 |
|         seat        |  0.75 |  0.93 |
|        fence        |  2.73 |  3.42 |
|         desk        |  5.43 |  6.23 |
|         rock        | 20.56 | 33.97 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  5.06 |  5.19 |
|       bathtub       |  0.54 |  0.56 |
|       railing       | 12.44 | 18.51 |
|       cushion       |  4.09 |  4.17 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  6.33 | 12.95 |
|      signboard      |  8.96 | 14.31 |
|   chest of drawers  |  1.23 |  1.72 |
|       counter       |  6.25 |  7.42 |
|         sand        |  0.0  |  0.0  |
|         sink        |  9.46 | 11.65 |
|      skyscraper     | 17.14 | 24.97 |
|      fireplace      | 10.41 | 10.46 |
|     refrigerator    |  12.2 | 12.99 |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.5  |  0.59 |
|        stairs       |  3.91 |  6.03 |
|        runway       |  4.05 |  4.35 |
|         case        |  0.0  |  0.0  |
|      pool table     | 27.03 | 30.29 |
|        pillow       |  9.77 | 11.42 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  5.69 | 10.89 |
|        river        |  0.24 |  0.46 |
|        bridge       |  6.01 |  6.74 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.94 |  0.98 |
|        flower       |  0.51 |  0.51 |
|         book        |  0.0  |  0.0  |
|         hill        |  1.49 |  9.59 |
|        bench        |  0.78 |  0.83 |
|      countertop     |  8.69 | 10.91 |
|        stove        |  6.94 |  7.0  |
|         palm        | 10.64 | 11.54 |
|    kitchen island   |  0.09 |  0.1  |
|       computer      |  3.15 |  3.15 |
|     swivel chair    |  0.82 |  0.82 |
|         boat        |  0.0  |  0.0  |
|         bar         |  4.33 |  4.83 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  4.53 |  4.61 |
|         bus         | 54.05 | 55.04 |
|        towel        |  0.09 |  0.09 |
|        light        |  1.64 |  1.69 |
|        truck        |  0.57 |  0.66 |
|        tower        |  0.02 |  0.02 |
|      chandelier     |  0.43 |  0.43 |
|        awning       |  0.21 |  0.21 |
|     streetlight     |  2.19 |  2.33 |
|        booth        |  3.66 |  3.75 |
| television receiver | 17.91 | 19.61 |
|       airplane      |  6.28 | 11.89 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  2.76 |  3.64 |
|         land        |  2.69 |  9.83 |
|      bannister      |  0.56 |  1.36 |
|      escalator      |  2.35 |  2.37 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.02 |  0.02 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.51 |  0.72 |
|         van         |  7.57 | 10.13 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 20.34 | 21.72 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        | 16.46 | 19.08 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  5.9  |  17.2 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  7.69 |  7.69 |
|         oven        |  0.02 |  0.02 |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.14 |  0.19 |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.25 |  0.25 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       | 37.84 | 40.35 |
|       bicycle       |  7.29 |  9.84 |
|         lake        |  5.2  |  6.1  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 39.56 | 77.88 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.01 |  0.01 |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.28 |  0.29 |
|    traffic light    |  4.16 |  4.3  |
|         tray        |  0.11 |  0.11 |
|        ashcan       |  3.86 |  4.11 |
|         fan         |  7.45 |  7.7  |
|         pier        |  2.19 |  2.19 |
|      crt screen     |  6.32 | 18.44 |
|        plate        |  5.58 |  5.81 |
|       monitor       | 14.68 | 15.66 |
|    bulletin board   |  0.51 |  0.51 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.09 |  0.09 |
|        clock        |  2.22 |  2.25 |
|         flag        |  1.49 |  1.56 |
+---------------------+-------+-------+
07/13 18:12:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 42.2100  mIoU: 6.8500  mAcc: 9.8500  data_time: 0.0029  time: 4.2532
07/13 18:12:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 525545645
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 525545645
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 18:12:55 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 18:12:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 18:12:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 18:12:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 18:13:01 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 18:18:25 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:31:10  time: 5.4196  data_time: 0.0023  memory: 27183  
07/13 18:22:46 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:05:19  time: 5.7177  data_time: 0.0024  memory: 27009  
07/13 18:26:31 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:46:32  time: 4.5340  data_time: 0.0017  memory: 25857  
07/13 18:30:37 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:38:30  time: 4.8209  data_time: 0.0017  memory: 27120  
07/13 18:34:32 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:30:36  time: 4.3352  data_time: 0.0017  memory: 26797  
07/13 18:38:26 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:24:00  time: 4.0757  data_time: 0.0017  memory: 26899  
07/13 18:42:26 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:18:42  time: 4.2252  data_time: 0.0016  memory: 26804  
07/13 18:46:16 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:12:59  time: 4.4639  data_time: 0.0015  memory: 26869  
07/13 18:49:34 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:05:55  time: 4.1932  data_time: 0.0015  memory: 25643  
07/13 18:53:02 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:00:03  time: 3.8536  data_time: 0.0015  memory: 24193  
07/13 18:56:38 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:54:58  time: 4.5597  data_time: 0.0016  memory: 26853  
07/13 19:00:02 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:49:41  time: 4.3884  data_time: 0.0016  memory: 26898  
07/13 19:03:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:45:02  time: 4.5644  data_time: 0.0014  memory: 27293  
07/13 19:07:22 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:40:55  time: 4.0501  data_time: 0.0017  memory: 27229  
07/13 19:11:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:36:45  time: 5.2678  data_time: 0.0014  memory: 27619  
07/13 19:14:16 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:31:52  time: 3.9846  data_time: 0.0016  memory: 25862  
07/13 19:17:36 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:27:22  time: 4.0036  data_time: 0.0016  memory: 9471  
07/13 19:20:47 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:22:49  time: 3.8518  data_time: 0.0014  memory: 25207  
07/13 19:24:25 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:18:54  time: 4.4018  data_time: 0.0015  memory: 26724  
07/13 19:27:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:14:42  time: 3.7489  data_time: 0.0015  memory: 26753  
07/13 19:31:19 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:10:50  time: 4.7894  data_time: 0.0015  memory: 27630  
07/13 19:34:47 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:06:53  time: 3.8172  data_time: 0.0015  memory: 25874  
07/13 19:38:05 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:02:52  time: 4.1086  data_time: 0.0015  memory: 24801  
07/13 19:41:27 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:58:56  time: 3.8279  data_time: 0.0015  memory: 11136  
07/13 19:44:46 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:55:02  time: 4.0984  data_time: 0.0015  memory: 25983  
07/13 19:47:52 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:51:04  time: 3.9304  data_time: 0.0016  memory: 9589  
07/13 19:51:08 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:47:14  time: 3.7169  data_time: 0.0014  memory: 23990  
07/13 19:54:38 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:43:32  time: 4.3355  data_time: 0.0015  memory: 26339  
07/13 19:57:49 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:39:44  time: 4.2559  data_time: 0.0014  memory: 25238  
07/13 20:00:59 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:35:59  time: 3.6721  data_time: 0.0014  memory: 9472  
07/13 20:04:20 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:32:18  time: 3.9085  data_time: 0.0015  memory: 26565  
07/13 20:07:32 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:28:37  time: 3.8635  data_time: 0.0016  memory: 9369  
07/13 20:10:50 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:24:59  time: 3.6051  data_time: 0.0014  memory: 26774  
07/13 20:14:13 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:21:23  time: 3.9580  data_time: 0.0016  memory: 25442  
07/13 20:17:36 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:17:47  time: 3.7873  data_time: 0.0014  memory: 26297  
07/13 20:20:47 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:14:11  time: 4.0073  data_time: 0.0016  memory: 24184  
07/13 20:24:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:10:37  time: 4.0073  data_time: 0.0016  memory: 8379  
07/13 20:27:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:07:03  time: 3.7085  data_time: 0.0014  memory: 27339  
07/13 20:30:38 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:31  time: 3.7758  data_time: 0.0014  memory: 24602  
07/13 20:33:54 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.6135  data_time: 0.0013  memory: 27386  
07/13 20:33:54 - mmengine - INFO - per class results:
07/13 20:33:54 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.37 |  0.37 |
|       building      | 0.0  |  0.0  |
|         sky         | 8.99 | 99.96 |
|        floor        | 0.02 |  0.02 |
|         tree        | 0.03 |  0.03 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.01 |  0.01 |
|       cabinet       | 0.01 |  0.01 |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.02 |  0.02 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.13 |  0.17 |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.02 |  0.03 |
|        flower       | 0.01 |  0.02 |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.01 |  0.22 |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 20:33:54 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.9500  mIoU: 0.0600  mAcc: 0.6700  data_time: 0.0024  time: 4.2260
07/13 20:33:57 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1125659323
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1125659323
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 20:33:58 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='pgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 20:34:01 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 20:34:01 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 20:34:02 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 20:34:04 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 20:39:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:29:59  time: 5.4067  data_time: 0.0023  memory: 27182  
07/13 20:43:46 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:04:22  time: 5.6481  data_time: 0.0024  memory: 27008  
07/13 20:47:26 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:44:56  time: 4.4407  data_time: 0.0038  memory: 25857  
07/13 20:51:29 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:36:47  time: 4.7683  data_time: 0.0017  memory: 27119  
07/13 20:55:21 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:28:58  time: 4.2649  data_time: 0.0017  memory: 26797  
07/13 20:59:11 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:22:18  time: 4.0285  data_time: 0.0018  memory: 26899  
07/13 21:03:08 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:17:01  time: 4.1936  data_time: 0.0016  memory: 26804  
07/13 21:06:52 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:11:12  time: 4.3397  data_time: 0.0015  memory: 26868  
07/13 21:10:04 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:04:01  time: 4.0071  data_time: 0.0015  memory: 25643  
07/13 21:13:30 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:58:18  time: 3.8258  data_time: 0.0015  memory: 24193  
07/13 21:17:01 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:53:14  time: 4.5234  data_time: 0.0017  memory: 26853  
07/13 21:20:24 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:48:05  time: 4.3728  data_time: 0.0016  memory: 26896  
07/13 21:23:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:43:32  time: 4.5571  data_time: 0.0014  memory: 27293  
07/13 21:27:39 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:39:30  time: 4.0150  data_time: 0.0016  memory: 27228  
07/13 21:31:20 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:35:26  time: 5.2784  data_time: 0.0015  memory: 27619  
07/13 21:34:33 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:30:42  time: 3.9987  data_time: 0.0017  memory: 25862  
07/13 21:37:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:26:22  time: 4.0210  data_time: 0.0017  memory: 9471  
07/13 21:41:07 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:21:56  time: 3.8074  data_time: 0.0015  memory: 25207  
07/13 21:44:46 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:18:08  time: 4.4752  data_time: 0.0015  memory: 26724  
07/13 21:48:05 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:14:00  time: 3.7843  data_time: 0.0015  memory: 26753  
07/13 21:51:41 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:10:12  time: 4.8473  data_time: 0.0015  memory: 27629  
07/13 21:55:10 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:06:20  time: 3.8577  data_time: 0.0016  memory: 25874  
07/13 21:58:29 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:02:23  time: 4.1652  data_time: 0.0015  memory: 24801  
07/13 22:01:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:58:28  time: 3.7650  data_time: 0.0015  memory: 11139  
07/13 22:05:02 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:54:34  time: 3.9567  data_time: 0.0014  memory: 25983  
07/13 22:08:05 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:50:36  time: 3.8017  data_time: 0.0014  memory: 9589  
07/13 22:11:18 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:46:48  time: 3.6654  data_time: 0.0015  memory: 23990  
07/13 22:14:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:43:09  time: 4.3111  data_time: 0.0014  memory: 26339  
07/13 22:17:54 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:39:22  time: 4.1922  data_time: 0.0014  memory: 25238  
07/13 22:20:59 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:35:38  time: 3.5779  data_time: 0.0014  memory: 9473  
07/13 22:24:15 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:31:59  time: 3.8137  data_time: 0.0015  memory: 26565  
07/13 22:27:22 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:28:19  time: 3.7849  data_time: 0.0015  memory: 9372  
07/13 22:30:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:24:42  time: 3.5724  data_time: 0.0014  memory: 26774  
07/13 22:34:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:21:09  time: 4.1002  data_time: 0.0016  memory: 25442  
07/13 22:37:18 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:17:36  time: 3.6655  data_time: 0.0014  memory: 26297  
07/13 22:40:25 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:14:02  time: 3.8806  data_time: 0.0022  memory: 24184  
07/13 22:43:38 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:10:30  time: 3.8593  data_time: 0.0016  memory: 8382  
07/13 22:46:41 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:06:58  time: 3.6250  data_time: 0.0014  memory: 27336  
07/13 22:49:56 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:28  time: 3.6799  data_time: 0.0014  memory: 24602  
07/13 22:53:07 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.5086  data_time: 0.0013  memory: 27385  
07/13 22:53:07 - mmengine - INFO - per class results:
07/13 22:53:07 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 58.26 | 84.93 |
|       building      | 70.42 | 83.01 |
|         sky         | 86.13 | 95.89 |
|        floor        | 52.06 | 68.01 |
|         tree        | 57.99 | 77.04 |
|       ceiling       | 73.53 | 82.96 |
|         road        | 63.89 | 72.85 |
|         bed         | 73.45 |  83.9 |
|      windowpane     |  53.4 | 69.31 |
|        grass        | 47.91 | 55.19 |
|       cabinet       | 40.73 | 54.32 |
|       sidewalk      | 47.88 | 58.92 |
|        person       | 53.68 | 73.16 |
|        earth        |  30.9 |  49.3 |
|         door        | 33.01 |  42.4 |
|        table        | 29.12 | 57.29 |
|       mountain      | 45.19 | 64.27 |
|        plant        |  32.7 | 39.11 |
|       curtain       |  55.0 | 65.94 |
|        chair        | 35.17 | 45.72 |
|         car         | 66.43 | 79.87 |
|        water        | 42.03 |  54.2 |
|       painting      |  61.8 |  71.7 |
|         sofa        | 45.92 | 62.13 |
|        shelf        | 31.67 | 43.66 |
|        house        | 41.49 | 54.91 |
|         sea         | 42.31 | 68.36 |
|        mirror       | 50.73 | 57.82 |
|         rug         | 34.29 | 37.68 |
|        field        | 22.85 | 39.97 |
|       armchair      | 25.82 | 32.38 |
|         seat        | 44.24 | 59.11 |
|        fence        | 27.74 | 38.89 |
|         desk        | 33.01 | 49.84 |
|         rock        | 32.88 |  52.4 |
|       wardrobe      | 39.33 | 48.71 |
|         lamp        | 31.87 | 64.09 |
|       bathtub       | 58.86 | 77.98 |
|       railing       | 23.88 | 32.06 |
|       cushion       | 40.35 | 46.74 |
|         base        | 10.37 | 18.31 |
|         box         |  8.21 | 15.97 |
|        column       | 34.79 |  41.3 |
|      signboard      | 19.02 | 38.91 |
|   chest of drawers  | 22.79 | 33.02 |
|       counter       | 12.44 | 16.45 |
|         sand        |  39.3 | 61.82 |
|         sink        | 52.19 | 62.83 |
|      skyscraper     | 26.76 | 34.52 |
|      fireplace      | 52.66 | 57.53 |
|     refrigerator    | 56.77 | 60.94 |
|      grandstand     | 45.31 | 66.56 |
|         path        |  20.7 | 27.15 |
|        stairs       | 17.96 |  23.2 |
|        runway       | 44.58 | 62.71 |
|         case        | 34.93 | 47.08 |
|      pool table     | 57.21 | 59.63 |
|        pillow       | 45.15 | 57.07 |
|     screen door     | 38.75 | 42.64 |
|       stairway      | 14.05 | 20.56 |
|        river        | 12.76 | 26.34 |
|        bridge       | 11.62 | 13.02 |
|       bookcase      |  47.0 | 59.67 |
|        blind        | 29.78 | 31.64 |
|     coffee table    | 36.91 | 42.76 |
|        toilet       | 62.93 | 73.89 |
|        flower       | 16.19 | 37.45 |
|         book        | 37.33 |  48.2 |
|         hill        |  4.91 |  9.55 |
|        bench        |  33.1 | 39.12 |
|      countertop     | 41.95 | 54.32 |
|        stove        | 43.24 | 47.96 |
|         palm        |  39.5 | 52.85 |
|    kitchen island   |  26.9 | 35.17 |
|       computer      | 51.07 | 56.78 |
|     swivel chair    |  4.45 |  4.71 |
|         boat        | 26.97 | 41.14 |
|         bar         | 16.55 | 22.12 |
|    arcade machine   | 10.51 | 10.76 |
|        hovel        | 30.39 | 37.35 |
|         bus         | 74.62 | 83.62 |
|        towel        | 50.73 | 65.77 |
|        light        | 42.44 | 47.13 |
|        truck        |  5.99 |  7.09 |
|        tower        | 13.83 | 22.14 |
|      chandelier     | 61.96 | 72.98 |
|        awning       |  7.45 |  8.79 |
|     streetlight     | 14.35 | 17.95 |
|        booth        | 27.95 |  30.2 |
| television receiver | 23.49 | 25.48 |
|       airplane      | 33.86 | 62.32 |
|      dirt track     |  6.81 |  11.2 |
|       apparel       |  36.1 | 49.17 |
|         pole        | 10.89 |  13.9 |
|         land        |  0.64 |  1.18 |
|      bannister      |  8.73 | 12.06 |
|      escalator      |  2.15 |  2.27 |
|       ottoman       | 32.75 | 40.94 |
|        bottle       | 29.73 | 49.85 |
|        buffet       | 25.94 | 28.69 |
|        poster       | 30.13 | 36.77 |
|        stage        |  8.44 | 11.78 |
|         van         | 37.97 |  54.5 |
|         ship        | 41.97 | 51.22 |
|       fountain      | 15.46 | 16.74 |
|    conveyer belt    |  70.9 | 79.77 |
|        canopy       |  10.6 | 12.88 |
|        washer       | 46.66 | 48.47 |
|      plaything      | 21.59 |  28.0 |
|    swimming pool    | 21.75 | 22.61 |
|        stool        | 15.33 | 17.71 |
|        barrel       | 16.22 | 33.12 |
|        basket       | 23.14 | 27.27 |
|      waterfall      | 50.33 | 77.43 |
|         tent        | 84.77 | 96.41 |
|         bag         |  5.71 |  6.31 |
|       minibike      | 33.92 |  40.9 |
|        cradle       |  71.4 | 86.49 |
|         oven        |  3.66 |  5.74 |
|         ball        | 38.13 | 55.79 |
|         food        | 23.41 | 25.88 |
|         step        |  5.18 |  6.15 |
|         tank        | 36.66 | 40.49 |
|      trade name     | 21.82 | 26.78 |
|      microwave      | 27.44 | 28.88 |
|         pot         | 13.76 | 15.08 |
|        animal       | 29.81 | 30.85 |
|       bicycle       | 36.44 | 50.26 |
|         lake        | 40.99 | 44.18 |
|      dishwasher     | 39.66 | 42.79 |
|        screen       | 39.92 | 46.27 |
|       blanket       |  12.4 | 13.37 |
|      sculpture      | 10.41 | 12.09 |
|         hood        | 33.09 | 35.77 |
|        sconce       | 38.17 | 48.19 |
|         vase        | 27.34 | 37.32 |
|    traffic light    | 25.99 | 37.47 |
|         tray        |  8.58 |  19.2 |
|        ashcan       | 15.76 | 18.53 |
|         fan         | 53.25 | 65.35 |
|         pier        | 14.31 |  17.1 |
|      crt screen     |  1.27 |  4.33 |
|        plate        | 41.63 | 51.05 |
|       monitor       |  3.0  |  3.38 |
|    bulletin board   | 32.66 | 38.26 |
|        shower       |  1.61 |  2.88 |
|       radiator      | 47.16 | 50.86 |
|        glass        | 12.53 | 13.94 |
|        clock        | 25.43 |  27.5 |
|         flag        | 21.15 | 24.75 |
+---------------------+-------+-------+
07/13 22:53:07 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 70.6200  mIoU: 33.1700  mAcc: 42.2000  data_time: 0.0024  time: 4.1707
07/13 22:53:11 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1558876266
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1558876266
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 22:53:12 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 22:53:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 22:53:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 22:53:17 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 22:53:19 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/13 22:59:01 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:42:31  time: 5.7507  data_time: 0.0033  memory: 27184  
07/13 23:03:33 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:14:30  time: 5.9715  data_time: 0.0031  memory: 27007  
07/13 23:07:27 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:54:19  time: 4.7172  data_time: 0.0025  memory: 25856  
07/13 23:11:49 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:46:28  time: 5.1014  data_time: 0.0024  memory: 27123  
07/13 23:15:49 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:37:34  time: 4.4764  data_time: 0.0024  memory: 27279  
07/13 23:19:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:30:13  time: 4.2361  data_time: 0.0021  memory: 26905  
07/13 23:23:58 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:24:28  time: 4.3429  data_time: 0.0021  memory: 26809  
07/13 23:27:49 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:17:58  time: 4.4774  data_time: 0.0019  memory: 26868  
07/13 23:31:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:10:16  time: 4.1209  data_time: 0.0019  memory: 25645  
07/13 23:34:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:04:10  time: 3.9452  data_time: 0.0018  memory: 24196  
07/13 23:38:25 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:58:53  time: 4.7102  data_time: 0.0020  memory: 26857  
07/13 23:41:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:53:27  time: 4.5451  data_time: 0.0020  memory: 26899  
07/13 23:45:34 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:48:31  time: 4.6535  data_time: 0.0017  memory: 27294  
07/13 23:49:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:44:15  time: 4.1810  data_time: 0.0019  memory: 27232  
07/13 23:53:16 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:39:54  time: 5.6218  data_time: 0.0018  memory: 27621  
07/13 23:56:39 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:34:59  time: 4.2496  data_time: 0.0019  memory: 25864  
07/14 00:00:12 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:30:29  time: 4.2183  data_time: 0.0019  memory: 9478  
07/14 00:03:30 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:25:46  time: 3.9292  data_time: 0.0018  memory: 25208  
07/14 00:07:18 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:21:45  time: 4.5768  data_time: 0.0018  memory: 26730  
07/14 00:10:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:17:24  time: 3.9167  data_time: 0.0018  memory: 26757  
07/14 00:14:31 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:13:27  time: 5.0401  data_time: 0.0018  memory: 27632  
07/14 00:18:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:09:25  time: 4.2134  data_time: 0.0019  memory: 25875  
07/14 00:21:40 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:05:17  time: 4.3042  data_time: 0.0017  memory: 24802  
07/14 00:25:10 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:01:13  time: 3.9837  data_time: 0.0039  memory: 17137  
07/14 00:28:54 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:57:20  time: 4.7963  data_time: 0.0018  memory: 25983  
07/14 00:32:23 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:53:20  time: 4.1081  data_time: 0.0018  memory: 9592  
07/14 00:35:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:49:25  time: 3.9201  data_time: 0.0018  memory: 23992  
07/14 00:39:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:45:37  time: 4.4594  data_time: 0.0018  memory: 26344  
07/14 00:43:07 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:41:38  time: 4.4134  data_time: 0.0017  memory: 25240  
07/14 00:46:30 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:37:43  time: 3.9100  data_time: 0.0018  memory: 9477  
07/14 00:50:10 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:33:55  time: 4.3734  data_time: 0.0018  memory: 26570  
07/14 00:53:40 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:30:04  time: 4.4757  data_time: 0.0019  memory: 9372  
07/14 00:57:12 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:26:16  time: 4.0359  data_time: 0.0017  memory: 26779  
07/14 01:00:49 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:22:29  time: 4.2095  data_time: 0.0020  memory: 25446  
07/14 01:04:26 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:18:43  time: 3.9599  data_time: 0.0016  memory: 26301  
07/14 01:07:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:14:56  time: 4.2955  data_time: 0.0018  memory: 24184  
07/14 01:11:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:11:11  time: 4.1031  data_time: 0.0018  memory: 8390  
07/14 01:14:33 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:07:25  time: 3.8604  data_time: 0.0018  memory: 27341  
07/14 01:17:56 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:42  time: 3.8484  data_time: 0.0016  memory: 24605  
07/14 01:21:19 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.6455  data_time: 0.0015  memory: 27388  
07/14 01:21:19 - mmengine - INFO - per class results:
07/14 01:21:19 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 33.21 | 83.08 |
|       building      | 33.78 | 42.09 |
|         sky         |  61.0 | 81.92 |
|        floor        | 26.67 |  38.1 |
|         tree        | 28.68 | 62.75 |
|       ceiling       | 25.41 | 30.69 |
|         road        | 33.97 | 42.51 |
|         bed         | 18.34 | 19.59 |
|      windowpane     | 18.51 | 23.25 |
|        grass        | 20.94 | 27.87 |
|       cabinet       |  3.8  |  4.05 |
|       sidewalk      |  0.53 |  0.53 |
|        person       | 37.07 | 55.83 |
|        earth        |  9.21 |  30.0 |
|         door        |  2.25 |  2.68 |
|        table        | 11.01 | 12.74 |
|       mountain      |  17.8 |  32.8 |
|        plant        |  0.32 |  0.32 |
|       curtain       |  5.75 |  7.29 |
|        chair        |  8.08 |  8.48 |
|         car         | 39.08 | 54.16 |
|        water        |  9.7  | 27.44 |
|       painting      | 17.27 | 18.56 |
|         sofa        | 15.81 | 18.46 |
|        shelf        |  0.04 |  0.04 |
|        house        | 16.55 | 45.75 |
|         sea         | 10.29 | 13.92 |
|        mirror       |  8.84 |  9.71 |
|         rug         |  0.0  |  0.0  |
|        field        |  5.79 | 10.26 |
|       armchair      |  1.66 |  1.76 |
|         seat        |  0.18 |  0.22 |
|        fence        |  2.39 |  2.97 |
|         desk        |  4.77 |  5.21 |
|         rock        | 18.96 | 33.81 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  5.63 |  5.75 |
|       bathtub       |  2.06 |  2.27 |
|       railing       |  9.61 | 14.38 |
|       cushion       |  4.11 |  4.18 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  6.2  | 12.17 |
|      signboard      |  9.18 | 15.15 |
|   chest of drawers  |  0.05 |  0.07 |
|       counter       |  3.99 |  5.71 |
|         sand        |  0.05 |  0.05 |
|         sink        |  8.94 | 11.25 |
|      skyscraper     | 17.79 | 25.36 |
|      fireplace      | 10.09 | 10.13 |
|     refrigerator    | 13.55 | 14.11 |
|      grandstand     |  0.0  |  0.0  |
|         path        |  1.01 |  1.25 |
|        stairs       |  3.84 |  6.16 |
|        runway       |  4.2  |  4.37 |
|         case        |  0.0  |  0.0  |
|      pool table     |  29.0 | 31.25 |
|        pillow       |  9.6  | 11.39 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  6.46 | 12.71 |
|        river        |  0.58 |  0.71 |
|        bridge       |  3.89 |  4.09 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.01 |  0.01 |
|        toilet       |  0.85 |  0.9  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  1.83 | 10.82 |
|        bench        |  1.53 |  1.61 |
|      countertop     |  7.8  |  9.82 |
|        stove        |  5.95 |  5.98 |
|         palm        | 10.11 | 11.35 |
|    kitchen island   |  0.01 |  0.01 |
|       computer      |  3.1  |  3.11 |
|     swivel chair    |  0.34 |  0.34 |
|         boat        |  0.23 |  0.23 |
|         bar         |  4.97 |  5.89 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  4.8  |  4.9  |
|         bus         | 54.15 | 56.31 |
|        towel        |  0.05 |  0.05 |
|        light        |  2.02 |  2.06 |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.0  |  0.01 |
|      chandelier     |  0.12 |  0.12 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  2.35 |  2.47 |
|        booth        |  0.0  |  0.0  |
| television receiver | 15.38 | 17.15 |
|       airplane      |  3.74 |  7.67 |
|      dirt track     |  0.08 |  0.34 |
|       apparel       |  0.0  |  0.0  |
|         pole        |  3.64 |  4.71 |
|         land        |  2.15 |  8.28 |
|      bannister      |  0.91 |  2.31 |
|      escalator      |  2.32 |  2.54 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  6.33 |  7.96 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 20.84 | 21.48 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  17.2 | 19.39 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  5.3  | 16.99 |
|         tent        |  0.01 |  0.01 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  4.23 |  4.24 |
|        cradle       |  0.86 |  0.86 |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.15 |  0.22 |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.19 |  0.19 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.31 |  0.31 |
|        animal       |  36.5 | 41.31 |
|       bicycle       |  3.53 |  5.6  |
|         lake        |  0.11 |  0.15 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 43.14 | 78.59 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.62 |  0.63 |
|        sconce       |  0.12 |  0.13 |
|         vase        |  0.03 |  0.03 |
|    traffic light    |  2.77 |  2.91 |
|         tray        |  0.32 |  0.36 |
|        ashcan       |  7.48 |  7.74 |
|         fan         |  5.65 |  6.03 |
|         pier        |  0.27 |  0.27 |
|      crt screen     |  2.9  |  7.35 |
|        plate        |  4.95 |  5.07 |
|       monitor       | 13.62 | 15.89 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.18 |  0.18 |
|        clock        |  3.64 |  3.75 |
|         flag        |  2.0  |  2.02 |
+---------------------+-------+-------+
07/14 01:21:19 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 41.9200  mIoU: 6.7300  mAcc: 9.6700  data_time: 0.0029  time: 4.4392
07/14 01:21:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 866992359
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 866992359
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 01:21:23 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 01:21:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 01:21:26 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 01:21:26 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 01:21:28 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 01:27:12 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:43:27  time: 6.0637  data_time: 0.0036  memory: 27184  
07/14 01:31:46 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:15:43  time: 6.1230  data_time: 0.0036  memory: 27007  
07/14 01:35:49 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:57:03  time: 4.7883  data_time: 0.0023  memory: 25856  
07/14 01:40:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:48:55  time: 5.4087  data_time: 0.0025  memory: 27123  
07/14 01:44:20 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:40:05  time: 4.4383  data_time: 0.0028  memory: 27279  
07/14 01:48:23 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:32:31  time: 4.3047  data_time: 0.0024  memory: 26905  
07/14 01:52:32 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:26:27  time: 4.3398  data_time: 0.0021  memory: 26809  
07/14 01:56:33 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:20:18  time: 4.5872  data_time: 0.0022  memory: 26868  
07/14 01:59:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:12:30  time: 4.1365  data_time: 0.0019  memory: 25645  
07/14 02:03:33 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:06:14  time: 3.9834  data_time: 0.0019  memory: 24196  
07/14 02:07:18 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:00:50  time: 4.7042  data_time: 0.0019  memory: 26857  
07/14 02:10:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:55:27  time: 4.5828  data_time: 0.0019  memory: 26899  
07/14 02:14:40 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:50:29  time: 4.6900  data_time: 0.0017  memory: 27294  
07/14 02:18:36 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:46:05  time: 4.2577  data_time: 0.0020  memory: 27232  
07/14 02:22:32 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:41:45  time: 5.8991  data_time: 0.0019  memory: 27621  
07/14 02:25:59 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:36:46  time: 4.4018  data_time: 0.0021  memory: 25864  
07/14 02:29:36 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:32:10  time: 4.2940  data_time: 0.0019  memory: 9478  
07/14 02:32:57 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:27:21  time: 4.0670  data_time: 0.0018  memory: 25208  
07/14 02:36:50 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:23:18  time: 4.6365  data_time: 0.0018  memory: 26730  
07/14 02:40:21 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:18:52  time: 3.9588  data_time: 0.0018  memory: 26757  
07/14 02:44:12 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:14:51  time: 5.0687  data_time: 0.0018  memory: 27632  
07/14 02:47:53 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:10:41  time: 4.1733  data_time: 0.0018  memory: 25871  
07/14 02:51:24 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:06:27  time: 4.3650  data_time: 0.0020  memory: 24802  
07/14 02:54:57 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:02:18  time: 3.9594  data_time: 0.0018  memory: 17137  
07/14 02:58:23 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:58:08  time: 4.2535  data_time: 0.0019  memory: 25983  
07/14 03:01:38 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:53:55  time: 4.1408  data_time: 0.0018  memory: 9592  
07/14 03:05:05 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:49:52  time: 3.8252  data_time: 0.0017  memory: 23992  
07/14 03:08:45 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:45:58  time: 4.4878  data_time: 0.0018  memory: 26344  
07/14 03:12:06 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:41:57  time: 4.4473  data_time: 0.0018  memory: 25240  
07/14 03:15:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:37:58  time: 3.7645  data_time: 0.0017  memory: 9477  
07/14 03:18:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:34:06  time: 4.0764  data_time: 0.0018  memory: 26570  
07/14 03:22:19 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:30:12  time: 4.0793  data_time: 0.0019  memory: 9372  
07/14 03:25:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:26:21  time: 3.7439  data_time: 0.0016  memory: 26779  
07/14 03:29:19 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:22:33  time: 4.2188  data_time: 0.0019  memory: 25446  
07/14 03:33:09 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:18:48  time: 4.5163  data_time: 0.0018  memory: 26301  
07/14 03:36:55 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:15:02  time: 5.0149  data_time: 0.0019  memory: 24184  
07/14 03:40:40 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:11:17  time: 4.4309  data_time: 0.0019  memory: 8390  
07/14 03:44:14 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:07:30  time: 4.1159  data_time: 0.0018  memory: 27341  
07/14 03:47:43 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:44  time: 3.9371  data_time: 0.0017  memory: 24605  
07/14 03:51:16 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.8686  data_time: 0.0017  memory: 27388  
07/14 03:51:16 - mmengine - INFO - per class results:
07/14 03:51:16 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.38 |  0.38 |
|       building      | 0.0  |  0.0  |
|         sky         | 8.99 | 99.96 |
|        floor        | 0.02 |  0.02 |
|         tree        | 0.02 |  0.02 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.01 |  0.01 |
|       cabinet       | 0.01 |  0.01 |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.01 |  0.01 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.1  |  0.14 |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.02 |  0.02 |
|        flower       | 0.01 |  0.01 |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.01 |  0.19 |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/14 03:51:16 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.9500  mIoU: 0.0600  mAcc: 0.6700  data_time: 0.0029  time: 4.4930
07/14 03:51:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1668115979
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1668115979
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 03:51:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='cospgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 03:51:23 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 03:51:23 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 03:51:23 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 03:51:26 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 03:57:16 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:47:53  time: 5.8143  data_time: 0.0022  memory: 27184  
07/14 04:01:55 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:19:14  time: 5.9264  data_time: 0.0024  memory: 27007  
07/14 04:05:55 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:58:47  time: 4.7821  data_time: 0.0017  memory: 25856  
07/14 04:10:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:50:06  time: 5.0684  data_time: 0.0017  memory: 27123  
07/14 04:14:27 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:41:06  time: 4.4558  data_time: 0.0017  memory: 27279  
07/14 04:18:29 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:33:18  time: 4.2099  data_time: 0.0038  memory: 26905  
07/14 04:22:39 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:27:09  time: 4.4304  data_time: 0.0016  memory: 26809  
07/14 04:26:29 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:20:10  time: 4.4350  data_time: 0.0015  memory: 26868  
07/14 04:29:49 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:12:11  time: 4.0682  data_time: 0.0021  memory: 25645  
07/14 04:33:19 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:05:38  time: 3.9330  data_time: 0.0015  memory: 24196  
07/14 04:37:03 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:00:16  time: 4.6544  data_time: 0.0016  memory: 26857  
07/14 04:40:40 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:54:51  time: 4.6159  data_time: 0.0016  memory: 26899  
07/14 04:44:19 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:49:49  time: 4.7272  data_time: 0.0014  memory: 27294  
07/14 04:48:19 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:45:39  time: 4.4649  data_time: 0.0016  memory: 27232  
07/14 04:52:07 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:41:07  time: 5.5410  data_time: 0.0015  memory: 27621  
07/14 04:55:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:35:59  time: 4.1905  data_time: 0.0017  memory: 25864  
07/14 04:58:57 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:31:19  time: 4.2071  data_time: 0.0016  memory: 9478  
07/14 05:02:20 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:26:38  time: 4.0737  data_time: 0.0015  memory: 25208  
07/14 05:06:10 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:22:35  time: 4.6580  data_time: 0.0015  memory: 26730  
07/14 05:09:39 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:18:12  time: 3.9147  data_time: 0.0016  memory: 26757  
07/14 05:13:26 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:14:10  time: 5.0348  data_time: 0.0015  memory: 27632  
07/14 05:17:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:10:05  time: 4.1111  data_time: 0.0016  memory: 25874  
07/14 05:20:38 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:05:55  time: 4.4541  data_time: 0.0015  memory: 24802  
07/14 05:24:07 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:01:47  time: 3.9307  data_time: 0.0015  memory: 17137  
07/14 05:27:29 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:57:37  time: 4.1978  data_time: 0.0015  memory: 25983  
07/14 05:30:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:53:25  time: 4.0013  data_time: 0.0044  memory: 9595  
07/14 05:34:06 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:49:25  time: 3.7992  data_time: 0.0015  memory: 23992  
07/14 05:37:43 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:45:32  time: 4.5068  data_time: 0.0015  memory: 26344  
07/14 05:41:03 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:41:34  time: 4.4331  data_time: 0.0015  memory: 25239  
07/14 05:44:24 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:37:38  time: 3.7433  data_time: 0.0014  memory: 9477  
07/14 05:47:56 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:33:48  time: 4.1475  data_time: 0.0015  memory: 26570  
07/14 05:51:17 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:29:57  time: 4.0622  data_time: 0.0016  memory: 9375  
07/14 05:54:42 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:26:08  time: 3.8082  data_time: 0.0014  memory: 26779  
07/14 05:58:11 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:22:21  time: 4.1114  data_time: 0.0017  memory: 25446  
07/14 06:01:40 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:18:36  time: 3.8776  data_time: 0.0033  memory: 26301  
07/14 06:04:59 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:14:50  time: 4.1775  data_time: 0.0016  memory: 24184  
07/14 06:08:32 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:11:06  time: 4.2659  data_time: 0.0016  memory: 8386  
07/14 06:11:47 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:07:23  time: 3.7550  data_time: 0.0015  memory: 27341  
07/14 06:15:12 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:41  time: 3.8325  data_time: 0.0014  memory: 24605  
07/14 06:18:35 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.6364  data_time: 0.0013  memory: 27388  
07/14 06:18:35 - mmengine - INFO - per class results:
07/14 06:18:35 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 58.26 | 84.93 |
|       building      | 70.42 | 83.01 |
|         sky         | 86.13 | 95.89 |
|        floor        | 52.06 | 68.01 |
|         tree        | 57.99 | 77.04 |
|       ceiling       | 73.53 | 82.96 |
|         road        | 63.89 | 72.85 |
|         bed         | 73.45 |  83.9 |
|      windowpane     |  53.4 | 69.31 |
|        grass        | 47.92 | 55.19 |
|       cabinet       | 40.73 | 54.32 |
|       sidewalk      | 47.88 | 58.92 |
|        person       | 53.68 | 73.16 |
|        earth        |  30.9 |  49.3 |
|         door        | 33.01 |  42.4 |
|        table        | 29.12 | 57.29 |
|       mountain      | 45.19 | 64.27 |
|        plant        |  32.7 | 39.11 |
|       curtain       |  55.0 | 65.94 |
|        chair        | 35.17 | 45.72 |
|         car         | 66.43 | 79.87 |
|        water        | 42.03 | 54.19 |
|       painting      |  61.8 |  71.7 |
|         sofa        | 45.92 | 62.13 |
|        shelf        | 31.67 | 43.66 |
|        house        | 41.49 | 54.91 |
|         sea         | 42.31 | 68.36 |
|        mirror       | 50.73 | 57.82 |
|         rug         | 34.29 | 37.68 |
|        field        | 22.85 | 39.97 |
|       armchair      | 25.82 | 32.38 |
|         seat        | 44.24 | 59.11 |
|        fence        | 27.74 | 38.89 |
|         desk        | 33.01 | 49.84 |
|         rock        | 32.88 |  52.4 |
|       wardrobe      | 39.35 | 48.71 |
|         lamp        | 31.87 | 64.09 |
|       bathtub       | 58.86 | 77.98 |
|       railing       | 23.88 | 32.06 |
|       cushion       | 40.35 | 46.74 |
|         base        | 10.37 | 18.31 |
|         box         |  8.21 | 15.97 |
|        column       | 34.79 |  41.3 |
|      signboard      | 19.02 | 38.91 |
|   chest of drawers  | 22.79 | 33.02 |
|       counter       | 12.44 | 16.45 |
|         sand        |  39.3 | 61.82 |
|         sink        | 52.19 | 62.83 |
|      skyscraper     | 26.76 | 34.52 |
|      fireplace      | 52.66 | 57.53 |
|     refrigerator    | 56.77 | 60.94 |
|      grandstand     | 45.31 | 66.56 |
|         path        |  20.7 | 27.15 |
|        stairs       | 17.96 |  23.2 |
|        runway       | 44.57 | 62.71 |
|         case        | 34.93 | 47.08 |
|      pool table     | 57.21 | 59.63 |
|        pillow       | 45.15 | 57.07 |
|     screen door     | 38.75 | 42.64 |
|       stairway      | 14.05 | 20.56 |
|        river        | 12.76 | 26.34 |
|        bridge       | 11.62 | 13.02 |
|       bookcase      |  47.0 | 59.67 |
|        blind        | 29.78 | 31.64 |
|     coffee table    | 36.91 | 42.76 |
|        toilet       | 62.93 | 73.89 |
|        flower       | 16.19 | 37.45 |
|         book        | 37.33 |  48.2 |
|         hill        |  4.91 |  9.55 |
|        bench        |  33.1 | 39.12 |
|      countertop     | 41.95 | 54.32 |
|        stove        | 43.24 | 47.96 |
|         palm        |  39.5 | 52.85 |
|    kitchen island   |  26.9 | 35.17 |
|       computer      | 51.07 | 56.78 |
|     swivel chair    |  4.45 |  4.71 |
|         boat        | 26.97 | 41.14 |
|         bar         | 16.55 | 22.12 |
|    arcade machine   | 10.51 | 10.76 |
|        hovel        | 30.39 | 37.35 |
|         bus         | 74.62 | 83.62 |
|        towel        | 50.73 | 65.77 |
|        light        | 42.43 | 47.13 |
|        truck        |  5.99 |  7.09 |
|        tower        | 13.83 | 22.14 |
|      chandelier     | 61.96 | 72.98 |
|        awning       |  7.45 |  8.79 |
|     streetlight     | 14.35 | 17.95 |
|        booth        | 27.95 |  30.2 |
| television receiver | 23.49 | 25.48 |
|       airplane      | 33.86 | 62.32 |
|      dirt track     |  6.81 |  11.2 |
|       apparel       |  36.1 | 49.17 |
|         pole        | 10.89 |  13.9 |
|         land        |  0.64 |  1.18 |
|      bannister      |  8.73 | 12.06 |
|      escalator      |  2.15 |  2.27 |
|       ottoman       | 32.75 | 40.94 |
|        bottle       | 29.73 | 49.85 |
|        buffet       | 25.94 | 28.69 |
|        poster       | 30.13 | 36.77 |
|        stage        |  8.44 | 11.78 |
|         van         | 37.97 |  54.5 |
|         ship        | 41.97 | 51.22 |
|       fountain      | 15.46 | 16.74 |
|    conveyer belt    |  70.9 | 79.77 |
|        canopy       |  10.6 | 12.88 |
|        washer       | 46.66 | 48.47 |
|      plaything      | 21.59 |  28.0 |
|    swimming pool    | 21.75 | 22.61 |
|        stool        | 15.33 | 17.71 |
|        barrel       | 16.22 | 33.12 |
|        basket       | 23.14 | 27.27 |
|      waterfall      | 50.33 | 77.43 |
|         tent        | 84.77 | 96.41 |
|         bag         |  5.71 |  6.31 |
|       minibike      | 33.92 |  40.9 |
|        cradle       |  71.4 | 86.49 |
|         oven        |  3.66 |  5.74 |
|         ball        | 38.13 | 55.79 |
|         food        | 23.41 | 25.88 |
|         step        |  5.18 |  6.15 |
|         tank        | 36.66 | 40.49 |
|      trade name     | 21.82 | 26.78 |
|      microwave      | 27.44 | 28.88 |
|         pot         | 13.76 | 15.08 |
|        animal       | 29.81 | 30.85 |
|       bicycle       | 36.44 | 50.26 |
|         lake        | 40.99 | 44.18 |
|      dishwasher     | 39.66 | 42.79 |
|        screen       | 39.92 | 46.27 |
|       blanket       |  12.4 | 13.37 |
|      sculpture      | 10.41 | 12.09 |
|         hood        | 33.09 | 35.77 |
|        sconce       | 38.17 | 48.19 |
|         vase        | 27.34 | 37.32 |
|    traffic light    | 25.99 | 37.47 |
|         tray        |  8.58 |  19.2 |
|        ashcan       | 15.76 | 18.53 |
|         fan         | 53.25 | 65.35 |
|         pier        | 14.31 |  17.1 |
|      crt screen     |  1.27 |  4.33 |
|        plate        | 41.63 | 51.05 |
|       monitor       |  3.0  |  3.38 |
|    bulletin board   | 32.66 | 38.26 |
|        shower       |  1.61 |  2.88 |
|       radiator      | 47.16 | 50.86 |
|        glass        | 12.53 | 13.94 |
|        clock        | 25.43 |  27.5 |
|         flag        | 21.15 | 24.75 |
+---------------------+-------+-------+
07/14 06:18:35 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 70.6200  mIoU: 33.1700  mAcc: 42.2000  data_time: 0.0026  time: 4.4138
07/14 06:19:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1562616232
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1562616232
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 06:19:51 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 06:20:18 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 06:20:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 06:20:19 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 06:20:21 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/14 06:21:04 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 207684198
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 207684198
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 06:21:04 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 06:21:07 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 06:21:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 06:21:08 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 06:21:09 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/14 06:21:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 493563385
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 493563385
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 06:21:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='apgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 06:21:23 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 06:21:23 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 06:21:23 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 06:21:24 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/14 06:21:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1355662635
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1355662635
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 06:21:35 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 06:21:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 06:21:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 06:21:38 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 06:21:39 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 06:26:55 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:25:16  time: 5.2865  data_time: 0.0028  memory: 27183  
07/14 06:31:06 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:59:40  time: 5.5049  data_time: 0.0028  memory: 27009  
07/14 06:34:43 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:41:17  time: 4.3811  data_time: 0.0021  memory: 25857  
07/14 06:38:43 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:33:36  time: 4.7247  data_time: 0.0021  memory: 27120  
07/14 06:42:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:26:37  time: 4.2593  data_time: 0.0020  memory: 26797  
07/14 06:46:26 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:20:27  time: 3.9281  data_time: 0.0020  memory: 26899  
07/14 06:50:21 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:15:16  time: 4.0876  data_time: 0.0020  memory: 26804  
07/14 06:54:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:09:22  time: 4.2451  data_time: 0.0018  memory: 26869  
07/14 06:57:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:02:14  time: 3.9975  data_time: 0.0018  memory: 25643  
07/14 07:00:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:56:26  time: 3.7010  data_time: 0.0018  memory: 24193  
07/14 07:03:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:51:22  time: 4.3140  data_time: 0.0019  memory: 26853  
07/14 07:07:07 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:46:05  time: 4.1577  data_time: 0.0020  memory: 26898  
07/14 07:10:33 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:41:32  time: 4.5443  data_time: 0.0016  memory: 27293  
07/14 07:14:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:37:35  time: 3.9183  data_time: 0.0019  memory: 27229  
07/14 07:17:46 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:33:30  time: 5.2038  data_time: 0.0017  memory: 27619  
07/14 07:20:50 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:28:46  time: 3.8083  data_time: 0.0026  memory: 25862  
07/14 07:24:01 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:24:22  time: 3.8166  data_time: 0.0019  memory: 9471  
07/14 07:27:05 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:19:58  time: 3.6992  data_time: 0.0016  memory: 25207  
07/14 07:30:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:16:11  time: 4.2244  data_time: 0.0018  memory: 26724  
07/14 07:33:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:12:08  time: 3.6393  data_time: 0.0018  memory: 26753  
07/14 07:37:17 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:08:25  time: 4.6621  data_time: 0.0018  memory: 27630  
07/14 07:40:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:04:37  time: 3.6929  data_time: 0.0018  memory: 25874  
07/14 07:43:53 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:00:46  time: 4.0134  data_time: 0.0023  memory: 24801  
07/14 07:47:05 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:56:56  time: 3.6595  data_time: 0.0017  memory: 11136  
07/14 07:50:15 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:53:09  time: 3.9145  data_time: 0.0018  memory: 25983  
07/14 07:53:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:49:18  time: 3.7380  data_time: 0.0016  memory: 9589  
07/14 07:56:23 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:45:36  time: 3.5667  data_time: 0.0017  memory: 23990  
07/14 07:59:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:42:02  time: 4.2475  data_time: 0.0016  memory: 26339  
07/14 08:02:52 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:38:23  time: 4.1620  data_time: 0.0018  memory: 25238  
07/14 08:05:55 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:34:45  time: 3.5229  data_time: 0.0017  memory: 9472  
07/14 08:09:11 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:31:12  time: 3.7936  data_time: 0.0019  memory: 26565  
07/14 08:12:16 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:27:38  time: 3.7400  data_time: 0.0015  memory: 9369  
07/14 08:15:29 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:24:08  time: 3.5387  data_time: 0.0014  memory: 26774  
07/14 08:18:46 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:20:39  time: 3.8025  data_time: 0.0017  memory: 25442  
07/14 08:22:03 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:17:11  time: 3.6570  data_time: 0.0014  memory: 26297  
07/14 08:25:08 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:13:43  time: 3.8391  data_time: 0.0016  memory: 24184  
07/14 08:28:18 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:10:16  time: 3.8186  data_time: 0.0016  memory: 8379  
07/14 08:31:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:06:49  time: 3.5999  data_time: 0.0016  memory: 27339  
07/14 08:34:34 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:24  time: 3.6365  data_time: 0.0014  memory: 24602  
07/14 08:37:44 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.5117  data_time: 0.0013  memory: 27386  
07/14 08:37:44 - mmengine - INFO - per class results:
07/14 08:37:44 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 33.34 | 82.87 |
|       building      | 34.51 | 44.25 |
|         sky         | 61.24 | 83.04 |
|        floor        | 26.33 | 37.17 |
|         tree        |  28.9 | 62.91 |
|       ceiling       | 24.52 | 29.39 |
|         road        | 34.61 | 43.48 |
|         bed         | 17.39 | 18.39 |
|      windowpane     | 18.18 | 22.99 |
|        grass        | 20.69 | 27.49 |
|       cabinet       |  4.4  |  4.68 |
|       sidewalk      |  0.63 |  0.64 |
|        person       | 37.46 |  55.4 |
|        earth        |  9.53 | 30.66 |
|         door        |  2.27 |  2.74 |
|        table        | 11.66 | 13.91 |
|       mountain      | 20.23 |  37.1 |
|        plant        |  0.58 |  0.59 |
|       curtain       |  5.56 |  6.87 |
|        chair        |  8.47 |  8.94 |
|         car         | 39.02 |  53.2 |
|        water        | 10.85 | 31.26 |
|       painting      | 15.88 | 17.12 |
|         sofa        | 11.68 | 13.27 |
|        shelf        |  0.48 |  0.49 |
|        house        | 20.97 | 52.63 |
|         sea         |  9.45 | 12.52 |
|        mirror       |  8.17 |  9.09 |
|         rug         |  0.35 |  0.35 |
|        field        |  3.86 |  6.65 |
|       armchair      |  2.25 |  2.42 |
|         seat        |  0.2  |  0.25 |
|        fence        |  1.65 |  2.23 |
|         desk        |  5.02 |  5.51 |
|         rock        | 19.34 | 29.64 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  4.8  |  4.91 |
|       bathtub       |  1.82 |  1.96 |
|       railing       | 10.63 | 15.79 |
|       cushion       |  3.41 |  3.5  |
|         base        |  0.37 |  0.37 |
|         box         |  0.0  |  0.0  |
|        column       |  5.99 | 10.79 |
|      signboard      |  7.83 | 12.18 |
|   chest of drawers  |  0.1  |  0.14 |
|       counter       |  1.53 |  1.94 |
|         sand        |  0.02 |  0.02 |
|         sink        |  9.2  | 11.01 |
|      skyscraper     | 16.62 | 24.12 |
|      fireplace      |  7.79 |  7.8  |
|     refrigerator    |  15.2 | 15.48 |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.46 |  0.6  |
|        stairs       |  3.89 |  5.94 |
|        runway       |  4.0  |  4.35 |
|         case        |  0.0  |  0.0  |
|      pool table     | 29.82 | 30.41 |
|        pillow       |  9.39 | 10.57 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  4.12 |  8.67 |
|        river        |  0.25 |  0.34 |
|        bridge       |  4.84 |  5.35 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.12 |  0.13 |
|        toilet       |  0.64 |  0.68 |
|        flower       |  0.38 |  0.38 |
|         book        |  0.0  |  0.0  |
|         hill        |  1.49 | 10.65 |
|        bench        |  0.69 |  0.77 |
|      countertop     |  2.93 |  3.75 |
|        stove        |  5.49 |  5.67 |
|         palm        | 10.98 | 11.92 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  2.1  |  2.11 |
|     swivel chair    |  0.62 |  0.63 |
|         boat        |  0.0  |  0.0  |
|         bar         |  2.84 |  3.38 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  9.63 |  9.89 |
|         bus         | 55.83 | 57.29 |
|        towel        |  0.13 |  0.13 |
|        light        |  2.61 |  2.64 |
|        truck        |  1.1  |  1.33 |
|        tower        |  0.01 |  0.01 |
|      chandelier     |  0.34 |  0.34 |
|        awning       |  0.07 |  0.07 |
|     streetlight     |  3.18 |  3.39 |
|        booth        |  0.0  |  0.0  |
| television receiver |  10.2 | 11.69 |
|       airplane      |  5.74 | 15.15 |
|      dirt track     |  1.58 |  3.99 |
|       apparel       |  0.0  |  0.0  |
|         pole        |  4.77 |  6.12 |
|         land        |  2.99 | 10.62 |
|      bannister      |  1.16 |  3.0  |
|      escalator      |  2.08 |  2.23 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.08 |  0.11 |
|         van         | 13.59 | 15.95 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 21.03 | 21.22 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        | 16.08 |  17.9 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  7.34 | 18.66 |
|         tent        |  0.33 |  0.41 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  2.02 |  2.03 |
|        cradle       |  8.74 |  8.75 |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  1.03 |  1.33 |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.75 |  0.75 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       | 37.69 | 42.21 |
|       bicycle       |  3.79 |  4.84 |
|         lake        |  0.01 |  0.02 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 42.74 |  77.6 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.3  |  0.33 |
|         vase        |  0.33 |  0.34 |
|    traffic light    |  3.44 |  3.72 |
|         tray        |  0.11 |  0.12 |
|        ashcan       |  1.1  |  1.14 |
|         fan         |  8.81 |  9.31 |
|         pier        |  0.14 |  0.14 |
|      crt screen     |  2.66 |  6.69 |
|        plate        |  5.72 |  5.88 |
|       monitor       | 12.36 | 13.72 |
|    bulletin board   |  0.07 |  0.07 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.16 |  0.17 |
|        clock        |  4.14 |  4.29 |
|         flag        |  1.31 |  1.37 |
+---------------------+-------+-------+
07/14 08:37:44 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 42.1600  mIoU: 6.7800  mAcc: 9.6900  data_time: 0.0026  time: 4.0817
07/14 08:38:03 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1702555557
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1702555557
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 08:38:04 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 08:38:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 08:38:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 08:38:18 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 08:38:20 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 08:43:46 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:32:07  time: 5.3225  data_time: 0.0026  memory: 27183  
07/14 08:47:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:03:32  time: 5.6304  data_time: 0.0027  memory: 27009  
07/14 08:51:48 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:46:16  time: 5.0157  data_time: 0.0023  memory: 25857  
07/14 08:55:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:37:14  time: 4.6907  data_time: 0.0017  memory: 27120  
07/14 08:59:35 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:28:47  time: 4.1862  data_time: 0.0016  memory: 26797  
07/14 09:03:22 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:21:51  time: 3.9465  data_time: 0.0017  memory: 26899  
07/14 09:07:16 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:16:25  time: 4.1370  data_time: 0.0016  memory: 26804  
07/14 09:10:55 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:10:22  time: 4.2589  data_time: 0.0015  memory: 26869  
07/14 09:14:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:03:20  time: 3.9825  data_time: 0.0014  memory: 25643  
07/14 09:17:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:57:24  time: 3.7169  data_time: 0.0014  memory: 24193  
07/14 09:20:55 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:52:17  time: 4.3665  data_time: 0.0016  memory: 26853  
07/14 09:24:12 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:47:01  time: 4.2198  data_time: 0.0016  memory: 26898  
07/14 09:27:38 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:42:23  time: 4.4478  data_time: 0.0014  memory: 27293  
07/14 09:31:18 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:38:21  time: 3.9380  data_time: 0.0016  memory: 27229  
07/14 09:34:54 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:34:16  time: 5.1914  data_time: 0.0015  memory: 27619  
07/14 09:38:02 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:29:32  time: 3.8995  data_time: 0.0017  memory: 25862  
07/14 09:41:18 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:25:11  time: 3.9072  data_time: 0.0017  memory: 9471  
07/14 09:44:26 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:20:47  time: 3.8421  data_time: 0.0014  memory: 25207  
07/14 09:48:00 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:17:00  time: 4.2925  data_time: 0.0015  memory: 26724  
07/14 09:51:17 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:12:56  time: 3.6844  data_time: 0.0016  memory: 26753  
07/14 09:54:50 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:09:12  time: 4.7384  data_time: 0.0015  memory: 27630  
07/14 09:58:17 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:05:24  time: 3.8063  data_time: 0.0016  memory: 25874  
07/14 10:01:33 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:01:30  time: 4.0593  data_time: 0.0015  memory: 24801  
07/14 10:04:49 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:57:38  time: 3.7043  data_time: 0.0016  memory: 11136  
07/14 10:08:01 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:53:48  time: 3.9425  data_time: 0.0014  memory: 25983  
07/14 10:11:01 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:49:54  time: 3.7526  data_time: 0.0015  memory: 9589  
07/14 10:14:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:46:11  time: 3.6748  data_time: 0.0015  memory: 23990  
07/14 10:17:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:42:36  time: 4.3685  data_time: 0.0015  memory: 26339  
07/14 10:21:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:38:56  time: 4.3996  data_time: 0.0015  memory: 25238  
07/14 10:24:12 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:35:17  time: 3.6753  data_time: 0.0014  memory: 9472  
07/14 10:27:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:31:42  time: 3.9320  data_time: 0.0015  memory: 26565  
07/14 10:30:48 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:28:06  time: 3.8699  data_time: 0.0016  memory: 9369  
07/14 10:34:09 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:24:33  time: 3.6770  data_time: 0.0014  memory: 26774  
07/14 10:37:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:21:01  time: 3.9673  data_time: 0.0016  memory: 25442  
07/14 10:40:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:17:30  time: 3.8052  data_time: 0.0014  memory: 26297  
07/14 10:44:12 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:13:58  time: 4.4563  data_time: 0.0492  memory: 24184  
07/14 10:47:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:10:28  time: 3.9783  data_time: 0.0016  memory: 8379  
07/14 10:50:40 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:06:57  time: 3.7155  data_time: 0.0015  memory: 27339  
07/14 10:54:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:03:28  time: 3.8040  data_time: 0.0015  memory: 24602  
07/14 10:57:16 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 3.6329  data_time: 0.0014  memory: 27386  
07/14 10:57:17 - mmengine - INFO - per class results:
07/14 10:57:17 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.4  |  0.41 |
|       building      | 0.0  |  0.0  |
|         sky         | 8.99 | 99.96 |
|        floor        | 0.02 |  0.02 |
|         tree        | 0.02 |  0.02 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.01 |  0.01 |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.01 |  0.01 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.12 |  0.16 |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.02 |  0.02 |
|        flower       | 0.01 |  0.01 |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.01 |  0.26 |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/14 10:57:17 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.9500  mIoU: 0.0600  mAcc: 0.6700  data_time: 0.0027  time: 4.1675
07/14 10:58:20 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1663580063
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1663580063
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 10:58:21 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='segpgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B4'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 10:58:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 10:58:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 10:58:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 10:58:50 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B4/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
07/14 11:04:45 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:50:48  time: 5.4495  data_time: 0.0023  memory: 27182  
07/14 11:09:02 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:13:49  time: 5.6041  data_time: 0.0025  memory: 27008  
07/14 11:12:43 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:51:19  time: 4.5226  data_time: 0.0018  memory: 25857  
07/14 11:16:50 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:42:04  time: 4.8627  data_time: 0.0018  memory: 27119  
07/14 11:20:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:33:11  time: 4.3053  data_time: 0.0017  memory: 26797  
07/14 11:24:35 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:25:56  time: 4.0449  data_time: 0.0017  memory: 26899  
07/14 11:28:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:20:44  time: 4.3810  data_time: 0.0016  memory: 26804  
07/14 11:32:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:14:59  time: 4.6719  data_time: 0.0015  memory: 26868  
07/14 11:35:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:07:54  time: 4.2233  data_time: 0.0015  memory: 25643  
07/14 11:39:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:01:52  time: 4.0301  data_time: 0.0015  memory: 24193  
07/14 11:43:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:56:41  time: 4.7139  data_time: 0.0016  memory: 26853  
07/14 11:46:34 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:51:22  time: 4.5581  data_time: 0.0016  memory: 26896  
07/14 11:50:17 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:46:49  time: 4.7014  data_time: 0.0015  memory: 27293  
slurmstepd: error: *** JOB 23861459 ON uc2n482 CANCELLED AT 2024-07-14T11:50:30 DUE TO TIME LIMIT ***

============================= JOB FEEDBACK =============================

NodeName=uc2n482
Job ID: 23861459
Array Job ID: 23860916_5
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: TIMEOUT (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 17:39:50
CPU Efficiency: 5.52% of 13-08:02:08 core-walltime
Job Wall-clock time: 20:00:08
Memory Utilized: 4.15 GB
Memory Efficiency: 4.15% of 100.00 GB
