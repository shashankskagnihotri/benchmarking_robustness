Started at Sun Sep 15 17:56:13 CEST 2024
/var/spool/slurmd/job24235247/slurm_script: line 15: activate: No such file or directory
Processing corruption type: gaussian_noise
09/15 17:58:16 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1859821915
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1859821915
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 17:58:16 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/gaussian_noise'

09/15 18:00:28 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:00:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:00:29 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:00:31 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:02:09 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:04:02  time: 0.8199  data_time: 0.0016  memory: 19986  
09/15 18:02:52 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:44:48  time: 1.0943  data_time: 0.0029  memory: 19982  
09/15 18:03:13 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:33:23  time: 0.3555  data_time: 0.0017  memory: 19955  
09/15 18:03:45 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:29:05  time: 0.6668  data_time: 0.0016  memory: 19982  
09/15 18:04:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:52  time: 0.3509  data_time: 0.0018  memory: 19978  
09/15 18:04:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:23:22  time: 0.1241  data_time: 0.0017  memory: 19978  
09/15 18:05:07 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:42  time: 0.3218  data_time: 0.0017  memory: 19978  
09/15 18:05:31 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:59  time: 0.3797  data_time: 0.0015  memory: 19978  
09/15 18:05:41 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:48  time: 0.2277  data_time: 0.0015  memory: 19952  
09/15 18:05:52 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:03  time: 0.1207  data_time: 0.0015  memory: 19918  
09/15 18:06:03 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:35  time: 0.3287  data_time: 0.0016  memory: 19977  
09/15 18:06:13 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:19  time: 0.3438  data_time: 0.0017  memory: 19979  
09/15 18:06:30 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:27  time: 0.4918  data_time: 0.0021  memory: 19988  
09/15 18:06:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:43  time: 0.1321  data_time: 0.0017  memory: 19986  
09/15 18:07:12 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:08  time: 0.9678  data_time: 0.0016  memory: 19993  
09/15 18:07:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:14  time: 0.1256  data_time: 0.0017  memory: 19956  
09/15 18:07:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:22  time: 0.1235  data_time: 0.0017  memory: 778  
09/15 18:07:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:40  time: 0.2790  data_time: 0.0015  memory: 19943  
09/15 18:07:56 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:12  time: 0.4445  data_time: 0.0016  memory: 19975  
09/15 18:08:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:37  time: 0.1199  data_time: 0.0016  memory: 19975  
09/15 18:08:24 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:08  time: 0.6113  data_time: 0.0016  memory: 19994  
09/15 18:08:40 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:40  time: 0.1308  data_time: 0.0017  memory: 19957  
09/15 18:08:50 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:09  time: 0.2360  data_time: 0.0016  memory: 19931  
09/15 18:08:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:37  time: 0.1231  data_time: 0.0016  memory: 1974  
09/15 18:09:07 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:10  time: 0.2360  data_time: 0.0015  memory: 19961  
09/15 18:09:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:41  time: 0.1248  data_time: 0.0016  memory: 778  
09/15 18:09:22 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:15  time: 0.1223  data_time: 0.0016  memory: 19913  
09/15 18:09:38 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:54  time: 0.3612  data_time: 0.0016  memory: 19966  
09/15 18:09:47 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:31  time: 0.3113  data_time: 0.0015  memory: 19943  
09/15 18:09:53 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:07  time: 0.1204  data_time: 0.0015  memory: 778  
09/15 18:10:03 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:46  time: 0.1268  data_time: 0.0019  memory: 19971  
09/15 18:10:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:24  time: 0.1280  data_time: 0.0017  memory: 769  
09/15 18:10:21 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:05  time: 0.1191  data_time: 0.0015  memory: 19976  
09/15 18:10:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:46  time: 0.1243  data_time: 0.0017  memory: 19948  
09/15 18:10:42 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:27  time: 0.1226  data_time: 0.0015  memory: 19966  
09/15 18:10:50 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:08  time: 0.1300  data_time: 0.0018  memory: 19918  
09/15 18:10:56 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:50  time: 0.1232  data_time: 0.0018  memory: 727  
09/15 18:11:05 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:33  time: 0.1633  data_time: 0.0031  memory: 19986  
09/15 18:11:16 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.1206  data_time: 0.0016  memory: 19927  
09/15 18:11:27 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1173  data_time: 0.0015  memory: 19989  
09/15 18:11:27 - mmengine - INFO - per class results:
09/15 18:11:27 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.91 | 88.08 |
|       building      | 78.97 |  89.5 |
|         sky         | 93.29 | 96.82 |
|        floor        |  76.6 | 90.26 |
|         tree        |  70.1 |  88.5 |
|       ceiling       | 79.89 |  89.8 |
|         road        |  79.4 | 92.64 |
|         bed         | 86.69 | 94.31 |
|      windowpane     | 58.92 | 75.67 |
|        grass        | 63.55 | 76.45 |
|       cabinet       | 59.19 | 69.58 |
|       sidewalk      | 52.63 | 61.93 |
|        person       | 76.76 | 89.45 |
|        earth        | 33.47 | 53.65 |
|         door        | 42.08 | 51.39 |
|        table        | 57.73 | 75.25 |
|       mountain      | 52.05 | 63.06 |
|        plant        | 46.67 | 55.49 |
|       curtain       | 65.99 | 76.17 |
|        chair        | 52.52 | 63.48 |
|         car         | 82.23 | 90.86 |
|        water        | 52.31 | 69.13 |
|       painting      | 68.39 | 79.79 |
|         sofa        | 65.92 | 82.35 |
|        shelf        | 40.99 | 59.78 |
|        house        | 38.57 | 58.33 |
|         sea         | 52.29 | 74.39 |
|        mirror       | 61.55 | 69.09 |
|         rug         | 40.91 | 45.93 |
|        field        |  29.4 | 38.28 |
|       armchair      |  41.7 | 58.83 |
|         seat        | 56.68 | 79.54 |
|        fence        | 42.04 | 54.55 |
|         desk        | 44.69 | 72.35 |
|         rock        | 46.24 | 75.09 |
|       wardrobe      | 52.98 | 63.35 |
|         lamp        | 59.17 | 69.07 |
|       bathtub       | 72.67 | 80.05 |
|       railing       | 31.94 | 42.04 |
|       cushion       |  52.6 | 65.29 |
|         base        | 13.81 | 17.57 |
|         box         | 19.09 | 23.93 |
|        column       | 40.37 | 58.48 |
|      signboard      | 34.15 | 46.24 |
|   chest of drawers  | 39.06 | 51.85 |
|       counter       | 22.06 | 30.19 |
|         sand        | 36.16 | 53.91 |
|         sink        | 67.34 | 77.35 |
|      skyscraper     | 49.64 | 68.02 |
|      fireplace      | 71.71 | 80.57 |
|     refrigerator    | 74.54 | 87.25 |
|      grandstand     | 40.36 | 73.84 |
|         path        | 22.23 | 32.66 |
|        stairs       | 28.13 |  33.5 |
|        runway       |  68.8 | 89.52 |
|         case        | 28.75 |  31.8 |
|      pool table     | 88.81 | 93.98 |
|        pillow       | 50.81 | 60.88 |
|     screen door     | 51.46 | 52.91 |
|       stairway      | 32.99 | 41.65 |
|        river        | 14.11 | 20.41 |
|        bridge       | 37.67 | 46.81 |
|       bookcase      | 34.64 | 52.65 |
|        blind        | 33.52 | 35.78 |
|     coffee table    | 55.97 | 70.05 |
|        toilet       | 81.69 | 87.82 |
|        flower       | 41.02 | 59.99 |
|         book        |  44.6 | 57.63 |
|         hill        | 10.84 | 26.06 |
|        bench        | 37.27 | 45.73 |
|      countertop     | 51.18 | 71.62 |
|        stove        | 76.12 | 84.15 |
|         palm        | 44.28 |  60.1 |
|    kitchen island   | 41.43 | 63.76 |
|       computer      | 56.51 | 63.93 |
|     swivel chair    | 45.32 | 57.01 |
|         boat        | 62.13 | 76.93 |
|         bar         | 27.68 | 35.43 |
|    arcade machine   | 40.22 | 41.27 |
|        hovel        | 26.04 | 39.11 |
|         bus         | 85.62 | 93.86 |
|        towel        | 54.01 | 66.27 |
|        light        | 43.48 | 48.87 |
|        truck        |  27.4 | 37.47 |
|        tower        |  6.5  |  9.13 |
|      chandelier     | 67.67 |  82.1 |
|        awning       | 21.61 | 26.35 |
|     streetlight     | 22.34 |  27.8 |
|        booth        | 46.17 | 48.91 |
| television receiver | 61.69 | 72.74 |
|       airplane      | 54.21 | 63.26 |
|      dirt track     |  3.36 |  4.54 |
|       apparel       | 29.65 | 39.87 |
|         pole        | 21.32 | 29.29 |
|         land        |  2.14 |  2.99 |
|      bannister      | 11.31 | 16.92 |
|      escalator      | 20.42 | 22.35 |
|       ottoman       | 50.12 | 57.84 |
|        bottle       | 36.33 | 53.36 |
|        buffet       |  36.3 | 41.06 |
|        poster       | 17.38 |  21.6 |
|        stage        | 12.73 |  17.3 |
|         van         | 45.32 | 59.69 |
|         ship        | 75.78 | 82.35 |
|       fountain      | 23.77 | 24.78 |
|    conveyer belt    | 77.51 | 90.61 |
|        canopy       | 20.35 |  22.0 |
|        washer       | 72.49 | 76.72 |
|      plaything      | 14.43 | 17.64 |
|    swimming pool    | 35.17 | 42.83 |
|        stool        | 28.06 | 40.24 |
|        barrel       | 14.65 | 50.88 |
|        basket       | 25.86 | 30.51 |
|      waterfall      | 77.66 | 87.87 |
|         tent        |  92.1 | 98.99 |
|         bag         |  7.19 |  7.79 |
|       minibike      | 69.54 | 80.54 |
|        cradle       |  82.3 | 94.21 |
|         oven        | 46.46 | 56.88 |
|         ball        | 21.03 | 23.64 |
|         food        | 48.16 | 59.19 |
|         step        |  5.08 |  5.74 |
|         tank        | 55.35 | 63.05 |
|      trade name     |  22.3 | 27.12 |
|      microwave      | 82.32 | 85.42 |
|         pot         | 34.76 |  38.4 |
|        animal       |  61.9 | 64.21 |
|       bicycle       | 53.71 | 73.26 |
|         lake        | 61.52 | 63.28 |
|      dishwasher     | 54.13 |  66.2 |
|        screen       | 51.52 | 74.22 |
|       blanket       | 12.38 | 13.39 |
|      sculpture      | 48.13 |  66.9 |
|         hood        | 46.75 | 51.36 |
|        sconce       | 39.21 | 45.18 |
|         vase        | 35.54 | 47.86 |
|    traffic light    | 28.83 | 40.25 |
|         tray        | 12.38 | 27.13 |
|        ashcan       | 32.62 | 41.11 |
|         fan         | 56.51 | 70.27 |
|         pier        | 28.86 | 40.29 |
|      crt screen     |  3.78 | 10.52 |
|        plate        | 50.17 | 61.71 |
|       monitor       | 15.14 | 17.58 |
|    bulletin board   | 29.66 | 36.38 |
|        shower       |  5.11 |  5.53 |
|       radiator      | 44.09 | 48.89 |
|        glass        |  14.8 | 16.55 |
|        clock        | 34.57 | 38.32 |
|         flag        | 50.76 | 55.82 |
+---------------------+-------+-------+
09/15 18:11:27 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.3900  mIoU: 45.0400  mAcc: 55.3300  data_time: 0.0020  time: 0.3280
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
09/15 18:11:39 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 803623089
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 803623089
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:11:39 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/shot_noise'

09/15 18:11:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:11:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:11:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:11:48 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:13:11 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:47  time: 0.9334  data_time: 0.0017  memory: 19986  
09/15 18:13:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:41:28  time: 1.1666  data_time: 0.0018  memory: 19982  
09/15 18:14:26 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:32:26  time: 0.4613  data_time: 0.0017  memory: 19955  
09/15 18:15:03 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:29:13  time: 0.7569  data_time: 0.0017  memory: 19982  
09/15 18:15:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:26:34  time: 0.4397  data_time: 0.0016  memory: 19978  
09/15 18:17:26 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:31:51  time: 0.5471  data_time: 0.0271  memory: 19978  
09/15 18:18:01 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:29:15  time: 0.3885  data_time: 0.0016  memory: 19978  
09/15 18:18:29 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:26:41  time: 0.4607  data_time: 0.0015  memory: 19978  
09/15 18:18:43 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:23:47  time: 0.3069  data_time: 0.0016  memory: 19952  
09/15 18:18:58 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:21:29  time: 0.1978  data_time: 0.0016  memory: 19918  
09/15 18:19:14 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:19:33  time: 0.4335  data_time: 0.0017  memory: 19977  
09/15 18:19:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:17:53  time: 0.4383  data_time: 0.0018  memory: 19979  
09/15 18:19:50 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:16:40  time: 0.5745  data_time: 0.0015  memory: 19988  
09/15 18:20:14 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:15:38  time: 0.2087  data_time: 0.0017  memory: 19986  
09/15 18:20:40 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:14:46  time: 1.0649  data_time: 0.0017  memory: 19993  
09/15 18:20:53 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:13:36  time: 0.2051  data_time: 0.0018  memory: 19956  
09/15 18:21:04 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:12:30  time: 0.2104  data_time: 0.0018  memory: 778  
09/15 18:21:18 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:11:35  time: 0.3536  data_time: 0.0015  memory: 19943  
09/15 18:21:41 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:10:55  time: 0.5317  data_time: 0.0017  memory: 19975  
09/15 18:21:57 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:10:08  time: 0.1940  data_time: 0.0016  memory: 19975  
09/15 18:22:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:09:29  time: 0.7127  data_time: 0.0016  memory: 19994  
09/15 18:22:36 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:49  time: 0.2069  data_time: 0.0017  memory: 19957  
09/15 18:22:50 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:08:08  time: 0.3209  data_time: 0.0016  memory: 19931  
09/15 18:23:01 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:28  time: 0.2070  data_time: 0.0016  memory: 1974  
09/15 18:23:16 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:52  time: 0.3165  data_time: 0.0016  memory: 19961  
09/15 18:23:26 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:15  time: 0.2094  data_time: 0.0016  memory: 778  
09/15 18:23:38 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:41  time: 0.1952  data_time: 0.0016  memory: 19913  
09/15 18:23:59 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:12  time: 0.4666  data_time: 0.0016  memory: 19966  
09/15 18:24:12 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:42  time: 0.4082  data_time: 0.0017  memory: 19943  
09/15 18:24:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:11  time: 0.1912  data_time: 0.0016  memory: 778  
09/15 18:24:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:42  time: 0.2173  data_time: 0.0016  memory: 19971  
09/15 18:24:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:14  time: 0.2067  data_time: 0.0017  memory: 769  
09/15 18:25:01 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:48  time: 0.1939  data_time: 0.0015  memory: 19976  
09/15 18:25:17 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:22  time: 0.2114  data_time: 0.0017  memory: 19948  
09/15 18:25:32 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:57  time: 0.2128  data_time: 0.0015  memory: 19966  
09/15 18:25:44 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:32  time: 0.2196  data_time: 0.0018  memory: 19918  
09/15 18:25:56 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:08  time: 0.2164  data_time: 0.0018  memory: 727  
09/15 18:26:09 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:45  time: 0.2072  data_time: 0.0016  memory: 19986  
09/15 18:26:23 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:22  time: 0.2048  data_time: 0.0016  memory: 19927  
09/15 18:26:37 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1879  data_time: 0.0014  memory: 19989  
09/15 18:26:38 - mmengine - INFO - per class results:
09/15 18:26:38 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.77 | 88.15 |
|       building      | 79.24 | 89.76 |
|         sky         | 93.02 | 96.53 |
|        floor        |  76.8 | 90.31 |
|         tree        | 71.18 | 88.69 |
|       ceiling       | 79.54 | 89.54 |
|         road        | 79.01 | 92.53 |
|         bed         | 86.61 | 94.52 |
|      windowpane     | 58.54 | 75.75 |
|        grass        | 64.88 | 76.94 |
|       cabinet       | 60.04 | 70.13 |
|       sidewalk      | 51.54 | 60.35 |
|        person       | 77.17 | 90.21 |
|        earth        | 34.12 | 55.31 |
|         door        | 42.07 | 50.52 |
|        table        | 56.89 | 74.76 |
|       mountain      | 55.44 | 67.08 |
|        plant        | 47.07 | 56.23 |
|       curtain       |  63.2 | 73.44 |
|        chair        | 52.69 |  64.1 |
|         car         | 82.01 | 90.39 |
|        water        | 53.46 | 70.87 |
|       painting      | 68.05 | 79.63 |
|         sofa        | 63.74 |  80.6 |
|        shelf        | 40.04 | 59.04 |
|        house        | 41.15 | 59.34 |
|         sea         | 54.39 | 75.14 |
|        mirror       | 60.08 | 66.95 |
|         rug         | 38.85 | 43.22 |
|        field        | 31.15 | 40.73 |
|       armchair      | 41.97 | 60.55 |
|         seat        | 59.05 | 80.61 |
|        fence        | 42.14 | 56.11 |
|         desk        | 43.66 | 70.58 |
|         rock        | 41.16 | 66.87 |
|       wardrobe      | 51.33 | 60.62 |
|         lamp        | 58.06 |  68.6 |
|       bathtub       | 71.34 |  78.8 |
|       railing       | 30.19 | 39.85 |
|       cushion       | 51.87 | 64.18 |
|         base        | 12.12 | 16.19 |
|         box         | 20.13 | 24.91 |
|        column       | 39.89 | 57.08 |
|      signboard      | 34.38 | 46.08 |
|   chest of drawers  | 38.24 | 51.48 |
|       counter       | 24.47 | 33.57 |
|         sand        | 35.37 |  52.0 |
|         sink        | 64.56 | 75.11 |
|      skyscraper     | 49.75 |  68.0 |
|      fireplace      | 70.12 | 79.92 |
|     refrigerator    | 73.39 | 85.35 |
|      grandstand     |  38.9 | 71.54 |
|         path        | 21.04 | 32.18 |
|        stairs       | 26.44 | 32.67 |
|        runway       | 70.33 | 89.24 |
|         case        | 29.61 | 34.53 |
|      pool table     | 91.45 | 95.16 |
|        pillow       | 51.92 | 62.34 |
|     screen door     | 47.89 | 49.23 |
|       stairway      | 32.42 | 42.05 |
|        river        | 13.75 | 20.44 |
|        bridge       | 38.21 | 47.41 |
|       bookcase      | 36.87 | 53.09 |
|        blind        | 32.62 | 34.77 |
|     coffee table    | 56.59 | 70.08 |
|        toilet       | 80.64 | 86.83 |
|        flower       | 41.17 | 60.83 |
|         book        | 43.92 | 57.18 |
|         hill        |  10.7 | 24.98 |
|        bench        | 39.08 | 46.57 |
|      countertop     | 52.76 | 73.27 |
|        stove        | 74.39 | 83.06 |
|         palm        | 45.72 | 61.01 |
|    kitchen island   | 40.68 | 66.61 |
|       computer      |  56.4 | 63.94 |
|     swivel chair    | 43.17 | 61.04 |
|         boat        | 66.42 |  85.1 |
|         bar         | 22.83 | 29.16 |
|    arcade machine   | 42.02 | 43.57 |
|        hovel        | 27.45 | 41.06 |
|         bus         | 85.63 | 92.96 |
|        towel        | 50.31 |  61.2 |
|        light        | 42.23 | 47.06 |
|        truck        |  29.7 | 39.43 |
|        tower        |  5.83 |  9.26 |
|      chandelier     | 64.02 | 79.35 |
|        awning       | 21.77 | 26.13 |
|     streetlight     | 22.37 | 27.38 |
|        booth        | 47.23 | 50.03 |
| television receiver | 63.79 |  74.2 |
|       airplane      | 55.36 | 63.42 |
|      dirt track     |  2.5  |  6.41 |
|       apparel       | 25.68 | 36.02 |
|         pole        | 21.43 | 30.83 |
|         land        |  1.9  |  2.55 |
|      bannister      | 12.25 | 17.51 |
|      escalator      | 20.22 | 20.97 |
|       ottoman       | 44.62 | 51.63 |
|        bottle       | 33.18 |  47.5 |
|        buffet       | 37.21 | 43.44 |
|        poster       | 18.21 |  22.4 |
|        stage        | 15.94 |  22.5 |
|         van         | 44.15 | 59.82 |
|         ship        | 84.13 | 87.07 |
|       fountain      | 21.21 | 22.22 |
|    conveyer belt    | 75.61 | 90.52 |
|        canopy       | 12.96 | 14.31 |
|        washer       | 68.23 | 74.15 |
|      plaything      | 11.71 | 14.03 |
|    swimming pool    | 23.89 | 27.12 |
|        stool        |  30.5 | 43.66 |
|        barrel       | 27.67 | 65.92 |
|        basket       | 27.95 | 32.78 |
|      waterfall      | 77.99 | 87.69 |
|         tent        | 91.72 | 98.96 |
|         bag         |  6.73 |  7.44 |
|       minibike      | 71.22 | 81.58 |
|        cradle       | 81.56 |  92.6 |
|         oven        | 54.51 | 66.69 |
|         ball        |  25.5 | 28.14 |
|         food        | 47.01 |  58.0 |
|         step        |  1.77 |  2.07 |
|         tank        |  55.2 |  62.8 |
|      trade name     | 21.06 | 26.11 |
|      microwave      | 80.64 | 84.33 |
|         pot         | 35.14 | 39.26 |
|        animal       |  63.5 | 65.83 |
|       bicycle       |  53.1 | 73.34 |
|         lake        | 61.39 | 63.14 |
|      dishwasher     | 61.23 | 66.97 |
|        screen       | 49.86 | 72.58 |
|       blanket       | 14.31 | 15.73 |
|      sculpture      | 46.39 | 65.95 |
|         hood        | 43.37 | 51.35 |
|        sconce       | 36.81 | 42.25 |
|         vase        | 35.27 | 48.02 |
|    traffic light    | 28.37 | 39.49 |
|         tray        | 12.28 | 23.39 |
|        ashcan       | 35.76 | 51.14 |
|         fan         | 55.78 | 69.58 |
|         pier        | 39.55 | 54.72 |
|      crt screen     |  3.92 | 13.16 |
|        plate        | 43.85 | 52.62 |
|       monitor       |  6.5  |  7.11 |
|    bulletin board   | 30.85 | 37.09 |
|        shower       |  4.04 |  5.11 |
|       radiator      | 30.84 | 32.61 |
|        glass        | 14.33 | 15.57 |
|        clock        | 35.35 | 39.98 |
|         flag        | 36.43 | 40.52 |
+---------------------+-------+-------+
09/15 18:26:38 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.3600  mIoU: 44.7100  mAcc: 55.0200  data_time: 0.0027  time: 0.4443
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
09/15 18:28:29 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1460253395
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1460253395
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:28:29 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/impulse_noise'

09/15 18:29:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:29:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:29:15 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:29:16 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:30:50 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:00:59  time: 0.8681  data_time: 0.0044  memory: 19986  
09/15 18:31:33 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:43:11  time: 1.0723  data_time: 0.0018  memory: 19982  
09/15 18:31:53 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:32:15  time: 0.3360  data_time: 0.0017  memory: 19955  
09/15 18:32:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:28:14  time: 0.6503  data_time: 0.0018  memory: 19982  
09/15 18:32:52 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:09  time: 0.3320  data_time: 0.0016  memory: 19978  
09/15 18:33:18 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:47  time: 0.1138  data_time: 0.0043  memory: 19978  
09/15 18:33:47 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:14  time: 0.3626  data_time: 0.0077  memory: 19978  
09/15 18:34:11 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:36  time: 0.3840  data_time: 0.0016  memory: 19978  
09/15 18:34:20 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:26  time: 0.2122  data_time: 0.0015  memory: 19952  
09/15 18:34:31 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:43  time: 0.1017  data_time: 0.0016  memory: 19918  
09/15 18:36:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:17:59  time: 0.4690  data_time: 0.0210  memory: 19977  
09/15 18:36:18 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:16:23  time: 0.3262  data_time: 0.0017  memory: 19979  
09/15 18:36:34 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:15:08  time: 0.4584  data_time: 0.0014  memory: 19988  
09/15 18:36:53 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:14:06  time: 0.1070  data_time: 0.0017  memory: 19986  
09/15 18:37:13 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:13:14  time: 0.9509  data_time: 0.0015  memory: 19993  
09/15 18:37:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:12:06  time: 0.1017  data_time: 0.0017  memory: 19956  
09/15 18:37:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:02  time: 0.1041  data_time: 0.0017  memory: 778  
09/15 18:37:36 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:09  time: 0.2586  data_time: 0.0015  memory: 19943  
09/15 18:37:54 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:31  time: 0.4244  data_time: 0.0016  memory: 19975  
09/15 18:38:05 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:48  time: 0.1050  data_time: 0.0016  memory: 19975  
09/15 18:38:20 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:11  time: 0.5905  data_time: 0.0015  memory: 19994  
09/15 18:38:33 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:35  time: 0.1022  data_time: 0.0016  memory: 19957  
09/15 18:38:42 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:57  time: 0.2132  data_time: 0.0015  memory: 19931  
09/15 18:38:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:20  time: 0.1020  data_time: 0.0015  memory: 1974  
09/15 18:38:57 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:48  time: 0.2185  data_time: 0.0015  memory: 19961  
09/15 18:39:02 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:15  time: 0.0948  data_time: 0.0015  memory: 778  
09/15 18:39:09 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:44  time: 0.0905  data_time: 0.0015  memory: 19913  
09/15 18:39:23 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:19  time: 0.3322  data_time: 0.0015  memory: 19966  
09/15 18:39:32 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:53  time: 0.2909  data_time: 0.0015  memory: 19943  
09/15 18:39:37 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:26  time: 0.0964  data_time: 0.0015  memory: 778  
09/15 18:39:44 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:01  time: 0.1004  data_time: 0.0015  memory: 19971  
09/15 18:39:49 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:37  time: 0.0976  data_time: 0.0016  memory: 769  
09/15 18:39:59 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:16  time: 0.0962  data_time: 0.0015  memory: 19976  
09/15 18:40:09 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:55  time: 0.0995  data_time: 0.0017  memory: 19948  
09/15 18:40:18 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:34  time: 0.1011  data_time: 0.0014  memory: 19966  
09/15 18:40:25 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:14  time: 0.1028  data_time: 0.0017  memory: 19918  
09/15 18:40:30 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:54  time: 0.1026  data_time: 0.0017  memory: 727  
09/15 18:40:37 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:35  time: 0.1004  data_time: 0.0015  memory: 19986  
09/15 18:40:45 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.1060  data_time: 0.0015  memory: 19927  
09/15 18:40:54 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0928  data_time: 0.0014  memory: 19989  
09/15 18:40:54 - mmengine - INFO - per class results:
09/15 18:40:54 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 70.02 | 88.98 |
|       building      | 78.75 | 90.06 |
|         sky         | 92.24 | 95.82 |
|        floor        | 74.39 | 89.17 |
|         tree        | 68.93 |  88.8 |
|       ceiling       | 78.52 |  88.6 |
|         road        | 78.21 | 89.76 |
|         bed         | 83.86 |  92.7 |
|      windowpane     | 56.89 |  72.0 |
|        grass        | 66.27 | 79.97 |
|       cabinet       | 53.82 | 63.08 |
|       sidewalk      |  52.2 | 63.58 |
|        person       | 75.78 | 89.43 |
|        earth        | 33.09 | 53.66 |
|         door        | 37.11 | 43.12 |
|        table        |  51.7 | 69.41 |
|       mountain      | 47.45 | 58.92 |
|        plant        | 44.44 | 52.91 |
|       curtain       | 61.76 |  73.0 |
|        chair        | 49.85 | 59.39 |
|         car         | 81.18 | 90.25 |
|        water        | 52.11 | 69.37 |
|       painting      | 67.63 | 78.97 |
|         sofa        | 62.77 | 81.01 |
|        shelf        | 40.25 | 60.31 |
|        house        | 40.39 | 52.29 |
|         sea         | 51.03 | 65.16 |
|        mirror       | 54.58 | 61.81 |
|         rug         | 40.98 |  45.9 |
|        field        | 28.13 | 36.14 |
|       armchair      | 37.47 | 54.26 |
|         seat        | 51.14 | 75.17 |
|        fence        | 41.97 | 59.41 |
|         desk        | 40.44 | 65.62 |
|         rock        | 44.32 |  71.0 |
|       wardrobe      | 40.46 | 51.63 |
|         lamp        |  56.8 | 66.02 |
|       bathtub       | 66.88 | 73.05 |
|       railing       | 31.03 | 40.03 |
|       cushion       | 47.32 | 55.46 |
|         base        | 11.87 | 15.03 |
|         box         | 16.72 | 23.11 |
|        column       | 39.08 | 52.19 |
|      signboard      | 33.53 | 44.33 |
|   chest of drawers  | 41.75 | 55.36 |
|       counter       | 20.61 | 25.19 |
|         sand        | 33.18 | 48.65 |
|         sink        | 65.15 | 73.94 |
|      skyscraper     | 48.49 | 65.48 |
|      fireplace      | 57.72 | 61.87 |
|     refrigerator    | 70.18 | 79.67 |
|      grandstand     | 38.82 | 77.63 |
|         path        | 16.94 | 25.49 |
|        stairs       | 24.75 | 29.94 |
|        runway       | 67.58 | 85.11 |
|         case        |  23.0 | 24.47 |
|      pool table     | 88.24 | 91.56 |
|        pillow       | 52.84 | 64.51 |
|     screen door     | 58.46 | 62.71 |
|       stairway      | 32.97 | 39.97 |
|        river        |  9.98 | 18.23 |
|        bridge       | 29.59 | 34.21 |
|       bookcase      | 38.36 | 48.91 |
|        blind        |  7.03 |  7.31 |
|     coffee table    | 53.41 | 63.07 |
|        toilet       | 79.26 | 84.62 |
|        flower       | 40.32 | 55.94 |
|         book        | 40.11 | 50.63 |
|         hill        | 10.22 | 26.26 |
|        bench        | 33.14 | 42.09 |
|      countertop     | 49.69 |  70.2 |
|        stove        | 70.37 | 78.65 |
|         palm        | 44.99 | 60.49 |
|    kitchen island   | 29.19 | 39.63 |
|       computer      | 48.04 | 52.41 |
|     swivel chair    | 36.38 |  49.2 |
|         boat        | 66.39 | 77.93 |
|         bar         | 23.75 | 29.52 |
|    arcade machine   | 21.84 | 22.52 |
|        hovel        | 33.62 | 42.42 |
|         bus         | 84.92 | 92.49 |
|        towel        | 49.44 | 60.08 |
|        light        | 40.42 | 44.23 |
|        truck        | 31.51 |  43.5 |
|        tower        |  6.51 |  8.6  |
|      chandelier     | 61.97 | 74.15 |
|        awning       | 16.97 | 18.16 |
|     streetlight     | 22.34 | 28.08 |
|        booth        | 35.03 | 38.57 |
| television receiver | 43.75 | 48.71 |
|       airplane      | 55.06 | 62.04 |
|      dirt track     |  5.92 |  7.81 |
|       apparel       | 26.91 |  34.4 |
|         pole        | 17.64 | 23.42 |
|         land        |  3.33 |  4.46 |
|      bannister      | 11.27 | 16.19 |
|      escalator      | 17.58 | 19.74 |
|       ottoman       | 45.56 | 54.28 |
|        bottle       | 34.37 | 50.87 |
|        buffet       | 32.54 | 35.59 |
|        poster       | 16.61 | 20.84 |
|        stage        |  12.2 | 16.24 |
|         van         | 39.32 | 55.21 |
|         ship        | 68.83 | 69.49 |
|       fountain      | 23.76 | 24.62 |
|    conveyer belt    | 79.65 | 86.11 |
|        canopy       |  9.57 |  11.0 |
|        washer       | 69.96 | 72.72 |
|      plaything      | 15.71 | 18.28 |
|    swimming pool    | 30.94 | 34.52 |
|        stool        | 29.59 | 39.11 |
|        barrel       | 19.23 | 48.66 |
|        basket       | 27.18 | 32.67 |
|      waterfall      | 75.67 | 86.02 |
|         tent        | 90.55 | 99.29 |
|         bag         |  3.68 |  4.04 |
|       minibike      | 60.56 | 73.19 |
|        cradle       | 78.92 | 92.15 |
|         oven        | 41.32 | 52.83 |
|         ball        | 21.43 |  23.7 |
|         food        | 56.32 | 71.95 |
|         step        |  1.86 |  2.08 |
|         tank        | 55.52 | 62.85 |
|      trade name     | 20.75 | 24.65 |
|      microwave      | 79.91 |  83.7 |
|         pot         |  31.1 | 34.03 |
|        animal       | 61.88 | 64.19 |
|       bicycle       | 52.22 | 71.92 |
|         lake        | 62.41 | 64.08 |
|      dishwasher     | 41.66 | 46.37 |
|        screen       | 46.23 | 57.76 |
|       blanket       |  9.78 | 10.32 |
|      sculpture      | 46.82 | 63.06 |
|         hood        | 45.27 | 48.03 |
|        sconce       | 34.25 |  39.7 |
|         vase        | 35.29 | 47.07 |
|    traffic light    |  27.4 | 38.11 |
|         tray        | 10.43 | 25.91 |
|        ashcan       | 32.46 | 39.02 |
|         fan         |  54.4 |  65.7 |
|         pier        | 24.45 | 30.16 |
|      crt screen     |  3.71 | 10.56 |
|        plate        | 46.66 |  54.9 |
|       monitor       | 16.19 | 18.46 |
|    bulletin board   | 17.84 | 21.52 |
|        shower       |  4.24 |  8.61 |
|       radiator      | 31.84 | 33.87 |
|        glass        | 13.47 | 14.76 |
|        clock        | 35.45 | 41.11 |
|         flag        | 38.21 | 40.67 |
+---------------------+-------+-------+
09/15 18:40:54 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.0200  mIoU: 42.2400  mAcc: 51.4500  data_time: 0.0027  time: 0.3488
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
09/15 18:41:06 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1129167419
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1129167419
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:41:07 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/defocus_blur'

09/15 18:41:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:41:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:41:17 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:41:18 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:42:34 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:49:04  time: 0.8261  data_time: 0.0018  memory: 19986  
09/15 18:43:16 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:37:10  time: 1.0712  data_time: 0.0016  memory: 19982  
09/15 18:43:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:14  time: 0.3421  data_time: 0.0016  memory: 19955  
09/15 18:44:07 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:25:14  time: 0.6418  data_time: 0.0016  memory: 19982  
09/15 18:44:34 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:22:46  time: 0.3307  data_time: 0.0015  memory: 19978  
09/15 18:45:01 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:00  time: 0.1099  data_time: 0.0017  memory: 19978  
09/15 18:45:29 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:41  time: 0.3085  data_time: 0.0016  memory: 19978  
09/15 18:45:52 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:14  time: 0.3698  data_time: 0.0015  memory: 19978  
09/15 18:46:02 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:15  time: 0.2160  data_time: 0.0016  memory: 19952  
09/15 18:46:12 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:39  time: 0.1039  data_time: 0.0016  memory: 19918  
09/15 18:46:22 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:19  time: 0.3178  data_time: 0.0017  memory: 19977  
09/15 18:46:31 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:09  time: 0.3281  data_time: 0.0018  memory: 19979  
09/15 18:46:48 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:11:23  time: 0.4648  data_time: 0.0015  memory: 19988  
09/15 18:47:06 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:45  time: 0.1092  data_time: 0.0017  memory: 19986  
09/15 18:47:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:14  time: 0.9544  data_time: 0.0016  memory: 19993  
09/15 18:47:35 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:24  time: 0.1116  data_time: 0.0018  memory: 19956  
09/15 18:47:40 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:36  time: 0.1075  data_time: 0.0017  memory: 778  
09/15 18:47:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:58  time: 0.2663  data_time: 0.0015  memory: 19943  
09/15 18:48:08 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:32  time: 0.4262  data_time: 0.0016  memory: 19975  
09/15 18:48:19 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:00  time: 0.1071  data_time: 0.0016  memory: 19975  
09/15 18:48:34 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:34  time: 0.5920  data_time: 0.0016  memory: 19994  
09/15 18:48:47 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:07  time: 0.1059  data_time: 0.0016  memory: 19957  
09/15 18:48:57 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:38  time: 0.2155  data_time: 0.0016  memory: 19931  
09/15 18:49:02 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:08  time: 0.0986  data_time: 0.0015  memory: 1974  
09/15 18:49:12 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:44  time: 0.2302  data_time: 0.0016  memory: 19961  
09/15 18:49:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:18  time: 0.1113  data_time: 0.0016  memory: 778  
09/15 18:49:25 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:54  time: 0.1151  data_time: 0.0016  memory: 19913  
09/15 18:49:42 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:35  time: 0.3493  data_time: 0.0016  memory: 19966  
09/15 18:49:51 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:14  time: 0.3010  data_time: 0.0016  memory: 19943  
09/15 18:49:57 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:52  time: 0.1101  data_time: 0.0016  memory: 778  
09/15 18:50:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:32  time: 0.1156  data_time: 0.0016  memory: 19971  
09/15 18:50:10 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:12  time: 0.1140  data_time: 0.0018  memory: 769  
09/15 18:50:22 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:55  time: 0.1102  data_time: 0.0016  memory: 19976  
09/15 18:50:33 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:37  time: 0.1128  data_time: 0.0018  memory: 19948  
09/15 18:50:42 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:20  time: 0.1129  data_time: 0.0016  memory: 19966  
09/15 18:50:50 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:03  time: 0.1188  data_time: 0.0018  memory: 19918  
09/15 18:50:57 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:46  time: 0.1123  data_time: 0.0018  memory: 727  
09/15 18:51:05 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:30  time: 0.1182  data_time: 0.0016  memory: 19986  
09/15 18:51:14 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.1125  data_time: 0.0028  memory: 19927  
09/15 18:51:25 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2431  data_time: 0.0056  memory: 19989  
09/15 18:51:25 - mmengine - INFO - per class results:
09/15 18:51:25 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.57 |  87.5 |
|       building      | 80.13 | 92.08 |
|         sky         | 93.39 | 96.27 |
|        floor        | 80.44 | 89.59 |
|         tree        | 71.55 | 86.24 |
|       ceiling       | 83.57 | 91.92 |
|         road        | 82.54 | 91.89 |
|         bed         | 87.99 | 94.93 |
|      windowpane     | 59.16 | 77.51 |
|        grass        | 67.54 | 83.74 |
|       cabinet       | 60.71 | 74.67 |
|       sidewalk      |  61.6 | 74.73 |
|        person       |  76.6 | 89.71 |
|        earth        | 33.82 | 49.47 |
|         door        | 46.83 | 58.91 |
|        table        | 55.43 | 73.64 |
|       mountain      | 56.98 | 69.39 |
|        plant        | 45.94 | 57.48 |
|       curtain       | 69.16 | 80.68 |
|        chair        | 53.77 |  69.5 |
|         car         | 82.39 | 92.61 |
|        water        | 55.26 | 73.83 |
|       painting      | 69.15 |  83.7 |
|         sofa        | 65.15 | 85.51 |
|        shelf        | 42.86 | 62.84 |
|        house        | 42.96 | 59.69 |
|         sea         | 60.44 | 75.56 |
|        mirror       | 65.04 | 74.14 |
|         rug         | 62.19 | 74.99 |
|        field        |  30.2 | 44.93 |
|       armchair      |  40.0 | 54.53 |
|         seat        | 59.53 |  79.4 |
|        fence        | 42.33 | 54.68 |
|         desk        | 47.77 | 68.57 |
|         rock        | 45.19 | 66.64 |
|       wardrobe      | 54.69 | 67.39 |
|         lamp        | 58.73 | 73.75 |
|       bathtub       | 74.95 | 81.44 |
|       railing       |  31.1 | 46.96 |
|       cushion       | 50.95 | 60.68 |
|         base        | 27.31 | 38.73 |
|         box         | 24.48 | 32.45 |
|        column       | 42.31 | 53.96 |
|      signboard      | 33.58 | 43.09 |
|   chest of drawers  | 34.64 |  52.8 |
|       counter       |  23.6 |  29.0 |
|         sand        | 34.43 | 52.95 |
|         sink        | 65.76 | 77.06 |
|      skyscraper     |  51.7 | 64.41 |
|      fireplace      | 74.64 | 82.46 |
|     refrigerator    | 75.08 | 84.48 |
|      grandstand     | 42.32 | 77.76 |
|         path        | 21.81 | 33.99 |
|        stairs       | 18.85 | 22.69 |
|        runway       | 73.34 | 87.74 |
|         case        | 46.11 | 55.62 |
|      pool table     | 89.56 | 95.74 |
|        pillow       | 54.73 | 65.73 |
|     screen door     | 67.02 | 71.31 |
|       stairway      | 24.28 | 34.27 |
|        river        |  8.01 | 12.15 |
|        bridge       | 33.85 | 38.16 |
|       bookcase      | 34.94 | 50.86 |
|        blind        | 36.04 | 38.44 |
|     coffee table    | 51.47 | 76.02 |
|        toilet       | 82.74 | 88.71 |
|        flower       | 36.94 | 53.19 |
|         book        | 42.19 | 57.87 |
|         hill        | 12.75 | 20.44 |
|        bench        | 39.93 | 48.91 |
|      countertop     | 53.84 | 74.06 |
|        stove        | 73.68 | 83.34 |
|         palm        |  42.4 | 51.43 |
|    kitchen island   | 39.74 | 62.02 |
|       computer      | 54.63 | 64.53 |
|     swivel chair    | 41.43 | 61.31 |
|         boat        |  65.8 | 86.94 |
|         bar         | 39.11 | 53.02 |
|    arcade machine   | 86.04 | 95.03 |
|        hovel        | 11.01 | 12.77 |
|         bus         | 80.16 | 94.39 |
|        towel        | 60.84 | 76.25 |
|        light        | 48.62 | 60.03 |
|        truck        | 30.69 | 40.02 |
|        tower        |  7.0  |  8.6  |
|      chandelier     | 62.35 |  77.7 |
|        awning       | 23.36 | 28.41 |
|     streetlight     |  20.1 | 27.54 |
|        booth        | 45.95 | 52.39 |
| television receiver | 61.61 | 77.44 |
|       airplane      | 56.63 | 65.95 |
|      dirt track     |  8.03 | 12.99 |
|       apparel       | 31.69 | 40.71 |
|         pole        |  13.8 |  16.0 |
|         land        |  5.57 |  7.98 |
|      bannister      |  9.94 | 14.17 |
|      escalator      | 33.27 | 41.35 |
|       ottoman       | 46.03 | 59.34 |
|        bottle       | 32.99 |  48.3 |
|        buffet       | 45.41 | 55.11 |
|        poster       | 21.39 | 26.52 |
|        stage        | 13.99 | 26.41 |
|         van         | 43.78 | 53.04 |
|         ship        | 85.07 | 87.26 |
|       fountain      | 22.01 | 22.52 |
|    conveyer belt    | 82.63 | 90.05 |
|        canopy       | 20.59 | 25.81 |
|        washer       | 67.36 | 74.85 |
|      plaything      |  15.3 | 30.69 |
|    swimming pool    | 50.74 | 85.98 |
|        stool        | 35.21 | 45.93 |
|        barrel       | 45.57 | 68.95 |
|        basket       | 20.79 | 25.24 |
|      waterfall      | 64.34 |  95.4 |
|         tent        | 94.25 | 98.44 |
|         bag         |  6.27 |  6.89 |
|       minibike      | 63.67 | 77.97 |
|        cradle       | 76.31 | 95.43 |
|         oven        | 47.07 |  58.7 |
|         ball        | 45.18 | 50.86 |
|         food        | 39.52 |  43.7 |
|         step        |  6.35 |  7.2  |
|         tank        | 57.33 |  62.9 |
|      trade name     | 21.38 | 23.81 |
|      microwave      | 83.91 | 87.53 |
|         pot         | 44.17 | 53.01 |
|        animal       | 56.69 | 58.88 |
|       bicycle       |  50.4 | 71.14 |
|         lake        | 38.78 | 65.49 |
|      dishwasher     | 62.61 | 68.02 |
|        screen       |  55.3 | 71.89 |
|       blanket       |  8.66 |  9.68 |
|      sculpture      | 48.51 | 61.46 |
|         hood        | 53.26 |  60.3 |
|        sconce       | 45.44 | 56.29 |
|         vase        | 33.68 | 45.49 |
|    traffic light    | 26.77 | 49.27 |
|         tray        |  5.23 |  9.77 |
|        ashcan       | 35.04 | 48.91 |
|         fan         | 57.02 |  69.9 |
|         pier        |  42.2 | 54.48 |
|      crt screen     |  5.3  | 15.91 |
|        plate        |  44.1 | 58.15 |
|       monitor       | 42.65 | 52.91 |
|    bulletin board   | 36.42 | 44.88 |
|        shower       |  4.54 |  6.02 |
|       radiator      | 45.26 | 49.55 |
|        glass        |  9.23 |  9.56 |
|        clock        | 37.02 | 43.81 |
|         flag        | 30.82 | 32.91 |
+---------------------+-------+-------+
09/15 18:51:25 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.7600  mIoU: 46.7300  mAcc: 58.0100  data_time: 0.0019  time: 0.3034
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
09/15 18:51:57 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1258584778
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1258584778
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:51:57 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/glass_blur'

09/15 18:52:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:52:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:52:12 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 18:52:13 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 19:01:45 - mmengine - INFO - Iter(test) [  50/2000]    eta: 6:11:17  time: 8.6972  data_time: 0.0030  memory: 19986  
09/15 19:08:46 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 5:14:24  time: 9.0732  data_time: 0.0057  memory: 19982  
09/15 19:15:35 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 4:48:01  time: 8.5073  data_time: 0.0227  memory: 19955  
09/15 19:23:47 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 4:44:00  time: 8.0019  data_time: 0.0086  memory: 19982  
09/15 19:30:18 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 4:26:29  time: 7.6589  data_time: 0.0036  memory: 19978  
09/15 19:36:55 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 4:13:15  time: 8.1046  data_time: 0.0215  memory: 19978  
09/15 19:44:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 4:04:54  time: 7.8139  data_time: 0.0184  memory: 19978  
09/15 19:52:31 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 4:01:10  time: 7.8012  data_time: 0.0034  memory: 19978  
09/15 19:58:13 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:47:16  time: 6.9499  data_time: 0.0033  memory: 19952  
09/15 20:04:33 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 3:36:59  time: 7.3723  data_time: 0.0037  memory: 19918  
09/15 20:11:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 3:28:32  time: 8.2982  data_time: 0.0100  memory: 19977  
09/15 20:19:04 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 3:22:38  time: 7.7828  data_time: 0.0018  memory: 19979  
09/15 20:25:22 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 3:13:25  time: 7.8247  data_time: 0.0038  memory: 19988  
09/15 20:32:13 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 3:05:41  time: 7.9288  data_time: 0.0077  memory: 19986  
09/15 20:39:07 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:58:08  time: 8.6518  data_time: 0.0239  memory: 19993  
09/15 20:46:35 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:51:31  time: 15.3497  data_time: 0.0238  memory: 19956  
09/15 20:52:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:42:37  time: 7.0329  data_time: 0.0017  memory: 778  
09/15 20:57:58 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:33:40  time: 6.8921  data_time: 0.0038  memory: 19943  
09/15 21:04:32 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:26:13  time: 7.7536  data_time: 0.0114  memory: 19975  
09/15 21:10:54 - mmengine - INFO - Iter(test) [1000/2000]    eta: 2:18:39  time: 7.4742  data_time: 0.0191  memory: 19975  
09/15 21:19:28 - mmengine - INFO - Iter(test) [1050/2000]    eta: 2:13:12  time: 19.0703  data_time: 0.0144  memory: 19994  
09/15 21:26:23 - mmengine - INFO - Iter(test) [1100/2000]    eta: 2:06:07  time: 7.1299  data_time: 0.0034  memory: 19957  
09/15 21:32:45 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:58:38  time: 9.0449  data_time: 0.0068  memory: 19931  
09/15 21:38:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:51:09  time: 7.2529  data_time: 0.0057  memory: 1974  
09/15 21:45:13 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:43:47  time: 7.8791  data_time: 0.0230  memory: 19961  
09/15 21:51:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:36:25  time: 7.8096  data_time: 0.0248  memory: 778  
09/15 21:57:38 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:29:15  time: 7.0153  data_time: 0.0146  memory: 19913  
09/15 22:05:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:22:51  time: 7.8887  data_time: 0.0037  memory: 19966  
09/15 22:11:27 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:15:33  time: 7.8156  data_time: 0.0040  memory: 19943  
09/15 22:17:26 - mmengine - INFO - Iter(test) [1500/2000]    eta: 1:08:23  time: 6.8561  data_time: 0.0079  memory: 778  
09/15 22:23:55 - mmengine - INFO - Iter(test) [1550/2000]    eta: 1:01:27  time: 7.6698  data_time: 0.0047  memory: 19971  
09/15 22:30:00 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:54:26  time: 7.4212  data_time: 0.0053  memory: 769  
09/15 22:36:16 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:47:31  time: 6.9880  data_time: 0.0074  memory: 19976  
09/15 22:43:58 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:40:53  time: 7.2846  data_time: 0.0024  memory: 19948  
09/15 22:50:17 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:34:00  time: 7.3537  data_time: 0.0036  memory: 19966  
09/15 22:55:57 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:27:04  time: 6.9309  data_time: 0.0018  memory: 19918  
09/15 23:02:34 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:20:17  time: 8.7477  data_time: 0.0282  memory: 727  
09/15 23:08:37 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:13:29  time: 7.5690  data_time: 0.0239  memory: 19986  
09/15 23:15:06 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:06:44  time: 7.3536  data_time: 0.0142  memory: 19927  
09/15 23:21:22 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 7.1522  data_time: 0.0195  memory: 19989  
09/15 23:21:23 - mmengine - INFO - per class results:
09/15 23:21:23 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.17 | 89.05 |
|       building      | 81.78 | 92.64 |
|         sky         |  93.7 | 97.39 |
|        floor        | 80.14 | 89.71 |
|         tree        | 70.98 | 86.29 |
|       ceiling       |  82.7 | 91.67 |
|         road        | 81.57 | 92.05 |
|         bed         | 87.08 | 94.24 |
|      windowpane     | 57.19 | 74.36 |
|        grass        | 67.87 | 83.35 |
|       cabinet       | 55.82 | 67.37 |
|       sidewalk      | 57.11 | 67.74 |
|        person       | 77.67 | 90.76 |
|        earth        | 32.99 | 50.16 |
|         door        | 41.65 | 49.38 |
|        table        | 54.63 | 71.82 |
|       mountain      | 57.08 | 71.55 |
|        plant        | 46.03 | 57.14 |
|       curtain       | 69.89 | 82.94 |
|        chair        | 52.93 | 67.13 |
|         car         | 82.29 | 89.97 |
|        water        | 57.98 | 78.79 |
|       painting      | 68.25 | 83.32 |
|         sofa        | 65.66 | 86.46 |
|        shelf        | 42.56 | 63.09 |
|        house        | 46.48 | 63.37 |
|         sea         | 56.61 | 74.25 |
|        mirror       | 60.43 | 75.34 |
|         rug         | 63.24 | 77.28 |
|        field        | 31.98 | 45.95 |
|       armchair      | 37.22 | 48.09 |
|         seat        | 56.82 | 79.83 |
|        fence        | 37.92 | 54.94 |
|         desk        | 47.39 | 65.34 |
|         rock        | 39.92 | 56.67 |
|       wardrobe      | 43.51 | 56.97 |
|         lamp        |  59.2 | 70.91 |
|       bathtub       | 73.44 | 77.99 |
|       railing       | 29.93 | 39.88 |
|       cushion       | 52.52 | 64.26 |
|         base        | 21.46 | 29.44 |
|         box         | 23.95 | 33.59 |
|        column       |  42.6 | 55.17 |
|      signboard      | 31.77 | 40.59 |
|   chest of drawers  | 37.14 |  66.5 |
|       counter       | 20.43 | 22.57 |
|         sand        | 38.77 | 54.47 |
|         sink        | 66.98 | 73.66 |
|      skyscraper     | 61.05 | 75.93 |
|      fireplace      | 64.82 | 75.51 |
|     refrigerator    | 63.11 | 67.99 |
|      grandstand     | 38.03 | 78.73 |
|         path        |  21.8 | 32.84 |
|        stairs       | 25.37 | 32.29 |
|        runway       | 74.69 | 87.06 |
|         case        | 43.74 | 55.63 |
|      pool table     | 91.01 | 94.92 |
|        pillow       | 53.12 | 63.89 |
|     screen door     | 69.26 | 71.17 |
|       stairway      | 26.27 |  33.9 |
|        river        |  7.05 |  9.73 |
|        bridge       | 31.33 | 37.76 |
|       bookcase      | 32.59 | 42.43 |
|        blind        | 31.35 | 32.41 |
|     coffee table    | 52.08 | 74.76 |
|        toilet       | 81.68 |  86.4 |
|        flower       | 37.85 | 54.55 |
|         book        | 42.94 | 55.56 |
|         hill        | 11.96 | 23.19 |
|        bench        | 37.89 | 45.95 |
|      countertop     | 52.48 | 66.75 |
|        stove        | 67.19 | 75.76 |
|         palm        | 39.44 | 45.23 |
|    kitchen island   | 37.75 | 63.92 |
|       computer      | 48.72 | 55.19 |
|     swivel chair    | 39.98 | 58.03 |
|         boat        | 46.66 | 53.27 |
|         bar         | 32.26 | 42.98 |
|    arcade machine   | 74.21 | 83.84 |
|        hovel        |  33.0 | 51.98 |
|         bus         | 84.87 |  92.0 |
|        towel        | 59.76 | 74.24 |
|        light        | 44.84 | 51.74 |
|        truck        | 34.31 |  48.6 |
|        tower        |  7.25 |  8.86 |
|      chandelier     | 64.41 | 80.28 |
|        awning       | 22.44 | 26.46 |
|     streetlight     |  19.9 | 24.78 |
|        booth        | 56.75 |  61.2 |
| television receiver | 56.77 | 62.99 |
|       airplane      |  57.3 | 63.41 |
|      dirt track     | 13.46 | 18.65 |
|       apparel       | 31.23 | 43.97 |
|         pole        | 16.58 | 20.12 |
|         land        |  3.69 |  5.58 |
|      bannister      |  2.39 |  3.0  |
|      escalator      | 22.65 |  23.7 |
|       ottoman       | 44.43 | 60.67 |
|        bottle       | 30.97 |  41.7 |
|        buffet       | 49.26 |  55.8 |
|        poster       | 17.74 | 24.82 |
|        stage        | 19.44 |  28.4 |
|         van         | 40.27 | 58.23 |
|         ship        |  62.7 | 85.91 |
|       fountain      | 21.84 |  22.5 |
|    conveyer belt    | 83.58 | 87.15 |
|        canopy       | 16.93 | 20.19 |
|        washer       | 61.07 | 66.86 |
|      plaything      | 18.36 | 29.17 |
|    swimming pool    | 62.86 | 86.96 |
|        stool        | 36.45 |  50.4 |
|        barrel       | 41.37 | 68.55 |
|        basket       | 19.84 | 22.62 |
|      waterfall      | 61.42 | 93.65 |
|         tent        | 95.35 | 98.11 |
|         bag         |  8.46 |  8.97 |
|       minibike      | 65.73 | 78.81 |
|        cradle       | 71.18 | 96.03 |
|         oven        | 18.17 |  38.9 |
|         ball        | 42.21 | 45.32 |
|         food        | 45.41 | 50.65 |
|         step        |  10.5 | 11.51 |
|         tank        | 57.64 | 63.21 |
|      trade name     | 13.39 | 14.46 |
|      microwave      | 49.14 | 50.23 |
|         pot         | 44.84 | 52.07 |
|        animal       | 58.02 | 59.52 |
|       bicycle       | 53.86 |  70.9 |
|         lake        | 59.29 | 63.17 |
|      dishwasher     | 37.45 | 40.97 |
|        screen       | 62.46 | 70.78 |
|       blanket       |  8.31 |  9.65 |
|      sculpture      | 43.25 | 56.05 |
|         hood        | 44.28 | 46.38 |
|        sconce       | 40.89 | 48.97 |
|         vase        |  33.0 | 44.38 |
|    traffic light    | 30.78 | 46.57 |
|         tray        |  5.74 |  8.96 |
|        ashcan       | 37.79 | 49.08 |
|         fan         | 55.16 | 65.02 |
|         pier        | 34.21 | 38.54 |
|      crt screen     |  4.13 |  13.9 |
|        plate        | 29.25 | 33.25 |
|       monitor       | 24.55 | 28.83 |
|    bulletin board   | 28.62 | 33.67 |
|        shower       |  0.42 |  0.88 |
|       radiator      | 44.56 | 49.77 |
|        glass        |  9.1  |  9.42 |
|        clock        | 39.48 | 44.55 |
|         flag        | 44.68 | 47.54 |
+---------------------+-------+-------+
09/15 23:21:23 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.4200  mIoU: 45.1300  mAcc: 55.5100  data_time: 0.0123  time: 8.0737
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
09/15 23:24:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1452911852
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1452911852
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 23:24:10 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/motion_blur'

09/15 23:25:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 23:25:01 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 23:25:02 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 23:25:04 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/15 23:27:52 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:49:27  time: 1.6448  data_time: 0.0016  memory: 19986  
09/15 23:29:15 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:19:34  time: 1.8918  data_time: 0.0028  memory: 19982  
09/15 23:30:15 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:03:58  time: 1.1522  data_time: 0.0017  memory: 19955  
09/15 23:31:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:57:35  time: 1.4712  data_time: 0.0019  memory: 19982  
09/15 23:32:35 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:52:38  time: 1.1405  data_time: 0.0016  memory: 19978  
09/15 23:33:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:48:42  time: 0.9534  data_time: 0.0019  memory: 19978  
09/15 23:34:48 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:45:55  time: 1.0377  data_time: 0.0016  memory: 19978  
09/15 23:35:53 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:43:18  time: 1.1922  data_time: 0.0016  memory: 19978  
09/15 23:36:40 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:39:58  time: 0.9573  data_time: 0.0017  memory: 19952  
09/15 23:37:32 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:37:25  time: 0.9655  data_time: 0.0040  memory: 19918  
09/15 23:38:25 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:35:12  time: 1.2426  data_time: 0.0039  memory: 19977  
09/15 23:39:15 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:33:06  time: 1.1579  data_time: 0.0043  memory: 19979  
09/15 23:40:19 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:31:41  time: 1.5257  data_time: 0.0275  memory: 19988  
09/15 23:41:32 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:30:35  time: 1.0538  data_time: 0.0114  memory: 19986  
09/15 23:42:41 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:29:22  time: 1.9728  data_time: 0.0174  memory: 19993  
09/15 23:43:33 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:27:42  time: 0.9899  data_time: 0.0107  memory: 19956  
09/15 23:44:25 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:26:10  time: 1.0555  data_time: 0.0121  memory: 778  
09/15 23:45:19 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:24:44  time: 1.2084  data_time: 0.0165  memory: 19943  
09/15 23:46:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:23:38  time: 1.4052  data_time: 0.0144  memory: 19975  
09/15 23:47:23 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:22:18  time: 0.9446  data_time: 0.0063  memory: 19975  
09/15 23:49:01 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:21:39  time: 3.7911  data_time: 0.0432  memory: 19994  
09/15 23:50:30 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:20:47  time: 1.3319  data_time: 0.0346  memory: 19957  
09/15 23:51:57 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:19:51  time: 1.2420  data_time: 0.0156  memory: 19931  
09/15 23:53:05 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:18:39  time: 1.6583  data_time: 0.0458  memory: 1974  
09/15 23:54:15 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:17:29  time: 1.3506  data_time: 0.0236  memory: 19961  
09/15 23:55:24 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:16:18  time: 1.3088  data_time: 0.0364  memory: 778  
09/15 23:57:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:15:48  time: 0.8233  data_time: 0.0016  memory: 19913  
09/15 23:58:52 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:14:28  time: 1.2059  data_time: 0.0015  memory: 19966  
09/15 23:59:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:13:05  time: 1.1303  data_time: 0.0015  memory: 19943  
09/16 00:00:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:11:45  time: 0.8082  data_time: 0.0015  memory: 778  
09/16 00:01:10 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:10:28  time: 0.9384  data_time: 0.0016  memory: 19971  
09/16 00:01:52 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:09:11  time: 0.8624  data_time: 0.0019  memory: 769  
09/16 00:02:41 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:58  time: 0.8401  data_time: 0.0015  memory: 19976  
09/16 00:03:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:46  time: 0.9190  data_time: 0.0017  memory: 19948  
09/16 00:04:23 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:36  time: 0.9447  data_time: 0.0016  memory: 19966  
09/16 00:05:08 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:26  time: 0.9082  data_time: 0.0019  memory: 19918  
09/16 00:05:51 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:18  time: 0.8605  data_time: 0.0017  memory: 727  
09/16 00:06:37 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:11  time: 0.8853  data_time: 0.0016  memory: 19986  
09/16 00:07:28 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:05  time: 0.9056  data_time: 0.0016  memory: 19927  
09/16 00:08:18 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9602  data_time: 0.0049  memory: 19989  
09/16 00:08:18 - mmengine - INFO - per class results:
09/16 00:08:18 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  74.5 | 86.35 |
|       building      | 79.02 | 91.81 |
|         sky         | 93.03 | 96.28 |
|        floor        | 79.16 | 89.65 |
|         tree        | 70.63 | 84.69 |
|       ceiling       | 83.61 | 93.22 |
|         road        | 82.09 | 90.48 |
|         bed         | 88.02 | 94.47 |
|      windowpane     | 59.12 | 76.73 |
|        grass        | 66.36 |  87.3 |
|       cabinet       | 60.46 |  73.5 |
|       sidewalk      | 63.28 | 79.21 |
|        person       | 76.55 | 90.17 |
|        earth        | 35.47 | 48.54 |
|         door        | 43.25 | 54.13 |
|        table        | 54.38 | 71.45 |
|       mountain      | 54.34 |  66.0 |
|        plant        |  47.9 |  59.1 |
|       curtain       | 69.77 | 80.72 |
|        chair        | 54.87 | 71.04 |
|         car         | 82.56 | 92.45 |
|        water        | 58.33 | 78.01 |
|       painting      | 68.16 |  81.9 |
|         sofa        | 65.43 | 86.04 |
|        shelf        | 43.74 | 64.71 |
|        house        | 33.97 | 48.54 |
|         sea         | 60.97 | 76.71 |
|        mirror       | 64.99 | 74.96 |
|         rug         | 52.96 | 65.95 |
|        field        | 29.13 | 39.91 |
|       armchair      | 42.42 | 52.02 |
|         seat        | 57.22 |  79.9 |
|        fence        | 37.45 |  52.5 |
|         desk        | 48.43 | 69.22 |
|         rock        | 40.12 | 65.49 |
|       wardrobe      | 53.22 | 63.14 |
|         lamp        |  58.0 | 72.55 |
|       bathtub       | 74.31 | 81.56 |
|       railing       | 34.35 | 48.13 |
|       cushion       | 54.83 | 69.45 |
|         base        | 21.79 |  29.1 |
|         box         | 25.89 |  33.4 |
|        column       | 42.22 | 54.67 |
|      signboard      | 34.58 | 47.17 |
|   chest of drawers  | 34.76 | 57.38 |
|       counter       | 25.07 | 31.32 |
|         sand        | 38.03 | 57.63 |
|         sink        | 66.68 | 78.38 |
|      skyscraper     | 47.68 | 58.31 |
|      fireplace      | 70.36 | 86.76 |
|     refrigerator    | 74.06 | 84.38 |
|      grandstand     | 39.08 | 72.81 |
|         path        | 20.92 | 29.62 |
|        stairs       | 24.34 | 28.93 |
|        runway       | 71.46 |  86.6 |
|         case        | 41.35 | 51.08 |
|      pool table     | 90.64 |  95.4 |
|        pillow       | 55.99 | 67.46 |
|     screen door     | 63.87 |  74.6 |
|       stairway      | 28.01 | 33.16 |
|        river        |  8.71 | 13.16 |
|        bridge       |  65.8 | 71.76 |
|       bookcase      | 40.21 | 53.75 |
|        blind        | 39.06 | 42.98 |
|     coffee table    | 49.78 | 74.54 |
|        toilet       | 83.98 | 90.09 |
|        flower       | 38.15 | 50.17 |
|         book        | 43.39 | 61.14 |
|         hill        |  9.17 | 15.69 |
|        bench        | 40.49 | 50.15 |
|      countertop     | 49.85 | 70.42 |
|        stove        | 72.85 | 82.81 |
|         palm        | 41.87 | 55.15 |
|    kitchen island   | 46.42 |  75.1 |
|       computer      | 59.32 |  69.0 |
|     swivel chair    | 43.84 | 60.83 |
|         boat        | 60.91 | 78.94 |
|         bar         | 37.68 | 50.35 |
|    arcade machine   | 78.58 | 84.09 |
|        hovel        |  7.23 | 10.44 |
|         bus         |  84.2 | 94.49 |
|        towel        |  61.0 | 76.31 |
|        light        | 50.14 |  62.0 |
|        truck        | 35.21 | 48.33 |
|        tower        |  6.64 |  8.06 |
|      chandelier     | 62.19 | 72.56 |
|        awning       | 27.22 | 33.91 |
|     streetlight     |  19.1 |  26.1 |
|        booth        | 47.76 | 55.18 |
| television receiver | 61.51 | 73.57 |
|       airplane      | 55.64 | 66.09 |
|      dirt track     | 14.23 | 34.12 |
|       apparel       |  31.6 | 38.44 |
|         pole        | 16.63 | 20.96 |
|         land        |  3.3  |  4.32 |
|      bannister      | 10.74 | 15.26 |
|      escalator      | 34.79 | 43.89 |
|       ottoman       |  47.9 | 59.03 |
|        bottle       | 36.99 | 50.31 |
|        buffet       | 39.63 | 44.28 |
|        poster       | 21.27 | 28.41 |
|        stage        | 16.66 | 24.09 |
|         van         | 46.11 | 59.13 |
|         ship        | 78.23 |  86.0 |
|       fountain      | 22.72 | 23.09 |
|    conveyer belt    | 82.02 | 89.34 |
|        canopy       | 27.59 |  31.2 |
|        washer       | 77.55 | 79.93 |
|      plaything      | 16.43 | 23.71 |
|    swimming pool    |  67.9 | 85.71 |
|        stool        |  34.7 | 49.43 |
|        barrel       | 33.97 | 69.52 |
|        basket       | 27.68 | 42.09 |
|      waterfall      | 43.17 | 61.05 |
|         tent        | 94.68 | 98.11 |
|         bag         | 10.35 | 13.25 |
|       minibike      | 63.75 | 78.31 |
|        cradle       | 79.44 | 93.79 |
|         oven        | 45.29 | 63.33 |
|         ball        | 47.54 | 53.57 |
|         food        | 45.36 | 52.48 |
|         step        | 11.61 | 12.93 |
|         tank        |  57.1 | 62.29 |
|      trade name     | 23.18 | 26.94 |
|      microwave      | 81.08 | 84.37 |
|         pot         | 36.83 | 44.08 |
|        animal       | 55.68 | 59.89 |
|       bicycle       |  47.1 | 75.14 |
|         lake        | 60.64 | 63.42 |
|      dishwasher     | 62.47 | 70.87 |
|        screen       |  62.6 | 84.52 |
|       blanket       | 16.11 | 19.27 |
|      sculpture      | 45.79 | 60.26 |
|         hood        | 56.56 | 64.78 |
|        sconce       |  44.2 | 56.64 |
|         vase        | 36.04 | 47.97 |
|    traffic light    | 27.83 | 47.14 |
|         tray        |  6.04 | 12.23 |
|        ashcan       | 32.19 | 48.67 |
|         fan         | 57.51 | 77.05 |
|         pier        | 37.34 | 59.94 |
|      crt screen     |  1.65 |  4.64 |
|        plate        | 48.19 | 65.99 |
|       monitor       | 23.86 | 28.52 |
|    bulletin board   | 41.49 |  52.3 |
|        shower       |  7.49 |  8.94 |
|       radiator      | 57.74 |  67.8 |
|        glass        | 13.09 | 14.03 |
|        clock        | 33.11 | 37.71 |
|         flag        | 31.15 | 33.82 |
+---------------------+-------+-------+
09/16 00:08:18 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.4500  mIoU: 47.1700  mAcc: 58.6100  data_time: 0.0102  time: 1.2956
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
09/16 00:10:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2064997848
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2064997848
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 00:10:24 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/zoom_blur'

09/16 00:11:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 00:11:20 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 00:11:22 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 00:11:24 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 00:14:02 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:42:57  time: 1.6068  data_time: 0.0039  memory: 19986  
09/16 00:15:24 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:15:49  time: 1.9098  data_time: 0.0092  memory: 19982  
09/16 00:16:26 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:02:00  time: 1.2278  data_time: 0.0093  memory: 19955  
09/16 00:18:57 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:07:56  time: 9.1579  data_time: 0.1506  memory: 19982  
09/16 00:20:01 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:00:17  time: 1.0162  data_time: 0.0016  memory: 19978  
09/16 00:21:00 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:54:22  time: 0.8230  data_time: 0.0017  memory: 19978  
09/16 00:22:03 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:50:10  time: 0.9537  data_time: 0.0017  memory: 19978  
09/16 00:23:01 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:46:25  time: 1.0643  data_time: 0.0016  memory: 19978  
09/16 00:23:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:42:19  time: 0.8647  data_time: 0.0022  memory: 19952  
09/16 00:24:27 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:39:07  time: 0.7810  data_time: 0.0016  memory: 19918  
09/16 00:25:14 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:36:27  time: 1.0712  data_time: 0.0031  memory: 19977  
09/16 00:25:59 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:34:00  time: 1.0544  data_time: 0.0017  memory: 19979  
09/16 00:26:50 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:32:02  time: 1.1935  data_time: 0.0016  memory: 19988  
09/16 00:27:45 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:30:21  time: 0.8371  data_time: 0.0018  memory: 19986  
09/16 00:28:43 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:28:51  time: 1.6062  data_time: 0.0016  memory: 19993  
09/16 00:29:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:27:02  time: 0.8219  data_time: 0.0018  memory: 19956  
09/16 00:30:09 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:25:20  time: 0.8282  data_time: 0.0034  memory: 778  
09/16 00:30:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:23:47  time: 0.9106  data_time: 0.0044  memory: 19943  
09/16 00:31:48 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:22:32  time: 1.1212  data_time: 0.0017  memory: 19975  
09/16 00:32:35 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:21:10  time: 0.7914  data_time: 0.0017  memory: 19975  
09/16 00:33:29 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:58  time: 1.4030  data_time: 0.0041  memory: 19994  
09/16 00:34:20 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:45  time: 0.8001  data_time: 0.0018  memory: 19957  
09/16 00:35:07 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:31  time: 1.0360  data_time: 0.0050  memory: 19931  
09/16 00:35:53 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:18  time: 0.8826  data_time: 0.0064  memory: 1974  
09/16 00:36:42 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:15:10  time: 1.0154  data_time: 0.0077  memory: 19961  
09/16 00:37:26 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:14:00  time: 0.9362  data_time: 0.0064  memory: 778  
09/16 00:38:12 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:53  time: 0.8483  data_time: 0.0062  memory: 19913  
09/16 00:39:07 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:52  time: 1.1946  data_time: 0.0087  memory: 19966  
09/16 00:39:53 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:47  time: 1.1127  data_time: 0.0089  memory: 19943  
09/16 00:40:37 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:44  time: 0.8334  data_time: 0.0063  memory: 778  
09/16 00:41:27 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:43  time: 0.9422  data_time: 0.0087  memory: 19971  
09/16 00:42:10 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:41  time: 0.8853  data_time: 0.0064  memory: 769  
09/16 00:42:59 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:41  time: 0.8250  data_time: 0.0053  memory: 19976  
09/16 00:43:48 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:42  time: 0.9005  data_time: 0.0086  memory: 19948  
09/16 00:44:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:44  time: 0.8808  data_time: 0.0069  memory: 19966  
09/16 00:45:21 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:46  time: 0.9179  data_time: 0.0091  memory: 19918  
09/16 00:46:06 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:48  time: 0.8976  data_time: 0.0059  memory: 727  
09/16 00:46:51 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:51  time: 0.9121  data_time: 0.0137  memory: 19986  
09/16 00:47:39 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:55  time: 0.7892  data_time: 0.0017  memory: 19927  
09/16 00:48:24 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8170  data_time: 0.0345  memory: 19989  
09/16 00:48:25 - mmengine - INFO - per class results:
09/16 00:48:25 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 59.23 | 83.48 |
|       building      | 68.18 | 85.76 |
|         sky         | 86.03 | 89.66 |
|        floor        | 60.61 |  82.3 |
|         tree        | 47.28 | 53.41 |
|       ceiling       | 63.43 | 89.72 |
|         road        | 62.16 | 74.05 |
|         bed         | 70.55 | 89.87 |
|      windowpane     | 46.94 | 66.71 |
|        grass        | 47.13 | 69.63 |
|       cabinet       | 46.66 | 57.54 |
|       sidewalk      | 38.45 | 60.62 |
|        person       |  57.1 | 73.51 |
|        earth        |  17.3 | 24.68 |
|         door        | 21.57 | 25.09 |
|        table        | 40.13 |  56.2 |
|       mountain      | 33.53 | 38.74 |
|        plant        | 27.11 | 38.53 |
|       curtain       | 44.57 | 57.33 |
|        chair        | 34.46 | 46.59 |
|         car         | 65.19 |  76.9 |
|        water        | 41.47 | 52.43 |
|       painting      | 52.88 | 68.71 |
|         sofa        | 43.76 | 72.88 |
|        shelf        | 26.44 | 38.49 |
|        house        | 35.87 | 45.06 |
|         sea         | 50.23 | 63.74 |
|        mirror       | 53.51 | 62.01 |
|         rug         | 17.33 | 18.09 |
|        field        | 18.93 | 45.28 |
|       armchair      | 20.28 | 26.33 |
|         seat        | 31.84 | 55.71 |
|        fence        | 13.93 | 24.47 |
|         desk        | 31.32 | 44.92 |
|         rock        | 10.04 | 12.66 |
|       wardrobe      | 37.07 | 44.57 |
|         lamp        | 39.18 | 53.29 |
|       bathtub       | 61.46 | 75.27 |
|       railing       | 21.71 | 33.06 |
|       cushion       | 30.07 | 36.31 |
|         base        |  12.5 | 14.99 |
|         box         |  5.97 |  6.9  |
|        column       | 22.93 | 28.55 |
|      signboard      | 19.14 | 22.66 |
|   chest of drawers  | 35.45 | 47.09 |
|       counter       | 13.18 | 20.53 |
|         sand        |  19.3 | 36.58 |
|         sink        | 54.26 | 62.65 |
|      skyscraper     | 45.74 | 61.49 |
|      fireplace      | 57.07 | 64.93 |
|     refrigerator    | 50.43 | 58.14 |
|      grandstand     | 21.95 | 57.36 |
|         path        |  9.64 | 11.58 |
|        stairs       |  6.43 |  8.71 |
|        runway       | 67.63 | 84.52 |
|         case        |  18.2 | 31.29 |
|      pool table     | 79.08 | 94.78 |
|        pillow       | 37.83 | 46.87 |
|     screen door     | 34.85 |  40.2 |
|       stairway      | 11.36 | 14.31 |
|        river        |  3.67 |  8.91 |
|        bridge       | 26.94 | 31.98 |
|       bookcase      | 16.91 | 20.24 |
|        blind        | 13.56 | 15.74 |
|     coffee table    | 41.66 | 56.17 |
|        toilet       |  68.0 |  77.5 |
|        flower       | 16.49 | 21.41 |
|         book        | 29.96 | 38.95 |
|         hill        |  3.74 |  7.0  |
|        bench        | 27.61 | 39.78 |
|      countertop     | 43.74 | 62.82 |
|        stove        | 53.77 |  61.3 |
|         palm        | 14.15 | 39.38 |
|    kitchen island   | 40.83 |  66.3 |
|       computer      | 41.66 | 46.75 |
|     swivel chair    | 17.14 |  19.4 |
|         boat        | 38.94 | 45.77 |
|         bar         | 21.93 | 34.62 |
|    arcade machine   | 11.75 | 14.28 |
|        hovel        |  8.16 |  8.44 |
|         bus         | 58.28 | 72.98 |
|        towel        | 29.09 | 39.45 |
|        light        | 22.15 |  29.6 |
|        truck        |  1.92 |  2.24 |
|        tower        |  5.41 |  6.13 |
|      chandelier     | 30.25 | 33.34 |
|        awning       | 16.84 | 19.66 |
|     streetlight     |  2.53 |  2.65 |
|        booth        |  11.0 |  11.1 |
| television receiver | 44.27 | 55.03 |
|       airplane      | 40.17 | 56.29 |
|      dirt track     |  3.72 | 16.16 |
|       apparel       |  4.21 |  5.12 |
|         pole        |  4.67 |  5.38 |
|         land        |  2.78 |  9.15 |
|      bannister      |  2.57 |  4.34 |
|      escalator      | 17.71 | 29.35 |
|       ottoman       | 26.57 | 31.93 |
|        bottle       | 14.72 | 16.83 |
|        buffet       | 34.95 | 39.85 |
|        poster       |  5.66 |  8.28 |
|        stage        | 10.25 |  12.5 |
|         van         | 27.19 | 45.87 |
|         ship        |  5.25 |  5.7  |
|       fountain      | 13.21 | 14.39 |
|    conveyer belt    | 39.01 | 72.01 |
|        canopy       |  3.91 |  3.93 |
|        washer       | 67.63 | 78.24 |
|      plaything      |  9.03 | 13.82 |
|    swimming pool    | 28.61 | 64.11 |
|        stool        |  21.9 | 26.64 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 11.59 | 13.19 |
|      waterfall      | 37.31 | 78.76 |
|         tent        | 72.49 | 99.42 |
|         bag         |  3.23 |  4.12 |
|       minibike      | 43.12 | 58.21 |
|        cradle       | 59.26 | 82.37 |
|         oven        | 21.49 | 38.34 |
|         ball        | 34.81 | 48.16 |
|         food        | 14.97 | 16.76 |
|         step        |  3.8  |  4.61 |
|         tank        | 32.15 | 36.68 |
|      trade name     | 12.67 | 13.97 |
|      microwave      | 23.49 |  25.7 |
|         pot         |  9.53 | 10.07 |
|        animal       | 41.52 |  49.6 |
|       bicycle       | 10.42 | 12.61 |
|         lake        |  1.74 |  2.27 |
|      dishwasher     | 23.03 | 25.81 |
|        screen       | 63.26 |  86.1 |
|       blanket       |  1.23 |  1.42 |
|      sculpture      |  6.23 |  8.48 |
|         hood        | 34.72 | 45.98 |
|        sconce       | 18.38 | 22.47 |
|         vase        | 12.85 | 18.62 |
|    traffic light    | 10.86 | 12.12 |
|         tray        |  2.81 |  5.35 |
|        ashcan       | 14.99 | 17.05 |
|         fan         | 35.96 | 57.75 |
|         pier        | 20.09 | 23.56 |
|      crt screen     | 15.34 | 17.51 |
|        plate        | 27.01 | 32.16 |
|       monitor       | 42.98 | 50.67 |
|    bulletin board   | 13.15 | 15.25 |
|        shower       |  0.24 |  1.68 |
|       radiator      | 23.58 | 39.94 |
|        glass        |  0.71 |  0.72 |
|        clock        |  5.8  |  6.05 |
|         flag        | 17.17 | 17.84 |
+---------------------+-------+-------+
09/16 00:48:25 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 69.0200  mIoU: 28.4500  mAcc: 37.8500  data_time: 0.0070  time: 1.1096
Finished processing corruption type: zoom_blur
Processing corruption type: snow
09/16 00:50:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 478116642
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 478116642
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 00:50:20 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/snow'

09/16 00:51:09 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 00:51:09 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 00:51:11 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 00:51:12 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 00:53:31 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:30:01  time: 1.1258  data_time: 0.0041  memory: 19986  
09/16 00:54:28 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:01:49  time: 1.3757  data_time: 0.0062  memory: 19982  
09/16 00:55:03 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:47:14  time: 0.6404  data_time: 0.0031  memory: 19955  
09/16 00:55:49 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:41:25  time: 0.9427  data_time: 0.0098  memory: 19982  
09/16 00:56:31 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:37:06  time: 0.6250  data_time: 0.0063  memory: 19978  
09/16 00:57:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:33:41  time: 0.4071  data_time: 0.0064  memory: 19978  
09/16 00:57:53 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:31:25  time: 0.5840  data_time: 0.0072  memory: 19978  
09/16 00:58:31 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:29:11  time: 0.6445  data_time: 0.0037  memory: 19978  
09/16 00:58:53 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:26:24  time: 0.4749  data_time: 0.0054  memory: 19952  
09/16 00:59:17 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:24:12  time: 0.3605  data_time: 0.0029  memory: 19918  
09/16 00:59:39 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:22:12  time: 0.5535  data_time: 0.0016  memory: 19977  
09/16 00:59:59 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:20:27  time: 0.5566  data_time: 0.0017  memory: 19979  
09/16 01:00:26 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:19:09  time: 0.6911  data_time: 0.0015  memory: 19988  
09/16 01:00:57 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:18:03  time: 0.3399  data_time: 0.0017  memory: 19986  
09/16 01:01:29 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:17:06  time: 1.1641  data_time: 0.0015  memory: 19993  
09/16 01:01:48 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:15:51  time: 0.3271  data_time: 0.0017  memory: 19956  
09/16 01:02:04 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:14:40  time: 0.3289  data_time: 0.0017  memory: 778  
09/16 01:02:24 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:13:40  time: 0.4589  data_time: 0.0015  memory: 19943  
09/16 01:02:56 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:12:57  time: 0.7385  data_time: 0.0063  memory: 19975  
09/16 01:03:33 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:12:19  time: 0.3115  data_time: 0.0016  memory: 19975  
09/16 01:04:04 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:11:37  time: 1.0655  data_time: 0.0113  memory: 19994  
09/16 01:04:28 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:10:50  time: 0.3170  data_time: 0.0016  memory: 19957  
09/16 01:04:49 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:10:02  time: 0.4343  data_time: 0.0016  memory: 19931  
09/16 01:05:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:09:15  time: 0.3617  data_time: 0.0045  memory: 1974  
09/16 01:05:28 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:08:32  time: 0.4281  data_time: 0.0017  memory: 19961  
09/16 01:05:44 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:48  time: 0.3600  data_time: 0.0039  memory: 778  
09/16 01:06:03 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:07:08  time: 0.3876  data_time: 0.0036  memory: 19913  
09/16 01:06:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:06:33  time: 0.6344  data_time: 0.0047  memory: 19966  
09/16 01:06:51 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:55  time: 0.5210  data_time: 0.0015  memory: 19943  
09/16 01:07:08 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:05:18  time: 0.3053  data_time: 0.0015  memory: 778  
09/16 01:07:27 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:42  time: 0.3356  data_time: 0.0016  memory: 19971  
09/16 01:07:43 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:04:07  time: 0.3210  data_time: 0.0017  memory: 769  
09/16 01:08:05 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:34  time: 0.3056  data_time: 0.0015  memory: 19976  
09/16 01:10:18 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:21  time: 11.2059  data_time: 0.0988  memory: 19948  
09/16 01:10:39 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:46  time: 0.3196  data_time: 0.0015  memory: 19966  
09/16 01:10:56 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:11  time: 0.3321  data_time: 0.0017  memory: 19918  
09/16 01:11:13 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:37  time: 0.3293  data_time: 0.0017  memory: 727  
09/16 01:11:31 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:04  time: 0.3342  data_time: 0.0016  memory: 19986  
09/16 01:11:52 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:31  time: 0.3328  data_time: 0.0016  memory: 19927  
09/16 01:12:13 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.3183  data_time: 0.0015  memory: 19989  
09/16 01:12:13 - mmengine - INFO - per class results:
09/16 01:12:13 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  67.4 | 89.64 |
|       building      | 78.05 | 89.84 |
|         sky         | 91.14 | 94.86 |
|        floor        | 71.41 | 89.59 |
|         tree        | 70.21 | 85.08 |
|       ceiling       | 71.86 | 82.61 |
|         road        | 74.06 | 81.82 |
|         bed         | 80.23 | 91.19 |
|      windowpane     | 55.43 | 71.43 |
|        grass        |  64.7 | 86.51 |
|       cabinet       | 52.26 |  63.6 |
|       sidewalk      | 52.11 | 69.39 |
|        person       | 74.45 |  88.4 |
|        earth        | 33.44 | 43.79 |
|         door        | 25.23 | 28.34 |
|        table        |  52.0 | 68.51 |
|       mountain      | 48.55 | 64.01 |
|        plant        | 46.39 |  56.5 |
|       curtain       | 58.17 |  65.6 |
|        chair        | 48.66 | 57.98 |
|         car         | 80.53 | 90.71 |
|        water        | 49.56 | 69.32 |
|       painting      | 64.11 | 80.51 |
|         sofa        |  60.4 | 74.21 |
|        shelf        | 35.51 | 56.58 |
|        house        | 42.27 | 56.96 |
|         sea         |  43.5 | 62.38 |
|        mirror       |  54.3 | 65.31 |
|         rug         | 34.79 | 35.81 |
|        field        |  29.1 | 41.73 |
|       armchair      | 36.32 | 50.95 |
|         seat        | 47.89 | 67.81 |
|        fence        | 34.88 | 54.98 |
|         desk        | 43.88 |  54.2 |
|         rock        | 44.53 | 63.05 |
|       wardrobe      | 36.19 | 46.49 |
|         lamp        | 55.66 | 66.23 |
|       bathtub       |  56.6 | 63.87 |
|       railing       | 26.69 | 34.46 |
|       cushion       |  45.2 | 54.09 |
|         base        |  14.3 | 20.38 |
|         box         | 22.94 | 33.97 |
|        column       | 35.42 | 42.76 |
|      signboard      | 32.93 | 46.71 |
|   chest of drawers  | 35.54 | 49.91 |
|       counter       | 16.53 | 21.85 |
|         sand        | 25.72 |  31.9 |
|         sink        | 60.98 | 71.78 |
|      skyscraper     | 52.06 | 70.04 |
|      fireplace      | 55.71 | 62.04 |
|     refrigerator    |  64.7 | 71.76 |
|      grandstand     | 30.39 | 81.97 |
|         path        | 12.87 | 16.46 |
|        stairs       | 27.77 | 32.97 |
|        runway       |  72.7 | 95.56 |
|         case        | 26.46 | 32.78 |
|      pool table     | 87.83 | 90.92 |
|        pillow       | 42.71 | 50.81 |
|     screen door     | 54.82 |  67.5 |
|       stairway      | 31.01 | 35.26 |
|        river        |  8.55 | 11.25 |
|        bridge       | 42.74 | 47.68 |
|       bookcase      | 24.64 | 28.35 |
|        blind        | 18.06 | 18.65 |
|     coffee table    |  49.0 |  60.8 |
|        toilet       | 71.84 | 77.48 |
|        flower       | 39.71 | 48.77 |
|         book        | 38.37 | 48.48 |
|         hill        |  8.17 | 11.39 |
|        bench        | 29.36 | 36.88 |
|      countertop     | 47.25 | 58.03 |
|        stove        | 67.42 | 74.54 |
|         palm        | 44.44 |  57.5 |
|    kitchen island   |  37.2 | 53.98 |
|       computer      |  49.9 | 55.02 |
|     swivel chair    | 40.01 | 54.66 |
|         boat        | 55.56 | 75.11 |
|         bar         | 26.16 | 32.94 |
|    arcade machine   | 40.32 | 41.82 |
|        hovel        | 23.81 | 26.96 |
|         bus         | 84.82 |  93.8 |
|        towel        | 48.13 | 56.78 |
|        light        | 37.85 | 41.69 |
|        truck        |  34.0 | 49.27 |
|        tower        |  7.23 |  9.63 |
|      chandelier     | 57.88 | 69.62 |
|        awning       | 20.85 | 22.41 |
|     streetlight     | 21.95 | 26.14 |
|        booth        | 35.88 | 39.15 |
| television receiver | 36.88 | 43.62 |
|       airplane      | 43.69 | 62.45 |
|      dirt track     |  0.0  |  0.01 |
|       apparel       | 24.78 | 32.43 |
|         pole        | 16.08 | 20.73 |
|         land        |  6.16 |  8.18 |
|      bannister      | 11.15 | 15.07 |
|      escalator      | 21.26 | 25.62 |
|       ottoman       |  36.0 | 42.15 |
|        bottle       |  33.8 | 51.29 |
|        buffet       | 36.51 | 42.71 |
|        poster       | 17.21 | 21.59 |
|        stage        |  9.03 |  11.9 |
|         van         | 39.34 |  64.5 |
|         ship        |  3.02 |  3.11 |
|       fountain      | 23.68 | 28.32 |
|    conveyer belt    |  70.0 | 73.83 |
|        canopy       |  9.05 |  9.81 |
|        washer       | 65.72 | 66.44 |
|      plaything      | 17.24 |  26.3 |
|    swimming pool    | 57.62 | 81.41 |
|        stool        | 32.56 | 46.58 |
|        barrel       | 26.75 | 33.78 |
|        basket       | 28.26 | 34.41 |
|      waterfall      | 52.04 | 59.41 |
|         tent        | 90.06 | 99.05 |
|         bag         |  7.57 |  9.28 |
|       minibike      | 48.63 | 60.18 |
|        cradle       | 71.16 | 94.52 |
|         oven        | 31.13 | 36.58 |
|         ball        | 38.45 | 46.88 |
|         food        | 54.05 | 65.59 |
|         step        |  6.22 |  7.26 |
|         tank        | 33.38 | 38.05 |
|      trade name     | 19.57 |  22.1 |
|      microwave      | 33.49 | 35.28 |
|         pot         | 33.34 | 37.75 |
|        animal       | 58.29 | 60.96 |
|       bicycle       | 52.31 | 74.09 |
|         lake        | 27.77 |  29.0 |
|      dishwasher     | 37.25 | 39.04 |
|        screen       | 59.17 | 67.47 |
|       blanket       |  3.88 |  4.22 |
|      sculpture      | 41.58 | 67.98 |
|         hood        | 40.43 | 43.23 |
|        sconce       | 36.36 | 45.69 |
|         vase        | 34.57 | 45.21 |
|    traffic light    | 28.38 | 41.12 |
|         tray        |  9.18 | 15.34 |
|        ashcan       | 26.95 | 36.47 |
|         fan         | 50.82 | 63.68 |
|         pier        |  58.2 | 67.68 |
|      crt screen     |  6.9  | 21.72 |
|        plate        | 43.56 | 50.92 |
|       monitor       |  3.92 |  4.49 |
|    bulletin board   | 22.31 |  25.8 |
|        shower       |  1.47 |  6.72 |
|       radiator      | 24.15 | 24.86 |
|        glass        | 11.83 | 13.38 |
|        clock        | 19.84 | 24.37 |
|         flag        | 27.26 | 28.86 |
+---------------------+-------+-------+
09/16 01:12:13 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.6100  mIoU: 39.7600  mAcc: 49.1700  data_time: 0.0049  time: 0.6297
Finished processing corruption type: snow
Processing corruption type: frost
09/16 01:12:48 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2019123569
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2019123569
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 01:12:49 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/frost'

09/16 01:12:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 01:12:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 01:12:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 01:13:00 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 01:14:16 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:49:15  time: 0.8052  data_time: 0.0017  memory: 19986  
09/16 01:14:57 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:37:10  time: 1.0612  data_time: 0.0017  memory: 19982  
09/16 01:15:17 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:11  time: 0.3352  data_time: 0.0029  memory: 19955  
09/16 01:15:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:25:08  time: 0.6336  data_time: 0.0017  memory: 19982  
09/16 01:16:15 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:22:41  time: 0.3290  data_time: 0.0016  memory: 19978  
09/16 01:16:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:20:42  time: 0.1103  data_time: 0.0017  memory: 19978  
09/16 01:17:07 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:26  time: 0.3037  data_time: 0.0017  memory: 19978  
09/16 01:17:30 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:59  time: 0.3610  data_time: 0.0015  memory: 19978  
09/16 01:17:39 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:01  time: 0.2148  data_time: 0.0016  memory: 19952  
09/16 01:17:49 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:27  time: 0.1012  data_time: 0.0016  memory: 19918  
09/16 01:17:59 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:07  time: 0.3125  data_time: 0.0017  memory: 19977  
09/16 01:18:08 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:59  time: 0.3210  data_time: 0.0017  memory: 19979  
09/16 01:18:25 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:11:13  time: 0.4607  data_time: 0.0015  memory: 19988  
09/16 01:18:43 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:36  time: 0.1055  data_time: 0.0017  memory: 19986  
09/16 01:19:05 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:08  time: 0.9475  data_time: 0.0016  memory: 19993  
09/16 01:19:15 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:22  time: 0.3298  data_time: 0.0047  memory: 19956  
09/16 01:19:27 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:43  time: 0.1004  data_time: 0.0017  memory: 778  
09/16 01:19:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:04  time: 0.2592  data_time: 0.0015  memory: 19943  
09/16 01:19:54 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:37  time: 0.4194  data_time: 0.0016  memory: 19975  
09/16 01:20:05 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:05  time: 0.1027  data_time: 0.0016  memory: 19975  
09/16 01:20:20 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:38  time: 0.5856  data_time: 0.0016  memory: 19994  
09/16 01:20:33 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:10  time: 0.1015  data_time: 0.0017  memory: 19957  
09/16 01:20:42 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:41  time: 0.2083  data_time: 0.0016  memory: 19931  
09/16 01:20:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:11  time: 0.1032  data_time: 0.0016  memory: 1974  
09/16 01:20:57 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:46  time: 0.2212  data_time: 0.0016  memory: 19961  
09/16 01:21:05 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:20  time: 0.1084  data_time: 0.0016  memory: 778  
09/16 01:21:12 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:56  time: 0.1043  data_time: 0.0016  memory: 19913  
09/16 01:21:27 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:37  time: 0.3337  data_time: 0.0016  memory: 19966  
09/16 01:21:35 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:15  time: 0.2846  data_time: 0.0015  memory: 19943  
09/16 01:21:40 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:53  time: 0.1049  data_time: 0.0015  memory: 778  
09/16 01:21:47 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:32  time: 0.1037  data_time: 0.0016  memory: 19971  
09/16 01:21:52 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:12  time: 0.0993  data_time: 0.0017  memory: 769  
09/16 01:22:02 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:55  time: 0.0970  data_time: 0.0014  memory: 19976  
09/16 01:22:12 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:37  time: 0.0986  data_time: 0.0017  memory: 19948  
09/16 01:22:22 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:20  time: 0.0985  data_time: 0.0015  memory: 19966  
09/16 01:22:29 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:03  time: 0.1041  data_time: 0.0017  memory: 19918  
09/16 01:22:34 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:46  time: 0.1019  data_time: 0.0017  memory: 727  
09/16 01:22:42 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:30  time: 0.1018  data_time: 0.0016  memory: 19986  
09/16 01:22:50 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.1050  data_time: 0.0015  memory: 19927  
09/16 01:22:59 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1003  data_time: 0.0014  memory: 19989  
09/16 01:23:00 - mmengine - INFO - per class results:
09/16 01:23:00 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 69.24 | 88.56 |
|       building      | 78.36 | 89.46 |
|         sky         | 76.41 | 78.98 |
|        floor        | 75.64 | 89.37 |
|         tree        | 67.62 | 86.79 |
|       ceiling       | 69.88 | 77.99 |
|         road        | 77.57 | 86.16 |
|         bed         | 83.42 | 91.32 |
|      windowpane     | 56.24 | 71.98 |
|        grass        | 64.85 | 81.64 |
|       cabinet       | 54.56 | 65.56 |
|       sidewalk      | 55.74 | 67.48 |
|        person       | 75.29 | 89.78 |
|        earth        | 34.67 | 53.56 |
|         door        | 40.99 | 50.69 |
|        table        | 53.92 | 74.15 |
|       mountain      | 31.71 | 75.59 |
|        plant        | 46.43 | 58.37 |
|       curtain       | 63.59 | 70.98 |
|        chair        | 51.07 | 64.12 |
|         car         | 81.73 | 90.23 |
|        water        | 50.62 | 71.77 |
|       painting      | 65.46 | 80.54 |
|         sofa        |  64.4 | 82.19 |
|        shelf        | 39.92 | 53.91 |
|        house        | 38.32 |  59.1 |
|         sea         | 46.39 | 63.02 |
|        mirror       | 59.33 | 70.68 |
|         rug         | 42.21 | 47.55 |
|        field        | 26.88 | 38.59 |
|       armchair      | 41.28 | 57.52 |
|         seat        | 55.09 | 69.73 |
|        fence        | 39.65 | 53.45 |
|         desk        |  44.6 | 57.31 |
|         rock        | 42.65 |  60.0 |
|       wardrobe      | 42.65 | 54.07 |
|         lamp        | 58.69 | 70.39 |
|       bathtub       | 59.57 | 68.02 |
|       railing       | 28.25 | 36.14 |
|       cushion       | 50.65 | 63.33 |
|         base        | 18.11 | 22.54 |
|         box         | 20.72 | 27.09 |
|        column       | 38.08 | 49.42 |
|      signboard      | 33.69 | 44.85 |
|   chest of drawers  | 43.12 | 55.56 |
|       counter       | 27.25 | 38.12 |
|         sand        | 31.19 | 46.81 |
|         sink        | 61.99 | 73.26 |
|      skyscraper     | 50.83 | 60.45 |
|      fireplace      | 64.51 | 75.03 |
|     refrigerator    | 68.72 | 77.54 |
|      grandstand     | 40.64 | 70.05 |
|         path        | 17.88 | 25.79 |
|        stairs       | 27.84 |  33.1 |
|        runway       | 69.55 | 87.76 |
|         case        | 39.87 | 49.52 |
|      pool table     | 88.41 | 91.58 |
|        pillow       | 46.79 |  59.4 |
|     screen door     | 53.35 | 80.98 |
|       stairway      | 34.06 | 40.48 |
|        river        |  7.98 | 10.48 |
|        bridge       | 59.09 | 67.05 |
|       bookcase      | 36.24 | 51.76 |
|        blind        | 34.99 | 37.66 |
|     coffee table    | 48.82 | 65.38 |
|        toilet       | 73.86 | 78.45 |
|        flower       | 41.94 | 57.71 |
|         book        | 46.26 | 63.39 |
|         hill        |  7.29 |  10.9 |
|        bench        | 43.32 |  50.9 |
|      countertop     | 48.56 | 74.29 |
|        stove        | 66.58 | 71.64 |
|         palm        | 42.37 | 65.13 |
|    kitchen island   | 37.45 | 64.48 |
|       computer      | 56.38 |  63.1 |
|     swivel chair    | 41.75 | 49.56 |
|         boat        | 43.81 | 52.83 |
|         bar         |  24.8 | 28.61 |
|    arcade machine   | 32.09 | 33.25 |
|        hovel        | 29.33 |  43.7 |
|         bus         | 85.55 | 92.71 |
|        towel        | 50.91 | 65.81 |
|        light        | 42.85 | 48.05 |
|        truck        | 31.14 | 42.57 |
|        tower        |  7.0  |  8.83 |
|      chandelier     | 65.35 | 78.93 |
|        awning       | 22.89 | 25.77 |
|     streetlight     | 23.31 | 26.79 |
|        booth        | 43.78 | 45.08 |
| television receiver | 60.29 | 66.08 |
|       airplane      | 52.65 | 61.53 |
|      dirt track     |  6.17 | 12.37 |
|       apparel       | 28.54 | 37.73 |
|         pole        | 17.65 |  23.6 |
|         land        |  0.0  |  0.0  |
|      bannister      | 13.21 | 16.86 |
|      escalator      | 21.31 | 23.62 |
|       ottoman       |  47.0 | 54.87 |
|        bottle       | 35.64 | 51.19 |
|        buffet       | 44.14 | 49.67 |
|        poster       |  20.1 | 25.39 |
|        stage        | 12.64 | 16.32 |
|         van         | 40.96 | 55.35 |
|         ship        | 39.83 | 55.26 |
|       fountain      | 21.34 | 21.67 |
|    conveyer belt    | 73.96 | 77.87 |
|        canopy       | 18.25 | 19.65 |
|        washer       | 71.54 | 73.54 |
|      plaything      | 18.66 | 26.99 |
|    swimming pool    | 70.52 |  83.9 |
|        stool        | 34.31 | 51.31 |
|        barrel       |  27.1 | 43.87 |
|        basket       | 29.22 | 35.82 |
|      waterfall      | 57.83 |  69.9 |
|         tent        | 88.74 | 97.54 |
|         bag         |  7.44 | 10.75 |
|       minibike      | 64.71 | 72.22 |
|        cradle       | 81.57 | 93.82 |
|         oven        | 43.99 | 57.06 |
|         ball        | 37.31 |  40.3 |
|         food        | 52.24 | 63.47 |
|         step        | 13.23 | 16.48 |
|         tank        | 48.94 | 53.77 |
|      trade name     | 24.99 | 30.07 |
|      microwave      | 42.12 | 44.32 |
|         pot         | 34.75 |  38.7 |
|        animal       | 59.48 | 62.43 |
|       bicycle       | 52.84 | 75.53 |
|         lake        |  20.8 | 22.62 |
|      dishwasher     | 39.93 | 43.52 |
|        screen       | 68.54 | 73.78 |
|       blanket       | 12.79 | 15.13 |
|      sculpture      | 33.86 | 52.44 |
|         hood        | 37.38 | 44.37 |
|        sconce       | 34.11 | 43.54 |
|         vase        | 33.75 | 51.61 |
|    traffic light    | 29.82 | 39.64 |
|         tray        | 12.57 | 20.98 |
|        ashcan       | 26.61 | 33.83 |
|         fan         | 58.04 | 69.24 |
|         pier        | 44.72 | 64.11 |
|      crt screen     |  2.72 |  7.35 |
|        plate        | 47.59 | 59.69 |
|       monitor       |  2.18 |  2.25 |
|    bulletin board   | 31.03 | 37.38 |
|        shower       |  2.1  |  6.25 |
|       radiator      | 37.19 | 39.46 |
|        glass        | 14.55 | 16.03 |
|        clock        |  24.4 | 25.88 |
|         flag        | 36.24 | 38.95 |
+---------------------+-------+-------+
09/16 01:23:00 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.5300  mIoU: 42.9600  mAcc: 53.0900  data_time: 0.0022  time: 0.2996
Finished processing corruption type: frost
Processing corruption type: fog
09/16 01:23:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1239055640
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1239055640
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 01:23:55 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/fog'

09/16 01:24:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 01:24:06 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 01:24:06 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 01:24:08 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 01:25:31 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:54:00  time: 0.9418  data_time: 0.0018  memory: 19986  
09/16 01:26:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:41:55  time: 1.1882  data_time: 0.0019  memory: 19982  
09/16 01:26:48 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:32:58  time: 0.4834  data_time: 0.0017  memory: 19955  
09/16 01:27:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:29:46  time: 0.7721  data_time: 0.0017  memory: 19982  
09/16 01:28:01 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:27:12  time: 0.5418  data_time: 0.0024  memory: 19978  
09/16 01:28:34 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:25:04  time: 0.2382  data_time: 0.0018  memory: 19978  
09/16 01:29:09 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:23:38  time: 0.4177  data_time: 0.0016  memory: 19978  
09/16 01:29:40 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:22:06  time: 0.5200  data_time: 0.0016  memory: 19978  
09/16 01:29:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:20:02  time: 0.3911  data_time: 0.0040  memory: 19952  
09/16 01:30:16 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:18:23  time: 0.2697  data_time: 0.0017  memory: 19918  
09/16 01:30:35 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:16:59  time: 0.5176  data_time: 0.0082  memory: 19977  
09/16 01:30:54 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:15:45  time: 0.5048  data_time: 0.0068  memory: 19979  
09/16 01:31:19 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:14:54  time: 0.6706  data_time: 0.0036  memory: 19988  
09/16 01:31:48 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:14:13  time: 0.2967  data_time: 0.0039  memory: 19986  
09/16 01:32:19 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:13:37  time: 1.2086  data_time: 0.0125  memory: 19993  
09/16 01:32:35 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:12:39  time: 0.2724  data_time: 0.0043  memory: 19956  
09/16 01:32:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:44  time: 0.2706  data_time: 0.0043  memory: 778  
09/16 01:33:08 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:58  time: 0.4543  data_time: 0.0075  memory: 19943  
09/16 01:33:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:10:26  time: 0.6300  data_time: 0.0077  memory: 19975  
09/16 01:33:56 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:47  time: 0.2764  data_time: 0.0042  memory: 19975  
09/16 01:34:20 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:09:12  time: 0.7856  data_time: 0.0079  memory: 19994  
09/16 01:34:41 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:37  time: 0.2768  data_time: 0.0040  memory: 19957  
09/16 01:34:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:59  time: 0.3656  data_time: 0.0051  memory: 19931  
09/16 01:35:11 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:21  time: 0.2331  data_time: 0.0017  memory: 1974  
09/16 01:35:29 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:48  time: 0.3743  data_time: 0.0050  memory: 19961  
09/16 01:35:42 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:12  time: 0.2304  data_time: 0.0016  memory: 778  
09/16 01:35:57 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:40  time: 0.2320  data_time: 0.0016  memory: 19913  
09/16 01:36:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:13  time: 0.5454  data_time: 0.0083  memory: 19966  
09/16 01:36:37 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:43  time: 0.4669  data_time: 0.0041  memory: 19943  
09/16 01:36:50 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:13  time: 0.2398  data_time: 0.0039  memory: 778  
09/16 01:37:05 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:45  time: 0.2799  data_time: 0.0029  memory: 19971  
09/16 01:37:18 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:17  time: 0.2775  data_time: 0.0047  memory: 769  
09/16 01:37:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:51  time: 0.2647  data_time: 0.0038  memory: 19976  
09/16 01:37:55 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:25  time: 0.2659  data_time: 0.0041  memory: 19948  
09/16 01:38:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:02  time: 0.9180  data_time: 0.0439  memory: 19966  
09/16 01:39:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:43  time: 2.3061  data_time: 0.0554  memory: 19918  
09/16 01:40:51 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:21  time: 1.3956  data_time: 0.0551  memory: 727  
09/16 01:41:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:55  time: 1.0404  data_time: 0.0454  memory: 19986  
09/16 01:42:55 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:28  time: 0.9944  data_time: 0.0475  memory: 19927  
09/16 01:44:28 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.7734  data_time: 0.0525  memory: 19989  
09/16 01:44:28 - mmengine - INFO - per class results:
09/16 01:44:28 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.74 |  88.6 |
|       building      | 80.57 |  91.1 |
|         sky         | 93.55 | 96.93 |
|        floor        | 81.01 |  90.6 |
|         tree        | 72.19 | 86.85 |
|       ceiling       | 84.01 | 92.72 |
|         road        | 82.98 | 91.08 |
|         bed         | 88.15 | 94.35 |
|      windowpane     | 59.39 | 76.28 |
|        grass        | 66.55 | 82.45 |
|       cabinet       | 61.59 | 74.91 |
|       sidewalk      | 64.41 | 78.73 |
|        person       | 79.31 | 91.22 |
|        earth        | 37.21 | 53.73 |
|         door        | 46.08 | 58.42 |
|        table        | 58.95 | 76.18 |
|       mountain      | 56.95 | 72.18 |
|        plant        | 48.34 | 60.92 |
|       curtain       | 72.52 | 83.41 |
|        chair        | 55.89 | 71.14 |
|         car         | 83.86 | 91.32 |
|        water        | 54.15 | 72.45 |
|       painting      | 70.42 |  84.6 |
|         sofa        | 66.12 | 84.18 |
|        shelf        |  43.1 |  59.5 |
|        house        | 39.68 | 57.16 |
|         sea         | 52.24 | 71.84 |
|        mirror       | 66.61 | 75.66 |
|         rug         | 59.01 | 69.79 |
|        field        | 31.72 |  42.2 |
|       armchair      | 41.35 | 55.55 |
|         seat        | 62.32 | 81.74 |
|        fence        | 42.98 | 59.14 |
|         desk        | 50.08 | 68.39 |
|         rock        | 41.94 | 57.52 |
|       wardrobe      | 50.61 | 62.46 |
|         lamp        | 61.53 | 74.99 |
|       bathtub       | 75.07 |  83.0 |
|       railing       |  33.7 | 48.11 |
|       cushion       | 55.48 | 68.36 |
|         base        | 16.25 | 20.97 |
|         box         | 28.18 |  36.9 |
|        column       | 45.27 | 57.07 |
|      signboard      | 36.86 | 50.58 |
|   chest of drawers  | 35.45 | 54.05 |
|       counter       |  25.3 | 34.86 |
|         sand        | 37.37 | 56.49 |
|         sink        | 68.25 | 79.67 |
|      skyscraper     | 53.98 | 65.76 |
|      fireplace      | 75.12 | 85.65 |
|     refrigerator    | 76.67 | 86.95 |
|      grandstand     | 41.05 | 76.18 |
|         path        | 25.39 | 35.03 |
|        stairs       | 31.03 | 37.06 |
|        runway       | 72.73 | 94.18 |
|         case        | 40.25 |  52.8 |
|      pool table     | 92.26 | 95.72 |
|        pillow       | 57.38 | 71.23 |
|     screen door     | 75.14 | 83.22 |
|       stairway      | 27.44 | 35.61 |
|        river        |  9.03 | 16.69 |
|        bridge       | 41.86 | 45.99 |
|       bookcase      | 37.58 | 55.88 |
|        blind        | 42.77 | 46.77 |
|     coffee table    | 55.87 | 78.27 |
|        toilet       | 84.52 |  90.4 |
|        flower       | 45.21 | 55.05 |
|         book        | 45.92 | 62.53 |
|         hill        | 11.52 | 16.65 |
|        bench        | 45.71 |  51.6 |
|      countertop     |  52.8 | 71.43 |
|        stove        | 70.66 | 77.08 |
|         palm        | 47.68 | 71.94 |
|    kitchen island   | 37.84 |  67.1 |
|       computer      | 57.85 | 67.31 |
|     swivel chair    | 43.66 | 56.88 |
|         boat        | 45.02 | 56.93 |
|         bar         | 37.78 | 50.33 |
|    arcade machine   | 59.72 | 63.21 |
|        hovel        | 21.06 | 29.47 |
|         bus         | 85.67 |  94.6 |
|        towel        | 63.46 |  80.5 |
|        light        | 49.02 | 56.11 |
|        truck        | 36.21 | 48.23 |
|        tower        |  6.1  |  9.36 |
|      chandelier     | 67.92 | 82.86 |
|        awning       |  25.0 | 28.48 |
|     streetlight     | 23.89 | 31.89 |
|        booth        | 49.18 |  53.5 |
| television receiver | 63.96 | 77.92 |
|       airplane      | 59.78 | 67.08 |
|      dirt track     | 13.56 | 21.66 |
|       apparel       | 35.28 | 49.39 |
|         pole        | 21.43 | 28.78 |
|         land        |  1.05 |  1.41 |
|      bannister      | 11.55 | 15.54 |
|      escalator      | 29.68 |  32.6 |
|       ottoman       | 50.09 | 61.28 |
|        bottle       | 34.41 | 48.17 |
|        buffet       | 41.76 | 47.14 |
|        poster       | 17.55 | 26.52 |
|        stage        | 14.83 | 21.38 |
|         van         | 42.91 | 59.68 |
|         ship        | 66.08 | 89.39 |
|       fountain      | 21.45 | 22.01 |
|    conveyer belt    | 82.76 | 88.37 |
|        canopy       | 22.63 | 24.55 |
|        washer       | 74.17 | 75.94 |
|      plaything      | 22.04 | 34.13 |
|    swimming pool    | 57.27 | 80.99 |
|        stool        |  34.2 | 49.05 |
|        barrel       | 41.19 | 72.67 |
|        basket       | 34.07 | 41.58 |
|      waterfall      | 69.35 |  86.9 |
|         tent        | 93.79 | 98.51 |
|         bag         | 12.74 | 13.99 |
|       minibike      | 71.67 | 83.61 |
|        cradle       | 80.18 | 94.12 |
|         oven        | 47.97 | 61.96 |
|         ball        | 50.63 | 61.11 |
|         food        | 46.35 | 52.77 |
|         step        | 14.09 | 16.59 |
|         tank        | 55.16 | 61.98 |
|      trade name     | 27.24 | 32.44 |
|      microwave      | 83.46 | 87.13 |
|         pot         | 45.98 |  54.9 |
|        animal       | 60.13 | 62.76 |
|       bicycle       | 55.02 | 77.31 |
|         lake        | 61.44 | 63.34 |
|      dishwasher     | 64.57 | 75.58 |
|        screen       | 60.43 | 72.06 |
|       blanket       | 14.74 | 18.18 |
|      sculpture      | 55.14 |  73.3 |
|         hood        | 57.87 | 63.49 |
|        sconce       | 46.22 | 58.09 |
|         vase        | 37.33 | 55.69 |
|    traffic light    | 31.08 |  49.8 |
|         tray        |  9.75 | 17.83 |
|        ashcan       | 36.65 | 49.39 |
|         fan         | 61.41 | 75.21 |
|         pier        | 32.93 | 46.35 |
|      crt screen     |  2.92 | 10.74 |
|        plate        | 47.96 | 62.24 |
|       monitor       |  8.95 |  10.2 |
|    bulletin board   | 43.08 | 56.76 |
|        shower       |  9.78 | 11.49 |
|       radiator      | 53.23 | 63.17 |
|        glass        | 17.11 | 19.68 |
|        clock        | 34.75 | 39.72 |
|         flag        | 32.82 | 35.25 |
+---------------------+-------+-------+
09/16 01:44:28 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.3800  mIoU: 48.2500  mAcc: 59.4500  data_time: 0.0107  time: 0.6078
Finished processing corruption type: fog
Processing corruption type: brightness
09/16 01:44:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1902153518
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1902153518
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 01:44:47 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/brightness'

09/16 01:44:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 01:44:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 01:44:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 01:44:59 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 01:47:55 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:54:32  time: 2.7557  data_time: 0.0647  memory: 19986  
09/16 01:50:00 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:35:01  time: 1.4404  data_time: 0.0223  memory: 19982  
09/16 01:51:27 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:19:36  time: 1.1502  data_time: 0.0551  memory: 19955  
09/16 01:53:05 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:12:40  time: 1.9203  data_time: 0.0581  memory: 19982  
09/16 01:54:48 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:08:25  time: 0.6036  data_time: 0.0138  memory: 19978  
09/16 01:55:37 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:00:04  time: 0.3240  data_time: 0.0098  memory: 19978  
09/16 01:56:24 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:53:38  time: 0.8606  data_time: 0.0229  memory: 19978  
09/16 01:56:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:47:50  time: 0.6175  data_time: 0.0114  memory: 19978  
09/16 01:57:21 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:42:27  time: 0.4401  data_time: 0.0124  memory: 19952  
09/16 01:57:50 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:38:24  time: 0.3507  data_time: 0.0091  memory: 19918  
09/16 01:58:28 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:35:24  time: 0.8262  data_time: 0.0197  memory: 19977  
09/16 01:58:55 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:32:22  time: 0.9626  data_time: 0.0357  memory: 19979  
09/16 01:59:52 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:30:47  time: 1.3645  data_time: 0.0382  memory: 19988  
09/16 02:00:33 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:48  time: 0.4113  data_time: 0.0127  memory: 19986  
09/16 02:01:20 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:08  time: 1.5800  data_time: 0.0543  memory: 19993  
09/16 02:01:39 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:24:54  time: 0.3667  data_time: 0.0074  memory: 19956  
09/16 02:02:01 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:22:56  time: 0.3110  data_time: 0.0039  memory: 778  
09/16 02:02:21 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:21:07  time: 0.5578  data_time: 0.0145  memory: 19943  
09/16 02:02:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:19:42  time: 0.6275  data_time: 0.0068  memory: 19975  
09/16 02:03:17 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:18:12  time: 0.2953  data_time: 0.0068  memory: 19975  
09/16 02:03:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:16:57  time: 1.0123  data_time: 0.0318  memory: 19994  
09/16 02:04:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:15:38  time: 0.2890  data_time: 0.0053  memory: 19957  
09/16 02:04:28 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:14:20  time: 0.4025  data_time: 0.0039  memory: 19931  
09/16 02:04:41 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:13:04  time: 0.2761  data_time: 0.0039  memory: 1974  
09/16 02:05:00 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:11:57  time: 0.3875  data_time: 0.0059  memory: 19961  
09/16 02:05:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:10:51  time: 0.3056  data_time: 0.0059  memory: 778  
09/16 02:05:32 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:09:50  time: 0.2916  data_time: 0.0058  memory: 19913  
09/16 02:05:56 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:08:56  time: 0.5447  data_time: 0.0075  memory: 19966  
09/16 02:06:12 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:00  time: 0.4743  data_time: 0.0045  memory: 19943  
09/16 02:06:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:06  time: 0.2569  data_time: 0.0028  memory: 778  
09/16 02:06:40 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:16  time: 0.2502  data_time: 0.0016  memory: 19971  
09/16 02:06:53 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:05:27  time: 0.2426  data_time: 0.0017  memory: 769  
09/16 02:07:12 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:04:41  time: 0.2270  data_time: 0.0015  memory: 19976  
09/16 02:07:31 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:57  time: 0.2531  data_time: 0.0041  memory: 19948  
09/16 02:07:47 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:14  time: 0.2425  data_time: 0.0015  memory: 19966  
09/16 02:08:02 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:33  time: 0.2840  data_time: 0.0042  memory: 19918  
09/16 02:08:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:52  time: 0.2519  data_time: 0.0019  memory: 727  
09/16 02:08:31 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:14  time: 0.2504  data_time: 0.0044  memory: 19986  
09/16 02:08:48 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:36  time: 0.2673  data_time: 0.0041  memory: 19927  
09/16 02:09:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2584  data_time: 0.0037  memory: 19989  
09/16 02:09:07 - mmengine - INFO - per class results:
09/16 02:09:07 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.08 | 88.82 |
|       building      | 81.76 | 91.33 |
|         sky         | 93.84 | 97.48 |
|        floor        | 81.01 | 90.78 |
|         tree        | 73.47 | 86.58 |
|       ceiling       | 84.65 | 92.66 |
|         road        |  83.4 | 91.08 |
|         bed         | 88.69 | 94.73 |
|      windowpane     | 59.92 | 77.83 |
|        grass        | 68.82 | 85.59 |
|       cabinet       | 60.91 | 74.19 |
|       sidewalk      | 64.46 | 79.14 |
|        person       |  79.7 | 91.53 |
|        earth        | 38.03 | 52.93 |
|         door        | 47.59 | 60.58 |
|        table        |  58.0 | 75.09 |
|       mountain      | 58.43 | 72.49 |
|        plant        | 51.02 | 63.68 |
|       curtain       | 72.04 | 82.82 |
|        chair        | 56.39 | 70.08 |
|         car         | 84.05 | 92.13 |
|        water        | 54.72 | 72.99 |
|       painting      | 71.82 | 84.67 |
|         sofa        | 63.95 | 81.41 |
|        shelf        | 45.75 | 63.89 |
|        house        | 44.32 | 62.59 |
|         sea         | 52.96 | 71.42 |
|        mirror       | 66.68 | 75.55 |
|         rug         | 59.78 | 71.61 |
|        field        | 32.24 | 42.84 |
|       armchair      | 40.28 | 57.07 |
|         seat        | 59.55 | 82.62 |
|        fence        |  43.0 | 59.76 |
|         desk        | 50.78 |  69.6 |
|         rock        | 43.31 | 64.07 |
|       wardrobe      |  49.8 | 65.15 |
|         lamp        | 61.69 | 74.31 |
|       bathtub       | 76.81 | 83.96 |
|       railing       | 32.74 | 45.73 |
|       cushion       | 55.97 | 68.54 |
|         base        | 20.81 | 26.46 |
|         box         |  26.5 | 34.33 |
|        column       | 44.07 | 54.74 |
|      signboard      | 36.23 | 48.51 |
|   chest of drawers  | 35.33 | 53.96 |
|       counter       | 22.84 | 30.54 |
|         sand        | 42.65 | 63.04 |
|         sink        | 68.36 | 79.71 |
|      skyscraper     | 52.85 | 65.56 |
|      fireplace      | 75.25 |  86.2 |
|     refrigerator    | 78.11 | 87.61 |
|      grandstand     | 42.93 | 75.76 |
|         path        | 24.88 | 35.15 |
|        stairs       | 30.28 | 36.36 |
|        runway       | 71.18 | 91.32 |
|         case        | 40.37 | 50.11 |
|      pool table     | 92.19 | 96.03 |
|        pillow       | 56.64 | 68.32 |
|     screen door     | 72.06 | 80.77 |
|       stairway      | 28.89 | 36.23 |
|        river        |  9.72 | 18.62 |
|        bridge       | 47.23 | 53.36 |
|       bookcase      | 38.27 | 54.12 |
|        blind        | 42.26 | 46.27 |
|     coffee table    | 55.52 | 79.34 |
|        toilet       | 84.06 | 89.75 |
|        flower       | 45.88 | 58.18 |
|         book        | 46.59 | 64.29 |
|         hill        | 11.26 |  21.1 |
|        bench        | 40.12 | 50.15 |
|      countertop     | 54.96 | 72.99 |
|        stove        | 75.94 | 84.23 |
|         palm        | 47.08 | 73.87 |
|    kitchen island   | 42.85 | 73.88 |
|       computer      | 60.56 | 69.96 |
|     swivel chair    | 40.56 | 56.46 |
|         boat        | 50.45 | 64.41 |
|         bar         | 27.22 | 34.88 |
|    arcade machine   | 42.95 | 45.08 |
|        hovel        | 25.29 |  36.0 |
|         bus         | 86.95 | 95.14 |
|        towel        | 63.64 | 78.78 |
|        light        | 51.55 | 59.69 |
|        truck        | 37.19 | 49.28 |
|        tower        |  7.17 |  8.96 |
|      chandelier     | 65.36 |  80.7 |
|        awning       | 27.98 | 33.75 |
|     streetlight     |  23.5 | 30.89 |
|        booth        | 46.38 |  50.5 |
| television receiver | 67.21 | 80.57 |
|       airplane      | 58.11 | 66.81 |
|      dirt track     | 10.79 | 18.86 |
|       apparel       | 35.24 | 50.27 |
|         pole        | 22.34 | 30.92 |
|         land        |  2.49 |  3.39 |
|      bannister      | 12.34 | 16.31 |
|      escalator      |  31.7 | 34.63 |
|       ottoman       | 51.69 | 63.42 |
|        bottle       | 33.46 | 44.22 |
|        buffet       | 34.73 |  39.7 |
|        poster       | 21.05 | 27.39 |
|        stage        | 16.63 | 21.72 |
|         van         | 45.08 | 62.23 |
|         ship        | 68.98 | 88.59 |
|       fountain      | 21.94 | 22.39 |
|    conveyer belt    | 82.16 | 88.54 |
|        canopy       | 21.17 | 23.53 |
|        washer       | 71.25 | 75.06 |
|      plaything      |  23.2 | 32.45 |
|    swimming pool    | 59.45 | 84.81 |
|        stool        | 34.77 | 50.63 |
|        barrel       | 36.64 | 73.72 |
|        basket       |  35.0 | 44.68 |
|      waterfall      | 71.02 | 87.23 |
|         tent        | 94.81 | 98.33 |
|         bag         | 12.36 | 13.51 |
|       minibike      | 73.78 | 84.08 |
|        cradle       | 80.02 | 93.28 |
|         oven        | 47.51 | 65.55 |
|         ball        | 45.56 | 52.27 |
|         food        | 53.18 | 64.68 |
|         step        | 13.79 | 16.51 |
|         tank        | 55.71 | 63.69 |
|      trade name     | 28.07 | 35.49 |
|      microwave      | 81.68 | 85.23 |
|         pot         |  46.3 | 54.63 |
|        animal       | 58.79 | 60.94 |
|       bicycle       | 57.02 | 78.65 |
|         lake        | 61.49 | 63.27 |
|      dishwasher     | 70.24 | 78.26 |
|        screen       |  61.7 | 77.31 |
|       blanket       | 15.02 | 18.23 |
|      sculpture      | 55.27 | 76.22 |
|         hood        | 56.14 | 60.27 |
|        sconce       | 46.18 | 56.75 |
|         vase        | 38.51 | 55.46 |
|    traffic light    | 32.89 |  51.5 |
|         tray        | 12.16 | 23.47 |
|        ashcan       | 41.48 | 54.22 |
|         fan         | 62.49 | 77.03 |
|         pier        | 46.77 | 68.29 |
|      crt screen     |  1.81 |  6.55 |
|        plate        |  50.1 | 64.55 |
|       monitor       |  5.83 |  6.49 |
|    bulletin board   | 44.56 | 55.51 |
|        shower       |  8.88 | 10.73 |
|       radiator      | 56.33 | 66.98 |
|        glass        | 16.47 | 18.79 |
|        clock        | 36.69 | 42.42 |
|         flag        | 39.41 |  43.2 |
+---------------------+-------+-------+
09/16 02:09:07 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.7600  mIoU: 48.7200  mAcc: 60.1300  data_time: 0.0167  time: 0.7209
Finished processing corruption type: brightness
Processing corruption type: contrast
09/16 02:10:08 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1404737777
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1404737777
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 02:10:08 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/contrast'

09/16 02:10:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 02:10:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 02:10:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 02:10:51 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 02:12:51 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:17:57  time: 0.8795  data_time: 0.0045  memory: 19986  
09/16 02:13:34 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:51:42  time: 1.0672  data_time: 0.0047  memory: 19982  
09/16 02:13:55 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:37:47  time: 0.3560  data_time: 0.0029  memory: 19955  
09/16 02:14:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:32:23  time: 0.6466  data_time: 0.0048  memory: 19982  
09/16 02:14:56 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:28:32  time: 0.3420  data_time: 0.0049  memory: 19978  
09/16 02:15:22 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:25:32  time: 0.1097  data_time: 0.0047  memory: 19978  
09/16 02:15:51 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:23:33  time: 0.3091  data_time: 0.0035  memory: 19978  
09/16 02:16:15 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:21:33  time: 0.3940  data_time: 0.0016  memory: 19978  
09/16 02:16:24 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:19:06  time: 0.2202  data_time: 0.0054  memory: 19952  
09/16 02:16:35 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:17:11  time: 0.1574  data_time: 0.0042  memory: 19918  
09/16 02:16:45 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:33  time: 0.3747  data_time: 0.0055  memory: 19977  
09/16 02:16:55 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:08  time: 0.3301  data_time: 0.0019  memory: 19979  
09/16 02:17:12 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:09  time: 0.4686  data_time: 0.0015  memory: 19988  
09/16 02:17:31 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:22  time: 0.1027  data_time: 0.0018  memory: 19986  
09/16 02:17:53 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:42  time: 0.9972  data_time: 0.0040  memory: 19993  
09/16 02:18:02 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:45  time: 0.1223  data_time: 0.0043  memory: 19956  
09/16 02:18:07 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:49  time: 0.0996  data_time: 0.0018  memory: 778  
09/16 02:18:17 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:04  time: 0.2794  data_time: 0.0038  memory: 19943  
09/16 02:18:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:33  time: 0.4351  data_time: 0.0025  memory: 19975  
09/16 02:18:47 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:55  time: 0.0962  data_time: 0.0016  memory: 19975  
09/16 02:19:05 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:25  time: 0.7581  data_time: 0.0059  memory: 19994  
09/16 02:20:49 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:08  time: 0.1735  data_time: 0.0082  memory: 19957  
09/16 02:20:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:28  time: 0.2057  data_time: 0.0016  memory: 19931  
09/16 02:21:04 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:47  time: 0.0957  data_time: 0.0016  memory: 1974  
09/16 02:21:14 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:13  time: 0.2191  data_time: 0.0016  memory: 19961  
09/16 02:21:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:37  time: 0.0979  data_time: 0.0017  memory: 778  
09/16 02:21:25 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:04  time: 0.1018  data_time: 0.0016  memory: 19913  
09/16 02:21:41 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:38  time: 0.3523  data_time: 0.0016  memory: 19966  
09/16 02:21:49 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:09  time: 0.2858  data_time: 0.0015  memory: 19943  
09/16 02:21:54 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:40  time: 0.0949  data_time: 0.0015  memory: 778  
09/16 02:22:01 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:14  time: 0.0981  data_time: 0.0016  memory: 19971  
09/16 02:22:06 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:48  time: 0.0994  data_time: 0.0017  memory: 769  
09/16 02:22:16 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:25  time: 0.0927  data_time: 0.0015  memory: 19976  
09/16 02:22:26 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:02  time: 0.1016  data_time: 0.0017  memory: 19948  
09/16 02:22:35 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:40  time: 0.1014  data_time: 0.0015  memory: 19966  
09/16 02:22:42 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:18  time: 0.0983  data_time: 0.0017  memory: 19918  
09/16 02:22:47 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:57  time: 0.0996  data_time: 0.0017  memory: 727  
09/16 02:22:54 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:38  time: 0.0973  data_time: 0.0015  memory: 19986  
09/16 02:23:02 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:18  time: 0.0948  data_time: 0.0015  memory: 19927  
09/16 02:23:12 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0930  data_time: 0.0015  memory: 19989  
09/16 02:23:12 - mmengine - INFO - per class results:
09/16 02:23:12 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.63 | 88.73 |
|       building      | 81.39 | 91.33 |
|         sky         | 93.38 | 96.75 |
|        floor        | 81.04 | 90.61 |
|         tree        | 72.07 | 86.88 |
|       ceiling       |  84.4 | 92.48 |
|         road        | 82.99 | 90.79 |
|         bed         | 88.45 | 94.61 |
|      windowpane     | 59.65 | 75.74 |
|        grass        | 67.83 | 85.24 |
|       cabinet       | 62.07 | 75.96 |
|       sidewalk      | 64.27 |  79.2 |
|        person       | 78.94 | 91.06 |
|        earth        | 36.76 | 51.66 |
|         door        | 46.48 | 58.69 |
|        table        | 59.13 | 76.04 |
|       mountain      | 57.44 | 69.68 |
|        plant        | 49.43 | 61.52 |
|       curtain       | 71.33 | 82.73 |
|        chair        | 56.19 | 70.89 |
|         car         | 83.67 | 91.06 |
|        water        | 54.11 | 71.85 |
|       painting      | 70.21 | 84.41 |
|         sofa        | 65.38 | 82.56 |
|        shelf        | 43.45 | 59.21 |
|        house        | 43.57 | 62.53 |
|         sea         | 52.62 | 71.89 |
|        mirror       |  66.2 | 75.35 |
|         rug         | 59.54 | 70.74 |
|        field        | 33.98 | 48.31 |
|       armchair      |  41.1 | 57.16 |
|         seat        |  59.9 |  82.4 |
|        fence        | 44.71 | 59.06 |
|         desk        | 51.26 | 68.71 |
|         rock        | 41.49 | 61.38 |
|       wardrobe      | 51.51 | 62.66 |
|         lamp        | 61.52 | 74.67 |
|       bathtub       | 76.42 | 84.29 |
|       railing       | 33.29 | 47.61 |
|       cushion       | 56.21 | 69.43 |
|         base        | 20.17 | 26.11 |
|         box         | 26.67 | 34.42 |
|        column       | 43.34 | 54.18 |
|      signboard      | 36.29 | 49.27 |
|   chest of drawers  | 35.38 | 56.65 |
|       counter       | 27.14 | 39.06 |
|         sand        | 38.24 | 60.17 |
|         sink        | 68.37 | 79.44 |
|      skyscraper     | 54.59 |  67.8 |
|      fireplace      | 72.65 |  86.9 |
|     refrigerator    | 76.46 | 85.25 |
|      grandstand     | 39.78 | 73.63 |
|         path        | 24.35 | 33.34 |
|        stairs       | 29.41 | 34.75 |
|        runway       | 74.88 | 96.46 |
|         case        | 42.89 | 58.88 |
|      pool table     | 92.33 | 95.72 |
|        pillow       | 56.19 | 68.54 |
|     screen door     | 74.25 | 82.24 |
|       stairway      | 27.66 | 34.84 |
|        river        |  7.88 | 14.71 |
|        bridge       | 41.46 | 45.73 |
|       bookcase      | 37.82 | 54.85 |
|        blind        | 43.76 | 49.03 |
|     coffee table    | 55.46 | 78.51 |
|        toilet       | 84.35 | 90.56 |
|        flower       | 40.88 | 49.78 |
|         book        | 45.97 | 64.69 |
|         hill        | 12.72 | 20.49 |
|        bench        | 40.62 | 50.34 |
|      countertop     | 54.33 | 73.72 |
|        stove        |  72.4 | 77.35 |
|         palm        |  46.5 | 70.09 |
|    kitchen island   | 44.62 | 72.98 |
|       computer      | 63.26 |  72.5 |
|     swivel chair    | 45.04 | 58.56 |
|         boat        | 42.22 | 52.47 |
|         bar         | 30.77 | 38.46 |
|    arcade machine   | 41.12 | 42.73 |
|        hovel        | 22.36 | 30.78 |
|         bus         | 86.05 | 94.51 |
|        towel        | 62.21 | 79.29 |
|        light        | 50.37 | 57.25 |
|        truck        | 36.68 | 47.86 |
|        tower        |  6.01 |  8.92 |
|      chandelier     | 68.26 | 81.99 |
|        awning       | 25.59 | 30.28 |
|     streetlight     | 23.76 | 31.76 |
|        booth        | 51.73 | 55.28 |
| television receiver | 65.33 | 75.77 |
|       airplane      | 59.79 | 67.94 |
|      dirt track     | 11.16 | 20.88 |
|       apparel       | 33.81 | 48.83 |
|         pole        | 20.82 | 27.78 |
|         land        |  6.98 |  9.89 |
|      bannister      | 11.59 | 15.81 |
|      escalator      | 30.98 | 34.27 |
|       ottoman       | 50.81 | 60.68 |
|        bottle       | 36.15 | 54.89 |
|        buffet       | 39.14 | 44.12 |
|        poster       | 19.71 |  27.0 |
|        stage        | 13.94 | 22.16 |
|         van         | 45.13 | 62.54 |
|         ship        | 62.91 | 88.47 |
|       fountain      | 21.31 | 21.76 |
|    conveyer belt    | 82.62 | 87.66 |
|        canopy       | 25.06 | 27.96 |
|        washer       | 74.15 | 75.73 |
|      plaything      | 21.75 | 31.63 |
|    swimming pool    | 59.49 | 83.95 |
|        stool        | 36.76 | 51.85 |
|        barrel       | 38.56 | 73.99 |
|        basket       | 32.77 | 39.82 |
|      waterfall      | 69.89 | 85.34 |
|         tent        | 92.78 | 98.39 |
|         bag         | 12.76 | 13.97 |
|       minibike      | 71.37 | 83.94 |
|        cradle       | 81.29 | 94.59 |
|         oven        | 45.94 | 61.03 |
|         ball        | 49.24 | 58.06 |
|         food        | 50.08 | 57.93 |
|         step        | 13.26 | 16.04 |
|         tank        | 56.88 | 62.54 |
|      trade name     | 27.13 | 32.76 |
|      microwave      | 83.38 | 86.84 |
|         pot         | 45.12 | 53.16 |
|        animal       | 59.89 | 62.31 |
|       bicycle       | 55.82 | 77.65 |
|         lake        | 60.15 | 64.07 |
|      dishwasher     | 68.34 | 75.24 |
|        screen       | 71.59 | 80.29 |
|       blanket       | 15.34 | 18.33 |
|      sculpture      | 47.71 | 69.81 |
|         hood        | 54.13 | 58.24 |
|        sconce       | 46.04 | 57.46 |
|         vase        | 38.86 | 56.66 |
|    traffic light    | 31.18 |  50.5 |
|         tray        | 10.74 | 18.35 |
|        ashcan       | 40.04 | 55.01 |
|         fan         | 61.89 | 76.56 |
|         pier        | 49.29 |  65.2 |
|      crt screen     |  3.51 | 10.81 |
|        plate        |  48.4 | 62.45 |
|       monitor       |  6.58 |  8.04 |
|    bulletin board   | 42.65 | 53.99 |
|        shower       |  7.87 |  9.57 |
|       radiator      | 56.81 | 68.37 |
|        glass        | 16.56 | 18.87 |
|        clock        | 36.99 | 43.41 |
|         flag        | 38.24 | 41.35 |
+---------------------+-------+-------+
09/16 02:23:12 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.5000  mIoU: 48.4900  mAcc: 59.8100  data_time: 0.0039  time: 0.3699
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
09/16 02:23:43 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1640995866
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1640995866
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 02:23:43 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/elastic_transform'

09/16 02:23:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 02:23:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 02:23:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 02:23:57 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 02:26:07 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:24:53  time: 1.9166  data_time: 0.0107  memory: 19986  
09/16 02:27:41 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:11:03  time: 2.1439  data_time: 0.0040  memory: 19982  
09/16 02:28:53 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:00:58  time: 1.4253  data_time: 0.0020  memory: 19955  
09/16 02:30:19 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:57:18  time: 1.6681  data_time: 0.0017  memory: 19982  
09/16 02:31:38 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:53:46  time: 1.3562  data_time: 0.0017  memory: 19978  
09/16 02:32:54 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:50:43  time: 1.1509  data_time: 0.0017  memory: 19978  
09/16 02:34:15 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:48:34  time: 1.3563  data_time: 0.0071  memory: 19978  
09/16 02:35:31 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:46:16  time: 1.4801  data_time: 0.0070  memory: 19978  
09/16 02:36:27 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:43:05  time: 1.2221  data_time: 0.0044  memory: 19952  
09/16 02:37:30 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:40:40  time: 1.1714  data_time: 0.0036  memory: 19918  
09/16 02:38:37 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:38:40  time: 1.4488  data_time: 0.0041  memory: 19977  
09/16 02:39:41 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:36:42  time: 1.4442  data_time: 0.0066  memory: 19979  
09/16 02:40:52 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:35:07  time: 1.5911  data_time: 0.0054  memory: 19988  
09/16 02:42:09 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:33:47  time: 1.2880  data_time: 0.0068  memory: 19986  
09/16 02:43:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:32:30  time: 2.1022  data_time: 0.0175  memory: 19993  
09/16 02:44:29 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:30:47  time: 1.2227  data_time: 0.0060  memory: 19956  
09/16 02:45:31 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:29:10  time: 1.2527  data_time: 0.0097  memory: 778  
09/16 02:46:31 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:27:35  time: 1.2309  data_time: 0.0062  memory: 19943  
09/16 02:47:46 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:26:19  time: 1.5096  data_time: 0.0102  memory: 19975  
09/16 02:48:51 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:24:53  time: 1.2063  data_time: 0.0086  memory: 19975  
09/16 02:50:04 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:23:37  time: 1.7855  data_time: 0.0108  memory: 19994  
09/16 02:51:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:22:17  time: 1.1965  data_time: 0.0069  memory: 19957  
09/16 02:52:16 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:20:55  time: 1.3714  data_time: 0.0100  memory: 19931  
09/16 02:54:42 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:20:30  time: 1.0622  data_time: 0.0016  memory: 1974  
09/16 02:55:40 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:19:01  time: 1.1814  data_time: 0.0015  memory: 19961  
09/16 02:56:33 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:17:32  time: 1.1200  data_time: 0.0033  memory: 778  
09/16 02:57:29 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:16:08  time: 1.0273  data_time: 0.0016  memory: 19913  
09/16 02:58:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:14:50  time: 1.4119  data_time: 0.0016  memory: 19966  
09/16 02:59:31 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:13:29  time: 1.3421  data_time: 0.0019  memory: 19943  
09/16 03:00:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:12:09  time: 1.0311  data_time: 0.0016  memory: 778  
09/16 03:01:25 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:10:52  time: 1.1466  data_time: 0.0017  memory: 19971  
09/16 03:02:20 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:09:35  time: 1.1210  data_time: 0.0021  memory: 769  
09/16 03:03:22 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:08:21  time: 1.2043  data_time: 0.0052  memory: 19976  
09/16 03:04:23 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:08  time: 1.1259  data_time: 0.0017  memory: 19948  
09/16 03:05:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:55  time: 1.1093  data_time: 0.0016  memory: 19966  
09/16 03:06:23 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:42  time: 1.2387  data_time: 0.0047  memory: 19918  
09/16 03:07:20 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:31  time: 1.1248  data_time: 0.0018  memory: 727  
09/16 03:08:18 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:20  time: 1.1880  data_time: 0.0068  memory: 19986  
09/16 03:09:19 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:09  time: 1.1798  data_time: 0.0043  memory: 19927  
09/16 03:10:19 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.1067  data_time: 0.0042  memory: 19989  
09/16 03:10:20 - mmengine - INFO - per class results:
09/16 03:10:20 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 64.33 | 79.74 |
|       building      | 73.81 | 86.65 |
|         sky         | 83.86 | 90.95 |
|        floor        | 68.48 | 82.25 |
|         tree        | 63.24 | 80.02 |
|       ceiling       | 70.67 | 84.33 |
|         road        | 76.29 | 86.74 |
|         bed         | 76.66 | 87.91 |
|      windowpane     | 48.67 | 66.93 |
|        grass        | 62.65 | 79.69 |
|       cabinet       | 50.32 | 64.81 |
|       sidewalk      | 52.01 | 67.88 |
|        person       | 61.44 | 78.74 |
|        earth        |  35.4 | 51.36 |
|         door        | 36.99 | 48.67 |
|        table        | 42.41 |  61.8 |
|       mountain      | 51.37 | 65.88 |
|        plant        | 41.95 | 56.57 |
|       curtain       | 55.24 | 72.05 |
|        chair        | 39.91 | 56.11 |
|         car         | 61.15 | 76.06 |
|        water        | 52.33 | 71.52 |
|       painting      | 48.68 | 65.75 |
|         sofa        |  55.1 | 75.12 |
|        shelf        | 38.78 | 58.57 |
|        house        | 36.83 | 55.34 |
|         sea         | 50.13 | 68.23 |
|        mirror       | 55.84 | 69.41 |
|         rug         |  44.1 | 58.28 |
|        field        | 29.55 | 41.61 |
|       armchair      | 33.12 |  48.5 |
|         seat        | 54.96 | 77.75 |
|        fence        | 33.82 | 48.48 |
|         desk        |  40.7 |  61.6 |
|         rock        | 36.98 | 59.06 |
|       wardrobe      | 43.67 |  61.6 |
|         lamp        | 29.78 | 46.53 |
|       bathtub       | 61.54 | 71.88 |
|       railing       | 26.56 | 40.55 |
|       cushion       | 39.95 | 53.65 |
|         base        | 18.76 | 25.12 |
|         box         | 20.66 | 28.81 |
|        column       | 31.73 | 46.13 |
|      signboard      | 23.96 | 35.23 |
|   chest of drawers  | 29.62 | 46.85 |
|       counter       | 23.09 | 27.32 |
|         sand        | 36.73 | 56.94 |
|         sink        | 47.94 | 63.45 |
|      skyscraper     | 45.64 | 60.37 |
|      fireplace      | 64.48 | 78.16 |
|     refrigerator    | 61.97 | 73.47 |
|      grandstand     | 41.19 | 72.83 |
|         path        | 21.17 | 29.31 |
|        stairs       | 24.56 | 29.84 |
|        runway       | 68.68 | 85.33 |
|         case        | 38.56 | 47.38 |
|      pool table     | 76.29 | 85.05 |
|        pillow       | 40.22 | 54.87 |
|     screen door     | 63.12 |  67.7 |
|       stairway      | 22.74 | 29.74 |
|        river        |  8.5  | 14.75 |
|        bridge       | 45.55 | 57.92 |
|       bookcase      |  29.4 | 44.63 |
|        blind        | 33.84 | 38.77 |
|     coffee table    |  42.6 | 64.85 |
|        toilet       | 61.36 | 75.37 |
|        flower       | 33.23 |  45.8 |
|         book        | 31.16 | 48.48 |
|         hill        |  10.3 | 17.79 |
|        bench        | 32.98 | 42.14 |
|      countertop     | 38.65 | 57.78 |
|        stove        | 63.56 |  74.4 |
|         palm        | 36.97 | 50.25 |
|    kitchen island   | 36.34 | 66.52 |
|       computer      | 47.16 | 58.67 |
|     swivel chair    | 29.12 | 46.31 |
|         boat        |  51.3 | 71.71 |
|         bar         | 28.31 | 38.24 |
|    arcade machine   |  39.8 |  46.8 |
|        hovel        | 15.61 | 24.11 |
|         bus         | 73.98 | 89.91 |
|        towel        | 39.49 |  58.5 |
|        light        | 14.61 | 22.94 |
|        truck        | 28.41 | 43.52 |
|        tower        |  4.91 |  6.39 |
|      chandelier     | 41.22 |  58.8 |
|        awning       | 18.34 | 23.84 |
|     streetlight     |  7.95 | 12.23 |
|        booth        | 37.09 | 43.65 |
| television receiver | 47.77 |  65.1 |
|       airplane      | 43.37 | 55.75 |
|      dirt track     | 15.84 | 21.08 |
|       apparel       |  29.8 | 44.72 |
|         pole        | 10.11 | 16.12 |
|         land        |  3.38 |  4.49 |
|      bannister      |  8.08 |  11.3 |
|      escalator      | 25.46 | 30.72 |
|       ottoman       |  43.5 | 53.02 |
|        bottle       | 24.67 | 35.58 |
|        buffet       | 27.12 |  33.1 |
|        poster       | 16.92 | 23.64 |
|        stage        | 12.66 | 21.51 |
|         van         | 36.92 | 51.43 |
|         ship        | 74.13 | 85.26 |
|       fountain      |  20.1 | 21.54 |
|    conveyer belt    | 72.97 | 83.33 |
|        canopy       |  17.0 | 20.48 |
|        washer       | 70.83 | 75.07 |
|      plaything      | 15.69 | 27.26 |
|    swimming pool    | 67.96 | 82.97 |
|        stool        | 17.19 | 29.06 |
|        barrel       | 25.43 |  61.1 |
|        basket       | 22.93 | 28.56 |
|      waterfall      | 58.11 |  80.6 |
|         tent        | 80.38 | 92.51 |
|         bag         |  6.52 |  7.41 |
|       minibike      | 51.17 | 70.25 |
|        cradle       | 65.23 | 84.54 |
|         oven        | 43.72 | 56.93 |
|         ball        | 37.14 | 46.31 |
|         food        | 41.67 | 51.21 |
|         step        | 10.95 | 12.63 |
|         tank        | 51.11 | 59.29 |
|      trade name     |  19.4 | 25.76 |
|      microwave      | 70.79 | 80.13 |
|         pot         | 23.32 | 33.18 |
|        animal       | 48.63 | 52.98 |
|       bicycle       | 37.82 | 61.19 |
|         lake        | 59.07 | 62.26 |
|      dishwasher     |  53.5 | 63.04 |
|        screen       | 50.37 | 67.23 |
|       blanket       | 12.65 | 16.02 |
|      sculpture      | 41.41 |  64.5 |
|         hood        | 36.12 | 47.69 |
|        sconce       | 22.43 | 34.79 |
|         vase        | 17.52 | 34.69 |
|    traffic light    | 17.52 | 32.45 |
|         tray        |  8.54 | 15.94 |
|        ashcan       | 26.09 | 43.36 |
|         fan         | 26.69 | 44.26 |
|         pier        | 30.97 | 57.24 |
|      crt screen     |  3.82 | 13.98 |
|        plate        | 31.94 | 46.24 |
|       monitor       |  4.19 |  5.18 |
|    bulletin board   | 31.56 | 40.66 |
|        shower       |  2.58 |  3.39 |
|       radiator      | 36.44 |  47.6 |
|        glass        |  7.66 |  9.27 |
|        clock        | 19.96 | 26.01 |
|         flag        | 16.83 | 21.21 |
+---------------------+-------+-------+
09/16 03:10:20 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 74.8700  mIoU: 38.4400  mAcc: 50.9400  data_time: 0.0050  time: 1.3910
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/16 03:11:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 56655067
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 56655067
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 03:11:25 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/pixelate'

09/16 03:12:03 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 03:12:03 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 03:12:04 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 03:12:06 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 03:13:47 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:05:31  time: 0.8056  data_time: 0.0016  memory: 19986  
09/16 03:14:31 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:45:57  time: 1.2521  data_time: 0.0191  memory: 19982  
09/16 03:14:58 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:35:25  time: 0.3996  data_time: 0.0050  memory: 19955  
09/16 03:15:35 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:31:16  time: 0.6341  data_time: 0.0055  memory: 19982  
09/16 03:16:04 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:27:42  time: 0.4062  data_time: 0.0136  memory: 19978  
09/16 03:16:33 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:25:09  time: 0.1512  data_time: 0.0087  memory: 19978  
09/16 03:17:07 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:23:37  time: 0.3742  data_time: 0.0096  memory: 19978  
09/16 03:17:34 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:21:48  time: 0.3879  data_time: 0.0015  memory: 19978  
09/16 03:17:45 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:19:24  time: 0.2538  data_time: 0.0080  memory: 19952  
09/16 03:17:56 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:17:28  time: 0.0783  data_time: 0.0015  memory: 19918  
09/16 03:18:05 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:45  time: 0.3176  data_time: 0.0016  memory: 19977  
09/16 03:18:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:50  time: 0.3053  data_time: 0.0016  memory: 19979  
09/16 03:18:44 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:45  time: 0.4502  data_time: 0.0014  memory: 19988  
09/16 03:19:02 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:50  time: 0.0872  data_time: 0.0017  memory: 19986  
09/16 03:19:22 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:05  time: 0.9471  data_time: 0.0015  memory: 19993  
09/16 03:19:29 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:03  time: 0.0848  data_time: 0.0017  memory: 19956  
09/16 03:19:33 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:03  time: 0.0848  data_time: 0.0017  memory: 778  
09/16 03:19:42 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:15  time: 0.2456  data_time: 0.0015  memory: 19943  
09/16 03:19:59 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:41  time: 0.4054  data_time: 0.0015  memory: 19975  
09/16 03:20:09 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:02  time: 0.0853  data_time: 0.0015  memory: 19975  
09/16 03:20:24 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:29  time: 0.5940  data_time: 0.0016  memory: 19994  
09/16 03:20:36 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:56  time: 0.0836  data_time: 0.0016  memory: 19957  
09/16 03:20:45 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:22  time: 0.1978  data_time: 0.0016  memory: 19931  
09/16 03:20:49 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:48  time: 0.0854  data_time: 0.0015  memory: 1974  
09/16 03:20:58 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:19  time: 0.2114  data_time: 0.0015  memory: 19961  
09/16 03:21:03 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:48  time: 0.0827  data_time: 0.0015  memory: 778  
09/16 03:21:09 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:20  time: 0.0836  data_time: 0.0015  memory: 19913  
09/16 03:21:23 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:58  time: 0.3320  data_time: 0.0015  memory: 19966  
09/16 03:21:31 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:33  time: 0.2746  data_time: 0.0015  memory: 19943  
09/16 03:21:35 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:09  time: 0.0872  data_time: 0.0015  memory: 778  
09/16 03:21:41 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:46  time: 0.0833  data_time: 0.0015  memory: 19971  
09/16 03:21:46 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:24  time: 0.0839  data_time: 0.0016  memory: 769  
09/16 03:22:05 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:06  time: 0.3771  data_time: 0.0116  memory: 19976  
09/16 03:22:15 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:47  time: 0.0907  data_time: 0.0017  memory: 19948  
09/16 03:22:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:28  time: 0.0782  data_time: 0.0014  memory: 19966  
09/16 03:22:31 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:09  time: 0.0877  data_time: 0.0017  memory: 19918  
09/16 03:22:35 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:50  time: 0.0912  data_time: 0.0017  memory: 727  
09/16 03:22:42 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:33  time: 0.0865  data_time: 0.0015  memory: 19986  
09/16 03:22:50 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.1220  data_time: 0.0041  memory: 19927  
09/16 03:22:59 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0872  data_time: 0.0014  memory: 19989  
09/16 03:23:00 - mmengine - INFO - per class results:
09/16 03:23:00 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.42 | 89.04 |
|       building      | 80.94 | 92.56 |
|         sky         | 93.77 | 97.03 |
|        floor        | 80.16 |  90.6 |
|         tree        | 71.88 | 85.86 |
|       ceiling       | 83.54 | 92.34 |
|         road        | 82.92 | 91.03 |
|         bed         | 87.51 | 93.68 |
|      windowpane     |  58.7 |  76.9 |
|        grass        | 67.67 | 85.35 |
|       cabinet       | 58.26 |  71.9 |
|       sidewalk      | 63.53 | 77.97 |
|        person       | 78.53 |  88.6 |
|        earth        | 35.53 | 49.13 |
|         door        | 45.06 | 58.32 |
|        table        | 56.57 | 76.37 |
|       mountain      | 54.99 | 66.47 |
|        plant        | 47.59 |  58.3 |
|       curtain       | 71.47 | 82.05 |
|        chair        | 54.74 | 68.44 |
|         car         | 81.74 | 88.96 |
|        water        | 55.65 | 74.21 |
|       painting      | 73.68 | 83.94 |
|         sofa        | 64.43 | 84.67 |
|        shelf        | 43.89 |  63.9 |
|        house        | 44.33 | 60.13 |
|         sea         | 53.38 | 71.02 |
|        mirror       | 65.16 | 74.29 |
|         rug         | 61.51 | 74.97 |
|        field        | 33.28 | 46.16 |
|       armchair      | 36.34 | 47.82 |
|         seat        | 60.54 |  80.4 |
|        fence        | 41.21 | 57.37 |
|         desk        | 49.64 | 64.47 |
|         rock        | 37.72 | 52.33 |
|       wardrobe      | 45.59 | 59.34 |
|         lamp        | 61.22 | 72.42 |
|       bathtub       | 75.82 | 82.11 |
|       railing       | 31.89 | 45.68 |
|       cushion       | 53.03 | 64.54 |
|         base        | 19.02 | 23.85 |
|         box         | 24.97 | 36.84 |
|        column       |  42.8 | 52.98 |
|      signboard      | 34.74 | 45.92 |
|   chest of drawers  | 35.08 | 61.98 |
|       counter       | 27.09 |  35.8 |
|         sand        | 33.89 | 53.05 |
|         sink        | 68.56 | 76.66 |
|      skyscraper     | 51.87 | 56.86 |
|      fireplace      | 74.97 | 83.25 |
|     refrigerator    | 77.19 | 85.58 |
|      grandstand     | 39.45 |  75.3 |
|         path        | 25.46 |  37.0 |
|        stairs       | 29.07 | 37.26 |
|        runway       | 70.23 | 91.28 |
|         case        | 44.28 | 57.24 |
|      pool table     | 91.45 | 95.55 |
|        pillow       | 55.61 | 66.25 |
|     screen door     | 67.65 | 80.18 |
|       stairway      | 27.03 | 34.82 |
|        river        |  9.36 | 17.02 |
|        bridge       | 64.95 |  74.0 |
|       bookcase      | 38.42 | 54.68 |
|        blind        | 37.59 | 41.96 |
|     coffee table    | 57.78 | 78.53 |
|        toilet       | 84.24 | 89.55 |
|        flower       | 38.27 | 51.57 |
|         book        | 45.72 | 64.15 |
|         hill        | 14.09 | 23.14 |
|        bench        | 43.04 | 54.45 |
|      countertop     |  48.6 | 64.27 |
|        stove        | 72.78 |  80.0 |
|         palm        | 41.11 |  56.2 |
|    kitchen island   | 40.89 | 72.66 |
|       computer      | 57.43 | 64.95 |
|     swivel chair    | 38.08 |  50.3 |
|         boat        | 45.53 | 51.01 |
|         bar         | 39.18 | 48.07 |
|    arcade machine   | 54.46 | 56.85 |
|        hovel        |  12.9 | 17.83 |
|         bus         | 85.52 | 94.42 |
|        towel        | 61.32 | 75.15 |
|        light        | 50.63 | 57.81 |
|        truck        | 34.75 | 48.19 |
|        tower        |  7.02 |  8.72 |
|      chandelier     | 65.11 | 83.75 |
|        awning       |  25.1 | 28.23 |
|     streetlight     | 23.43 |  30.8 |
|        booth        |  43.1 | 48.09 |
| television receiver | 65.13 |  80.7 |
|       airplane      | 54.39 | 60.59 |
|      dirt track     | 11.81 | 15.88 |
|       apparel       | 32.86 | 41.91 |
|         pole        | 22.09 | 31.98 |
|         land        |  2.17 |  2.86 |
|      bannister      | 11.64 | 15.28 |
|      escalator      | 26.45 | 27.97 |
|       ottoman       | 49.81 |  60.1 |
|        bottle       | 30.36 | 41.71 |
|        buffet       | 42.39 | 48.04 |
|        poster       | 21.09 | 27.26 |
|        stage        | 19.37 | 25.54 |
|         van         | 40.97 | 64.88 |
|         ship        | 38.15 |  54.0 |
|       fountain      | 22.05 | 22.57 |
|    conveyer belt    | 76.38 | 87.98 |
|        canopy       | 12.13 | 12.65 |
|        washer       | 71.54 | 72.39 |
|      plaything      | 21.31 | 29.58 |
|    swimming pool    | 59.89 | 83.93 |
|        stool        | 35.36 | 50.61 |
|        barrel       | 33.54 | 73.94 |
|        basket       | 29.61 | 35.55 |
|      waterfall      | 48.04 | 58.95 |
|         tent        | 94.92 | 98.09 |
|         bag         |  6.3  |  6.89 |
|       minibike      | 63.92 | 70.93 |
|        cradle       | 77.66 | 89.74 |
|         oven        | 37.59 | 60.51 |
|         ball        | 46.78 | 60.19 |
|         food        | 40.45 | 44.48 |
|         step        | 12.64 | 15.64 |
|         tank        | 51.89 | 60.89 |
|      trade name     | 28.59 | 36.91 |
|      microwave      | 70.97 | 75.88 |
|         pot         | 44.99 | 55.13 |
|        animal       | 58.06 | 60.33 |
|       bicycle       | 55.13 | 70.69 |
|         lake        | 52.78 | 63.38 |
|      dishwasher     | 62.07 | 71.39 |
|        screen       | 65.28 | 77.11 |
|       blanket       | 14.26 | 16.52 |
|      sculpture      | 41.44 | 54.07 |
|         hood        | 50.87 | 54.67 |
|        sconce       | 44.19 | 54.83 |
|         vase        | 35.98 | 52.62 |
|    traffic light    | 29.58 | 44.68 |
|         tray        | 13.47 | 21.71 |
|        ashcan       |  39.4 | 54.46 |
|         fan         | 61.98 | 73.72 |
|         pier        | 54.79 | 74.35 |
|      crt screen     |  2.88 |  8.88 |
|        plate        |  38.6 | 46.99 |
|       monitor       |  7.71 |  8.86 |
|    bulletin board   | 36.79 | 47.37 |
|        shower       |  3.37 |  3.66 |
|       radiator      | 54.58 | 61.23 |
|        glass        | 15.08 | 17.89 |
|        clock        | 32.68 | 40.05 |
|         flag        | 37.85 | 40.68 |
+---------------------+-------+-------+
09/16 03:23:00 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.0400  mIoU: 46.7000  mAcc: 57.5800  data_time: 0.0045  time: 0.3262
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/16 03:24:04 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1702370330
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1702370330
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 03:24:04 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/jpeg_compression'

09/16 03:24:30 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 03:24:30 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 03:24:31 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 03:24:33 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 03:26:07 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:00:39  time: 0.8419  data_time: 0.0049  memory: 19986  
09/16 03:26:50 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:43:06  time: 1.1101  data_time: 0.0046  memory: 19982  
09/16 03:27:10 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:32:12  time: 0.3511  data_time: 0.0054  memory: 19955  
09/16 03:27:43 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:28:29  time: 0.7493  data_time: 0.0150  memory: 19982  
09/16 03:28:13 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:35  time: 0.3794  data_time: 0.0231  memory: 19978  
09/16 03:28:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:23:04  time: 0.0953  data_time: 0.0017  memory: 19978  
09/16 03:30:38 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:28:39  time: 0.2952  data_time: 0.0016  memory: 19978  
09/16 03:31:01 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:25:47  time: 0.3545  data_time: 0.0015  memory: 19978  
09/16 03:31:10 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:22:44  time: 0.2279  data_time: 0.0046  memory: 19952  
09/16 03:31:19 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:20:16  time: 0.0969  data_time: 0.0016  memory: 19918  
09/16 03:31:28 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:18:13  time: 0.3090  data_time: 0.0016  memory: 19977  
09/16 03:31:38 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:16:29  time: 0.3164  data_time: 0.0017  memory: 19979  
09/16 03:31:53 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:15:13  time: 0.4534  data_time: 0.0015  memory: 19988  
09/16 03:32:11 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:14:09  time: 0.0959  data_time: 0.0017  memory: 19986  
09/16 03:32:31 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:13:16  time: 0.9413  data_time: 0.0016  memory: 19993  
09/16 03:32:39 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:12:07  time: 0.0935  data_time: 0.0017  memory: 19956  
09/16 03:32:43 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:02  time: 0.0938  data_time: 0.0017  memory: 778  
09/16 03:32:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:09  time: 0.2485  data_time: 0.0015  memory: 19943  
09/16 03:33:10 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:30  time: 0.4116  data_time: 0.0016  memory: 19975  
09/16 03:33:20 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:46  time: 0.0923  data_time: 0.0015  memory: 19975  
09/16 03:33:35 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:09  time: 0.5820  data_time: 0.0016  memory: 19994  
09/16 03:33:47 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:32  time: 0.0902  data_time: 0.0016  memory: 19957  
09/16 03:33:56 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:55  time: 0.2001  data_time: 0.0015  memory: 19931  
09/16 03:34:00 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:17  time: 0.0926  data_time: 0.0015  memory: 1974  
09/16 03:34:10 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:45  time: 0.2205  data_time: 0.0015  memory: 19961  
09/16 03:34:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:12  time: 0.0904  data_time: 0.0015  memory: 778  
09/16 03:34:21 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:42  time: 0.0913  data_time: 0.0015  memory: 19913  
09/16 03:34:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:17  time: 0.3256  data_time: 0.0017  memory: 19966  
09/16 03:34:43 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:51  time: 0.2785  data_time: 0.0016  memory: 19943  
09/16 03:34:48 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:24  time: 0.0895  data_time: 0.0015  memory: 778  
09/16 03:34:54 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:00  time: 0.0926  data_time: 0.0015  memory: 19971  
09/16 03:34:59 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:36  time: 0.0895  data_time: 0.0016  memory: 769  
09/16 03:35:09 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:14  time: 0.0887  data_time: 0.0014  memory: 19976  
09/16 03:35:18 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:53  time: 0.0926  data_time: 0.0017  memory: 19948  
09/16 03:35:27 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:33  time: 0.0929  data_time: 0.0015  memory: 19966  
09/16 03:35:33 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:13  time: 0.1006  data_time: 0.0036  memory: 19918  
09/16 03:35:38 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:53  time: 0.0937  data_time: 0.0017  memory: 727  
09/16 03:35:45 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:35  time: 0.0973  data_time: 0.0015  memory: 19986  
09/16 03:35:53 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.0909  data_time: 0.0015  memory: 19927  
09/16 03:36:02 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0854  data_time: 0.0013  memory: 19989  
09/16 03:36:02 - mmengine - INFO - per class results:
09/16 03:36:02 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.35 |  89.1 |
|       building      | 80.46 | 91.64 |
|         sky         | 93.78 | 97.39 |
|        floor        | 78.86 | 91.27 |
|         tree        | 72.87 | 85.58 |
|       ceiling       | 82.11 | 90.67 |
|         road        |  80.9 | 91.37 |
|         bed         | 87.15 | 93.84 |
|      windowpane     | 58.84 | 75.74 |
|        grass        | 67.28 | 82.93 |
|       cabinet       | 60.87 | 73.64 |
|       sidewalk      | 60.78 | 73.95 |
|        person       | 78.04 | 89.86 |
|        earth        | 36.87 | 54.01 |
|         door        | 46.89 | 59.03 |
|        table        |  57.4 | 75.93 |
|       mountain      | 56.64 | 69.77 |
|        plant        | 48.37 | 59.28 |
|       curtain       | 71.06 |  80.3 |
|        chair        | 54.83 | 66.68 |
|         car         | 82.89 | 91.22 |
|        water        | 54.04 | 71.75 |
|       painting      |  69.3 | 81.78 |
|         sofa        | 64.73 | 83.03 |
|        shelf        | 43.08 | 62.98 |
|        house        | 37.97 | 54.58 |
|         sea         | 51.55 | 70.81 |
|        mirror       |  63.4 | 70.87 |
|         rug         | 47.09 | 53.56 |
|        field        | 31.45 | 41.48 |
|       armchair      | 40.42 | 55.73 |
|         seat        | 59.71 | 80.12 |
|        fence        | 44.74 | 58.29 |
|         desk        | 49.23 | 68.25 |
|         rock        | 40.35 | 61.02 |
|       wardrobe      | 48.15 |  59.2 |
|         lamp        | 60.71 | 71.22 |
|       bathtub       | 73.67 | 82.06 |
|       railing       | 31.89 |  41.4 |
|       cushion       | 51.85 | 63.31 |
|         base        | 19.32 | 25.15 |
|         box         | 22.69 | 30.62 |
|        column       |  42.5 | 55.36 |
|      signboard      | 35.53 | 45.12 |
|   chest of drawers  | 38.84 | 58.01 |
|       counter       | 19.44 |  25.2 |
|         sand        |  37.1 | 53.84 |
|         sink        | 67.02 |  78.7 |
|      skyscraper     | 52.44 | 65.65 |
|      fireplace      | 71.44 | 83.41 |
|     refrigerator    | 77.29 | 87.19 |
|      grandstand     | 42.41 | 74.01 |
|         path        | 25.53 | 35.64 |
|        stairs       | 28.67 | 33.71 |
|        runway       | 70.23 |  91.0 |
|         case        | 41.54 | 48.63 |
|      pool table     |  90.2 | 93.53 |
|        pillow       | 54.33 | 63.46 |
|     screen door     | 61.76 |  70.0 |
|       stairway      | 34.36 | 41.77 |
|        river        |  9.42 | 17.69 |
|        bridge       | 59.13 | 70.49 |
|       bookcase      | 35.34 | 53.42 |
|        blind        | 27.63 | 28.68 |
|     coffee table    | 56.48 | 75.38 |
|        toilet       | 82.35 | 88.41 |
|        flower       | 43.59 | 56.53 |
|         book        | 45.48 | 59.59 |
|         hill        | 12.35 |  25.2 |
|        bench        | 45.29 | 52.47 |
|      countertop     | 52.54 | 67.06 |
|        stove        | 76.39 | 84.58 |
|         palm        | 46.94 | 67.73 |
|    kitchen island   | 35.01 | 56.99 |
|       computer      | 64.02 | 71.92 |
|     swivel chair    | 45.09 | 57.96 |
|         boat        | 44.63 | 59.67 |
|         bar         | 36.66 | 47.06 |
|    arcade machine   | 61.39 | 64.56 |
|        hovel        |  25.8 | 34.97 |
|         bus         | 86.43 | 95.04 |
|        towel        | 61.88 |  72.3 |
|        light        | 48.97 | 55.65 |
|        truck        | 32.26 | 42.54 |
|        tower        |  6.14 |  8.6  |
|      chandelier     | 63.87 | 79.91 |
|        awning       | 23.97 | 27.65 |
|     streetlight     | 21.69 | 26.72 |
|        booth        | 44.72 | 49.03 |
| television receiver | 65.98 | 76.26 |
|       airplane      | 56.93 | 64.26 |
|      dirt track     |  10.5 | 17.76 |
|       apparel       | 26.26 | 36.67 |
|         pole        | 20.84 | 28.43 |
|         land        |  3.31 |  4.5  |
|      bannister      | 11.42 | 14.86 |
|      escalator      | 30.08 | 33.42 |
|       ottoman       | 53.34 | 64.11 |
|        bottle       | 25.97 | 32.91 |
|        buffet       | 29.93 | 33.61 |
|        poster       |  20.5 | 26.08 |
|        stage        | 18.29 | 23.34 |
|         van         | 41.76 |  58.8 |
|         ship        | 69.83 |  93.1 |
|       fountain      |  21.4 | 21.79 |
|    conveyer belt    |  79.6 | 88.31 |
|        canopy       | 14.09 | 15.37 |
|        washer       | 72.48 | 73.83 |
|      plaything      | 20.43 | 27.63 |
|    swimming pool    |  58.4 | 83.65 |
|        stool        | 28.48 | 41.88 |
|        barrel       | 23.54 | 49.97 |
|        basket       | 26.28 | 32.19 |
|      waterfall      | 71.87 | 85.24 |
|         tent        | 93.73 | 98.53 |
|         bag         | 10.62 | 11.56 |
|       minibike      |  71.1 |  79.3 |
|        cradle       |  77.8 | 93.28 |
|         oven        | 42.75 | 55.87 |
|         ball        | 45.09 | 50.27 |
|         food        | 54.43 | 65.57 |
|         step        |  6.39 |  7.9  |
|         tank        | 52.03 | 59.01 |
|      trade name     | 26.46 | 32.57 |
|      microwave      | 81.44 | 85.62 |
|         pot         | 44.53 | 52.01 |
|        animal       | 57.64 | 59.44 |
|       bicycle       | 54.53 | 72.63 |
|         lake        | 61.19 | 63.26 |
|      dishwasher     | 68.95 | 73.54 |
|        screen       | 60.52 | 80.37 |
|       blanket       | 13.89 | 15.62 |
|      sculpture      | 56.74 |  73.6 |
|         hood        | 55.24 | 59.09 |
|        sconce       | 42.44 | 50.37 |
|         vase        | 35.93 | 45.21 |
|    traffic light    | 30.19 | 45.14 |
|         tray        | 11.22 | 19.91 |
|        ashcan       | 37.22 | 50.68 |
|         fan         | 59.43 | 72.45 |
|         pier        | 31.19 | 55.59 |
|      crt screen     |  2.77 |  7.74 |
|        plate        | 49.43 |  62.7 |
|       monitor       |  1.8  |  2.0  |
|    bulletin board   | 37.84 |  44.5 |
|        shower       |  4.48 |  7.65 |
|       radiator      | 55.43 | 61.75 |
|        glass        |  13.7 |  15.9 |
|        clock        | 35.04 | 39.36 |
|         flag        | 43.33 | 46.32 |
+---------------------+-------+-------+
09/16 03:36:02 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.7800  mIoU: 47.0100  mAcc: 57.4400  data_time: 0.0030  time: 0.3440
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
09/16 03:36:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 641243291
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 641243291
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 03:36:54 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/elastic_transform'

09/16 03:37:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 03:37:14 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 03:37:15 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 03:37:16 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 03:39:45 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:36:32  time: 1.8844  data_time: 0.0017  memory: 19986  
09/16 03:41:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:17:12  time: 2.1452  data_time: 0.0018  memory: 19982  
09/16 03:42:34 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:05:21  time: 1.4877  data_time: 0.0049  memory: 19955  
09/16 03:43:59 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:00:26  time: 1.7468  data_time: 0.0040  memory: 19982  
09/16 03:45:19 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:56:16  time: 1.4389  data_time: 0.0057  memory: 19978  
09/16 03:46:36 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:52:49  time: 1.2139  data_time: 0.0044  memory: 19978  
09/16 03:47:59 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:50:28  time: 1.3578  data_time: 0.0061  memory: 19978  
09/16 03:49:18 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:48:05  time: 1.4998  data_time: 0.0062  memory: 19978  
09/16 03:50:18 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:44:51  time: 1.2465  data_time: 0.0096  memory: 19952  
09/16 03:51:26 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:42:28  time: 1.1903  data_time: 0.0076  memory: 19918  
09/16 03:52:36 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:40:24  time: 1.5017  data_time: 0.0075  memory: 19977  
09/16 03:53:41 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:38:16  time: 1.4610  data_time: 0.0082  memory: 19979  
09/16 03:54:53 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:36:33  time: 1.6017  data_time: 0.0079  memory: 19988  
09/16 03:56:10 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:35:04  time: 1.2693  data_time: 0.0083  memory: 19986  
09/16 03:57:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:33:39  time: 2.0221  data_time: 0.0119  memory: 19993  
09/16 03:58:29 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:31:47  time: 1.2104  data_time: 0.0067  memory: 19956  
09/16 03:59:31 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:30:04  time: 1.2561  data_time: 0.0088  memory: 778  
09/16 04:00:43 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:28:38  time: 1.8421  data_time: 0.0464  memory: 19943  
09/16 04:02:57 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:28:21  time: 3.4643  data_time: 0.0401  memory: 19975  
09/16 04:04:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:27:25  time: 2.1272  data_time: 0.0598  memory: 19975  
09/16 04:06:24 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:26:19  time: 2.0143  data_time: 0.0255  memory: 19994  
09/16 04:07:40 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:24:50  time: 1.4030  data_time: 0.0216  memory: 19957  
09/16 04:08:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:23:24  time: 1.6670  data_time: 0.0303  memory: 19931  
09/16 04:10:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:22:11  time: 2.1731  data_time: 0.0619  memory: 1974  
09/16 04:12:12 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:20:55  time: 1.8439  data_time: 0.0452  memory: 19961  
09/16 04:13:29 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:19:28  time: 1.5154  data_time: 0.0299  memory: 778  
09/16 04:14:39 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:17:58  time: 1.1639  data_time: 0.0099  memory: 19913  
09/16 04:15:50 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:16:30  time: 1.5083  data_time: 0.0107  memory: 19966  
09/16 04:16:49 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:14:58  time: 1.3978  data_time: 0.0038  memory: 19943  
09/16 04:17:46 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:28  time: 1.0795  data_time: 0.0066  memory: 778  
09/16 04:18:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:12:02  time: 1.2025  data_time: 0.0102  memory: 19971  
09/16 04:19:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:36  time: 1.1419  data_time: 0.0040  memory: 769  
09/16 04:20:49 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:09:13  time: 1.0727  data_time: 0.0035  memory: 19976  
09/16 04:21:54 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:51  time: 1.1966  data_time: 0.0068  memory: 19948  
09/16 04:22:59 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:31  time: 1.2047  data_time: 0.0073  memory: 19966  
09/16 04:23:58 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:10  time: 1.2220  data_time: 0.0063  memory: 19918  
09/16 04:24:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:51  time: 1.2249  data_time: 0.0088  memory: 727  
09/16 04:25:58 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:33  time: 1.1609  data_time: 0.0079  memory: 19986  
09/16 04:27:01 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:16  time: 1.1274  data_time: 0.0040  memory: 19927  
09/16 04:28:03 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.1043  data_time: 0.0058  memory: 19989  
09/16 04:28:04 - mmengine - INFO - per class results:
09/16 04:28:04 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 64.08 | 79.42 |
|       building      | 73.06 |  86.9 |
|         sky         | 84.09 | 91.17 |
|        floor        | 68.26 | 82.13 |
|         tree        | 62.89 | 79.18 |
|       ceiling       | 70.83 | 83.62 |
|         road        | 75.69 | 86.77 |
|         bed         | 75.03 | 85.81 |
|      windowpane     | 48.15 |  66.7 |
|        grass        | 61.93 | 79.97 |
|       cabinet       | 51.49 | 66.61 |
|       sidewalk      | 50.13 |  66.7 |
|        person       | 60.85 | 78.07 |
|        earth        | 33.23 | 47.43 |
|         door        | 35.36 | 46.26 |
|        table        | 43.38 | 63.79 |
|       mountain      | 52.99 |  67.6 |
|        plant        | 41.76 | 55.96 |
|       curtain       | 54.41 | 70.24 |
|        chair        | 40.37 | 57.07 |
|         car         | 62.31 |  77.0 |
|        water        | 52.95 |  71.7 |
|       painting      |  47.3 | 65.52 |
|         sofa        | 53.81 | 73.65 |
|        shelf        | 39.19 | 58.91 |
|        house        | 29.75 | 45.21 |
|         sea         | 48.91 | 67.69 |
|        mirror       | 57.09 | 69.72 |
|         rug         | 45.54 | 61.35 |
|        field        | 31.03 | 42.39 |
|       armchair      | 32.53 | 47.88 |
|         seat        | 56.94 | 81.53 |
|        fence        | 35.56 | 49.53 |
|         desk        |  43.4 | 63.72 |
|         rock        | 35.52 |  57.1 |
|       wardrobe      | 45.34 | 57.78 |
|         lamp        | 32.01 | 50.15 |
|       bathtub       | 63.64 | 74.64 |
|       railing       | 26.27 | 40.16 |
|       cushion       | 39.38 | 54.22 |
|         base        | 19.47 |  26.7 |
|         box         | 21.46 | 29.43 |
|        column       | 26.36 | 41.56 |
|      signboard      | 23.93 | 35.52 |
|   chest of drawers  | 29.38 | 47.48 |
|       counter       | 25.19 | 30.32 |
|         sand        | 34.01 | 53.58 |
|         sink        | 47.36 | 61.76 |
|      skyscraper     | 44.14 | 58.84 |
|      fireplace      | 67.65 | 81.18 |
|     refrigerator    | 67.03 |  82.6 |
|      grandstand     | 36.04 | 67.97 |
|         path        | 17.22 |  26.1 |
|        stairs       | 18.87 |  23.4 |
|        runway       | 64.83 | 84.23 |
|         case        | 40.17 | 49.54 |
|      pool table     | 79.49 | 87.86 |
|        pillow       | 38.04 | 51.42 |
|     screen door     | 58.88 | 68.01 |
|       stairway      |  21.0 | 28.07 |
|        river        |  7.84 | 13.65 |
|        bridge       | 44.92 | 55.39 |
|       bookcase      | 35.05 | 49.48 |
|        blind        |  34.0 | 38.65 |
|     coffee table    | 46.11 | 66.11 |
|        toilet       | 56.83 |  71.6 |
|        flower       | 30.83 | 42.86 |
|         book        | 34.31 | 50.45 |
|         hill        |  9.98 | 17.54 |
|        bench        | 36.25 | 46.61 |
|      countertop     |  38.1 | 56.67 |
|        stove        | 62.85 | 73.96 |
|         palm        | 33.86 | 49.31 |
|    kitchen island   | 32.36 | 61.81 |
|       computer      | 45.99 |  57.9 |
|     swivel chair    | 29.89 | 47.43 |
|         boat        | 47.31 |  66.2 |
|         bar         | 29.42 | 38.25 |
|    arcade machine   |  43.0 | 48.04 |
|        hovel        | 12.61 | 18.62 |
|         bus         | 71.78 | 87.18 |
|        towel        | 36.44 | 55.69 |
|        light        | 16.43 | 24.99 |
|        truck        | 24.44 | 35.86 |
|        tower        |  4.67 |  6.4  |
|      chandelier     | 40.29 | 59.83 |
|        awning       | 15.92 | 20.96 |
|     streetlight     |  9.2  | 14.32 |
|        booth        | 42.41 | 48.44 |
| television receiver | 44.31 | 61.97 |
|       airplane      | 42.66 | 56.03 |
|      dirt track     |  6.66 | 15.05 |
|       apparel       | 22.15 | 37.84 |
|         pole        |  6.53 |  9.95 |
|         land        |  0.37 |  0.51 |
|      bannister      |  7.85 | 10.93 |
|      escalator      | 24.09 | 27.14 |
|       ottoman       | 41.57 | 52.14 |
|        bottle       | 31.41 | 51.09 |
|        buffet       | 32.16 | 38.88 |
|        poster       | 17.88 | 25.06 |
|        stage        | 12.46 | 21.04 |
|         van         | 31.99 | 45.91 |
|         ship        | 71.19 | 84.85 |
|       fountain      | 18.15 | 19.33 |
|    conveyer belt    | 72.68 | 81.82 |
|        canopy       | 20.89 | 25.72 |
|        washer       | 63.96 | 71.58 |
|      plaything      | 13.87 | 24.67 |
|    swimming pool    | 56.52 | 76.28 |
|        stool        | 20.96 | 32.24 |
|        barrel       | 28.66 | 72.16 |
|        basket       |  21.8 | 27.98 |
|      waterfall      | 59.64 | 83.24 |
|         tent        | 81.86 | 92.57 |
|         bag         |  8.24 |  9.91 |
|       minibike      | 50.65 | 68.34 |
|        cradle       | 66.94 | 84.25 |
|         oven        | 42.94 | 57.06 |
|         ball        | 40.06 | 49.52 |
|         food        | 40.11 | 48.06 |
|         step        |  14.1 | 16.07 |
|         tank        | 51.28 | 59.14 |
|      trade name     |  17.3 | 22.26 |
|      microwave      | 69.57 | 80.28 |
|         pot         | 25.82 | 35.98 |
|        animal       | 48.55 | 53.37 |
|       bicycle       | 41.41 | 64.65 |
|         lake        | 57.06 | 59.99 |
|      dishwasher     | 53.01 | 66.71 |
|        screen       | 45.02 | 67.23 |
|       blanket       | 15.39 | 18.99 |
|      sculpture      | 45.96 |  68.3 |
|         hood        | 31.31 | 44.27 |
|        sconce       | 20.61 | 31.85 |
|         vase        | 19.67 | 36.13 |
|    traffic light    |  18.1 | 31.02 |
|         tray        |  6.22 | 11.35 |
|        ashcan       | 22.99 | 38.87 |
|         fan         | 28.52 | 44.77 |
|         pier        | 37.32 | 74.57 |
|      crt screen     |  5.08 | 19.23 |
|        plate        |  35.4 | 49.57 |
|       monitor       |  3.05 |  3.44 |
|    bulletin board   | 34.08 | 46.61 |
|        shower       |  7.28 |  9.88 |
|       radiator      | 40.31 | 50.66 |
|        glass        |  9.64 |  11.8 |
|        clock        |  21.9 | 28.24 |
|         flag        | 22.81 | 27.42 |
+---------------------+-------+-------+
09/16 04:28:04 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 74.6000  mIoU: 38.2000  mAcc: 50.9800  data_time: 0.0135  time: 1.5216
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/16 04:30:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1914003022
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1914003022
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 04:30:02 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/pixelate'

09/16 04:30:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 04:30:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 04:30:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 04:30:52 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 04:32:57 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:21:18  time: 0.8317  data_time: 0.0041  memory: 19986  
09/16 04:33:40 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:53:05  time: 1.0641  data_time: 0.0052  memory: 19982  
09/16 04:34:00 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:38:35  time: 0.3438  data_time: 0.0043  memory: 19955  
09/16 04:34:32 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:32:52  time: 0.6540  data_time: 0.0065  memory: 19982  
09/16 04:34:59 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:28:47  time: 0.3286  data_time: 0.0041  memory: 19978  
09/16 04:35:25 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:25:44  time: 0.1028  data_time: 0.0044  memory: 19978  
09/16 04:35:54 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:23:43  time: 0.3041  data_time: 0.0028  memory: 19978  
09/16 04:36:18 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:21:43  time: 0.3774  data_time: 0.0025  memory: 19978  
09/16 04:36:28 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:19:14  time: 0.1962  data_time: 0.0015  memory: 19952  
09/16 04:36:38 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:17:15  time: 0.0863  data_time: 0.0017  memory: 19918  
09/16 04:36:48 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:35  time: 0.3271  data_time: 0.0042  memory: 19977  
09/16 04:36:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:09  time: 0.3084  data_time: 0.0017  memory: 19979  
09/16 04:37:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:10  time: 0.4632  data_time: 0.0015  memory: 19988  
09/16 04:37:32 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:20  time: 0.0902  data_time: 0.0018  memory: 19986  
09/16 04:37:53 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:40  time: 0.9939  data_time: 0.0071  memory: 19993  
09/16 04:38:02 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:44  time: 0.2607  data_time: 0.0048  memory: 19956  
09/16 04:39:38 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:50  time: 0.1896  data_time: 0.0091  memory: 778  
09/16 04:39:48 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:53  time: 0.2433  data_time: 0.0014  memory: 19943  
09/16 04:40:05 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:10:10  time: 0.4056  data_time: 0.0016  memory: 19975  
09/16 04:40:16 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:22  time: 0.0855  data_time: 0.0015  memory: 19975  
09/16 04:40:30 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:42  time: 0.5967  data_time: 0.0016  memory: 19994  
09/16 04:40:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:02  time: 0.0863  data_time: 0.0016  memory: 19957  
09/16 04:40:51 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:22  time: 0.1951  data_time: 0.0015  memory: 19931  
09/16 04:40:55 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:41  time: 0.0856  data_time: 0.0015  memory: 1974  
09/16 04:41:05 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:07  time: 0.2155  data_time: 0.0015  memory: 19961  
09/16 04:41:09 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:31  time: 0.0924  data_time: 0.0016  memory: 778  
09/16 04:41:15 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:59  time: 0.0882  data_time: 0.0015  memory: 19913  
09/16 04:41:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:32  time: 0.3320  data_time: 0.0015  memory: 19966  
09/16 04:41:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:04  time: 0.2807  data_time: 0.0015  memory: 19943  
09/16 04:41:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:36  time: 0.0849  data_time: 0.0015  memory: 778  
09/16 04:41:48 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:10  time: 0.0860  data_time: 0.0015  memory: 19971  
09/16 04:41:53 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:44  time: 0.0924  data_time: 0.0016  memory: 769  
09/16 04:42:03 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:22  time: 0.0825  data_time: 0.0014  memory: 19976  
09/16 04:42:12 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:59  time: 0.0853  data_time: 0.0016  memory: 19948  
09/16 04:42:20 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:38  time: 0.0848  data_time: 0.0015  memory: 19966  
09/16 04:42:27 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:17  time: 0.0865  data_time: 0.0017  memory: 19918  
09/16 04:42:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:56  time: 0.0875  data_time: 0.0017  memory: 727  
09/16 04:42:38 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:37  time: 0.0858  data_time: 0.0015  memory: 19986  
09/16 04:42:45 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:18  time: 0.0876  data_time: 0.0015  memory: 19927  
09/16 04:42:54 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0811  data_time: 0.0014  memory: 19989  
09/16 04:42:54 - mmengine - INFO - per class results:
09/16 04:42:54 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.42 | 89.04 |
|       building      | 80.94 | 92.56 |
|         sky         | 93.77 | 97.03 |
|        floor        | 80.16 |  90.6 |
|         tree        | 71.88 | 85.86 |
|       ceiling       | 83.54 | 92.34 |
|         road        | 82.92 | 91.03 |
|         bed         | 87.51 | 93.68 |
|      windowpane     |  58.7 |  76.9 |
|        grass        | 67.67 | 85.35 |
|       cabinet       | 58.26 |  71.9 |
|       sidewalk      | 63.53 | 77.97 |
|        person       | 78.53 |  88.6 |
|        earth        | 35.53 | 49.13 |
|         door        | 45.06 | 58.32 |
|        table        | 56.57 | 76.37 |
|       mountain      | 54.99 | 66.47 |
|        plant        | 47.59 |  58.3 |
|       curtain       | 71.47 | 82.05 |
|        chair        | 54.74 | 68.44 |
|         car         | 81.74 | 88.96 |
|        water        | 55.65 | 74.21 |
|       painting      | 73.68 | 83.94 |
|         sofa        | 64.43 | 84.67 |
|        shelf        | 43.89 |  63.9 |
|        house        | 44.33 | 60.13 |
|         sea         | 53.38 | 71.02 |
|        mirror       | 65.16 | 74.29 |
|         rug         | 61.51 | 74.97 |
|        field        | 33.28 | 46.16 |
|       armchair      | 36.34 | 47.82 |
|         seat        | 60.54 |  80.4 |
|        fence        | 41.21 | 57.37 |
|         desk        | 49.64 | 64.47 |
|         rock        | 37.72 | 52.33 |
|       wardrobe      | 45.59 | 59.34 |
|         lamp        | 61.22 | 72.42 |
|       bathtub       | 75.82 | 82.11 |
|       railing       | 31.89 | 45.68 |
|       cushion       | 53.03 | 64.54 |
|         base        | 19.02 | 23.85 |
|         box         | 24.97 | 36.84 |
|        column       |  42.8 | 52.98 |
|      signboard      | 34.74 | 45.92 |
|   chest of drawers  | 35.08 | 61.98 |
|       counter       | 27.09 |  35.8 |
|         sand        | 33.89 | 53.05 |
|         sink        | 68.56 | 76.66 |
|      skyscraper     | 51.87 | 56.86 |
|      fireplace      | 74.97 | 83.25 |
|     refrigerator    | 77.19 | 85.58 |
|      grandstand     | 39.45 |  75.3 |
|         path        | 25.46 |  37.0 |
|        stairs       | 29.07 | 37.26 |
|        runway       | 70.23 | 91.28 |
|         case        | 44.28 | 57.24 |
|      pool table     | 91.45 | 95.55 |
|        pillow       | 55.61 | 66.25 |
|     screen door     | 67.65 | 80.18 |
|       stairway      | 27.03 | 34.82 |
|        river        |  9.36 | 17.02 |
|        bridge       | 64.95 |  74.0 |
|       bookcase      | 38.42 | 54.68 |
|        blind        | 37.59 | 41.96 |
|     coffee table    | 57.78 | 78.53 |
|        toilet       | 84.24 | 89.55 |
|        flower       | 38.27 | 51.57 |
|         book        | 45.72 | 64.15 |
|         hill        | 14.09 | 23.14 |
|        bench        | 43.04 | 54.45 |
|      countertop     |  48.6 | 64.27 |
|        stove        | 72.78 |  80.0 |
|         palm        | 41.11 |  56.2 |
|    kitchen island   | 40.89 | 72.66 |
|       computer      | 57.43 | 64.95 |
|     swivel chair    | 38.08 |  50.3 |
|         boat        | 45.53 | 51.01 |
|         bar         | 39.18 | 48.07 |
|    arcade machine   | 54.46 | 56.85 |
|        hovel        |  12.9 | 17.83 |
|         bus         | 85.52 | 94.42 |
|        towel        | 61.32 | 75.15 |
|        light        | 50.63 | 57.81 |
|        truck        | 34.75 | 48.19 |
|        tower        |  7.02 |  8.72 |
|      chandelier     | 65.11 | 83.75 |
|        awning       |  25.1 | 28.23 |
|     streetlight     | 23.43 |  30.8 |
|        booth        |  43.1 | 48.09 |
| television receiver | 65.13 |  80.7 |
|       airplane      | 54.39 | 60.59 |
|      dirt track     | 11.81 | 15.88 |
|       apparel       | 32.86 | 41.91 |
|         pole        | 22.09 | 31.98 |
|         land        |  2.17 |  2.86 |
|      bannister      | 11.64 | 15.28 |
|      escalator      | 26.45 | 27.97 |
|       ottoman       | 49.81 |  60.1 |
|        bottle       | 30.36 | 41.71 |
|        buffet       | 42.39 | 48.04 |
|        poster       | 21.09 | 27.26 |
|        stage        | 19.37 | 25.54 |
|         van         | 40.97 | 64.88 |
|         ship        | 38.15 |  54.0 |
|       fountain      | 22.05 | 22.57 |
|    conveyer belt    | 76.38 | 87.98 |
|        canopy       | 12.13 | 12.65 |
|        washer       | 71.54 | 72.39 |
|      plaything      | 21.31 | 29.58 |
|    swimming pool    | 59.89 | 83.93 |
|        stool        | 35.36 | 50.61 |
|        barrel       | 33.54 | 73.94 |
|        basket       | 29.61 | 35.55 |
|      waterfall      | 48.04 | 58.95 |
|         tent        | 94.92 | 98.09 |
|         bag         |  6.3  |  6.89 |
|       minibike      | 63.92 | 70.93 |
|        cradle       | 77.66 | 89.74 |
|         oven        | 37.59 | 60.51 |
|         ball        | 46.78 | 60.19 |
|         food        | 40.45 | 44.48 |
|         step        | 12.64 | 15.64 |
|         tank        | 51.89 | 60.89 |
|      trade name     | 28.59 | 36.91 |
|      microwave      | 70.97 | 75.88 |
|         pot         | 44.99 | 55.13 |
|        animal       | 58.06 | 60.33 |
|       bicycle       | 55.13 | 70.69 |
|         lake        | 52.78 | 63.38 |
|      dishwasher     | 62.07 | 71.39 |
|        screen       | 65.28 | 77.11 |
|       blanket       | 14.26 | 16.52 |
|      sculpture      | 41.44 | 54.07 |
|         hood        | 50.87 | 54.67 |
|        sconce       | 44.19 | 54.83 |
|         vase        | 35.98 | 52.62 |
|    traffic light    | 29.58 | 44.68 |
|         tray        | 13.47 | 21.71 |
|        ashcan       |  39.4 | 54.46 |
|         fan         | 61.98 | 73.72 |
|         pier        | 54.79 | 74.35 |
|      crt screen     |  2.88 |  8.88 |
|        plate        |  38.6 | 46.99 |
|       monitor       |  7.71 |  8.86 |
|    bulletin board   | 36.79 | 47.37 |
|        shower       |  3.37 |  3.66 |
|       radiator      | 54.58 | 61.23 |
|        glass        | 15.08 | 17.89 |
|        clock        | 32.68 | 40.05 |
|         flag        | 37.85 | 40.68 |
+---------------------+-------+-------+
09/16 04:42:54 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.0400  mIoU: 46.7000  mAcc: 57.5800  data_time: 0.0035  time: 0.3606
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/16 04:43:23 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1154813998
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1154813998
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 04:43:24 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_512x512/jpeg_compression'

09/16 04:43:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/16 04:43:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/16 04:43:42 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 04:43:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
09/16 04:45:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:55:55  time: 0.7953  data_time: 0.0017  memory: 19986  
09/16 04:45:51 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:40:20  time: 1.0570  data_time: 0.0022  memory: 19982  
09/16 04:46:10 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:08  time: 0.3263  data_time: 0.0030  memory: 19955  
09/16 04:46:41 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:26:32  time: 0.6265  data_time: 0.0017  memory: 19982  
09/16 04:47:07 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:23:44  time: 0.3202  data_time: 0.0018  memory: 19978  
09/16 04:47:32 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:31  time: 0.0956  data_time: 0.0017  memory: 19978  
09/16 04:47:59 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:04  time: 0.2998  data_time: 0.0016  memory: 19978  
09/16 04:48:22 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:31  time: 0.3560  data_time: 0.0015  memory: 19978  
09/16 04:48:31 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:28  time: 0.2037  data_time: 0.0015  memory: 19952  
09/16 04:48:40 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:49  time: 0.1008  data_time: 0.0016  memory: 19918  
09/16 04:48:51 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:30  time: 0.3090  data_time: 0.0016  memory: 19977  
09/16 04:49:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:18  time: 0.3141  data_time: 0.0017  memory: 19979  
09/16 04:49:16 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:11:30  time: 0.4507  data_time: 0.0015  memory: 19988  
09/16 04:49:34 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:49  time: 0.0990  data_time: 0.0025  memory: 19986  
09/16 04:49:55 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:19  time: 1.0761  data_time: 0.0045  memory: 19993  
09/16 04:50:03 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:28  time: 0.0955  data_time: 0.0018  memory: 19956  
09/16 04:50:08 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:39  time: 0.0961  data_time: 0.0018  memory: 778  
09/16 04:50:17 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:00  time: 0.2540  data_time: 0.0015  memory: 19943  
09/16 04:50:34 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:33  time: 0.4132  data_time: 0.0016  memory: 19975  
09/16 04:50:45 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:00  time: 0.0973  data_time: 0.0016  memory: 19975  
09/16 04:51:00 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:34  time: 0.5932  data_time: 0.0038  memory: 19994  
09/16 04:51:13 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:07  time: 0.0935  data_time: 0.0016  memory: 19957  
09/16 04:51:22 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:38  time: 0.2027  data_time: 0.0016  memory: 19931  
09/16 04:51:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:08  time: 0.0925  data_time: 0.0015  memory: 1974  
09/16 04:51:36 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:43  time: 0.2167  data_time: 0.0015  memory: 19961  
09/16 04:51:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:16  time: 0.0936  data_time: 0.0015  memory: 778  
09/16 04:51:47 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:52  time: 0.0933  data_time: 0.0015  memory: 19913  
09/16 04:52:03 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:33  time: 0.3271  data_time: 0.0025  memory: 19966  
09/16 04:52:11 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:12  time: 0.2801  data_time: 0.0015  memory: 19943  
09/16 04:52:16 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:50  time: 0.0926  data_time: 0.0015  memory: 778  
09/16 04:52:22 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:30  time: 0.0941  data_time: 0.0015  memory: 19971  
09/16 04:52:27 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:10  time: 0.0919  data_time: 0.0016  memory: 769  
09/16 04:52:37 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:53  time: 0.0893  data_time: 0.0014  memory: 19976  
09/16 04:52:47 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:35  time: 0.0956  data_time: 0.0018  memory: 19948  
09/16 04:52:56 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:18  time: 0.0935  data_time: 0.0015  memory: 19966  
09/16 04:53:03 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:02  time: 0.0968  data_time: 0.0017  memory: 19918  
09/16 04:53:07 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:45  time: 0.0954  data_time: 0.0017  memory: 727  
09/16 04:53:15 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:30  time: 0.0981  data_time: 0.0015  memory: 19986  
09/16 04:53:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.0920  data_time: 0.0015  memory: 19927  
09/16 04:53:33 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0887  data_time: 0.0014  memory: 19989  
09/16 04:53:33 - mmengine - INFO - per class results:
09/16 04:53:33 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.35 |  89.1 |
|       building      | 80.46 | 91.64 |
|         sky         | 93.78 | 97.39 |
|        floor        | 78.86 | 91.27 |
|         tree        | 72.87 | 85.58 |
|       ceiling       | 82.11 | 90.67 |
|         road        |  80.9 | 91.37 |
|         bed         | 87.15 | 93.84 |
|      windowpane     | 58.84 | 75.74 |
|        grass        | 67.28 | 82.93 |
|       cabinet       | 60.87 | 73.64 |
|       sidewalk      | 60.78 | 73.95 |
|        person       | 78.04 | 89.86 |
|        earth        | 36.87 | 54.01 |
|         door        | 46.89 | 59.03 |
|        table        |  57.4 | 75.93 |
|       mountain      | 56.64 | 69.77 |
|        plant        | 48.37 | 59.28 |
|       curtain       | 71.06 |  80.3 |
|        chair        | 54.83 | 66.68 |
|         car         | 82.89 | 91.22 |
|        water        | 54.04 | 71.75 |
|       painting      |  69.3 | 81.78 |
|         sofa        | 64.73 | 83.03 |
|        shelf        | 43.08 | 62.98 |
|        house        | 37.97 | 54.58 |
|         sea         | 51.55 | 70.81 |
|        mirror       |  63.4 | 70.87 |
|         rug         | 47.09 | 53.56 |
|        field        | 31.45 | 41.48 |
|       armchair      | 40.42 | 55.73 |
|         seat        | 59.71 | 80.12 |
|        fence        | 44.74 | 58.29 |
|         desk        | 49.23 | 68.25 |
|         rock        | 40.35 | 61.02 |
|       wardrobe      | 48.15 |  59.2 |
|         lamp        | 60.71 | 71.22 |
|       bathtub       | 73.67 | 82.06 |
|       railing       | 31.89 |  41.4 |
|       cushion       | 51.85 | 63.31 |
|         base        | 19.32 | 25.15 |
|         box         | 22.69 | 30.62 |
|        column       |  42.5 | 55.36 |
|      signboard      | 35.53 | 45.12 |
|   chest of drawers  | 38.84 | 58.01 |
|       counter       | 19.44 |  25.2 |
|         sand        |  37.1 | 53.84 |
|         sink        | 67.02 |  78.7 |
|      skyscraper     | 52.44 | 65.65 |
|      fireplace      | 71.44 | 83.41 |
|     refrigerator    | 77.29 | 87.19 |
|      grandstand     | 42.41 | 74.01 |
|         path        | 25.53 | 35.64 |
|        stairs       | 28.67 | 33.71 |
|        runway       | 70.23 |  91.0 |
|         case        | 41.54 | 48.63 |
|      pool table     |  90.2 | 93.53 |
|        pillow       | 54.33 | 63.46 |
|     screen door     | 61.76 |  70.0 |
|       stairway      | 34.36 | 41.77 |
|        river        |  9.42 | 17.69 |
|        bridge       | 59.13 | 70.49 |
|       bookcase      | 35.34 | 53.42 |
|        blind        | 27.63 | 28.68 |
|     coffee table    | 56.48 | 75.38 |
|        toilet       | 82.35 | 88.41 |
|        flower       | 43.59 | 56.53 |
|         book        | 45.48 | 59.59 |
|         hill        | 12.35 |  25.2 |
|        bench        | 45.29 | 52.47 |
|      countertop     | 52.54 | 67.06 |
|        stove        | 76.39 | 84.58 |
|         palm        | 46.94 | 67.73 |
|    kitchen island   | 35.01 | 56.99 |
|       computer      | 64.02 | 71.92 |
|     swivel chair    | 45.09 | 57.96 |
|         boat        | 44.63 | 59.67 |
|         bar         | 36.66 | 47.06 |
|    arcade machine   | 61.39 | 64.56 |
|        hovel        |  25.8 | 34.97 |
|         bus         | 86.43 | 95.04 |
|        towel        | 61.88 |  72.3 |
|        light        | 48.97 | 55.65 |
|        truck        | 32.26 | 42.54 |
|        tower        |  6.14 |  8.6  |
|      chandelier     | 63.87 | 79.91 |
|        awning       | 23.97 | 27.65 |
|     streetlight     | 21.69 | 26.72 |
|        booth        | 44.72 | 49.03 |
| television receiver | 65.98 | 76.26 |
|       airplane      | 56.93 | 64.26 |
|      dirt track     |  10.5 | 17.76 |
|       apparel       | 26.26 | 36.67 |
|         pole        | 20.84 | 28.43 |
|         land        |  3.31 |  4.5  |
|      bannister      | 11.42 | 14.86 |
|      escalator      | 30.08 | 33.42 |
|       ottoman       | 53.34 | 64.11 |
|        bottle       | 25.97 | 32.91 |
|        buffet       | 29.93 | 33.61 |
|        poster       |  20.5 | 26.08 |
|        stage        | 18.29 | 23.34 |
|         van         | 41.76 |  58.8 |
|         ship        | 69.83 |  93.1 |
|       fountain      |  21.4 | 21.79 |
|    conveyer belt    |  79.6 | 88.31 |
|        canopy       | 14.09 | 15.37 |
|        washer       | 72.48 | 73.83 |
|      plaything      | 20.43 | 27.63 |
|    swimming pool    |  58.4 | 83.65 |
|        stool        | 28.48 | 41.88 |
|        barrel       | 23.54 | 49.97 |
|        basket       | 26.28 | 32.19 |
|      waterfall      | 71.87 | 85.24 |
|         tent        | 93.73 | 98.53 |
|         bag         | 10.62 | 11.56 |
|       minibike      |  71.1 |  79.3 |
|        cradle       |  77.8 | 93.28 |
|         oven        | 42.75 | 55.87 |
|         ball        | 45.09 | 50.27 |
|         food        | 54.43 | 65.57 |
|         step        |  6.39 |  7.9  |
|         tank        | 52.03 | 59.01 |
|      trade name     | 26.46 | 32.57 |
|      microwave      | 81.44 | 85.62 |
|         pot         | 44.53 | 52.01 |
|        animal       | 57.64 | 59.44 |
|       bicycle       | 54.53 | 72.63 |
|         lake        | 61.19 | 63.26 |
|      dishwasher     | 68.95 | 73.54 |
|        screen       | 60.52 | 80.37 |
|       blanket       | 13.89 | 15.62 |
|      sculpture      | 56.74 |  73.6 |
|         hood        | 55.24 | 59.09 |
|        sconce       | 42.44 | 50.37 |
|         vase        | 35.93 | 45.21 |
|    traffic light    | 30.19 | 45.14 |
|         tray        | 11.22 | 19.91 |
|        ashcan       | 37.22 | 50.68 |
|         fan         | 59.43 | 72.45 |
|         pier        | 31.19 | 55.59 |
|      crt screen     |  2.77 |  7.74 |
|        plate        | 49.43 |  62.7 |
|       monitor       |  1.8  |  2.0  |
|    bulletin board   | 37.84 |  44.5 |
|        shower       |  4.48 |  7.65 |
|       radiator      | 55.43 | 61.75 |
|        glass        |  13.7 |  15.9 |
|        clock        | 35.04 | 39.36 |
|         flag        | 43.33 | 46.32 |
+---------------------+-------+-------+
09/16 04:53:33 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.7800  mIoU: 47.0100  mAcc: 57.4400  data_time: 0.0021  time: 0.2943
Finished processing corruption type: jpeg_compression
Runtime: 1726455214

============================= JOB FEEDBACK =============================

NodeName=uc2n486
Job ID: 24235247
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 08:17:21
CPU Efficiency: 4.72% of 7-07:26:24 core-walltime
Job Wall-clock time: 10:57:54
Memory Utilized: 4.12 GB
Memory Efficiency: 4.12% of 100.00 GB
