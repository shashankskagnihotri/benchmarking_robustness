Started at Sun Oct  6 01:04:53 CEST 2024
Processing corruption type: gaussian_noise
10/06 01:05:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1099424706
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1099424706
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:05:02 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/gaussian_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:05:29,564 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:05:29,564 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:05:29,564 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:05:29,564 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 01:05:29,564 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:05:29,564 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:05:29,564 - mmseg - INFO - res_post_norm: False
2024-10-06 01:05:29,564 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:05:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:05:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:05:36 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:05:38 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:06:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:45:23  time: 0.4518  data_time: 0.0015  memory: 16851  
10/06 01:07:13 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:13  time: 0.5977  data_time: 0.0016  memory: 16820  
10/06 01:07:28 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:22:39  time: 0.2860  data_time: 0.0016  memory: 9701  
10/06 01:07:49 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:19:41  time: 0.3741  data_time: 0.0015  memory: 11263  
10/06 01:08:10 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:44  time: 0.2262  data_time: 0.0014  memory: 11241  
10/06 01:08:27 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:59  time: 0.1085  data_time: 0.0016  memory: 11267  
10/06 01:08:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:48  time: 0.2564  data_time: 0.0015  memory: 11274  
10/06 01:09:02 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:37  time: 0.2660  data_time: 0.0014  memory: 11243  
10/06 01:09:11 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:13  time: 0.2059  data_time: 0.0014  memory: 9517  
10/06 01:09:19 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:11:02  time: 0.1022  data_time: 0.0014  memory: 8809  
10/06 01:09:27 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:04  time: 0.2725  data_time: 0.0015  memory: 9892  
10/06 01:09:35 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:14  time: 0.2558  data_time: 0.0016  memory: 9701  
10/06 01:09:47 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:37  time: 0.2871  data_time: 0.0014  memory: 9705  
10/06 01:10:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:09  time: 0.1069  data_time: 0.0016  memory: 11272  
10/06 01:10:16 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:44  time: 0.6034  data_time: 0.0014  memory: 9887  
10/06 01:10:23 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:07  time: 0.1001  data_time: 0.0016  memory: 9703  
10/06 01:10:28 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:32  time: 0.1061  data_time: 0.0016  memory: 693  
10/06 01:10:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:05  time: 0.1995  data_time: 0.0014  memory: 8958  
10/06 01:10:51 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:46  time: 0.3637  data_time: 0.0015  memory: 10823  
10/06 01:11:00 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:22  time: 0.0984  data_time: 0.0015  memory: 10825  
10/06 01:11:13 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:02  time: 0.4531  data_time: 0.0015  memory: 10634  
10/06 01:11:23 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:42  time: 0.1032  data_time: 0.0015  memory: 9889  
10/06 01:11:31 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:21  time: 0.2313  data_time: 0.0015  memory: 8819  
10/06 01:11:37 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:59  time: 0.1049  data_time: 0.0015  memory: 1883  
10/06 01:11:45 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:40  time: 0.2242  data_time: 0.0018  memory: 11263  
10/06 01:11:50 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:20  time: 0.1043  data_time: 0.0014  memory: 695  
10/06 01:11:57 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:02  time: 0.0997  data_time: 0.0014  memory: 8622  
10/06 01:12:08 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:47  time: 0.2992  data_time: 0.0014  memory: 10447  
10/06 01:12:16 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:31  time: 0.2571  data_time: 0.0014  memory: 8958  
10/06 01:12:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:14  time: 0.0963  data_time: 0.0014  memory: 694  
10/06 01:12:29 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:59  time: 0.1097  data_time: 0.0015  memory: 10635  
10/06 01:12:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:43  time: 0.1060  data_time: 0.0027  memory: 692  
10/06 01:12:45 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:30  time: 0.0955  data_time: 0.0014  memory: 11273  
10/06 01:12:54 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:16  time: 0.1071  data_time: 0.0016  memory: 9145  
10/06 01:13:02 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:03  time: 0.1044  data_time: 0.0014  memory: 10265  
10/06 01:13:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:50  time: 0.1073  data_time: 0.0016  memory: 8624  
10/06 01:13:14 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:36  time: 0.1079  data_time: 0.0016  memory: 642  
10/06 01:13:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:24  time: 0.1016  data_time: 0.0015  memory: 8660  
10/06 01:13:30 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:12  time: 0.1036  data_time: 0.0014  memory: 8823  
10/06 01:13:39 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0979  data_time: 0.0013  memory: 8584  
10/06 01:13:39 - mmengine - INFO - per class results:
10/06 01:13:39 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  72.1 | 87.14 |
|       building      | 78.04 | 87.53 |
|         sky         | 92.55 | 96.02 |
|        floor        | 75.59 | 88.41 |
|         tree        | 66.43 | 92.28 |
|       ceiling       | 79.97 | 89.68 |
|         road        | 76.66 | 89.99 |
|         bed         | 85.23 | 92.58 |
|      windowpane     | 57.86 |  72.1 |
|        grass        | 59.39 | 69.61 |
|       cabinet       | 52.84 |  66.1 |
|       sidewalk      | 48.71 | 58.38 |
|        person       | 75.61 |  90.4 |
|        earth        | 27.89 | 50.62 |
|         door        | 38.12 | 50.37 |
|        table        | 55.73 | 73.18 |
|       mountain      | 50.42 | 59.49 |
|        plant        | 43.25 |  53.6 |
|       curtain       |  61.3 | 77.15 |
|        chair        | 50.67 | 61.53 |
|         car         | 81.39 | 92.47 |
|        water        | 42.66 | 52.75 |
|       painting      | 66.07 | 79.57 |
|         sofa        | 62.28 | 79.67 |
|        shelf        |  32.1 | 43.55 |
|        house        | 33.96 | 56.68 |
|         sea         | 38.45 | 60.23 |
|        mirror       | 59.44 | 65.64 |
|         rug         | 50.63 | 57.52 |
|        field        | 28.15 | 53.62 |
|       armchair      |  38.6 | 59.72 |
|         seat        | 59.74 |  72.6 |
|        fence        | 34.03 | 55.24 |
|         desk        | 41.06 | 63.12 |
|         rock        | 46.52 | 64.42 |
|       wardrobe      | 44.58 | 65.32 |
|         lamp        | 56.26 | 66.14 |
|       bathtub       | 72.12 | 82.22 |
|       railing       | 28.22 | 37.36 |
|       cushion       | 42.54 |  46.8 |
|         base        |  9.03 | 11.32 |
|         box         | 12.39 | 14.07 |
|        column       | 39.51 | 52.92 |
|      signboard      | 32.78 | 42.47 |
|   chest of drawers  | 37.24 |  54.1 |
|       counter       |  38.8 |  53.1 |
|         sand        | 28.92 | 47.05 |
|         sink        | 64.82 | 77.32 |
|      skyscraper     |  60.1 | 87.49 |
|      fireplace      | 71.97 | 80.88 |
|     refrigerator    |  67.3 | 84.14 |
|      grandstand     | 29.89 |  74.4 |
|         path        |  21.5 | 30.64 |
|        stairs       | 29.56 | 35.96 |
|        runway       | 70.97 | 93.04 |
|         case        | 45.48 | 58.97 |
|      pool table     | 89.89 | 94.59 |
|        pillow       | 51.68 | 71.34 |
|     screen door     | 46.77 | 50.18 |
|       stairway      | 27.37 | 31.78 |
|        river        | 11.42 | 21.35 |
|        bridge       | 35.76 | 49.04 |
|       bookcase      |  40.5 | 56.19 |
|        blind        | 27.19 | 30.95 |
|     coffee table    | 56.47 | 70.34 |
|        toilet       | 76.71 | 86.18 |
|        flower       | 40.03 | 56.64 |
|         book        | 46.53 | 60.69 |
|         hill        | 15.37 | 23.44 |
|        bench        | 40.38 | 47.27 |
|      countertop     | 54.09 | 63.43 |
|        stove        | 67.24 | 72.88 |
|         palm        |  42.5 |  50.3 |
|    kitchen island   | 26.11 | 41.52 |
|       computer      |  54.2 | 63.17 |
|     swivel chair    | 48.33 | 64.35 |
|         boat        |  35.8 | 37.71 |
|         bar         | 25.49 | 29.25 |
|    arcade machine   | 20.43 | 20.78 |
|        hovel        |  9.35 | 11.55 |
|         bus         | 86.21 | 92.14 |
|        towel        | 51.79 |  61.0 |
|        light        | 39.69 | 42.69 |
|        truck        | 29.51 | 33.91 |
|        tower        | 15.95 | 23.03 |
|      chandelier     | 63.43 | 80.79 |
|        awning       | 22.16 | 24.73 |
|     streetlight     | 22.33 | 29.88 |
|        booth        | 58.23 | 60.95 |
| television receiver | 56.68 | 63.61 |
|       airplane      | 54.15 |  63.2 |
|      dirt track     |  3.53 | 14.49 |
|       apparel       | 30.92 | 43.74 |
|         pole        | 24.76 | 38.89 |
|         land        |  1.67 |  2.2  |
|      bannister      |  8.05 | 10.67 |
|      escalator      | 15.13 | 15.58 |
|       ottoman       | 42.14 | 52.19 |
|        bottle       | 31.65 | 50.03 |
|        buffet       | 39.98 |  46.0 |
|        poster       | 29.08 | 37.46 |
|        stage        |  7.09 |  8.44 |
|         van         | 42.74 | 56.23 |
|         ship        |  4.07 |  6.13 |
|       fountain      |  2.62 |  2.64 |
|    conveyer belt    | 71.66 | 82.62 |
|        canopy       | 15.25 | 16.03 |
|        washer       | 66.17 | 70.48 |
|      plaything      | 14.06 | 16.25 |
|    swimming pool    | 29.27 | 35.38 |
|        stool        | 35.25 | 40.55 |
|        barrel       |  37.9 | 42.81 |
|        basket       |  22.8 | 26.94 |
|      waterfall      | 42.79 | 49.79 |
|         tent        | 92.37 |  98.3 |
|         bag         |  5.37 |  6.5  |
|       minibike      | 61.11 | 70.22 |
|        cradle       | 79.63 | 92.45 |
|         oven        | 30.33 | 49.64 |
|         ball        | 43.55 | 55.61 |
|         food        | 39.23 | 45.34 |
|         step        |  4.62 |  5.19 |
|         tank        | 32.68 |  35.0 |
|      trade name     | 24.97 | 28.16 |
|      microwave      | 57.57 | 65.18 |
|         pot         | 33.72 | 36.25 |
|        animal       | 57.86 | 60.44 |
|       bicycle       | 52.62 | 77.67 |
|         lake        | 54.96 | 55.03 |
|      dishwasher     | 51.45 |  58.4 |
|        screen       | 67.23 |  79.1 |
|       blanket       | 12.85 | 15.22 |
|      sculpture      | 44.44 | 52.61 |
|         hood        |  46.7 | 48.29 |
|        sconce       | 31.05 | 34.39 |
|         vase        | 30.35 |  41.5 |
|    traffic light    |  26.2 |  38.7 |
|         tray        |  4.94 | 10.04 |
|        ashcan       | 31.39 | 40.46 |
|         fan         | 52.64 | 61.16 |
|         pier        | 19.56 | 24.54 |
|      crt screen     |  5.67 | 13.95 |
|        plate        | 45.12 | 53.13 |
|       monitor       | 17.76 | 23.01 |
|    bulletin board   |  30.9 | 35.23 |
|        shower       |  3.02 |  4.89 |
|       radiator      | 37.37 | 40.95 |
|        glass        |  7.88 |  8.14 |
|        clock        | 16.61 | 17.99 |
|         flag        | 37.07 | 41.49 |
+---------------------+-------+-------+
10/06 01:13:39 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.7100  mIoU: 41.7800  mAcc: 51.5300  data_time: 0.0024  time: 0.2404
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
10/06 01:13:48 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 467063382
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 467063382
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:13:49 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/shot_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:13:53,254 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:13:53,255 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:13:53,255 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:13:53,255 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 01:13:53,255 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:13:53,255 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:13:53,255 - mmseg - INFO - res_post_norm: False
2024-10-06 01:13:53,255 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:13:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:13:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:13:56 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:13:57 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:14:46 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:31:25  time: 0.5298  data_time: 0.0015  memory: 16851  
10/06 01:15:15 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:24:40  time: 0.6825  data_time: 0.0016  memory: 16820  
10/06 01:15:34 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:52  time: 0.3684  data_time: 0.0016  memory: 9701  
10/06 01:15:59 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:18:19  time: 0.4592  data_time: 0.0016  memory: 11263  
10/06 01:16:24 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:10  time: 0.2994  data_time: 0.0015  memory: 11241  
10/06 01:16:46 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:53  time: 0.1849  data_time: 0.0017  memory: 11267  
10/06 01:17:09 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:15:02  time: 0.3355  data_time: 0.0015  memory: 11274  
10/06 01:17:28 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:14:04  time: 0.3497  data_time: 0.0015  memory: 11243  
10/06 01:17:41 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:49  time: 0.2740  data_time: 0.0015  memory: 9517  
10/06 01:17:52 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:11:45  time: 0.1832  data_time: 0.0015  memory: 8809  
10/06 01:18:05 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:54  time: 0.3468  data_time: 0.0016  memory: 9892  
10/06 01:18:17 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:07  time: 0.3385  data_time: 0.0017  memory: 9701  
10/06 01:18:33 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:33  time: 0.3742  data_time: 0.0014  memory: 9705  
10/06 01:18:52 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:06  time: 0.1956  data_time: 0.0017  memory: 11272  
10/06 01:19:11 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:42  time: 0.6811  data_time: 0.0015  memory: 9887  
10/06 01:19:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:05  time: 0.1790  data_time: 0.0017  memory: 9703  
10/06 01:19:30 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:30  time: 0.1903  data_time: 0.0016  memory: 693  
10/06 01:19:43 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:02  time: 0.2638  data_time: 0.0014  memory: 8958  
10/06 01:20:01 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:42  time: 0.4387  data_time: 0.0016  memory: 10823  
10/06 01:20:14 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:17  time: 0.1750  data_time: 0.0015  memory: 10825  
10/06 01:20:31 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:55  time: 0.5346  data_time: 0.0015  memory: 10634  
10/06 01:20:45 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:33  time: 0.1675  data_time: 0.0016  memory: 9889  
10/06 01:20:57 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:09  time: 0.3092  data_time: 0.0015  memory: 8819  
10/06 01:21:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:45  time: 0.1703  data_time: 0.0015  memory: 1883  
10/06 01:21:18 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:24  time: 0.3045  data_time: 0.0015  memory: 11263  
10/06 01:21:26 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:01  time: 0.1775  data_time: 0.0015  memory: 695  
10/06 01:21:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:41  time: 0.1765  data_time: 0.0015  memory: 8622  
10/06 01:21:53 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:23  time: 0.3862  data_time: 0.0015  memory: 10447  
10/06 01:22:04 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:04  time: 0.3285  data_time: 0.0015  memory: 8958  
10/06 01:22:13 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:45  time: 0.1720  data_time: 0.0014  memory: 694  
10/06 01:22:24 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:27  time: 0.1816  data_time: 0.0015  memory: 10635  
10/06 01:22:33 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:08  time: 0.1839  data_time: 0.0036  memory: 692  
10/06 01:22:48 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:52  time: 0.1730  data_time: 0.0014  memory: 11273  
10/06 01:23:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:35  time: 0.1794  data_time: 0.0016  memory: 9145  
10/06 01:23:13 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:19  time: 0.1921  data_time: 0.0014  memory: 10265  
10/06 01:23:23 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:02  time: 0.1798  data_time: 0.0016  memory: 8624  
10/06 01:23:33 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:46  time: 0.1860  data_time: 0.0016  memory: 642  
10/06 01:23:43 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:30  time: 0.1703  data_time: 0.0015  memory: 8660  
10/06 01:23:56 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.1828  data_time: 0.0015  memory: 8823  
10/06 01:24:08 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1682  data_time: 0.0014  memory: 8584  
10/06 01:24:08 - mmengine - INFO - per class results:
10/06 01:24:08 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 71.42 | 86.81 |
|       building      | 78.01 | 87.47 |
|         sky         |  92.2 | 95.69 |
|        floor        | 75.36 | 87.99 |
|         tree        | 67.17 |  92.6 |
|       ceiling       | 79.09 | 89.06 |
|         road        | 76.79 |  90.8 |
|         bed         | 85.53 | 93.01 |
|      windowpane     | 56.29 | 70.22 |
|        grass        | 59.21 | 67.46 |
|       cabinet       | 52.31 | 65.57 |
|       sidewalk      | 46.11 |  54.9 |
|        person       | 75.81 | 90.85 |
|        earth        | 27.64 | 52.43 |
|         door        | 37.86 |  49.3 |
|        table        | 54.72 | 72.83 |
|       mountain      | 48.59 | 55.21 |
|        plant        | 44.45 |  54.2 |
|       curtain       | 59.54 | 76.96 |
|        chair        | 50.69 | 62.46 |
|         car         | 81.77 | 92.41 |
|        water        | 40.65 | 51.81 |
|       painting      | 64.11 | 77.98 |
|         sofa        | 61.75 | 80.82 |
|        shelf        | 31.04 | 41.85 |
|        house        | 32.91 | 54.92 |
|         sea         | 37.69 | 57.88 |
|        mirror       | 58.01 | 64.49 |
|         rug         | 49.03 | 56.11 |
|        field        |  28.8 | 59.32 |
|       armchair      | 38.72 | 58.63 |
|         seat        |  60.6 | 73.78 |
|        fence        | 35.46 | 56.82 |
|         desk        | 40.02 | 61.52 |
|         rock        | 48.05 | 67.47 |
|       wardrobe      | 43.95 | 63.96 |
|         lamp        | 54.04 | 63.19 |
|       bathtub       | 69.33 | 78.99 |
|       railing       | 28.59 | 37.86 |
|       cushion       | 40.43 | 44.31 |
|         base        |  9.57 | 12.11 |
|         box         | 11.97 | 14.11 |
|        column       | 39.28 | 54.44 |
|      signboard      | 32.48 | 42.02 |
|   chest of drawers  | 36.65 | 54.28 |
|       counter       | 35.73 | 48.95 |
|         sand        | 27.89 | 46.88 |
|         sink        | 65.39 | 77.35 |
|      skyscraper     | 61.02 | 88.84 |
|      fireplace      | 71.52 | 80.84 |
|     refrigerator    | 64.71 | 79.66 |
|      grandstand     | 28.51 |  71.9 |
|         path        | 22.43 | 31.85 |
|        stairs       | 24.94 | 30.08 |
|        runway       | 69.37 | 90.23 |
|         case        | 43.72 | 56.02 |
|      pool table     | 90.66 |  95.0 |
|        pillow       | 51.46 | 71.39 |
|     screen door     | 47.04 | 51.05 |
|       stairway      | 28.78 | 33.38 |
|        river        | 11.22 |  20.4 |
|        bridge       | 32.19 | 44.23 |
|       bookcase      | 35.22 | 53.43 |
|        blind        | 24.77 | 28.47 |
|     coffee table    | 57.69 | 71.92 |
|        toilet       | 74.18 |  84.2 |
|        flower       | 37.96 | 52.99 |
|         book        | 44.46 | 59.53 |
|         hill        | 15.74 |  22.5 |
|        bench        | 42.03 | 49.16 |
|      countertop     | 51.13 | 62.04 |
|        stove        | 69.97 | 76.39 |
|         palm        | 43.42 | 50.82 |
|    kitchen island   | 24.19 | 40.81 |
|       computer      | 54.24 |  63.9 |
|     swivel chair    | 47.94 | 67.22 |
|         boat        | 37.09 | 39.45 |
|         bar         | 24.58 | 29.14 |
|    arcade machine   | 19.28 |  19.8 |
|        hovel        | 14.32 | 20.21 |
|         bus         | 86.96 | 91.93 |
|        towel        |  44.9 | 53.96 |
|        light        | 36.69 | 38.74 |
|        truck        | 34.27 | 39.38 |
|        tower        |  16.7 | 23.06 |
|      chandelier     |  60.1 | 78.71 |
|        awning       |  23.9 | 26.73 |
|     streetlight     | 23.76 | 31.45 |
|        booth        | 60.88 | 63.68 |
| television receiver | 58.22 |  65.2 |
|       airplane      | 53.67 | 62.53 |
|      dirt track     |  4.32 | 19.88 |
|       apparel       | 28.85 | 42.18 |
|         pole        | 24.54 | 40.38 |
|         land        |  1.35 |  1.91 |
|      bannister      |  5.23 |  7.49 |
|      escalator      | 19.32 | 19.89 |
|       ottoman       | 44.02 | 51.93 |
|        bottle       |  32.7 | 52.98 |
|        buffet       | 38.47 | 43.61 |
|        poster       |  24.3 | 29.63 |
|        stage        |  8.33 | 10.13 |
|         van         | 44.58 | 56.52 |
|         ship        |  4.07 |  6.2  |
|       fountain      |  2.76 |  2.77 |
|    conveyer belt    | 69.56 | 78.06 |
|        canopy       |  15.8 | 16.58 |
|        washer       | 64.43 |  68.0 |
|      plaything      | 13.95 | 15.82 |
|    swimming pool    | 31.93 | 37.49 |
|        stool        | 38.66 | 46.59 |
|        barrel       | 50.37 | 64.98 |
|        basket       | 22.43 | 26.46 |
|      waterfall      | 33.14 | 37.94 |
|         tent        |  90.8 | 98.37 |
|         bag         |  5.54 |  6.89 |
|       minibike      | 64.94 | 74.86 |
|        cradle       | 80.89 | 92.97 |
|         oven        | 41.66 | 56.76 |
|         ball        | 44.77 | 58.27 |
|         food        | 43.37 | 49.76 |
|         step        |  4.9  |  5.41 |
|         tank        | 34.48 |  37.1 |
|      trade name     | 24.84 | 28.51 |
|      microwave      | 60.61 | 68.37 |
|         pot         | 35.44 | 38.98 |
|        animal       | 56.46 | 59.16 |
|       bicycle       | 52.38 | 79.83 |
|         lake        |  55.5 | 55.59 |
|      dishwasher     | 48.27 | 56.75 |
|        screen       | 63.61 | 79.74 |
|       blanket       |  12.2 | 14.35 |
|      sculpture      | 45.28 | 53.72 |
|         hood        | 41.32 | 42.93 |
|        sconce       |  27.0 | 29.73 |
|         vase        | 30.06 | 40.09 |
|    traffic light    | 24.91 | 35.83 |
|         tray        |  4.84 |  9.76 |
|        ashcan       | 34.75 | 45.43 |
|         fan         | 52.03 | 60.95 |
|         pier        | 29.43 | 40.65 |
|      crt screen     |  4.68 | 12.69 |
|        plate        | 30.78 | 35.74 |
|       monitor       |  9.04 | 10.25 |
|    bulletin board   | 26.37 |  29.9 |
|        shower       |  2.75 |  6.32 |
|       radiator      | 30.16 | 33.61 |
|        glass        |  7.31 |  7.53 |
|        clock        |  15.5 | 17.02 |
|         flag        | 36.97 | 40.38 |
+---------------------+-------+-------+
10/06 01:24:08 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.3500  mIoU: 41.3700  mAcc: 51.2900  data_time: 0.0017  time: 0.3055
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
10/06 01:24:12 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1343446019
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1343446019
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:24:13 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/impulse_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:24:17,162 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:24:17,162 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:24:17,162 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:24:17,162 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 01:24:17,162 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:24:17,162 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:24:17,162 - mmseg - INFO - res_post_norm: False
2024-10-06 01:24:17,162 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:24:18 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:24:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:24:20 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:24:21 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:25:05 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:28:17  time: 0.4311  data_time: 0.0015  memory: 16851  
10/06 01:25:29 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:38  time: 0.5816  data_time: 0.0016  memory: 16820  
10/06 01:25:43 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:55  time: 0.2626  data_time: 0.0016  memory: 9701  
10/06 01:26:04 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:22  time: 0.3544  data_time: 0.0015  memory: 11263  
10/06 01:26:24 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:17  time: 0.2069  data_time: 0.0015  memory: 11241  
10/06 01:26:40 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:13:07  time: 0.0914  data_time: 0.0016  memory: 11267  
10/06 01:26:59 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:21  time: 0.2416  data_time: 0.0015  memory: 11274  
10/06 01:27:13 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:29  time: 0.2522  data_time: 0.0014  memory: 11243  
10/06 01:27:21 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:20  time: 0.1855  data_time: 0.0015  memory: 9517  
10/06 01:27:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:20  time: 0.0885  data_time: 0.0015  memory: 8809  
10/06 01:27:36 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:34  time: 0.2537  data_time: 0.0016  memory: 9892  
10/06 01:27:43 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:51  time: 0.2325  data_time: 0.0016  memory: 9701  
10/06 01:27:54 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:22  time: 0.2797  data_time: 0.0014  memory: 9705  
10/06 01:28:08 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:01  time: 0.1054  data_time: 0.0017  memory: 11272  
10/06 01:28:22 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:42  time: 0.5880  data_time: 0.0015  memory: 9887  
10/06 01:28:29 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:11  time: 0.0895  data_time: 0.0016  memory: 9703  
10/06 01:28:33 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:41  time: 0.0928  data_time: 0.0016  memory: 693  
10/06 01:28:41 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:17  time: 0.1814  data_time: 0.0014  memory: 8958  
10/06 01:28:55 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:02  time: 0.3472  data_time: 0.0015  memory: 10823  
10/06 01:29:03 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:41  time: 0.0796  data_time: 0.0015  memory: 10825  
10/06 01:29:14 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:25  time: 0.4358  data_time: 0.0015  memory: 10634  
10/06 01:29:24 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:07  time: 0.0810  data_time: 0.0015  memory: 9889  
10/06 01:29:31 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:49  time: 0.2141  data_time: 0.0015  memory: 8819  
10/06 01:29:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:29  time: 0.0882  data_time: 0.0015  memory: 1883  
10/06 01:29:43 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:13  time: 0.2069  data_time: 0.0015  memory: 11263  
10/06 01:29:47 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:55  time: 0.0885  data_time: 0.0015  memory: 695  
10/06 01:29:53 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:39  time: 0.0847  data_time: 0.0018  memory: 8622  
10/06 01:30:04 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:26  time: 0.2785  data_time: 0.0015  memory: 10447  
10/06 01:30:11 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:12  time: 0.2389  data_time: 0.0014  memory: 8958  
10/06 01:30:15 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:58  time: 0.0839  data_time: 0.0014  memory: 694  
10/06 01:30:21 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:44  time: 0.0857  data_time: 0.0015  memory: 10635  
10/06 01:30:26 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:31  time: 0.0824  data_time: 0.0016  memory: 692  
10/06 01:30:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:19  time: 0.0824  data_time: 0.0015  memory: 11273  
10/06 01:30:44 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:07  time: 0.0830  data_time: 0.0016  memory: 9145  
10/06 01:30:51 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:55  time: 0.0917  data_time: 0.0015  memory: 10265  
10/06 01:30:57 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:43  time: 0.0890  data_time: 0.0016  memory: 8624  
10/06 01:31:01 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:32  time: 0.0829  data_time: 0.0017  memory: 642  
10/06 01:31:07 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:21  time: 0.0888  data_time: 0.0015  memory: 8660  
10/06 01:31:15 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0856  data_time: 0.0015  memory: 8823  
10/06 01:31:23 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0778  data_time: 0.0014  memory: 8584  
10/06 01:31:23 - mmengine - INFO - per class results:
10/06 01:31:23 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 69.23 | 86.41 |
|       building      | 76.78 | 87.82 |
|         sky         |  88.9 | 91.21 |
|        floor        |  73.3 | 86.66 |
|         tree        | 61.96 | 92.39 |
|       ceiling       | 77.01 | 87.38 |
|         road        | 76.77 | 87.48 |
|         bed         | 83.27 | 90.56 |
|      windowpane     | 54.29 | 71.78 |
|        grass        | 62.99 | 77.52 |
|       cabinet       | 50.29 | 64.04 |
|       sidewalk      | 50.65 | 61.35 |
|        person       | 73.51 | 88.77 |
|        earth        | 28.81 | 52.98 |
|         door        | 33.68 | 44.72 |
|        table        | 51.44 | 71.63 |
|       mountain      | 44.98 | 53.86 |
|        plant        |  38.4 | 46.78 |
|       curtain       | 57.79 | 78.57 |
|        chair        | 46.52 | 54.73 |
|         car         | 78.85 | 92.61 |
|        water        | 42.94 | 55.53 |
|       painting      |  65.4 | 79.15 |
|         sofa        | 58.35 | 79.99 |
|        shelf        | 34.87 |  51.6 |
|        house        | 31.18 |  47.5 |
|         sea         | 35.17 | 53.01 |
|        mirror       | 53.84 | 59.19 |
|         rug         | 45.34 | 51.72 |
|        field        | 24.59 | 38.33 |
|       armchair      | 36.27 | 56.63 |
|         seat        |  50.3 | 61.84 |
|        fence        |  31.3 | 52.39 |
|         desk        | 39.54 | 61.76 |
|         rock        | 42.06 | 67.94 |
|       wardrobe      | 40.09 |  56.3 |
|         lamp        | 53.77 | 61.97 |
|       bathtub       | 70.53 | 82.95 |
|       railing       | 30.17 | 38.68 |
|       cushion       | 35.36 | 38.08 |
|         base        |  5.99 |  7.14 |
|         box         | 12.08 | 13.87 |
|        column       | 35.73 | 49.07 |
|      signboard      | 31.84 | 41.47 |
|   chest of drawers  | 38.47 | 54.82 |
|       counter       | 36.54 | 48.96 |
|         sand        | 15.45 | 22.89 |
|         sink        |  57.7 | 75.78 |
|      skyscraper     | 59.79 |  87.3 |
|      fireplace      | 60.18 | 67.74 |
|     refrigerator    | 66.79 | 85.63 |
|      grandstand     | 38.07 | 72.92 |
|         path        |  21.8 | 33.18 |
|        stairs       | 34.77 | 44.96 |
|        runway       | 71.51 |  94.0 |
|         case        | 46.78 | 62.23 |
|      pool table     | 88.47 | 94.49 |
|        pillow       | 50.46 | 72.55 |
|     screen door     | 41.44 |  45.9 |
|       stairway      | 26.05 | 29.64 |
|        river        |  1.62 |  2.46 |
|        bridge       | 39.96 | 47.34 |
|       bookcase      | 28.91 |  34.4 |
|        blind        | 13.67 | 15.04 |
|     coffee table    | 59.67 | 73.95 |
|        toilet       | 74.07 | 83.86 |
|        flower       | 40.94 | 52.83 |
|         book        | 40.39 | 50.08 |
|         hill        | 14.75 | 23.42 |
|        bench        | 38.52 | 45.84 |
|      countertop     | 53.52 | 60.53 |
|        stove        | 60.81 | 73.05 |
|         palm        | 42.01 | 50.28 |
|    kitchen island   |  23.0 | 31.44 |
|       computer      | 54.09 | 62.18 |
|     swivel chair    | 37.58 | 47.67 |
|         boat        | 37.13 | 39.69 |
|         bar         | 23.16 | 26.18 |
|    arcade machine   | 31.05 | 32.28 |
|        hovel        | 17.22 |  20.1 |
|         bus         | 83.98 | 89.83 |
|        towel        | 44.05 | 49.99 |
|        light        | 35.83 | 38.34 |
|        truck        | 27.38 | 31.36 |
|        tower        | 15.28 | 22.68 |
|      chandelier     | 58.44 | 73.92 |
|        awning       | 16.22 | 17.36 |
|     streetlight     | 21.73 | 26.82 |
|        booth        | 49.71 |  51.4 |
| television receiver | 52.59 | 61.16 |
|       airplane      | 52.29 | 64.78 |
|      dirt track     |  8.17 | 19.63 |
|       apparel       | 27.84 | 38.76 |
|         pole        | 25.22 | 39.51 |
|         land        |  0.81 |  1.14 |
|      bannister      |  6.11 |  7.65 |
|      escalator      |  7.18 |  7.27 |
|       ottoman       | 39.98 | 46.35 |
|        bottle       | 27.31 | 38.27 |
|        buffet       | 33.03 |  36.3 |
|        poster       | 27.87 | 34.53 |
|        stage        |  6.04 |  6.95 |
|         van         | 37.82 | 47.42 |
|         ship        |  4.08 |  6.02 |
|       fountain      |  5.91 |  5.96 |
|    conveyer belt    | 73.42 | 77.62 |
|        canopy       |  4.65 |  4.78 |
|        washer       | 65.84 | 71.67 |
|      plaything      | 11.63 | 14.33 |
|    swimming pool    | 19.71 | 20.28 |
|        stool        | 30.13 | 35.86 |
|        barrel       | 34.33 | 37.34 |
|        basket       |  18.3 | 20.83 |
|      waterfall      | 36.96 | 40.26 |
|         tent        | 90.12 | 98.53 |
|         bag         |  3.19 |  3.64 |
|       minibike      | 55.32 | 67.41 |
|        cradle       | 74.48 | 93.21 |
|         oven        | 25.92 | 42.67 |
|         ball        |  33.2 | 40.08 |
|         food        | 38.48 | 42.91 |
|         step        |  2.83 |  3.29 |
|         tank        | 26.79 | 28.73 |
|      trade name     | 19.33 | 21.78 |
|      microwave      | 37.79 | 44.45 |
|         pot         | 23.16 | 24.15 |
|        animal       | 55.89 | 58.03 |
|       bicycle       | 49.78 | 77.64 |
|         lake        |  9.46 |  9.46 |
|      dishwasher     | 43.37 | 46.27 |
|        screen       | 58.34 | 69.72 |
|       blanket       |  7.07 |  7.54 |
|      sculpture      | 33.75 | 40.86 |
|         hood        | 42.54 | 44.37 |
|        sconce       | 29.01 | 32.77 |
|         vase        | 30.34 | 38.03 |
|    traffic light    |  23.5 | 34.06 |
|         tray        |  3.87 |  8.93 |
|        ashcan       | 31.56 | 37.94 |
|         fan         | 51.31 | 60.45 |
|         pier        | 11.92 | 14.78 |
|      crt screen     |  4.27 |  8.41 |
|        plate        | 44.75 | 51.62 |
|       monitor       | 34.75 | 39.76 |
|    bulletin board   | 24.47 | 26.57 |
|        shower       |  1.31 |  7.81 |
|       radiator      | 41.06 | 46.39 |
|        glass        |  4.54 |  4.59 |
|        clock        | 11.71 | 14.31 |
|         flag        | 31.77 | 34.53 |
+---------------------+-------+-------+
10/06 01:31:23 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 76.9800  mIoU: 38.6200  mAcc: 47.6900  data_time: 0.0017  time: 0.2110
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
10/06 01:31:27 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1941139383
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1941139383
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:31:28 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/defocus_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:31:32,016 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:31:32,016 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:31:32,016 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:31:32,016 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 01:31:32,016 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:31:32,016 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:31:32,016 - mmseg - INFO - res_post_norm: False
2024-10-06 01:31:32,016 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:31:33 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:31:33 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:31:35 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:31:36 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:32:21 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:29:26  time: 0.4433  data_time: 0.0016  memory: 16851  
10/06 01:32:46 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:20  time: 0.5875  data_time: 0.0024  memory: 16820  
10/06 01:33:01 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:30  time: 0.2778  data_time: 0.0015  memory: 9701  
10/06 01:33:22 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:52  time: 0.3637  data_time: 0.0015  memory: 11263  
10/06 01:33:42 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:43  time: 0.2150  data_time: 0.0015  memory: 11241  
10/06 01:33:59 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:13:31  time: 0.1013  data_time: 0.0016  memory: 11267  
10/06 01:34:18 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:43  time: 0.2510  data_time: 0.0015  memory: 11274  
10/06 01:34:33 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:49  time: 0.2645  data_time: 0.0014  memory: 11243  
10/06 01:34:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:39  time: 0.1950  data_time: 0.0015  memory: 9517  
10/06 01:34:49 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:39  time: 0.0997  data_time: 0.0015  memory: 8809  
10/06 01:34:58 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:52  time: 0.2658  data_time: 0.0015  memory: 9892  
10/06 01:35:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:08  time: 0.2405  data_time: 0.0016  memory: 9701  
10/06 01:35:17 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:38  time: 0.2883  data_time: 0.0015  memory: 9705  
10/06 01:35:31 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:16  time: 0.1056  data_time: 0.0017  memory: 11272  
10/06 01:35:46 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:56  time: 0.5940  data_time: 0.0015  memory: 9887  
10/06 01:35:52 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:24  time: 0.1004  data_time: 0.0017  memory: 9703  
10/06 01:35:57 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:53  time: 0.0997  data_time: 0.0017  memory: 693  
10/06 01:36:06 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:29  time: 0.1920  data_time: 0.0015  memory: 8958  
10/06 01:36:20 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:13  time: 0.3609  data_time: 0.0016  memory: 10823  
10/06 01:36:29 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:52  time: 0.0968  data_time: 0.0015  memory: 10825  
10/06 01:36:41 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:35  time: 0.4455  data_time: 0.0016  memory: 10634  
10/06 01:36:51 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:17  time: 0.0990  data_time: 0.0016  memory: 9889  
10/06 01:36:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:58  time: 0.2280  data_time: 0.0015  memory: 8819  
10/06 01:37:03 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:38  time: 0.0922  data_time: 0.0035  memory: 1883  
10/06 01:37:11 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:21  time: 0.2208  data_time: 0.0015  memory: 11263  
10/06 01:37:16 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:03  time: 0.1007  data_time: 0.0015  memory: 695  
10/06 01:37:22 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:46  time: 0.0877  data_time: 0.0015  memory: 8622  
10/06 01:37:34 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:33  time: 0.3011  data_time: 0.0016  memory: 10447  
10/06 01:37:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:18  time: 0.2417  data_time: 0.0014  memory: 8958  
10/06 01:37:46 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:03  time: 0.0894  data_time: 0.0014  memory: 694  
10/06 01:37:53 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:49  time: 0.1024  data_time: 0.0015  memory: 10635  
10/06 01:37:58 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:35  time: 0.0963  data_time: 0.0016  memory: 692  
10/06 01:38:08 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:23  time: 0.0920  data_time: 0.0014  memory: 11273  
10/06 01:38:17 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:10  time: 0.0990  data_time: 0.0016  memory: 9145  
10/06 01:38:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:58  time: 0.0961  data_time: 0.0014  memory: 10265  
10/06 01:38:31 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:46  time: 0.0965  data_time: 0.0017  memory: 8624  
10/06 01:38:36 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:34  time: 0.0975  data_time: 0.0016  memory: 642  
10/06 01:38:42 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:22  time: 0.0901  data_time: 0.0015  memory: 8660  
10/06 01:38:51 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:11  time: 0.0966  data_time: 0.0015  memory: 8823  
10/06 01:39:00 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0872  data_time: 0.0014  memory: 8584  
10/06 01:39:00 - mmengine - INFO - per class results:
10/06 01:39:00 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.69 | 88.04 |
|       building      |  78.9 |  92.5 |
|         sky         | 93.93 | 96.85 |
|        floor        | 78.55 | 89.17 |
|         tree        | 72.21 | 85.82 |
|       ceiling       | 81.24 | 89.06 |
|         road        | 82.66 | 90.05 |
|         bed         | 87.67 | 95.37 |
|      windowpane     | 58.91 | 73.81 |
|        grass        | 62.76 |  76.7 |
|       cabinet       | 58.15 | 71.28 |
|       sidewalk      | 65.15 | 80.11 |
|        person       | 74.32 |  88.7 |
|        earth        | 32.34 | 47.27 |
|         door        | 44.51 | 57.41 |
|        table        | 54.87 | 72.19 |
|       mountain      | 58.97 | 71.51 |
|        plant        | 47.25 | 60.98 |
|       curtain       | 66.58 | 81.94 |
|        chair        | 52.81 | 68.18 |
|         car         | 81.15 | 91.22 |
|        water        |  48.9 | 62.29 |
|       painting      |  65.7 | 83.16 |
|         sofa        | 61.51 | 79.83 |
|        shelf        | 38.63 | 56.92 |
|        house        | 30.68 | 38.83 |
|         sea         | 52.85 | 71.85 |
|        mirror       | 64.34 | 72.29 |
|         rug         | 58.74 | 70.98 |
|        field        | 23.82 | 37.09 |
|       armchair      | 40.41 | 56.77 |
|         seat        |  59.8 | 74.29 |
|        fence        | 41.59 | 55.86 |
|         desk        | 46.39 | 64.17 |
|         rock        | 42.84 | 73.02 |
|       wardrobe      | 47.36 | 68.28 |
|         lamp        | 55.05 | 70.64 |
|       bathtub       | 74.34 | 80.51 |
|       railing       | 30.17 | 44.81 |
|       cushion       | 49.26 | 56.48 |
|         base        | 21.04 | 34.02 |
|         box         | 18.26 | 23.63 |
|        column       |  40.5 |  49.9 |
|      signboard      | 30.06 | 37.99 |
|   chest of drawers  | 43.17 | 53.84 |
|       counter       | 30.13 | 39.41 |
|         sand        | 34.95 | 50.15 |
|         sink        | 62.15 |  74.5 |
|      skyscraper     | 44.42 | 53.57 |
|      fireplace      |  75.1 |  87.7 |
|     refrigerator    | 71.03 | 78.56 |
|      grandstand     | 43.43 | 72.98 |
|         path        | 21.92 | 32.72 |
|        stairs       | 24.56 | 30.43 |
|        runway       | 71.85 | 95.14 |
|         case        |  51.6 | 61.63 |
|      pool table     | 90.26 | 95.89 |
|        pillow       | 51.86 | 63.87 |
|     screen door     | 61.86 | 72.43 |
|       stairway      | 27.41 | 38.28 |
|        river        |  9.14 | 15.88 |
|        bridge       |  42.7 |  52.5 |
|       bookcase      | 36.12 | 56.21 |
|        blind        | 24.23 |  25.3 |
|     coffee table    | 53.68 | 79.29 |
|        toilet       | 81.82 | 88.81 |
|        flower       | 37.51 | 50.26 |
|         book        | 40.71 | 54.64 |
|         hill        |  8.62 | 11.66 |
|        bench        | 51.02 | 62.48 |
|      countertop     | 58.47 | 75.27 |
|        stove        | 70.06 | 80.76 |
|         palm        | 46.55 | 58.15 |
|    kitchen island   | 32.93 | 61.46 |
|       computer      | 56.42 | 64.13 |
|     swivel chair    | 43.23 | 60.59 |
|         boat        | 31.82 |  48.5 |
|         bar         | 43.83 | 55.76 |
|    arcade machine   | 22.36 | 24.23 |
|        hovel        |  32.1 | 47.99 |
|         bus         | 80.44 | 91.27 |
|        towel        | 53.12 | 66.65 |
|        light        | 48.22 | 53.72 |
|        truck        | 28.17 | 39.94 |
|        tower        |  13.9 | 19.64 |
|      chandelier     | 63.78 | 76.77 |
|        awning       | 21.78 | 28.25 |
|     streetlight     | 19.73 |  30.3 |
|        booth        | 50.57 | 54.37 |
| television receiver | 63.65 | 73.09 |
|       airplane      | 55.87 | 63.12 |
|      dirt track     |  3.04 |  4.67 |
|       apparel       | 27.05 | 44.07 |
|         pole        |  13.3 | 15.77 |
|         land        |  1.44 |  3.56 |
|      bannister      |  5.37 |  7.11 |
|      escalator      | 19.37 | 23.13 |
|       ottoman       | 42.83 | 55.07 |
|        bottle       | 21.23 | 31.17 |
|        buffet       | 37.65 | 43.63 |
|        poster       | 28.94 | 42.21 |
|        stage        | 13.44 | 17.17 |
|         van         |  37.1 | 45.41 |
|         ship        | 11.19 | 17.52 |
|       fountain      | 14.19 | 14.41 |
|    conveyer belt    | 72.08 | 86.41 |
|        canopy       | 14.42 | 18.49 |
|        washer       | 67.91 | 69.81 |
|      plaything      | 16.66 | 32.96 |
|    swimming pool    | 26.56 | 43.08 |
|        stool        | 41.88 | 54.99 |
|        barrel       | 39.25 |  65.0 |
|        basket       | 14.32 | 17.57 |
|      waterfall      | 62.45 |  88.0 |
|         tent        | 93.07 | 98.21 |
|         bag         |  3.8  |  4.54 |
|       minibike      | 63.15 | 72.72 |
|        cradle       | 70.97 | 95.59 |
|         oven        | 42.58 | 47.81 |
|         ball        | 36.63 | 43.03 |
|         food        | 44.31 | 53.51 |
|         step        |  3.11 |  3.6  |
|         tank        | 53.15 | 53.82 |
|      trade name     | 19.87 | 23.14 |
|      microwave      | 77.71 | 84.13 |
|         pot         | 43.58 | 52.03 |
|        animal       | 59.89 | 65.45 |
|       bicycle       | 50.67 | 69.49 |
|         lake        | 44.67 |  79.8 |
|      dishwasher     | 60.08 | 64.03 |
|        screen       | 67.61 | 84.21 |
|       blanket       |  3.5  |  4.34 |
|      sculpture      | 47.24 |  70.9 |
|         hood        | 56.41 | 61.44 |
|        sconce       | 40.56 | 54.62 |
|         vase        |  22.7 | 27.42 |
|    traffic light    | 24.67 | 45.26 |
|         tray        |  7.49 | 12.02 |
|        ashcan       | 34.19 | 44.69 |
|         fan         | 52.63 | 63.04 |
|         pier        | 26.45 | 50.28 |
|      crt screen     | 12.96 | 19.16 |
|        plate        | 49.55 | 60.97 |
|       monitor       | 38.59 | 62.51 |
|    bulletin board   | 32.79 | 38.13 |
|        shower       |  2.26 |  8.69 |
|       radiator      |  42.0 | 45.41 |
|        glass        |  5.08 |  5.25 |
|        clock        |  23.4 | 26.84 |
|         flag        |  39.0 | 46.01 |
+---------------------+-------+-------+
10/06 01:39:00 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.8500  mIoU: 44.0400  mAcc: 55.2500  data_time: 0.0017  time: 0.2217
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
10/06 01:39:03 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1894066755
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1894066755
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:39:04 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/glass_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:39:07,898 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:39:07,898 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:39:07,898 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:39:07,898 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 01:39:07,898 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:39:07,898 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:39:07,898 - mmseg - INFO - res_post_norm: False
2024-10-06 01:39:07,898 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:39:09 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:39:09 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:39:10 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:39:12 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 01:45:22 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:00:56  time: 7.3420  data_time: 0.0016  memory: 16851  
10/06 01:51:11 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:47:42  time: 7.2740  data_time: 0.0016  memory: 16820  
10/06 01:56:46 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:36:47  time: 6.8778  data_time: 0.0016  memory: 9701  
10/06 02:02:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:30:14  time: 6.7268  data_time: 0.0016  memory: 11263  
10/06 02:08:03 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:21:56  time: 6.4821  data_time: 0.0016  memory: 11241  
10/06 02:13:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:14:13  time: 6.6082  data_time: 0.0017  memory: 11267  
10/06 02:19:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:07:49  time: 6.2828  data_time: 0.0015  memory: 11274  
10/06 02:24:31 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:01:16  time: 6.7045  data_time: 0.0015  memory: 11243  
10/06 02:29:26 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:53:00  time: 6.0002  data_time: 0.0015  memory: 9517  
10/06 02:34:45 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:46:39  time: 6.1996  data_time: 0.0015  memory: 8809  
10/06 02:40:25 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:41:23  time: 6.8224  data_time: 0.0016  memory: 9892  
10/06 02:45:43 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:35:11  time: 6.7359  data_time: 0.0017  memory: 9701  
10/06 02:51:06 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:29:19  time: 6.6290  data_time: 0.0015  memory: 9705  
10/06 02:56:48 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:24:07  time: 6.6464  data_time: 0.0017  memory: 11272  
10/06 03:02:22 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:18:36  time: 6.7366  data_time: 0.0015  memory: 9887  
10/06 03:07:24 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:12:18  time: 6.4696  data_time: 0.0017  memory: 9703  
10/06 03:12:53 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:06:45  time: 6.5356  data_time: 0.0017  memory: 693  
10/06 03:18:05 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:00:51  time: 6.1201  data_time: 0.0016  memory: 8958  
10/06 03:23:54 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:55:43  time: 6.7598  data_time: 0.0016  memory: 10823  
10/06 03:29:11 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:49:59  time: 6.2595  data_time: 0.0016  memory: 10825  
10/06 03:34:45 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:44:33  time: 6.9841  data_time: 0.0016  memory: 10634  
10/06 03:40:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:38:59  time: 6.2909  data_time: 0.0016  memory: 9889  
10/06 03:45:28 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:33:19  time: 6.5503  data_time: 0.0015  memory: 8819  
10/06 03:50:52 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:27:46  time: 6.2468  data_time: 0.0016  memory: 1883  
10/06 03:56:01 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:22:05  time: 6.2894  data_time: 0.0015  memory: 11263  
10/06 04:01:00 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:16:21  time: 6.3839  data_time: 0.0015  memory: 695  
10/06 04:06:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:10:48  time: 5.9029  data_time: 0.0015  memory: 8622  
10/06 04:11:39 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:05:20  time: 6.8881  data_time: 0.0036  memory: 10447  
10/06 04:16:44 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:59:45  time: 6.7377  data_time: 0.0016  memory: 8958  
10/06 04:21:53 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:54:13  time: 5.9189  data_time: 0.0015  memory: 694  
10/06 04:27:26 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:48:50  time: 6.4929  data_time: 0.0016  memory: 10635  
10/06 04:32:35 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:43:20  time: 6.2810  data_time: 0.0018  memory: 692  
10/06 04:37:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:37:54  time: 5.8767  data_time: 0.0015  memory: 11273  
10/06 04:43:20 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:32:29  time: 6.4157  data_time: 0.0017  memory: 9145  
10/06 04:48:48 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:27:05  time: 6.3214  data_time: 0.0015  memory: 10265  
10/06 04:53:54 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:21:38  time: 6.4764  data_time: 0.0017  memory: 8624  
10/06 04:59:15 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:16:13  time: 6.4082  data_time: 0.0017  memory: 642  
10/06 05:04:16 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:10:47  time: 6.2175  data_time: 0.0016  memory: 8660  
10/06 05:09:42 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:23  time: 6.1855  data_time: 0.0030  memory: 8823  
10/06 05:14:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 5.7486  data_time: 0.0014  memory: 8584  
10/06 05:14:51 - mmengine - INFO - per class results:
10/06 05:14:51 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.31 | 89.86 |
|       building      | 78.43 |  91.2 |
|         sky         | 93.42 | 97.53 |
|        floor        | 78.48 | 88.87 |
|         tree        | 70.12 | 86.57 |
|       ceiling       | 80.61 |  89.2 |
|         road        | 81.26 |  90.5 |
|         bed         |  86.3 | 92.42 |
|      windowpane     | 54.87 | 67.86 |
|        grass        | 62.39 | 78.74 |
|       cabinet       | 52.81 | 64.66 |
|       sidewalk      |  56.0 | 63.72 |
|        person       |  75.6 |  88.5 |
|        earth        | 31.27 | 45.87 |
|         door        | 42.07 | 51.48 |
|        table        |  52.8 | 68.46 |
|       mountain      | 56.41 | 68.14 |
|        plant        | 46.99 | 64.07 |
|       curtain       | 62.88 | 81.62 |
|        chair        | 49.88 | 68.95 |
|         car         |  80.6 | 87.48 |
|        water        | 48.25 | 64.16 |
|       painting      | 66.32 | 80.84 |
|         sofa        |  61.2 | 80.99 |
|        shelf        | 37.16 | 51.96 |
|        house        | 23.27 | 29.81 |
|         sea         | 49.02 | 73.85 |
|        mirror       | 57.98 | 69.72 |
|         rug         | 59.35 | 75.82 |
|        field        | 22.23 | 42.31 |
|       armchair      | 36.71 | 45.66 |
|         seat        | 53.62 | 74.82 |
|        fence        | 37.82 | 53.95 |
|         desk        | 38.32 | 49.76 |
|         rock        | 41.12 | 66.34 |
|       wardrobe      | 39.25 | 54.91 |
|         lamp        | 57.12 | 66.17 |
|       bathtub       | 69.82 | 75.94 |
|       railing       |  27.4 | 34.18 |
|       cushion       | 49.54 | 61.24 |
|         base        | 12.29 | 18.79 |
|         box         | 16.91 | 24.51 |
|        column       | 42.03 | 52.45 |
|      signboard      | 28.19 | 35.31 |
|   chest of drawers  | 36.38 | 54.67 |
|       counter       | 24.89 | 29.89 |
|         sand        |  33.0 | 44.61 |
|         sink        | 65.61 | 70.55 |
|      skyscraper     |  65.1 | 85.32 |
|      fireplace      | 67.98 | 74.34 |
|     refrigerator    | 53.83 | 58.55 |
|      grandstand     | 29.64 | 84.16 |
|         path        | 20.64 | 27.87 |
|        stairs       | 30.18 | 40.02 |
|        runway       | 67.65 | 82.78 |
|         case        | 55.92 | 65.86 |
|      pool table     | 90.03 | 95.12 |
|        pillow       | 50.82 | 62.59 |
|     screen door     | 37.98 |  38.5 |
|       stairway      |  26.5 | 32.51 |
|        river        |  9.97 | 15.11 |
|        bridge       | 22.58 | 26.35 |
|       bookcase      | 21.68 | 27.33 |
|        blind        |  26.2 | 27.54 |
|     coffee table    | 56.37 | 77.36 |
|        toilet       | 80.78 | 87.24 |
|        flower       | 32.82 | 55.87 |
|         book        | 41.79 | 53.87 |
|         hill        | 11.18 | 19.87 |
|        bench        |  39.1 | 45.76 |
|      countertop     | 48.14 | 60.44 |
|        stove        | 65.59 | 72.35 |
|         palm        | 39.83 | 46.48 |
|    kitchen island   | 34.45 |  46.0 |
|       computer      | 49.08 | 53.41 |
|     swivel chair    | 37.91 | 48.45 |
|         boat        | 27.08 | 28.09 |
|         bar         | 26.83 | 28.79 |
|    arcade machine   | 30.72 |  47.7 |
|        hovel        | 22.32 | 36.02 |
|         bus         | 87.33 | 89.51 |
|        towel        | 45.51 | 64.03 |
|        light        | 42.85 | 46.85 |
|        truck        | 24.25 | 34.12 |
|        tower        | 12.72 | 19.17 |
|      chandelier     | 61.96 |  74.8 |
|        awning       | 19.31 | 25.07 |
|     streetlight     | 19.57 | 24.52 |
|        booth        | 28.33 | 28.73 |
| television receiver | 57.88 | 62.02 |
|       airplane      | 53.89 | 58.36 |
|      dirt track     |  2.63 | 10.29 |
|       apparel       | 28.63 | 49.97 |
|         pole        | 16.67 | 20.77 |
|         land        |  1.36 |  2.83 |
|      bannister      |  2.57 |  2.92 |
|      escalator      | 19.48 | 20.17 |
|       ottoman       | 43.18 | 56.77 |
|        bottle       | 21.51 | 24.68 |
|        buffet       | 28.54 | 30.13 |
|        poster       | 21.91 |  37.3 |
|        stage        | 13.28 | 16.59 |
|         van         | 37.28 | 52.11 |
|         ship        |  3.7  |  5.6  |
|       fountain      | 11.14 | 12.09 |
|    conveyer belt    | 55.29 | 58.63 |
|        canopy       | 13.68 | 14.46 |
|        washer       | 57.13 | 57.39 |
|      plaything      | 19.55 | 32.13 |
|    swimming pool    | 48.37 | 82.62 |
|        stool        | 40.43 | 50.25 |
|        barrel       | 49.64 | 65.07 |
|        basket       | 21.09 | 25.08 |
|      waterfall      | 37.01 | 52.55 |
|         tent        | 95.03 | 96.84 |
|         bag         |  1.43 |  1.58 |
|       minibike      |  63.0 | 71.37 |
|        cradle       | 71.61 | 92.51 |
|         oven        | 31.55 |  33.5 |
|         ball        | 37.92 | 48.91 |
|         food        | 43.73 | 52.56 |
|         step        |  3.34 |  3.39 |
|         tank        | 29.41 | 30.17 |
|      trade name     | 14.85 |  15.6 |
|      microwave      | 57.46 | 59.72 |
|         pot         | 35.08 | 37.78 |
|        animal       | 56.71 | 59.24 |
|       bicycle       | 51.38 | 67.49 |
|         lake        | 73.14 | 79.39 |
|      dishwasher     | 42.98 | 48.61 |
|        screen       | 52.72 | 63.39 |
|       blanket       |  1.9  |  2.79 |
|      sculpture      |  23.8 | 28.44 |
|         hood        | 35.14 | 36.03 |
|        sconce       | 39.15 | 46.46 |
|         vase        |  17.8 | 20.06 |
|    traffic light    | 24.42 | 31.49 |
|         tray        |  6.29 |  9.69 |
|        ashcan       | 31.65 | 36.32 |
|         fan         |  48.6 | 56.25 |
|         pier        | 14.67 | 15.07 |
|      crt screen     | 10.37 | 23.04 |
|        plate        | 26.39 | 28.56 |
|       monitor       | 56.57 | 69.65 |
|    bulletin board   | 17.11 | 19.26 |
|        shower       |  0.35 |  1.21 |
|       radiator      | 41.64 | 49.06 |
|        glass        |  3.29 |  3.31 |
|        clock        | 22.08 |  24.2 |
|         flag        | 33.97 | 36.13 |
+---------------------+-------+-------+
10/06 05:14:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.5500  mIoU: 40.5700  mAcc: 49.7800  data_time: 0.0018  time: 6.4696
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
10/06 05:16:41 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 710203621
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 710203621
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 05:16:42 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/motion_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 05:17:36,291 - mmseg - INFO - using core type: DCNv3
2024-10-06 05:17:36,291 - mmseg - INFO - using activation layer: GELU
2024-10-06 05:17:36,291 - mmseg - INFO - using main norm layer: LN
2024-10-06 05:17:36,291 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 05:17:36,291 - mmseg - INFO - level2_post_norm: False
2024-10-06 05:17:36,291 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 05:17:36,291 - mmseg - INFO - res_post_norm: False
2024-10-06 05:17:36,291 - mmseg - INFO - use_dcn_v4_op: False
10/06 05:17:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 05:17:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 05:17:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 05:17:48 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 05:20:11 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:33:21  time: 1.2275  data_time: 0.0016  memory: 16851  
10/06 05:21:15 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:05:32  time: 1.3553  data_time: 0.0017  memory: 16820  
10/06 05:22:05 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:52:52  time: 0.9982  data_time: 0.0016  memory: 9701  
10/06 05:23:03 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:47:15  time: 1.1003  data_time: 0.0016  memory: 11263  
10/06 05:23:59 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:43:16  time: 0.9423  data_time: 0.0015  memory: 11241  
10/06 05:24:51 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:39:59  time: 0.8657  data_time: 0.0016  memory: 11267  
10/06 05:25:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:37:34  time: 0.9377  data_time: 0.0015  memory: 11274  
10/06 05:26:38 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:35:21  time: 1.0220  data_time: 0.0015  memory: 11243  
10/06 05:27:19 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:32:49  time: 0.8938  data_time: 0.0015  memory: 9517  
10/06 05:28:04 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:30:47  time: 0.7783  data_time: 0.0015  memory: 8809  
10/06 05:28:50 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:29:06  time: 1.0341  data_time: 0.0016  memory: 9892  
10/06 05:29:32 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:27:24  time: 0.9613  data_time: 0.0017  memory: 9701  
10/06 05:30:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:26:03  time: 1.0166  data_time: 0.0015  memory: 9705  
10/06 05:31:13 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:24:56  time: 0.8602  data_time: 0.0017  memory: 11272  
10/06 05:32:07 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:23:51  time: 1.3480  data_time: 0.0015  memory: 9887  
10/06 05:32:47 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:22:28  time: 0.7840  data_time: 0.0017  memory: 9703  
10/06 05:33:27 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:21:10  time: 0.7835  data_time: 0.0017  memory: 693  
10/06 05:34:08 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:19:57  time: 0.8344  data_time: 0.0015  memory: 8958  
10/06 05:34:58 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:18:58  time: 1.0818  data_time: 0.0016  memory: 10823  
10/06 05:35:42 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:17:53  time: 0.7722  data_time: 0.0015  memory: 10825  
10/06 05:36:30 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:16:55  time: 1.2179  data_time: 0.0015  memory: 10634  
10/06 05:37:16 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:15:55  time: 0.7950  data_time: 0.0016  memory: 9889  
10/06 05:37:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:14:54  time: 0.9439  data_time: 0.0015  memory: 8819  
10/06 05:38:40 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:13:54  time: 0.8041  data_time: 0.0016  memory: 1883  
10/06 05:39:23 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:57  time: 0.9223  data_time: 0.0015  memory: 11263  
10/06 05:40:01 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:58  time: 0.7974  data_time: 0.0015  memory: 695  
10/06 05:40:44 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:11:02  time: 0.7545  data_time: 0.0015  memory: 8622  
10/06 05:41:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:10:09  time: 1.0548  data_time: 0.0015  memory: 10447  
10/06 05:42:12 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:09:15  time: 1.0004  data_time: 0.0015  memory: 8958  
10/06 05:42:51 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:08:21  time: 0.7370  data_time: 0.0015  memory: 694  
10/06 05:43:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:07:29  time: 0.8320  data_time: 0.0015  memory: 10635  
10/06 05:44:12 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:35  time: 0.7379  data_time: 0.0016  memory: 692  
10/06 05:44:56 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:45  time: 0.7545  data_time: 0.0014  memory: 11273  
10/06 05:45:42 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:55  time: 0.8215  data_time: 0.0017  memory: 9145  
10/06 05:46:26 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:05  time: 0.8410  data_time: 0.0020  memory: 10265  
10/06 05:47:06 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:15  time: 0.7834  data_time: 0.0016  memory: 8624  
10/06 05:47:44 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:25  time: 0.7602  data_time: 0.0016  memory: 642  
10/06 05:48:23 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:36  time: 0.7858  data_time: 0.0015  memory: 8660  
10/06 05:49:08 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:48  time: 0.8004  data_time: 0.0015  memory: 8823  
10/06 05:49:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7047  data_time: 0.0014  memory: 8584  
10/06 05:49:51 - mmengine - INFO - per class results:
10/06 05:49:51 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.77 | 85.58 |
|       building      | 78.18 | 92.93 |
|         sky         | 93.31 | 96.06 |
|        floor        |  77.1 | 89.16 |
|         tree        | 70.91 | 85.28 |
|       ceiling       | 82.07 | 91.31 |
|         road        | 80.34 | 86.76 |
|         bed         | 88.01 | 95.26 |
|      windowpane     | 58.14 | 73.09 |
|        grass        | 63.42 | 83.77 |
|       cabinet       | 57.72 | 70.57 |
|       sidewalk      | 63.42 | 82.71 |
|        person       | 74.55 | 89.31 |
|        earth        | 28.99 |  39.3 |
|         door        | 44.75 | 57.42 |
|        table        | 55.41 | 75.04 |
|       mountain      | 60.31 | 69.92 |
|        plant        |  48.3 | 63.81 |
|       curtain       | 65.38 | 82.42 |
|        chair        | 52.45 | 69.14 |
|         car         |  80.9 | 91.88 |
|        water        | 55.17 | 71.45 |
|       painting      | 66.04 |  82.3 |
|         sofa        | 60.06 | 79.41 |
|        shelf        | 40.66 | 64.71 |
|        house        | 28.85 | 35.09 |
|         sea         | 53.78 | 68.41 |
|        mirror       | 62.53 | 73.78 |
|         rug         | 53.49 | 67.05 |
|        field        | 21.64 | 35.39 |
|       armchair      |  40.6 | 56.16 |
|         seat        | 60.09 | 76.13 |
|        fence        | 33.39 | 49.61 |
|         desk        |  43.6 | 61.24 |
|         rock        | 44.89 | 71.01 |
|       wardrobe      | 51.34 | 68.55 |
|         lamp        | 54.61 | 70.76 |
|       bathtub       | 75.24 | 81.06 |
|       railing       | 28.84 | 42.84 |
|       cushion       | 51.88 | 61.05 |
|         base        | 24.29 | 35.75 |
|         box         | 18.65 |  24.3 |
|        column       | 43.09 | 53.55 |
|      signboard      | 32.52 | 43.84 |
|   chest of drawers  | 37.32 | 51.79 |
|       counter       |  37.1 | 47.92 |
|         sand        | 33.65 | 50.62 |
|         sink        | 66.48 | 76.43 |
|      skyscraper     | 42.68 | 51.25 |
|      fireplace      | 72.46 | 87.48 |
|     refrigerator    | 72.15 | 84.69 |
|      grandstand     | 43.37 | 73.92 |
|         path        | 19.09 |  30.7 |
|        stairs       |  22.5 | 26.45 |
|        runway       | 71.67 |  94.9 |
|         case        | 52.06 | 61.84 |
|      pool table     | 90.57 | 95.21 |
|        pillow       | 56.99 | 72.74 |
|     screen door     | 61.85 | 81.51 |
|       stairway      | 21.69 | 27.43 |
|        river        | 10.71 | 21.77 |
|        bridge       | 49.33 | 58.61 |
|       bookcase      |  35.1 | 48.98 |
|        blind        | 33.38 | 40.81 |
|     coffee table    | 53.46 | 78.59 |
|        toilet       | 82.89 | 89.38 |
|        flower       | 37.03 | 43.29 |
|         book        | 43.83 | 58.67 |
|         hill        |  7.77 | 11.57 |
|        bench        | 45.79 | 55.05 |
|      countertop     | 58.23 | 74.78 |
|        stove        | 70.97 | 83.28 |
|         palm        | 41.19 | 51.92 |
|    kitchen island   |  34.1 | 53.49 |
|       computer      | 58.51 | 65.89 |
|     swivel chair    |  43.6 | 62.21 |
|         boat        | 39.19 | 47.53 |
|         bar         |  33.1 | 40.72 |
|    arcade machine   | 22.34 | 23.92 |
|        hovel        |  20.9 | 30.82 |
|         bus         | 85.24 | 92.67 |
|        towel        | 52.35 | 64.95 |
|        light        | 48.07 |  55.2 |
|        truck        | 29.67 |  39.9 |
|        tower        | 17.81 | 28.27 |
|      chandelier     | 62.89 | 73.89 |
|        awning       | 23.99 | 31.52 |
|     streetlight     | 20.65 | 27.13 |
|        booth        | 40.96 | 42.08 |
| television receiver | 63.46 |  72.0 |
|       airplane      | 56.11 | 64.06 |
|      dirt track     |  4.71 | 10.12 |
|       apparel       | 28.69 |  43.8 |
|         pole        | 20.15 | 26.65 |
|         land        |  3.33 |  4.13 |
|      bannister      |  9.87 | 11.95 |
|      escalator      | 21.91 | 26.35 |
|       ottoman       | 42.85 | 55.92 |
|        bottle       |  20.4 | 23.82 |
|        buffet       | 31.94 | 34.88 |
|        poster       |  29.3 | 41.72 |
|        stage        | 12.69 | 15.52 |
|         van         | 40.24 | 48.76 |
|         ship        |  3.93 |  6.26 |
|       fountain      | 12.58 | 12.64 |
|    conveyer belt    | 70.85 | 85.02 |
|        canopy       | 22.04 |  24.9 |
|        washer       | 69.73 | 73.27 |
|      plaything      | 19.28 | 25.08 |
|    swimming pool    | 32.76 |  49.2 |
|        stool        | 38.37 | 56.44 |
|        barrel       | 40.25 | 65.05 |
|        basket       | 26.26 | 36.54 |
|      waterfall      | 38.47 | 52.05 |
|         tent        | 94.62 | 97.35 |
|         bag         |  6.97 | 10.38 |
|       minibike      | 55.27 | 68.26 |
|        cradle       | 75.97 | 94.18 |
|         oven        | 37.61 | 43.96 |
|         ball        | 37.98 | 46.47 |
|         food        | 38.39 | 41.62 |
|         step        |  2.81 |  3.0  |
|         tank        | 42.95 | 44.25 |
|      trade name     | 20.57 | 23.13 |
|      microwave      | 71.72 | 79.37 |
|         pot         | 43.72 | 50.46 |
|        animal       | 57.53 | 60.52 |
|       bicycle       | 42.48 | 77.43 |
|         lake        | 62.82 | 74.57 |
|      dishwasher     | 60.69 | 68.06 |
|        screen       | 70.72 |  85.5 |
|       blanket       |  9.92 | 13.01 |
|      sculpture      |  45.4 | 54.64 |
|         hood        | 57.24 | 61.81 |
|        sconce       |  43.3 | 52.96 |
|         vase        | 21.49 | 24.42 |
|    traffic light    | 25.26 | 42.67 |
|         tray        |  6.34 | 12.92 |
|        ashcan       | 32.07 | 51.23 |
|         fan         | 57.86 | 73.92 |
|         pier        | 50.91 | 61.89 |
|      crt screen     | 13.82 |  19.0 |
|        plate        | 51.66 |  66.0 |
|       monitor       | 42.42 | 64.31 |
|    bulletin board   | 31.37 | 39.85 |
|        shower       |  6.4  |  8.14 |
|       radiator      | 51.39 | 56.88 |
|        glass        |  8.62 |  8.92 |
|        clock        | 22.42 | 25.46 |
|         flag        | 29.61 | 31.78 |
+---------------------+-------+-------+
10/06 05:49:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.5100  mIoU: 44.2500  mAcc: 55.0700  data_time: 0.0020  time: 0.9614
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
10/06 05:49:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 72355567
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 72355567
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 05:49:55 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/zoom_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 05:49:59,206 - mmseg - INFO - using core type: DCNv3
2024-10-06 05:49:59,206 - mmseg - INFO - using activation layer: GELU
2024-10-06 05:49:59,206 - mmseg - INFO - using main norm layer: LN
2024-10-06 05:49:59,206 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 05:49:59,206 - mmseg - INFO - level2_post_norm: False
2024-10-06 05:49:59,206 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 05:49:59,206 - mmseg - INFO - res_post_norm: False
2024-10-06 05:49:59,206 - mmseg - INFO - use_dcn_v4_op: False
10/06 05:50:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 05:50:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 05:50:02 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 05:50:03 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 05:51:20 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:49:44  time: 1.1300  data_time: 0.0017  memory: 16851  
10/06 05:52:17 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:42:19  time: 1.2537  data_time: 0.0017  memory: 16820  
10/06 05:53:03 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:36:59  time: 0.9264  data_time: 0.0016  memory: 9701  
10/06 05:53:56 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:34:57  time: 1.0076  data_time: 0.0015  memory: 11263  
10/06 05:54:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:33:09  time: 0.8374  data_time: 0.0015  memory: 11241  
10/06 05:55:35 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:31:20  time: 0.7552  data_time: 0.0016  memory: 11267  
10/06 05:56:25 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:30:01  time: 0.8485  data_time: 0.0015  memory: 11274  
10/06 05:57:12 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:28:35  time: 0.9039  data_time: 0.0014  memory: 11243  
10/06 05:57:49 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:26:43  time: 0.7748  data_time: 0.0015  memory: 9517  
10/06 05:58:27 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:25:12  time: 0.6982  data_time: 0.0015  memory: 8809  
10/06 05:59:09 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:23:58  time: 0.9152  data_time: 0.0016  memory: 9892  
10/06 05:59:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:22:43  time: 0.8852  data_time: 0.0016  memory: 9701  
10/06 06:00:30 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:21:41  time: 0.9091  data_time: 0.0014  memory: 9705  
10/06 06:01:16 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:20:50  time: 0.7637  data_time: 0.0016  memory: 11272  
10/06 06:02:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:19:59  time: 1.2124  data_time: 0.0015  memory: 9887  
10/06 06:02:39 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:18:53  time: 0.7336  data_time: 0.0016  memory: 9703  
10/06 06:03:16 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:17:52  time: 0.7428  data_time: 0.0017  memory: 693  
10/06 06:03:53 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:16:54  time: 0.7667  data_time: 0.0015  memory: 8958  
10/06 06:04:39 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:16:07  time: 0.9775  data_time: 0.0015  memory: 10823  
10/06 06:05:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:15:14  time: 0.7059  data_time: 0.0015  memory: 10825  
10/06 06:06:02 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:14:27  time: 1.1013  data_time: 0.0015  memory: 10634  
10/06 06:06:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:13:38  time: 0.7059  data_time: 0.0015  memory: 9889  
10/06 06:07:22 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:12:47  time: 0.8526  data_time: 0.0015  memory: 8819  
10/06 06:07:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:11:56  time: 0.7135  data_time: 0.0015  memory: 1883  
10/06 06:08:37 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:11:08  time: 0.8295  data_time: 0.0015  memory: 11263  
10/06 06:09:11 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:10:17  time: 0.7260  data_time: 0.0015  memory: 695  
10/06 06:09:47 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:09:30  time: 0.6644  data_time: 0.0015  memory: 8622  
10/06 06:10:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:08:45  time: 0.9357  data_time: 0.0015  memory: 10447  
10/06 06:11:07 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:07:59  time: 0.8829  data_time: 0.0015  memory: 8958  
10/06 06:11:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:13  time: 0.6683  data_time: 0.0015  memory: 694  
10/06 06:12:22 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:28  time: 0.7364  data_time: 0.0015  memory: 10635  
10/06 06:12:57 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:05:43  time: 0.7248  data_time: 0.0016  memory: 692  
10/06 06:13:38 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:00  time: 0.6804  data_time: 0.0015  memory: 11273  
10/06 06:14:19 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:16  time: 0.7301  data_time: 0.0016  memory: 9145  
10/06 06:14:59 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:33  time: 0.7276  data_time: 0.0015  memory: 10265  
10/06 06:15:34 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:50  time: 0.7411  data_time: 0.0016  memory: 8624  
10/06 06:16:11 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:07  time: 0.7290  data_time: 0.0016  memory: 642  
10/06 06:16:47 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:24  time: 0.6950  data_time: 0.0015  memory: 8660  
10/06 06:17:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:42  time: 0.6899  data_time: 0.0015  memory: 8823  
10/06 06:18:05 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.6418  data_time: 0.0014  memory: 8584  
10/06 06:18:05 - mmengine - INFO - per class results:
10/06 06:18:05 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  54.8 | 84.33 |
|       building      | 63.98 | 84.02 |
|         sky         | 84.02 | 88.94 |
|        floor        | 51.32 | 82.96 |
|         tree        | 34.15 | 37.42 |
|       ceiling       | 59.91 | 88.24 |
|         road        | 41.87 | 46.31 |
|         bed         | 71.16 | 87.02 |
|      windowpane     | 36.49 | 45.81 |
|        grass        |  43.1 | 56.55 |
|       cabinet       | 42.22 | 53.49 |
|       sidewalk      | 22.81 | 41.81 |
|        person       | 53.62 | 72.28 |
|        earth        | 10.81 | 13.58 |
|         door        | 20.37 | 24.72 |
|        table        | 38.16 | 55.15 |
|       mountain      | 34.02 |  38.7 |
|        plant        | 23.11 | 39.17 |
|       curtain       | 34.12 |  57.9 |
|        chair        | 30.73 | 39.94 |
|         car         | 59.87 | 74.19 |
|        water        | 25.55 | 37.71 |
|       painting      | 47.36 | 66.54 |
|         sofa        |  44.5 | 67.14 |
|        shelf        | 20.31 | 29.28 |
|        house        | 15.27 | 17.63 |
|         sea         | 34.41 | 36.31 |
|        mirror       | 44.29 | 50.32 |
|         rug         | 23.76 | 24.83 |
|        field        | 13.68 | 46.69 |
|       armchair      | 20.02 | 28.06 |
|         seat        | 28.55 | 44.44 |
|        fence        |  9.99 | 16.44 |
|         desk        | 27.58 | 32.18 |
|         rock        | 25.97 | 29.49 |
|       wardrobe      | 26.85 | 37.97 |
|         lamp        | 35.64 | 47.65 |
|       bathtub       | 60.93 |  71.9 |
|       railing       | 10.86 | 15.51 |
|       cushion       | 20.69 | 22.72 |
|         base        |  7.44 |  8.42 |
|         box         |  1.97 |  2.22 |
|        column       | 20.24 | 23.56 |
|      signboard      | 17.85 |  21.6 |
|   chest of drawers  | 27.97 | 33.33 |
|       counter       | 16.03 | 25.77 |
|         sand        | 22.47 | 24.57 |
|         sink        | 51.33 | 61.54 |
|      skyscraper     | 34.69 | 45.75 |
|      fireplace      | 52.65 | 61.36 |
|     refrigerator    | 45.34 | 53.64 |
|      grandstand     | 34.97 | 53.01 |
|         path        |  2.42 |  2.85 |
|        stairs       |  0.36 |  0.4  |
|        runway       | 52.43 | 93.57 |
|         case        | 18.83 | 28.37 |
|      pool table     | 76.51 |  84.4 |
|        pillow       | 39.11 | 55.71 |
|     screen door     | 39.88 | 46.49 |
|       stairway      |  6.19 |  6.35 |
|        river        |  6.04 | 12.34 |
|        bridge       | 21.82 | 25.38 |
|       bookcase      | 19.59 | 24.53 |
|        blind        | 18.54 |  25.3 |
|     coffee table    | 35.94 | 46.56 |
|        toilet       | 64.39 | 73.58 |
|        flower       | 15.87 | 17.91 |
|         book        | 28.87 | 38.99 |
|         hill        |  4.23 |  8.45 |
|        bench        | 28.43 | 36.21 |
|      countertop     | 41.95 | 54.43 |
|        stove        | 54.81 | 61.94 |
|         palm        | 19.06 | 41.97 |
|    kitchen island   | 33.63 | 49.87 |
|       computer      | 43.27 | 48.74 |
|     swivel chair    | 16.94 | 20.69 |
|         boat        |  3.08 |  3.47 |
|         bar         | 10.78 | 12.67 |
|    arcade machine   |  3.98 |  7.31 |
|        hovel        |  5.99 |  6.07 |
|         bus         | 62.86 | 71.98 |
|        towel        | 25.49 | 31.07 |
|        light        | 18.97 | 23.26 |
|        truck        |  2.13 |  2.36 |
|        tower        | 29.99 | 37.01 |
|      chandelier     | 28.85 | 31.66 |
|        awning       |  1.89 |  1.98 |
|     streetlight     |  2.45 |  2.57 |
|        booth        |  8.82 |  8.9  |
| television receiver | 39.89 | 49.38 |
|       airplane      | 40.89 | 58.34 |
|      dirt track     |  4.23 | 12.56 |
|       apparel       |  8.87 | 11.81 |
|         pole        |  2.84 |  2.95 |
|         land        |  0.48 |  0.55 |
|      bannister      |  0.82 |  1.14 |
|      escalator      | 12.73 | 35.11 |
|       ottoman       | 21.87 | 25.91 |
|        bottle       |  9.3  |  9.78 |
|        buffet       |  24.4 | 26.16 |
|        poster       | 12.04 |  18.3 |
|        stage        |  6.47 | 13.73 |
|         van         | 16.39 | 17.21 |
|         ship        |  1.57 |  2.39 |
|       fountain      |  0.26 |  0.28 |
|    conveyer belt    | 32.53 | 44.88 |
|        canopy       |  1.49 |  1.5  |
|        washer       | 66.72 | 72.09 |
|      plaything      | 12.98 | 15.49 |
|    swimming pool    | 21.02 |  30.0 |
|        stool        | 17.88 | 21.01 |
|        barrel       | 14.33 | 22.37 |
|        basket       |  6.84 |  7.74 |
|      waterfall      |  14.9 | 37.73 |
|         tent        | 70.97 | 87.56 |
|         bag         |  1.24 |  1.65 |
|       minibike      | 40.58 | 52.63 |
|        cradle       | 60.12 | 78.58 |
|         oven        | 20.02 | 27.03 |
|         ball        | 19.59 | 25.64 |
|         food        | 11.15 | 11.41 |
|         step        |  6.11 |  9.2  |
|         tank        | 18.37 | 18.76 |
|      trade name     | 14.04 | 15.08 |
|      microwave      | 28.89 | 31.69 |
|         pot         |  9.85 | 10.49 |
|        animal       | 44.33 | 47.69 |
|       bicycle       | 12.61 | 14.56 |
|         lake        | 11.43 | 13.28 |
|      dishwasher     | 29.15 | 37.64 |
|        screen       | 43.17 | 76.47 |
|       blanket       |  2.09 |  2.45 |
|      sculpture      |  5.26 |  7.18 |
|         hood        | 34.83 | 39.99 |
|        sconce       | 16.08 | 21.21 |
|         vase        | 12.73 | 17.25 |
|    traffic light    |  6.69 |  7.0  |
|         tray        |  1.72 |  2.12 |
|        ashcan       | 11.78 |  12.9 |
|         fan         | 28.83 |  38.9 |
|         pier        |  6.05 |  6.18 |
|      crt screen     |  3.77 |  4.35 |
|        plate        | 21.57 | 27.19 |
|       monitor       | 30.76 | 32.27 |
|    bulletin board   | 11.77 | 13.09 |
|        shower       |  0.35 |  1.25 |
|       radiator      | 28.09 | 37.13 |
|        glass        |  0.89 |  0.93 |
|        clock        |  5.38 |  5.68 |
|         flag        |  8.89 |  9.51 |
+---------------------+-------+-------+
10/06 06:18:05 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 64.3100  mIoU: 24.9700  mAcc: 32.5300  data_time: 0.0017  time: 0.8409
Finished processing corruption type: zoom_blur
Processing corruption type: snow
10/06 06:18:08 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 187138035
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 187138035
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:18:10 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/snow'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:18:13,365 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:18:13,365 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:18:13,365 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:18:13,365 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 06:18:13,365 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:18:13,365 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:18:13,365 - mmseg - INFO - res_post_norm: False
2024-10-06 06:18:13,365 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:18:14 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:18:15 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:18:16 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:18:17 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:19:13 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:49  time: 0.6806  data_time: 0.0016  memory: 16851  
10/06 06:19:48 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:28:47  time: 0.8060  data_time: 0.0016  memory: 16820  
10/06 06:20:14 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:53  time: 0.5029  data_time: 0.0016  memory: 9701  
10/06 06:20:45 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:08  time: 0.5686  data_time: 0.0015  memory: 11263  
10/06 06:21:16 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:47  time: 0.4276  data_time: 0.0015  memory: 11241  
10/06 06:21:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:23  time: 0.3091  data_time: 0.0016  memory: 11267  
10/06 06:22:12 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:26  time: 0.4531  data_time: 0.0015  memory: 11274  
10/06 06:22:38 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:22  time: 0.4806  data_time: 0.0016  memory: 11243  
10/06 06:22:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:59  time: 0.3968  data_time: 0.0015  memory: 9517  
10/06 06:23:14 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:49  time: 0.3040  data_time: 0.0015  memory: 8809  
10/06 06:23:33 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:52  time: 0.4848  data_time: 0.0016  memory: 9892  
10/06 06:23:51 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:58  time: 0.4669  data_time: 0.0017  memory: 9701  
10/06 06:24:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:18  time: 0.4976  data_time: 0.0014  memory: 9705  
10/06 06:24:38 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:46  time: 0.3209  data_time: 0.0016  memory: 11272  
10/06 06:25:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:16  time: 0.7969  data_time: 0.0015  memory: 9887  
10/06 06:25:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:33  time: 0.3100  data_time: 0.0016  memory: 9703  
10/06 06:25:35 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:51  time: 0.3163  data_time: 0.0016  memory: 693  
10/06 06:25:53 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:16  time: 0.3905  data_time: 0.0015  memory: 8958  
10/06 06:26:18 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:50  time: 0.5707  data_time: 0.0016  memory: 10823  
10/06 06:26:37 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:19  time: 0.3009  data_time: 0.0015  memory: 10825  
10/06 06:26:59 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:52  time: 0.6684  data_time: 0.0015  memory: 10634  
10/06 06:27:20 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:23  time: 0.3043  data_time: 0.0016  memory: 9889  
10/06 06:27:38 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:53  time: 0.4305  data_time: 0.0015  memory: 8819  
10/06 06:27:53 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:23  time: 0.3036  data_time: 0.0015  memory: 1883  
10/06 06:28:11 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:56  time: 0.4186  data_time: 0.0015  memory: 11263  
10/06 06:28:26 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:27  time: 0.3042  data_time: 0.0015  memory: 695  
10/06 06:28:42 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:00  time: 0.2805  data_time: 0.0015  memory: 8622  
10/06 06:29:04 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:37  time: 0.4996  data_time: 0.0015  memory: 10447  
10/06 06:29:21 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:11  time: 0.4615  data_time: 0.0015  memory: 8958  
10/06 06:29:36 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:46  time: 0.2861  data_time: 0.0014  memory: 694  
10/06 06:29:54 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:22  time: 0.3243  data_time: 0.0015  memory: 10635  
10/06 06:30:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:57  time: 0.3011  data_time: 0.0016  memory: 692  
10/06 06:30:29 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:35  time: 0.2840  data_time: 0.0015  memory: 11273  
10/06 06:30:48 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:12  time: 0.3034  data_time: 0.0016  memory: 9145  
10/06 06:31:07 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:49  time: 0.3014  data_time: 0.0014  memory: 10265  
10/06 06:31:23 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:27  time: 0.3026  data_time: 0.0016  memory: 8624  
10/06 06:31:39 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:04  time: 0.3115  data_time: 0.0017  memory: 642  
10/06 06:31:55 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:43  time: 0.3127  data_time: 0.0015  memory: 8660  
10/06 06:32:14 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.2996  data_time: 0.0015  memory: 8823  
10/06 06:32:32 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2779  data_time: 0.0014  memory: 8584  
10/06 06:32:32 - mmengine - INFO - per class results:
10/06 06:32:32 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 63.51 | 87.56 |
|       building      | 73.74 | 88.21 |
|         sky         | 84.85 |  88.0 |
|        floor        | 56.82 | 92.46 |
|         tree        | 68.37 | 85.05 |
|       ceiling       | 69.64 | 82.42 |
|         road        | 48.12 |  50.1 |
|         bed         |  77.7 | 83.86 |
|      windowpane     |  52.5 | 64.91 |
|        grass        | 57.94 |  85.9 |
|       cabinet       | 42.84 | 53.88 |
|       sidewalk      | 37.21 | 68.95 |
|        person       | 69.92 | 86.17 |
|        earth        |  22.8 | 29.03 |
|         door        | 19.16 | 22.25 |
|        table        | 44.64 | 63.74 |
|       mountain      | 42.05 | 48.49 |
|        plant        | 46.51 |  55.8 |
|       curtain       | 53.42 | 67.39 |
|        chair        | 43.27 | 55.86 |
|         car         | 79.23 | 89.98 |
|        water        | 37.64 | 65.11 |
|       painting      | 61.32 | 77.59 |
|         sofa        | 55.56 | 70.11 |
|        shelf        | 32.58 | 62.45 |
|        house        | 13.91 |  15.9 |
|         sea         | 25.45 | 29.62 |
|        mirror       | 50.14 |  61.9 |
|         rug         | 33.56 |  34.9 |
|        field        | 15.86 | 28.26 |
|       armchair      | 31.03 | 43.38 |
|         seat        | 40.85 | 51.74 |
|        fence        |  29.4 | 54.46 |
|         desk        | 23.75 | 25.26 |
|         rock        | 33.09 | 41.12 |
|       wardrobe      | 27.64 | 36.51 |
|         lamp        | 52.68 |  62.1 |
|       bathtub       | 52.16 | 55.76 |
|       railing       | 16.32 | 19.36 |
|       cushion       |  41.3 | 45.52 |
|         base        |  7.29 | 15.47 |
|         box         | 11.35 | 22.13 |
|        column       | 25.02 | 29.49 |
|      signboard      | 29.45 | 40.18 |
|   chest of drawers  | 37.76 | 50.26 |
|       counter       | 18.94 | 23.58 |
|         sand        | 11.73 | 12.01 |
|         sink        | 58.39 | 63.17 |
|      skyscraper     | 24.57 | 33.94 |
|      fireplace      | 57.77 | 64.98 |
|     refrigerator    | 46.69 | 48.12 |
|      grandstand     |  19.6 | 65.48 |
|         path        |  9.33 | 12.01 |
|        stairs       | 13.15 | 16.65 |
|        runway       | 37.75 | 42.02 |
|         case        | 43.25 | 51.68 |
|      pool table     | 82.54 | 84.74 |
|        pillow       | 44.66 | 55.45 |
|     screen door     | 42.98 | 52.07 |
|       stairway      |  9.09 | 13.28 |
|        river        |  2.58 |  3.76 |
|        bridge       | 35.24 | 40.51 |
|       bookcase      |  9.93 | 10.23 |
|        blind        | 14.74 | 16.05 |
|     coffee table    | 54.82 | 71.83 |
|        toilet       | 66.24 | 71.45 |
|        flower       | 29.53 | 36.01 |
|         book        | 38.82 | 45.87 |
|         hill        | 17.93 | 21.13 |
|        bench        | 28.72 | 30.29 |
|      countertop     | 46.54 | 60.08 |
|        stove        | 57.08 | 61.93 |
|         palm        | 41.97 | 57.53 |
|    kitchen island   | 23.23 | 23.75 |
|       computer      | 47.84 | 54.63 |
|     swivel chair    | 24.03 | 24.89 |
|         boat        | 36.96 | 42.21 |
|         bar         | 10.15 | 10.24 |
|    arcade machine   | 22.13 | 23.27 |
|        hovel        |  0.31 |  0.32 |
|         bus         | 73.81 | 95.95 |
|        towel        | 27.31 | 29.43 |
|        light        | 34.74 | 36.77 |
|        truck        | 26.29 | 44.48 |
|        tower        | 22.67 | 41.31 |
|      chandelier     | 49.71 | 57.93 |
|        awning       |  9.73 |  9.92 |
|     streetlight     | 19.79 | 22.94 |
|        booth        | 26.88 | 26.98 |
| television receiver | 32.87 | 36.52 |
|       airplane      | 50.46 | 57.93 |
|      dirt track     |  0.65 |  0.79 |
|       apparel       | 27.42 | 33.74 |
|         pole        | 14.06 | 21.48 |
|         land        |  0.37 |  0.38 |
|      bannister      |  2.79 |  3.05 |
|      escalator      |  9.89 |  10.4 |
|       ottoman       | 22.03 | 26.32 |
|        bottle       | 29.18 | 44.66 |
|        buffet       | 26.49 | 27.38 |
|        poster       | 20.11 | 42.45 |
|        stage        |  4.1  |  5.09 |
|         van         | 31.25 | 39.61 |
|         ship        |  3.86 |  3.98 |
|       fountain      |  3.33 |  3.66 |
|    conveyer belt    | 21.64 | 21.85 |
|        canopy       |  8.7  |  8.88 |
|        washer       | 50.67 | 57.32 |
|      plaything      | 15.83 | 22.85 |
|    swimming pool    | 14.02 | 23.69 |
|        stool        | 22.76 | 24.47 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 22.93 | 32.27 |
|      waterfall      |  17.2 | 19.25 |
|         tent        | 68.21 | 71.15 |
|         bag         |  4.82 |  6.8  |
|       minibike      | 47.06 | 51.94 |
|        cradle       | 65.48 | 83.44 |
|         oven        | 20.12 |  21.2 |
|         ball        |  3.1  |  3.3  |
|         food        | 45.54 | 50.29 |
|         step        |  2.48 |  2.63 |
|         tank        |  0.4  |  0.41 |
|      trade name     |  9.15 |  9.39 |
|      microwave      | 27.75 | 29.34 |
|         pot         | 28.31 | 30.86 |
|        animal       | 43.08 | 44.65 |
|       bicycle       | 47.67 | 71.86 |
|         lake        |  13.6 | 13.76 |
|      dishwasher     | 34.91 | 36.64 |
|        screen       | 45.45 | 66.69 |
|       blanket       |  4.07 |  4.18 |
|      sculpture      | 20.12 | 25.28 |
|         hood        | 27.34 | 27.59 |
|        sconce       | 35.49 | 41.32 |
|         vase        | 29.73 |  39.5 |
|    traffic light    | 26.82 |  32.7 |
|         tray        |  4.12 |  5.96 |
|        ashcan       | 26.73 |  31.6 |
|         fan         | 36.15 | 40.26 |
|         pier        | 23.33 | 23.81 |
|      crt screen     |  0.24 |  0.55 |
|        plate        | 28.73 | 30.86 |
|       monitor       | 44.89 | 58.73 |
|    bulletin board   | 18.52 | 19.68 |
|        shower       |  1.04 |  7.21 |
|       radiator      | 21.69 | 22.91 |
|        glass        |  8.22 |  8.91 |
|        clock        | 11.02 | 14.44 |
|         flag        | 28.52 | 30.38 |
+---------------------+-------+-------+
10/06 06:32:32 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 72.0500  mIoU: 31.4400  mAcc: 38.8500  data_time: 0.0017  time: 0.4273
Finished processing corruption type: snow
Processing corruption type: frost
10/06 06:32:36 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1798959444
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1798959444
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:32:37 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/frost'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:32:41,013 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:32:41,014 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:32:41,014 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:32:41,014 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 06:32:41,014 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:32:41,014 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:32:41,014 - mmseg - INFO - res_post_norm: False
2024-10-06 06:32:41,014 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:32:42 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:32:42 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:32:43 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:32:45 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:33:28 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:28:26  time: 0.4314  data_time: 0.0016  memory: 16851  
10/06 06:33:53 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:39  time: 0.5781  data_time: 0.0017  memory: 16820  
10/06 06:34:07 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:54  time: 0.2631  data_time: 0.0015  memory: 9701  
10/06 06:34:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:21  time: 0.3594  data_time: 0.0015  memory: 11263  
10/06 06:34:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:16  time: 0.2114  data_time: 0.0015  memory: 11241  
10/06 06:35:04 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:13:06  time: 0.0862  data_time: 0.0040  memory: 11267  
10/06 06:35:22 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:20  time: 0.2333  data_time: 0.0015  memory: 11274  
10/06 06:35:37 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:27  time: 0.2511  data_time: 0.0015  memory: 11243  
10/06 06:35:44 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:18  time: 0.1830  data_time: 0.0014  memory: 9517  
10/06 06:35:51 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:19  time: 0.0873  data_time: 0.0015  memory: 8809  
10/06 06:35:59 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:32  time: 0.2509  data_time: 0.0016  memory: 9892  
10/06 06:36:06 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:49  time: 0.2308  data_time: 0.0016  memory: 9701  
10/06 06:36:17 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:20  time: 0.2698  data_time: 0.0014  memory: 9705  
10/06 06:36:30 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:58  time: 0.0936  data_time: 0.0016  memory: 11272  
10/06 06:36:44 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:39  time: 0.5819  data_time: 0.0015  memory: 9887  
10/06 06:36:50 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:08  time: 0.0867  data_time: 0.0017  memory: 9703  
10/06 06:36:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:38  time: 0.0872  data_time: 0.0017  memory: 693  
10/06 06:37:02 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:14  time: 0.1780  data_time: 0.0014  memory: 8958  
10/06 06:37:16 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:59  time: 0.3463  data_time: 0.0016  memory: 10823  
10/06 06:37:24 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:39  time: 0.0759  data_time: 0.0015  memory: 10825  
10/06 06:37:35 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:22  time: 0.4365  data_time: 0.0040  memory: 10634  
10/06 06:37:45 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:05  time: 0.0790  data_time: 0.0016  memory: 9889  
10/06 06:37:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:46  time: 0.2128  data_time: 0.0015  memory: 8819  
10/06 06:37:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:27  time: 0.0881  data_time: 0.0016  memory: 1883  
10/06 06:38:04 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:11  time: 0.2011  data_time: 0.0015  memory: 11263  
10/06 06:38:08 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:54  time: 0.0882  data_time: 0.0015  memory: 695  
10/06 06:38:14 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:38  time: 0.0825  data_time: 0.0015  memory: 8622  
10/06 06:38:25 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:25  time: 0.2737  data_time: 0.0015  memory: 10447  
10/06 06:38:32 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:11  time: 0.2365  data_time: 0.0015  memory: 8958  
10/06 06:38:36 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:57  time: 0.0832  data_time: 0.0015  memory: 694  
10/06 06:38:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:43  time: 0.0842  data_time: 0.0015  memory: 10635  
10/06 06:38:46 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:30  time: 0.0845  data_time: 0.0016  memory: 692  
10/06 06:38:56 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:18  time: 0.0841  data_time: 0.0014  memory: 11273  
10/06 06:39:04 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:06  time: 0.0805  data_time: 0.0016  memory: 9145  
10/06 06:39:12 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:55  time: 0.0904  data_time: 0.0015  memory: 10265  
10/06 06:39:17 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:43  time: 0.0875  data_time: 0.0016  memory: 8624  
10/06 06:39:21 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:32  time: 0.0783  data_time: 0.0016  memory: 642  
10/06 06:39:27 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:21  time: 0.0862  data_time: 0.0015  memory: 8660  
10/06 06:39:35 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0874  data_time: 0.0015  memory: 8823  
10/06 06:39:43 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0756  data_time: 0.0014  memory: 8584  
10/06 06:39:43 - mmengine - INFO - per class results:
10/06 06:39:43 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 67.09 | 88.15 |
|       building      | 79.37 | 90.41 |
|         sky         | 69.12 | 71.35 |
|        floor        | 72.08 | 90.72 |
|         tree        | 65.68 | 87.04 |
|       ceiling       | 70.68 | 79.73 |
|         road        | 76.37 | 82.98 |
|         bed         | 82.36 | 90.46 |
|      windowpane     | 54.28 |  68.0 |
|        grass        | 64.71 | 80.58 |
|       cabinet       |  51.0 | 60.49 |
|       sidewalk      | 57.04 | 72.17 |
|        person       | 75.74 | 87.64 |
|        earth        | 30.15 | 47.95 |
|         door        | 33.35 | 40.57 |
|        table        | 53.35 |  71.9 |
|       mountain      | 22.63 | 68.82 |
|        plant        | 44.86 | 55.73 |
|       curtain       | 56.87 | 69.04 |
|        chair        | 49.76 | 62.64 |
|         car         | 82.37 | 90.84 |
|        water        | 48.28 |  69.3 |
|       painting      | 58.54 | 83.38 |
|         sofa        | 57.18 | 72.52 |
|        shelf        | 34.25 | 47.57 |
|        house        |  38.8 | 51.52 |
|         sea         | 37.74 |  50.2 |
|        mirror       | 58.92 | 66.52 |
|         rug         | 51.27 | 54.73 |
|        field        | 22.48 | 31.85 |
|       armchair      |  33.0 |  51.6 |
|         seat        | 55.37 | 66.97 |
|        fence        | 32.24 | 47.53 |
|         desk        | 36.83 | 46.55 |
|         rock        | 27.29 | 37.36 |
|       wardrobe      | 39.41 | 52.29 |
|         lamp        | 53.47 | 63.89 |
|       bathtub       | 54.02 | 58.88 |
|       railing       | 29.98 | 37.83 |
|       cushion       | 48.33 | 56.63 |
|         base        | 12.49 | 16.77 |
|         box         | 15.43 | 19.97 |
|        column       |  28.0 | 36.39 |
|      signboard      | 33.39 | 45.03 |
|   chest of drawers  | 29.57 | 33.72 |
|       counter       | 27.17 | 37.12 |
|         sand        | 17.69 | 20.74 |
|         sink        | 64.41 | 70.01 |
|      skyscraper     | 39.15 | 47.16 |
|      fireplace      | 66.86 | 81.04 |
|     refrigerator    | 59.93 | 70.12 |
|      grandstand     | 44.03 | 81.24 |
|         path        | 20.12 | 30.55 |
|        stairs       | 30.54 | 42.27 |
|        runway       | 57.36 | 76.05 |
|         case        |  53.1 | 75.53 |
|      pool table     | 89.41 | 92.82 |
|        pillow       | 48.07 | 64.74 |
|     screen door     | 34.47 | 75.72 |
|       stairway      | 28.01 |  36.4 |
|        river        | 11.94 |  17.5 |
|        bridge       | 51.12 | 60.93 |
|       bookcase      | 37.44 | 47.16 |
|        blind        | 12.94 |  14.2 |
|     coffee table    | 58.51 | 73.66 |
|        toilet       | 69.71 | 73.45 |
|        flower       | 42.42 | 57.78 |
|         book        | 45.47 | 62.66 |
|         hill        |  4.13 |  5.33 |
|        bench        | 34.84 | 44.49 |
|      countertop     | 46.47 | 67.25 |
|        stove        | 64.24 |  67.2 |
|         palm        | 39.41 | 58.05 |
|    kitchen island   |  27.9 | 60.57 |
|       computer      | 55.01 | 60.91 |
|     swivel chair    | 29.93 | 32.73 |
|         boat        | 41.43 | 44.67 |
|         bar         | 19.72 | 20.68 |
|    arcade machine   | 27.78 | 28.48 |
|        hovel        | 12.25 | 15.84 |
|         bus         |  87.7 | 91.73 |
|        towel        | 42.82 |  57.4 |
|        light        | 43.93 | 48.15 |
|        truck        | 23.22 | 29.67 |
|        tower        | 11.09 |  17.9 |
|      chandelier     | 58.96 | 75.14 |
|        awning       | 19.64 | 21.85 |
|     streetlight     | 22.29 | 25.91 |
|        booth        | 34.62 | 35.53 |
| television receiver | 41.95 | 45.98 |
|       airplane      | 47.76 | 57.96 |
|      dirt track     |  5.75 | 12.13 |
|       apparel       | 30.24 | 38.64 |
|         pole        | 22.12 | 31.91 |
|         land        |  0.45 |  0.62 |
|      bannister      |  3.75 |  4.39 |
|      escalator      | 18.34 | 18.78 |
|       ottoman       | 35.97 | 42.95 |
|        bottle       | 32.29 | 46.36 |
|        buffet       | 36.07 | 41.05 |
|        poster       | 16.61 | 25.77 |
|        stage        |  7.42 |  7.47 |
|         van         | 37.79 | 49.78 |
|         ship        |  4.02 |  6.04 |
|       fountain      |  2.4  |  2.47 |
|    conveyer belt    | 67.72 | 75.01 |
|        canopy       |  5.53 |  6.6  |
|        washer       | 58.87 | 64.23 |
|      plaything      | 12.64 | 14.05 |
|    swimming pool    | 33.52 | 50.91 |
|        stool        |  34.3 | 45.96 |
|        barrel       | 36.56 | 41.56 |
|        basket       | 24.11 | 32.76 |
|      waterfall      | 35.55 | 39.35 |
|         tent        | 93.13 | 95.38 |
|         bag         |  6.16 |  7.28 |
|       minibike      |  66.7 | 74.21 |
|        cradle       | 74.11 | 90.03 |
|         oven        |  14.0 | 16.79 |
|         ball        | 40.62 | 49.35 |
|         food        | 46.98 | 52.55 |
|         step        |  9.19 | 12.81 |
|         tank        | 21.66 | 21.67 |
|      trade name     | 24.69 | 28.09 |
|      microwave      | 30.33 | 33.07 |
|         pot         | 34.16 | 37.46 |
|        animal       |  54.7 |  57.5 |
|       bicycle       | 49.88 | 71.17 |
|         lake        | 41.31 | 41.97 |
|      dishwasher     | 49.76 | 56.27 |
|        screen       | 63.62 | 73.46 |
|       blanket       |  8.87 | 10.42 |
|      sculpture      | 40.23 | 57.18 |
|         hood        | 41.76 | 46.71 |
|        sconce       | 38.45 |  45.1 |
|         vase        | 31.29 | 44.57 |
|    traffic light    | 27.49 |  33.7 |
|         tray        |  4.6  |  7.19 |
|        ashcan       |  29.9 | 33.78 |
|         fan         | 41.48 | 46.88 |
|         pier        | 35.87 |  40.6 |
|      crt screen     |  5.99 | 11.96 |
|        plate        | 34.74 | 40.16 |
|       monitor       | 14.75 | 15.04 |
|    bulletin board   | 19.16 | 20.88 |
|        shower       |  1.17 |  6.73 |
|       radiator      | 18.71 | 19.73 |
|        glass        |  7.08 |  7.37 |
|        clock        | 14.73 | 16.64 |
|         flag        | 28.97 | 30.83 |
+---------------------+-------+-------+
10/06 06:39:43 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 75.3100  mIoU: 38.4700  mAcc: 47.5500  data_time: 0.0017  time: 0.2091
Finished processing corruption type: frost
Processing corruption type: fog
10/06 06:39:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1492065491
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1492065491
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:39:48 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/fog'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:39:51,289 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:39:51,289 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:39:51,289 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:39:51,289 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 06:39:51,289 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:39:51,289 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:39:51,289 - mmseg - INFO - res_post_norm: False
2024-10-06 06:39:51,289 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:39:52 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:39:52 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:39:54 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:39:55 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:40:45 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:32:16  time: 0.5508  data_time: 0.0016  memory: 16851  
10/06 06:41:16 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:25:29  time: 0.7021  data_time: 0.0016  memory: 16820  
10/06 06:41:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:20:40  time: 0.3898  data_time: 0.0015  memory: 9701  
10/06 06:42:02 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:19:01  time: 0.4749  data_time: 0.0015  memory: 11263  
10/06 06:42:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:50  time: 0.3317  data_time: 0.0015  memory: 11241  
10/06 06:42:51 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:16:34  time: 0.2148  data_time: 0.0016  memory: 11267  
10/06 06:43:15 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:15:42  time: 0.3648  data_time: 0.0014  memory: 11274  
10/06 06:43:36 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:14:44  time: 0.3775  data_time: 0.0014  memory: 11243  
10/06 06:43:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:29  time: 0.3204  data_time: 0.0015  memory: 9517  
10/06 06:44:04 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:26  time: 0.2396  data_time: 0.0015  memory: 8809  
10/06 06:44:18 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:32  time: 0.3766  data_time: 0.0015  memory: 9892  
10/06 06:44:31 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:43  time: 0.3622  data_time: 0.0016  memory: 9701  
10/06 06:44:48 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:08  time: 0.3902  data_time: 0.0014  memory: 9705  
10/06 06:45:08 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:40  time: 0.2152  data_time: 0.0016  memory: 11272  
10/06 06:45:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:14  time: 0.7064  data_time: 0.0015  memory: 9887  
10/06 06:45:40 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:37  time: 0.2068  data_time: 0.0016  memory: 9703  
10/06 06:45:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:00  time: 0.2102  data_time: 0.0016  memory: 693  
10/06 06:46:04 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:31  time: 0.3002  data_time: 0.0014  memory: 8958  
10/06 06:46:24 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:09  time: 0.4622  data_time: 0.0015  memory: 10823  
10/06 06:46:38 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:43  time: 0.2071  data_time: 0.0015  memory: 10825  
10/06 06:46:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:20  time: 0.5554  data_time: 0.0015  memory: 10634  
10/06 06:47:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:56  time: 0.2104  data_time: 0.0015  memory: 9889  
10/06 06:47:25 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:32  time: 0.3291  data_time: 0.0015  memory: 8819  
10/06 06:47:35 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:06  time: 0.2083  data_time: 0.0015  memory: 1883  
10/06 06:47:49 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:44  time: 0.3310  data_time: 0.0014  memory: 11263  
10/06 06:47:59 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:20  time: 0.2077  data_time: 0.0014  memory: 695  
10/06 06:48:11 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:58  time: 0.2066  data_time: 0.0014  memory: 8622  
10/06 06:48:28 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:39  time: 0.3989  data_time: 0.0015  memory: 10447  
10/06 06:48:41 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:19  time: 0.3585  data_time: 0.0014  memory: 8958  
10/06 06:48:52 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:58  time: 0.2064  data_time: 0.0014  memory: 694  
10/06 06:49:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:39  time: 0.2107  data_time: 0.0015  memory: 10635  
10/06 06:49:14 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:19  time: 0.2115  data_time: 0.0016  memory: 692  
10/06 06:49:30 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:01  time: 0.2059  data_time: 0.0014  memory: 11273  
10/06 06:49:45 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:44  time: 0.2011  data_time: 0.0016  memory: 9145  
10/06 06:49:58 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:26  time: 0.2118  data_time: 0.0014  memory: 10265  
10/06 06:50:10 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:08  time: 0.2108  data_time: 0.0016  memory: 8624  
10/06 06:50:21 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:50  time: 0.2073  data_time: 0.0016  memory: 642  
10/06 06:50:33 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:33  time: 0.2096  data_time: 0.0015  memory: 8660  
10/06 06:50:47 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.2065  data_time: 0.0014  memory: 8823  
10/06 06:51:01 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1995  data_time: 0.0014  memory: 8584  
10/06 06:51:01 - mmengine - INFO - per class results:
10/06 06:51:01 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.36 | 88.68 |
|       building      | 82.36 | 92.61 |
|         sky         | 93.97 | 97.14 |
|        floor        |  79.2 | 90.57 |
|         tree        |  72.4 | 88.01 |
|       ceiling       | 83.32 |  91.5 |
|         road        | 83.43 | 89.57 |
|         bed         | 89.14 | 94.99 |
|      windowpane     |  60.8 |  76.6 |
|        grass        | 65.46 | 80.38 |
|       cabinet       | 57.42 |  70.9 |
|       sidewalk      | 66.95 | 83.16 |
|        person       | 78.89 | 91.01 |
|        earth        | 30.37 |  42.1 |
|         door        | 46.75 | 62.54 |
|        table        | 57.28 | 74.36 |
|       mountain      | 58.87 | 73.95 |
|        plant        | 49.15 | 58.84 |
|       curtain       | 71.31 | 82.96 |
|        chair        | 54.59 | 69.24 |
|         car         | 84.14 | 91.53 |
|        water        | 50.27 | 66.92 |
|       painting      | 69.62 | 87.67 |
|         sofa        | 62.51 | 79.68 |
|        shelf        | 41.29 | 59.73 |
|        house        | 43.56 |  57.1 |
|         sea         | 52.35 | 70.59 |
|        mirror       |  63.9 | 71.61 |
|         rug         | 57.44 | 67.17 |
|        field        | 26.42 | 45.71 |
|       armchair      | 39.99 | 57.15 |
|         seat        | 62.54 | 77.86 |
|        fence        | 41.72 | 57.37 |
|         desk        | 44.49 | 60.22 |
|         rock        |  45.6 | 68.94 |
|       wardrobe      | 47.94 | 67.25 |
|         lamp        | 60.52 | 73.97 |
|       bathtub       | 75.64 | 84.31 |
|       railing       |  30.7 | 41.63 |
|       cushion       | 56.13 | 67.33 |
|         base        | 19.13 | 26.16 |
|         box         |  20.5 | 26.48 |
|        column       | 42.18 | 50.75 |
|      signboard      | 35.32 | 48.45 |
|   chest of drawers  |  38.1 | 55.85 |
|       counter       | 38.69 | 51.53 |
|         sand        | 37.59 | 55.73 |
|         sink        | 69.94 | 78.14 |
|      skyscraper     | 65.61 | 82.84 |
|      fireplace      | 74.14 | 86.11 |
|     refrigerator    | 72.73 | 82.47 |
|      grandstand     | 45.38 | 73.18 |
|         path        | 21.96 | 32.48 |
|        stairs       | 32.52 |  42.8 |
|        runway       | 72.11 | 95.87 |
|         case        | 55.11 | 66.68 |
|      pool table     | 91.35 |  95.2 |
|        pillow       | 60.53 | 75.66 |
|     screen door     |  66.5 | 83.08 |
|       stairway      | 25.21 | 29.47 |
|        river        | 10.85 | 22.75 |
|        bridge       | 59.42 | 70.77 |
|       bookcase      | 41.15 | 58.74 |
|        blind        | 33.51 | 38.29 |
|     coffee table    | 54.37 | 80.32 |
|        toilet       | 84.24 | 90.11 |
|        flower       |  42.8 |  59.0 |
|         book        |  47.5 | 65.45 |
|         hill        |  9.31 | 13.51 |
|        bench        | 46.11 | 54.52 |
|      countertop     | 55.75 |  69.4 |
|        stove        | 74.49 | 80.69 |
|         palm        | 51.16 |  71.7 |
|    kitchen island   |  28.6 | 52.93 |
|       computer      | 65.14 | 75.85 |
|     swivel chair    | 45.38 | 56.61 |
|         boat        | 40.81 | 48.61 |
|         bar         | 30.85 | 36.64 |
|    arcade machine   | 22.76 | 24.19 |
|        hovel        | 10.84 | 11.69 |
|         bus         |  90.2 | 94.41 |
|        towel        | 59.61 | 71.63 |
|        light        | 51.17 | 56.54 |
|        truck        | 35.45 | 45.23 |
|        tower        | 21.04 | 33.82 |
|      chandelier     | 66.63 | 79.21 |
|        awning       | 26.79 | 31.51 |
|     streetlight     | 25.54 | 34.68 |
|        booth        | 56.84 | 59.29 |
| television receiver | 65.26 |  74.7 |
|       airplane      | 57.53 | 64.18 |
|      dirt track     |  3.71 |  7.01 |
|       apparel       | 32.77 | 48.95 |
|         pole        | 25.33 | 35.48 |
|         land        |  3.11 |  4.49 |
|      bannister      |  7.06 |  8.72 |
|      escalator      | 20.87 | 22.97 |
|       ottoman       | 49.32 | 64.57 |
|        bottle       | 35.65 | 47.76 |
|        buffet       | 45.55 | 51.35 |
|        poster       | 29.87 | 42.25 |
|        stage        | 12.25 | 14.86 |
|         van         | 43.35 |  61.2 |
|         ship        |  4.56 |  7.33 |
|       fountain      |  4.2  |  4.23 |
|    conveyer belt    | 74.92 |  86.8 |
|        canopy       | 13.99 | 17.68 |
|        washer       |  67.6 | 71.97 |
|      plaything      | 24.73 | 35.12 |
|    swimming pool    | 33.79 |  51.3 |
|        stool        | 40.35 | 54.93 |
|        barrel       | 36.66 | 65.09 |
|        basket       | 31.36 | 39.56 |
|      waterfall      | 51.94 | 64.39 |
|         tent        | 93.99 | 97.93 |
|         bag         |  9.92 |  13.0 |
|       minibike      | 68.57 | 74.74 |
|        cradle       | 77.04 | 93.56 |
|         oven        | 39.29 | 45.69 |
|         ball        |  39.7 | 45.28 |
|         food        | 46.96 | 54.39 |
|         step        | 12.23 | 15.95 |
|         tank        |  48.5 | 49.63 |
|      trade name     | 24.15 |  29.2 |
|      microwave      | 71.05 | 78.94 |
|         pot         | 43.03 | 49.23 |
|        animal       |  60.1 | 63.02 |
|       bicycle       | 54.91 | 74.84 |
|         lake        | 63.29 | 76.33 |
|      dishwasher     | 65.05 | 75.26 |
|        screen       | 70.24 | 82.58 |
|       blanket       | 11.09 |  12.8 |
|      sculpture      | 57.56 | 72.45 |
|         hood        | 53.73 | 56.76 |
|        sconce       | 44.54 | 55.67 |
|         vase        | 32.04 | 46.09 |
|    traffic light    | 26.58 | 43.16 |
|         tray        | 10.03 | 17.78 |
|        ashcan       | 42.47 | 52.42 |
|         fan         | 59.38 | 72.01 |
|         pier        |  44.2 | 55.52 |
|      crt screen     |  8.69 | 21.28 |
|        plate        | 52.91 | 64.54 |
|       monitor       | 11.02 |  15.2 |
|    bulletin board   | 40.71 | 46.94 |
|        shower       |  4.27 |  4.53 |
|       radiator      |  58.3 | 64.05 |
|        glass        | 10.85 | 11.67 |
|        clock        | 28.23 | 33.96 |
|         flag        | 44.42 | 48.37 |
+---------------------+-------+-------+
10/06 06:51:01 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.1100  mIoU: 46.8800  mAcc: 57.6100  data_time: 0.0016  time: 0.3328
Finished processing corruption type: fog
Processing corruption type: brightness
10/06 06:51:04 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 335681168
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 335681168
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:51:05 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/brightness'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:51:09,052 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:51:09,052 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:51:09,052 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:51:09,052 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 06:51:09,052 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:51:09,053 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:51:09,053 - mmseg - INFO - res_post_norm: False
2024-10-06 06:51:09,053 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:51:10 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:51:10 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:51:12 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:51:13 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 06:52:04 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:10  time: 0.5753  data_time: 0.0016  memory: 16851  
10/06 06:52:36 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:10  time: 0.7298  data_time: 0.0016  memory: 16820  
10/06 06:52:57 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:21:16  time: 0.4143  data_time: 0.0015  memory: 9701  
10/06 06:53:24 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:19:35  time: 0.4888  data_time: 0.0023  memory: 11263  
10/06 06:53:50 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:20  time: 0.3464  data_time: 0.0015  memory: 11241  
10/06 06:54:13 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:17:00  time: 0.2371  data_time: 0.0017  memory: 11267  
10/06 06:54:38 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:08  time: 0.3755  data_time: 0.0015  memory: 11274  
10/06 06:55:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:08  time: 0.3972  data_time: 0.0014  memory: 11243  
10/06 06:55:14 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:49  time: 0.3145  data_time: 0.0015  memory: 9517  
10/06 06:55:27 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:43  time: 0.2217  data_time: 0.0015  memory: 8809  
10/06 06:55:43 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:50  time: 0.3886  data_time: 0.0016  memory: 9892  
10/06 06:55:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:01  time: 0.3836  data_time: 0.0016  memory: 9701  
10/06 06:56:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:25  time: 0.4086  data_time: 0.0014  memory: 9705  
10/06 06:56:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:57  time: 0.2390  data_time: 0.0016  memory: 11272  
10/06 06:56:55 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:30  time: 0.7172  data_time: 0.0015  memory: 9887  
10/06 06:57:08 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:51  time: 0.2282  data_time: 0.0017  memory: 9703  
10/06 06:57:19 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:15  time: 0.2314  data_time: 0.0017  memory: 693  
10/06 06:57:33 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:44  time: 0.3008  data_time: 0.0014  memory: 8958  
10/06 06:57:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:21  time: 0.4725  data_time: 0.0015  memory: 10823  
10/06 06:58:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:54  time: 0.2176  data_time: 0.0015  memory: 10825  
10/06 06:58:26 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:31  time: 0.5682  data_time: 0.0015  memory: 10634  
10/06 06:58:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:07  time: 0.2102  data_time: 0.0015  memory: 9889  
10/06 06:58:56 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:42  time: 0.3578  data_time: 0.0015  memory: 8819  
10/06 06:59:08 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:16  time: 0.2209  data_time: 0.0015  memory: 1883  
10/06 06:59:22 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:53  time: 0.3315  data_time: 0.0015  memory: 11263  
10/06 06:59:32 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:28  time: 0.2272  data_time: 0.0015  memory: 695  
10/06 06:59:44 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:05  time: 0.1984  data_time: 0.0015  memory: 8622  
10/06 07:00:02 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:46  time: 0.4177  data_time: 0.0014  memory: 10447  
10/06 07:00:15 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:25  time: 0.3774  data_time: 0.0015  memory: 8958  
10/06 07:00:26 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:04  time: 0.2023  data_time: 0.0015  memory: 694  
10/06 07:00:40 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:44  time: 0.2249  data_time: 0.0015  memory: 10635  
10/06 07:00:51 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:24  time: 0.2262  data_time: 0.0016  memory: 692  
10/06 07:01:07 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:05  time: 0.2032  data_time: 0.0014  memory: 11273  
10/06 07:01:22 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:47  time: 0.2137  data_time: 0.0016  memory: 9145  
10/06 07:01:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:29  time: 0.2315  data_time: 0.0014  memory: 10265  
10/06 07:01:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:10  time: 0.2250  data_time: 0.0016  memory: 8624  
10/06 07:02:00 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:52  time: 0.2243  data_time: 0.0017  memory: 642  
10/06 07:02:12 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:34  time: 0.2215  data_time: 0.0015  memory: 8660  
10/06 07:02:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.2021  data_time: 0.0015  memory: 8823  
10/06 07:02:41 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1927  data_time: 0.0014  memory: 8584  
10/06 07:02:41 - mmengine - INFO - per class results:
10/06 07:02:41 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.69 | 88.91 |
|       building      | 82.03 | 92.46 |
|         sky         | 93.89 | 97.37 |
|        floor        | 79.45 | 90.53 |
|         tree        | 73.08 | 87.64 |
|       ceiling       | 84.09 |  91.9 |
|         road        | 84.17 | 90.03 |
|         bed         | 89.17 | 95.14 |
|      windowpane     |  60.0 | 76.43 |
|        grass        | 66.61 | 82.99 |
|       cabinet       | 58.11 | 71.07 |
|       sidewalk      | 67.06 | 82.65 |
|        person       | 78.97 | 91.32 |
|        earth        | 30.74 | 42.34 |
|         door        | 48.29 | 65.07 |
|        table        | 58.46 | 75.52 |
|       mountain      | 56.34 | 72.96 |
|        plant        | 51.16 | 62.49 |
|       curtain       | 72.35 | 83.63 |
|        chair        | 55.88 | 69.59 |
|         car         | 84.25 | 92.13 |
|        water        | 49.65 | 66.06 |
|       painting      | 70.64 | 87.31 |
|         sofa        | 63.77 | 81.16 |
|        shelf        | 42.55 | 61.82 |
|        house        | 37.48 |  47.5 |
|         sea         |  51.3 | 71.24 |
|        mirror       | 63.91 |  72.4 |
|         rug         |  55.7 | 65.91 |
|        field        | 25.85 | 44.22 |
|       armchair      | 41.45 | 58.75 |
|         seat        | 62.51 | 79.65 |
|        fence        |  42.3 | 59.13 |
|         desk        | 44.86 | 61.63 |
|         rock        | 40.46 | 59.41 |
|       wardrobe      | 48.29 | 68.47 |
|         lamp        | 60.19 | 73.31 |
|       bathtub       | 75.53 | 83.71 |
|       railing       | 29.15 | 38.59 |
|       cushion       |  57.9 | 70.16 |
|         base        | 17.03 | 22.62 |
|         box         | 20.38 | 26.01 |
|        column       | 39.42 | 48.12 |
|      signboard      | 35.56 | 48.88 |
|   chest of drawers  | 37.62 | 53.01 |
|       counter       | 39.78 | 50.31 |
|         sand        | 38.44 |  56.9 |
|         sink        | 70.11 |  78.4 |
|      skyscraper     | 65.89 | 82.14 |
|      fireplace      | 72.69 | 84.58 |
|     refrigerator    | 73.32 | 82.68 |
|      grandstand     | 44.55 | 68.99 |
|         path        | 24.92 | 34.04 |
|        stairs       | 33.94 | 43.76 |
|        runway       | 71.64 |  94.1 |
|         case        | 58.12 | 68.04 |
|      pool table     | 91.93 | 95.76 |
|        pillow       | 60.74 |  73.9 |
|     screen door     | 65.79 | 78.33 |
|       stairway      | 27.39 | 32.84 |
|        river        |  9.92 | 20.58 |
|        bridge       | 64.41 | 74.13 |
|       bookcase      | 41.82 | 56.58 |
|        blind        | 32.52 | 37.11 |
|     coffee table    | 54.73 | 81.09 |
|        toilet       | 83.77 | 90.65 |
|        flower       | 44.27 | 59.07 |
|         book        | 50.69 | 70.78 |
|         hill        |  8.74 | 12.97 |
|        bench        | 47.31 | 56.74 |
|      countertop     | 55.93 | 69.85 |
|        stove        | 75.96 |  83.7 |
|         palm        | 51.08 | 74.27 |
|    kitchen island   | 32.03 | 57.61 |
|       computer      | 63.83 | 73.58 |
|     swivel chair    | 48.47 | 61.15 |
|         boat        | 41.99 | 49.04 |
|         bar         | 28.39 | 33.12 |
|    arcade machine   |  24.5 | 25.88 |
|        hovel        | 30.56 | 33.64 |
|         bus         | 88.19 | 95.21 |
|        towel        | 57.12 | 68.79 |
|        light        | 52.98 | 60.08 |
|        truck        | 34.56 | 44.83 |
|        tower        | 18.71 | 29.13 |
|      chandelier     |  64.5 | 77.39 |
|        awning       |  27.9 | 33.13 |
|     streetlight     | 25.67 | 34.16 |
|        booth        | 53.17 |  54.9 |
| television receiver | 67.47 | 76.88 |
|       airplane      | 55.34 | 64.52 |
|      dirt track     |  4.64 |  8.57 |
|       apparel       | 30.96 | 44.27 |
|         pole        | 25.78 | 36.79 |
|         land        |  3.47 |  4.59 |
|      bannister      |  7.91 |  9.68 |
|      escalator      | 21.94 | 25.92 |
|       ottoman       |  46.4 | 62.37 |
|        bottle       | 34.91 | 48.84 |
|        buffet       | 46.71 |  53.1 |
|        poster       | 30.23 | 42.52 |
|        stage        | 11.54 | 13.67 |
|         van         | 44.64 | 61.86 |
|         ship        |  5.9  |  9.33 |
|       fountain      |  4.53 |  4.57 |
|    conveyer belt    | 71.66 | 85.22 |
|        canopy       |  18.5 | 20.68 |
|        washer       | 67.83 | 72.15 |
|      plaything      | 25.85 |  37.4 |
|    swimming pool    | 35.23 | 47.78 |
|        stool        | 43.92 | 58.46 |
|        barrel       | 34.68 | 65.34 |
|        basket       | 33.69 | 43.34 |
|      waterfall      | 51.46 | 66.64 |
|         tent        | 95.23 | 97.67 |
|         bag         |  9.94 | 13.01 |
|       minibike      | 66.96 | 73.08 |
|        cradle       | 76.08 | 93.62 |
|         oven        | 46.04 | 54.43 |
|         ball        | 39.27 | 47.59 |
|         food        | 49.99 | 58.16 |
|         step        | 11.26 | 13.59 |
|         tank        | 51.16 | 51.87 |
|      trade name     | 26.44 | 32.44 |
|      microwave      | 64.65 | 71.37 |
|         pot         |  42.7 | 49.89 |
|        animal       | 59.16 | 62.21 |
|       bicycle       | 54.43 | 75.88 |
|         lake        | 60.19 | 72.21 |
|      dishwasher     | 64.47 | 74.23 |
|        screen       | 71.59 | 85.14 |
|       blanket       | 12.45 | 14.38 |
|      sculpture      | 56.41 | 70.49 |
|         hood        | 56.25 | 58.72 |
|        sconce       | 45.71 |  57.5 |
|         vase        | 32.19 | 45.16 |
|    traffic light    | 29.16 | 45.59 |
|         tray        |  9.56 | 16.58 |
|        ashcan       | 43.36 | 55.39 |
|         fan         | 60.46 | 73.56 |
|         pier        | 52.55 |  67.3 |
|      crt screen     |  7.68 | 15.11 |
|        plate        | 53.81 | 65.81 |
|       monitor       | 21.83 | 31.56 |
|    bulletin board   | 37.66 | 43.84 |
|        shower       |  2.5  |  5.29 |
|       radiator      | 57.91 | 65.04 |
|        glass        |  9.69 | 10.12 |
|        clock        |  19.9 | 23.52 |
|         flag        | 36.48 | 40.24 |
+---------------------+-------+-------+
10/06 07:02:41 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.2900  mIoU: 47.1800  mAcc: 57.9400  data_time: 0.0017  time: 0.3437
Finished processing corruption type: brightness
Processing corruption type: contrast
10/06 07:02:44 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 540630378
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 540630378
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:02:45 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/contrast'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:02:48,659 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:02:48,659 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:02:48,659 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:02:48,659 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 07:02:48,659 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:02:48,659 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:02:48,659 - mmseg - INFO - res_post_norm: False
2024-10-06 07:02:48,659 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:02:50 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:02:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:02:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:02:53 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:03:36 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:28:09  time: 0.4326  data_time: 0.0016  memory: 16851  
10/06 07:04:00 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:28  time: 0.5783  data_time: 0.0016  memory: 16820  
10/06 07:04:14 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:46  time: 0.2623  data_time: 0.0016  memory: 9701  
10/06 07:04:34 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:12  time: 0.3511  data_time: 0.0015  memory: 11263  
10/06 07:04:54 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:07  time: 0.2063  data_time: 0.0015  memory: 11241  
10/06 07:05:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:57  time: 0.0852  data_time: 0.0015  memory: 11267  
10/06 07:05:28 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:11  time: 0.2340  data_time: 0.0015  memory: 11274  
10/06 07:05:43 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:19  time: 0.2410  data_time: 0.0014  memory: 11243  
10/06 07:05:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:10  time: 0.1833  data_time: 0.0014  memory: 9517  
10/06 07:05:57 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:12  time: 0.0835  data_time: 0.0015  memory: 8809  
10/06 07:06:04 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:25  time: 0.2422  data_time: 0.0015  memory: 9892  
10/06 07:06:11 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:43  time: 0.2345  data_time: 0.0016  memory: 9701  
10/06 07:06:22 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:14  time: 0.2634  data_time: 0.0014  memory: 9705  
10/06 07:06:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:53  time: 0.0887  data_time: 0.0016  memory: 11272  
10/06 07:06:49 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:34  time: 0.5804  data_time: 0.0015  memory: 9887  
10/06 07:06:55 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:03  time: 0.0847  data_time: 0.0017  memory: 9703  
10/06 07:06:59 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:33  time: 0.0832  data_time: 0.0016  memory: 693  
10/06 07:07:07 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:10  time: 0.1788  data_time: 0.0015  memory: 8958  
10/06 07:07:20 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:55  time: 0.3419  data_time: 0.0015  memory: 10823  
10/06 07:07:28 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:35  time: 0.0797  data_time: 0.0014  memory: 10825  
10/06 07:07:39 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:19  time: 0.4295  data_time: 0.0015  memory: 10634  
10/06 07:07:48 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:01  time: 0.0830  data_time: 0.0015  memory: 9889  
10/06 07:07:55 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:43  time: 0.2093  data_time: 0.0015  memory: 8819  
10/06 07:08:00 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:24  time: 0.0815  data_time: 0.0015  memory: 1883  
10/06 07:08:07 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:08  time: 0.2041  data_time: 0.0015  memory: 11263  
10/06 07:08:11 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:51  time: 0.0840  data_time: 0.0015  memory: 695  
10/06 07:08:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:35  time: 0.0821  data_time: 0.0015  memory: 8622  
10/06 07:08:27 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:23  time: 0.2708  data_time: 0.0014  memory: 10447  
10/06 07:08:34 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:09  time: 0.2341  data_time: 0.0014  memory: 8958  
10/06 07:08:38 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:55  time: 0.0774  data_time: 0.0014  memory: 694  
10/06 07:08:44 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:41  time: 0.0799  data_time: 0.0015  memory: 10635  
10/06 07:08:48 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:28  time: 0.0834  data_time: 0.0016  memory: 692  
10/06 07:08:57 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:17  time: 0.0795  data_time: 0.0014  memory: 11273  
10/06 07:09:05 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:05  time: 0.0787  data_time: 0.0017  memory: 9145  
10/06 07:09:13 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:54  time: 0.0854  data_time: 0.0015  memory: 10265  
10/06 07:09:18 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:42  time: 0.0871  data_time: 0.0017  memory: 8624  
10/06 07:09:22 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0767  data_time: 0.0016  memory: 642  
10/06 07:09:28 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0836  data_time: 0.0015  memory: 8660  
10/06 07:09:35 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0814  data_time: 0.0015  memory: 8823  
10/06 07:09:43 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0713  data_time: 0.0022  memory: 8584  
10/06 07:09:43 - mmengine - INFO - per class results:
10/06 07:09:43 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.09 | 88.87 |
|       building      | 82.34 | 92.26 |
|         sky         | 93.82 | 97.02 |
|        floor        | 79.27 | 90.89 |
|         tree        | 72.17 | 88.69 |
|       ceiling       | 83.24 | 91.56 |
|         road        | 83.69 | 89.59 |
|         bed         | 88.96 | 95.03 |
|      windowpane     | 60.13 | 76.04 |
|        grass        | 63.83 | 79.35 |
|       cabinet       | 57.22 | 70.45 |
|       sidewalk      | 66.71 | 82.42 |
|        person       |  79.0 | 90.86 |
|        earth        | 29.61 |  41.8 |
|         door        | 45.86 | 61.67 |
|        table        | 57.29 | 74.15 |
|       mountain      |  56.4 | 70.91 |
|        plant        | 46.92 | 55.13 |
|       curtain       | 71.22 | 82.31 |
|        chair        | 54.76 | 68.78 |
|         car         | 84.03 | 91.74 |
|        water        | 48.81 | 65.06 |
|       painting      | 69.03 | 87.88 |
|         sofa        | 61.47 |  76.6 |
|        shelf        | 39.16 | 55.14 |
|        house        |  43.3 | 58.56 |
|         sea         | 52.99 | 73.77 |
|        mirror       | 62.21 | 68.54 |
|         rug         | 56.05 | 63.99 |
|        field        | 23.63 | 46.29 |
|       armchair      | 40.33 | 60.27 |
|         seat        | 62.54 | 76.79 |
|        fence        | 42.49 | 58.09 |
|         desk        | 46.03 | 62.24 |
|         rock        | 44.96 | 67.52 |
|       wardrobe      | 47.39 | 68.75 |
|         lamp        | 60.04 | 73.27 |
|       bathtub       | 75.79 | 84.02 |
|       railing       | 30.21 |  40.5 |
|       cushion       | 55.71 | 65.92 |
|         base        | 18.82 | 23.89 |
|         box         | 20.77 |  26.7 |
|        column       | 42.83 | 51.67 |
|      signboard      | 35.22 | 48.51 |
|   chest of drawers  | 38.23 | 55.52 |
|       counter       | 34.03 | 47.37 |
|         sand        |  37.8 | 54.63 |
|         sink        | 69.82 | 77.58 |
|      skyscraper     | 66.36 | 85.23 |
|      fireplace      | 72.72 | 84.62 |
|     refrigerator    | 73.41 | 80.93 |
|      grandstand     | 45.67 | 73.54 |
|         path        | 22.49 |  33.2 |
|        stairs       | 32.92 | 41.07 |
|        runway       | 72.18 | 96.27 |
|         case        | 50.14 |  75.7 |
|      pool table     | 91.42 |  95.2 |
|        pillow       | 60.04 | 74.93 |
|     screen door     | 67.05 | 80.76 |
|       stairway      | 25.27 | 29.61 |
|        river        |  11.3 | 23.44 |
|        bridge       | 56.68 | 67.46 |
|       bookcase      | 41.92 | 57.66 |
|        blind        | 37.18 |  43.7 |
|     coffee table    | 53.48 | 80.18 |
|        toilet       | 80.16 | 89.86 |
|        flower       | 42.31 |  57.2 |
|         book        | 47.09 | 66.11 |
|         hill        | 13.46 | 17.05 |
|        bench        | 45.11 | 55.44 |
|      countertop     | 52.16 |  67.7 |
|        stove        | 72.14 | 76.34 |
|         palm        | 48.35 |  64.9 |
|    kitchen island   | 29.01 | 53.54 |
|       computer      | 65.74 | 76.45 |
|     swivel chair    | 43.23 | 53.93 |
|         boat        |  41.1 | 48.41 |
|         bar         | 25.25 | 29.61 |
|    arcade machine   | 22.34 | 23.23 |
|        hovel        | 11.28 | 12.37 |
|         bus         | 89.37 | 95.07 |
|        towel        | 59.03 | 71.62 |
|        light        | 49.93 | 54.64 |
|        truck        | 35.97 | 45.22 |
|        tower        | 24.52 | 38.95 |
|      chandelier     | 66.68 | 78.92 |
|        awning       |  27.6 | 32.17 |
|     streetlight     | 24.88 | 33.55 |
|        booth        | 57.07 |  59.8 |
| television receiver | 63.12 |  70.2 |
|       airplane      | 57.95 | 64.38 |
|      dirt track     |  4.31 | 11.29 |
|       apparel       | 35.46 | 47.27 |
|         pole        | 25.04 | 34.64 |
|         land        |  3.53 |  5.31 |
|      bannister      |  5.83 |  7.27 |
|      escalator      | 19.66 | 22.24 |
|       ottoman       | 48.89 |  65.7 |
|        bottle       | 32.26 | 48.62 |
|        buffet       |  47.1 | 55.05 |
|        poster       |  32.4 | 42.17 |
|        stage        | 10.06 | 12.14 |
|         van         | 43.96 | 61.41 |
|         ship        |  4.77 |  7.65 |
|       fountain      |  1.02 |  1.03 |
|    conveyer belt    | 75.53 | 85.87 |
|        canopy       | 15.44 | 19.59 |
|        washer       | 67.41 | 71.69 |
|      plaything      | 26.54 | 36.52 |
|    swimming pool    | 27.55 | 39.57 |
|        stool        | 42.38 | 54.13 |
|        barrel       | 36.68 | 65.09 |
|        basket       | 30.64 | 39.53 |
|      waterfall      | 55.71 | 67.54 |
|         tent        | 94.07 | 97.72 |
|         bag         |  8.24 | 10.13 |
|       minibike      | 67.93 |  74.2 |
|        cradle       | 76.17 | 92.95 |
|         oven        |  42.3 | 50.15 |
|         ball        | 40.16 | 48.01 |
|         food        | 42.47 | 47.19 |
|         step        | 11.77 | 15.64 |
|         tank        | 40.43 | 41.31 |
|      trade name     | 25.71 | 31.33 |
|      microwave      |  64.4 |  70.6 |
|         pot         | 41.45 | 46.28 |
|        animal       | 60.36 | 63.41 |
|       bicycle       | 55.37 | 75.17 |
|         lake        | 63.45 | 73.57 |
|      dishwasher     | 60.36 | 73.28 |
|        screen       |  73.5 | 83.74 |
|       blanket       | 12.21 | 14.15 |
|      sculpture      | 61.13 | 74.68 |
|         hood        |  53.6 | 57.22 |
|        sconce       | 42.12 | 53.39 |
|         vase        | 32.66 | 45.32 |
|    traffic light    | 25.48 | 42.29 |
|         tray        |  7.81 | 11.21 |
|        ashcan       | 37.34 | 44.16 |
|         fan         | 59.53 |  71.8 |
|         pier        | 36.65 |  45.2 |
|      crt screen     |  6.18 | 13.23 |
|        plate        | 53.03 |  64.2 |
|       monitor       | 18.87 | 24.11 |
|    bulletin board   | 40.79 | 50.52 |
|        shower       |  3.28 |  3.91 |
|       radiator      | 59.23 | 64.63 |
|        glass        | 10.36 | 10.97 |
|        clock        |  28.0 |  33.3 |
|         flag        | 44.31 | 48.05 |
+---------------------+-------+-------+
10/06 07:09:43 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.8600  mIoU: 46.4000  mAcc: 56.9800  data_time: 0.0017  time: 0.2054
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
10/06 07:09:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 224250986
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 224250986
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:09:48 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:09:51,893 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:09:51,893 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:09:51,893 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:09:51,893 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 07:09:51,893 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:09:51,893 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:09:51,893 - mmseg - INFO - res_post_norm: False
2024-10-06 07:09:51,893 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:09:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:09:53 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:09:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:09:56 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:11:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:59:04  time: 1.4226  data_time: 0.0016  memory: 16851  
10/06 07:12:38 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:51:24  time: 1.5539  data_time: 0.0017  memory: 16820  
10/06 07:13:39 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:45:52  time: 1.2330  data_time: 0.0017  memory: 9701  
10/06 07:14:47 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:43:37  time: 1.2841  data_time: 0.0016  memory: 11263  
10/06 07:15:52 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:41:33  time: 1.1220  data_time: 0.0015  memory: 11241  
10/06 07:16:54 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:39:26  time: 1.0411  data_time: 0.0017  memory: 11267  
10/06 07:17:58 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:37:53  time: 1.1228  data_time: 0.0016  memory: 11274  
10/06 07:18:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:36:12  time: 1.2079  data_time: 0.0015  memory: 11243  
10/06 07:19:49 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:34:00  time: 1.0309  data_time: 0.0015  memory: 9517  
10/06 07:20:41 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:32:15  time: 0.9854  data_time: 0.0015  memory: 8809  
10/06 07:21:38 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:30:49  time: 1.2147  data_time: 0.0016  memory: 9892  
10/06 07:22:30 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:29:18  time: 1.1697  data_time: 0.0017  memory: 9701  
10/06 07:23:27 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:28:03  time: 1.2196  data_time: 0.0014  memory: 9705  
10/06 07:24:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:26:58  time: 1.0252  data_time: 0.0016  memory: 11272  
10/06 07:25:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:25:53  time: 1.4789  data_time: 0.0015  memory: 9887  
10/06 07:26:17 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:24:31  time: 1.0228  data_time: 0.0017  memory: 9703  
10/06 07:27:09 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:23:16  time: 1.0320  data_time: 0.0017  memory: 693  
10/06 07:28:00 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:04  time: 1.0297  data_time: 0.0015  memory: 8958  
10/06 07:29:01 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:05  time: 1.2676  data_time: 0.0016  memory: 10823  
10/06 07:29:55 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:19:58  time: 0.9863  data_time: 0.0016  memory: 10825  
10/06 07:30:54 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:57  time: 1.3948  data_time: 0.0016  memory: 10634  
10/06 07:31:50 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:54  time: 1.0116  data_time: 0.0016  memory: 9889  
10/06 07:32:42 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:49  time: 1.1363  data_time: 0.0015  memory: 8819  
10/06 07:33:33 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:44  time: 0.9820  data_time: 0.0015  memory: 1883  
10/06 07:34:25 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:41  time: 1.1067  data_time: 0.0015  memory: 11263  
10/06 07:35:13 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:36  time: 1.0279  data_time: 0.0015  memory: 695  
10/06 07:36:06 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:35  time: 0.9719  data_time: 0.0017  memory: 8622  
10/06 07:37:05 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:38  time: 1.2869  data_time: 0.0016  memory: 10447  
10/06 07:37:58 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:37  time: 1.2280  data_time: 0.0015  memory: 8958  
10/06 07:38:48 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:37  time: 0.9632  data_time: 0.0015  memory: 694  
10/06 07:39:50 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:40  time: 1.0733  data_time: 0.0016  memory: 10635  
10/06 07:40:40 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:40  time: 1.0274  data_time: 0.0017  memory: 692  
10/06 07:41:38 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:43  time: 0.9384  data_time: 0.0015  memory: 11273  
10/06 07:42:34 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:45  time: 1.0350  data_time: 0.0017  memory: 9145  
10/06 07:43:30 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:47  time: 1.0180  data_time: 0.0016  memory: 10265  
10/06 07:44:20 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:49  time: 1.0386  data_time: 0.0017  memory: 8624  
10/06 07:45:11 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:51  time: 1.0170  data_time: 0.0018  memory: 642  
10/06 07:46:01 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:53  time: 1.0076  data_time: 0.0016  memory: 8660  
10/06 07:46:55 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:56  time: 0.9827  data_time: 0.0016  memory: 8823  
10/06 07:47:48 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9204  data_time: 0.0014  memory: 8584  
10/06 07:47:48 - mmengine - INFO - per class results:
10/06 07:47:48 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 62.84 | 78.54 |
|       building      | 72.86 | 86.62 |
|         sky         | 84.16 |  91.4 |
|        floor        | 67.69 | 81.55 |
|         tree        | 62.04 | 78.94 |
|       ceiling       | 68.12 | 81.51 |
|         road        | 76.07 | 85.68 |
|         bed         | 76.87 | 88.15 |
|      windowpane     | 48.24 | 65.44 |
|        grass        | 58.08 | 74.79 |
|       cabinet       | 49.05 |  63.5 |
|       sidewalk      | 54.07 | 71.14 |
|        person       | 59.88 | 77.68 |
|        earth        | 31.57 | 44.36 |
|         door        | 39.85 | 54.69 |
|        table        | 44.29 | 64.19 |
|       mountain      | 52.11 |  66.2 |
|        plant        | 40.26 | 55.02 |
|       curtain       | 51.32 | 68.77 |
|        chair        | 40.04 |  57.2 |
|         car         | 61.32 | 77.35 |
|        water        | 47.86 | 63.64 |
|       painting      | 45.55 | 67.95 |
|         sofa        | 53.28 | 72.15 |
|        shelf        | 36.33 | 55.32 |
|        house        | 25.73 |  36.4 |
|         sea         | 51.02 | 71.19 |
|        mirror       | 54.47 | 67.07 |
|         rug         | 45.93 | 60.78 |
|        field        | 21.45 | 36.15 |
|       armchair      | 34.42 | 51.82 |
|         seat        |  57.6 | 75.36 |
|        fence        | 32.43 | 50.05 |
|         desk        | 35.52 | 51.08 |
|         rock        | 34.98 | 57.78 |
|       wardrobe      | 41.74 | 61.23 |
|         lamp        | 30.15 | 46.71 |
|       bathtub       | 60.31 | 71.66 |
|       railing       | 22.72 | 34.36 |
|       cushion       | 39.02 | 51.39 |
|         base        | 18.46 | 27.56 |
|         box         |  16.3 | 21.94 |
|        column       | 27.45 | 40.62 |
|      signboard      | 22.07 | 33.76 |
|   chest of drawers  | 29.61 | 41.37 |
|       counter       | 30.72 | 40.17 |
|         sand        | 32.62 | 50.22 |
|         sink        | 45.08 | 60.57 |
|      skyscraper     | 55.92 | 71.05 |
|      fireplace      | 64.36 | 83.18 |
|     refrigerator    | 58.62 | 74.77 |
|      grandstand     |  39.7 | 73.24 |
|         path        | 20.57 | 30.78 |
|        stairs       | 23.88 | 31.82 |
|        runway       | 62.63 | 84.87 |
|         case        | 54.77 | 65.08 |
|      pool table     | 79.41 | 88.87 |
|        pillow       | 43.17 | 59.35 |
|     screen door     | 55.66 | 71.93 |
|       stairway      | 22.94 |  31.6 |
|        river        | 10.76 | 20.45 |
|        bridge       | 41.34 | 52.68 |
|       bookcase      | 26.55 | 39.17 |
|        blind        | 31.16 | 36.61 |
|     coffee table    | 44.31 | 68.73 |
|        toilet       | 58.21 | 72.53 |
|        flower       | 30.73 | 44.96 |
|         book        | 32.05 | 50.51 |
|         hill        |  7.75 |  12.2 |
|        bench        | 38.58 | 47.89 |
|      countertop     | 40.08 | 56.58 |
|        stove        | 59.45 | 72.23 |
|         palm        | 37.44 | 59.13 |
|    kitchen island   | 20.02 | 35.57 |
|       computer      | 49.65 | 61.39 |
|     swivel chair    | 35.09 | 49.89 |
|         boat        | 30.62 | 41.34 |
|         bar         | 39.35 | 46.18 |
|    arcade machine   | 20.85 | 23.38 |
|        hovel        | 29.84 | 42.85 |
|         bus         | 72.08 | 83.39 |
|        towel        | 36.96 | 52.62 |
|        light        | 14.25 | 21.24 |
|        truck        | 24.52 | 38.03 |
|        tower        | 18.21 |  30.1 |
|      chandelier     | 43.89 |  61.1 |
|        awning       | 16.92 | 22.77 |
|     streetlight     | 11.09 | 18.95 |
|        booth        | 39.72 | 41.84 |
| television receiver | 47.69 |  60.5 |
|       airplane      | 32.45 | 45.68 |
|      dirt track     |  1.84 |  2.85 |
|       apparel       | 24.12 | 41.71 |
|         pole        |  7.67 | 12.11 |
|         land        |  1.35 |  2.51 |
|      bannister      |  6.84 |  9.43 |
|      escalator      | 19.82 | 22.71 |
|       ottoman       | 37.86 | 57.99 |
|        bottle       | 23.53 | 35.39 |
|        buffet       | 34.46 | 40.73 |
|        poster       | 21.84 | 33.89 |
|        stage        |  11.4 | 14.48 |
|         van         | 31.73 | 43.11 |
|         ship        |  3.79 |  6.23 |
|       fountain      |  3.54 |  3.61 |
|    conveyer belt    | 72.19 | 88.93 |
|        canopy       | 12.97 | 20.52 |
|        washer       | 59.93 | 66.11 |
|      plaything      | 12.13 | 19.97 |
|    swimming pool    |  37.9 | 56.62 |
|        stool        | 23.71 | 36.41 |
|        barrel       | 22.37 | 65.12 |
|        basket       | 22.41 | 31.82 |
|      waterfall      | 52.66 | 69.59 |
|         tent        | 86.51 | 96.42 |
|         bag         |  7.78 | 10.48 |
|       minibike      | 48.36 | 60.41 |
|        cradle       | 62.75 | 85.49 |
|         oven        | 34.08 | 40.84 |
|         ball        | 30.86 | 37.86 |
|         food        | 40.25 | 48.78 |
|         step        |  9.16 | 10.63 |
|         tank        | 47.28 | 50.28 |
|      trade name     | 17.27 | 21.32 |
|      microwave      | 69.29 | 81.98 |
|         pot         | 25.02 | 33.91 |
|        animal       | 48.04 | 53.62 |
|       bicycle       |  35.1 | 57.41 |
|         lake        | 62.49 | 78.52 |
|      dishwasher     | 47.82 | 57.04 |
|        screen       | 63.37 | 77.72 |
|       blanket       |  7.43 |  10.0 |
|      sculpture      | 45.41 | 65.01 |
|         hood        | 39.02 | 50.71 |
|        sconce       | 20.89 | 33.54 |
|         vase        | 15.79 | 25.18 |
|    traffic light    | 12.08 | 23.81 |
|         tray        |  4.58 |  8.44 |
|        ashcan       |  25.6 | 42.19 |
|         fan         | 21.86 | 36.75 |
|         pier        | 41.28 | 58.13 |
|      crt screen     |  7.58 |  16.5 |
|        plate        | 37.56 | 49.59 |
|       monitor       |  9.93 | 16.03 |
|    bulletin board   | 27.84 | 37.63 |
|        shower       |  0.47 |  1.14 |
|       radiator      | 46.32 | 59.11 |
|        glass        |  6.81 |  7.53 |
|        clock        | 13.47 | 17.86 |
|         flag        | 23.68 | 30.85 |
+---------------------+-------+-------+
10/06 07:47:48 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 73.9100  mIoU: 36.7100  mAcc: 49.0800  data_time: 0.0018  time: 1.1357
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
10/06 07:47:51 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1429243052
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1429243052
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:47:52 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:47:56,149 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:47:56,149 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:47:56,149 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:47:56,149 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 07:47:56,149 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:47:56,149 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:47:56,149 - mmseg - INFO - res_post_norm: False
2024-10-06 07:47:56,149 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:47:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:47:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:47:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:48:01 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:48:43 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:27:45  time: 0.4170  data_time: 0.0016  memory: 16851  
10/06 07:49:07 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:07  time: 0.5629  data_time: 0.0016  memory: 16820  
10/06 07:49:21 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:26  time: 0.2508  data_time: 0.0015  memory: 9701  
10/06 07:49:40 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:14:53  time: 0.3408  data_time: 0.0015  memory: 11263  
10/06 07:49:59 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:49  time: 0.1957  data_time: 0.0016  memory: 11241  
10/06 07:50:15 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:40  time: 0.0756  data_time: 0.0016  memory: 11267  
10/06 07:50:32 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:55  time: 0.2250  data_time: 0.0015  memory: 11274  
10/06 07:50:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:03  time: 0.2330  data_time: 0.0014  memory: 11243  
10/06 07:50:54 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:55  time: 0.1774  data_time: 0.0015  memory: 9517  
10/06 07:51:00 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:57  time: 0.0725  data_time: 0.0014  memory: 8809  
10/06 07:51:07 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:11  time: 0.2353  data_time: 0.0016  memory: 9892  
10/06 07:51:13 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:30  time: 0.2231  data_time: 0.0017  memory: 9701  
10/06 07:51:24 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:01  time: 0.2572  data_time: 0.0013  memory: 9705  
10/06 07:51:36 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:40  time: 0.0792  data_time: 0.0016  memory: 11272  
10/06 07:51:50 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:21  time: 0.5705  data_time: 0.0015  memory: 9887  
10/06 07:51:55 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:51  time: 0.0716  data_time: 0.0016  memory: 9703  
10/06 07:51:59 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:21  time: 0.0719  data_time: 0.0016  memory: 693  
10/06 07:52:06 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:59  time: 0.1676  data_time: 0.0014  memory: 8958  
10/06 07:52:18 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:44  time: 0.3318  data_time: 0.0015  memory: 10823  
10/06 07:52:26 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:25  time: 0.0674  data_time: 0.0015  memory: 10825  
10/06 07:52:37 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:09  time: 0.4174  data_time: 0.0015  memory: 10634  
10/06 07:52:45 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:53  time: 0.0674  data_time: 0.0015  memory: 9889  
10/06 07:52:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:35  time: 0.2008  data_time: 0.0015  memory: 8819  
10/06 07:52:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:16  time: 0.0722  data_time: 0.0015  memory: 1883  
10/06 07:53:02 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:01  time: 0.1944  data_time: 0.0014  memory: 11263  
10/06 07:53:06 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:44  time: 0.0702  data_time: 0.0015  memory: 695  
10/06 07:53:11 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:29  time: 0.0711  data_time: 0.0015  memory: 8622  
10/06 07:53:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:17  time: 0.2663  data_time: 0.0015  memory: 10447  
10/06 07:53:27 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:03  time: 0.2203  data_time: 0.0014  memory: 8958  
10/06 07:53:31 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:50  time: 0.0701  data_time: 0.0014  memory: 694  
10/06 07:53:37 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:37  time: 0.0772  data_time: 0.0015  memory: 10635  
10/06 07:53:40 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:24  time: 0.0714  data_time: 0.0016  memory: 692  
10/06 07:53:49 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:13  time: 0.0674  data_time: 0.0014  memory: 11273  
10/06 07:53:57 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:02  time: 0.0716  data_time: 0.0016  memory: 9145  
10/06 07:54:04 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:51  time: 0.0712  data_time: 0.0014  memory: 10265  
10/06 07:54:08 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:40  time: 0.0725  data_time: 0.0016  memory: 8624  
10/06 07:54:12 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:30  time: 0.0761  data_time: 0.0017  memory: 642  
10/06 07:54:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:19  time: 0.0746  data_time: 0.0015  memory: 8660  
10/06 07:54:24 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0659  data_time: 0.0014  memory: 8823  
10/06 07:54:32 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0638  data_time: 0.0013  memory: 8584  
10/06 07:54:32 - mmengine - INFO - per class results:
10/06 07:54:32 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.69 | 88.38 |
|       building      | 78.91 | 94.06 |
|         sky         | 93.49 | 97.19 |
|        floor        |  79.0 | 91.31 |
|         tree        | 70.49 | 83.41 |
|       ceiling       | 82.81 | 91.23 |
|         road        | 81.49 | 85.91 |
|         bed         | 88.21 | 94.11 |
|      windowpane     | 58.19 |  75.0 |
|        grass        | 61.75 | 83.75 |
|       cabinet       | 57.49 | 71.33 |
|       sidewalk      | 63.41 | 84.27 |
|        person       | 76.59 | 87.36 |
|        earth        | 31.23 | 43.76 |
|         door        |  44.7 |  58.7 |
|        table        | 53.97 | 75.12 |
|       mountain      | 53.67 | 61.51 |
|        plant        | 47.55 | 57.46 |
|       curtain       | 66.85 | 81.39 |
|        chair        | 51.95 | 64.63 |
|         car         | 81.05 | 88.38 |
|        water        | 49.81 | 70.37 |
|       painting      |  70.4 | 87.59 |
|         sofa        | 61.35 |  86.8 |
|        shelf        | 42.55 | 62.03 |
|        house        | 33.58 | 38.21 |
|         sea         | 49.21 | 63.65 |
|        mirror       | 62.01 |  69.2 |
|         rug         | 57.66 | 65.26 |
|        field        | 26.08 | 43.12 |
|       armchair      | 36.07 | 49.39 |
|         seat        | 62.37 |  78.7 |
|        fence        | 36.56 | 47.56 |
|         desk        | 38.46 | 49.76 |
|         rock        | 38.08 | 68.39 |
|       wardrobe      | 50.89 | 71.08 |
|         lamp        | 58.68 | 70.69 |
|       bathtub       | 74.98 | 81.55 |
|       railing       | 31.18 | 39.57 |
|       cushion       | 53.45 | 63.15 |
|         base        | 14.27 | 17.38 |
|         box         | 21.51 | 29.32 |
|        column       | 37.09 | 44.49 |
|      signboard      |  33.4 |  44.1 |
|   chest of drawers  | 39.77 | 56.64 |
|       counter       | 38.17 | 48.64 |
|         sand        | 39.18 | 53.02 |
|         sink        | 67.17 |  75.8 |
|      skyscraper     |  60.1 | 63.21 |
|      fireplace      | 69.42 | 79.65 |
|     refrigerator    | 74.34 |  84.2 |
|      grandstand     | 40.26 | 66.88 |
|         path        | 18.93 | 29.74 |
|        stairs       | 31.02 | 46.17 |
|        runway       |  69.8 | 93.57 |
|         case        | 57.86 | 68.82 |
|      pool table     | 91.36 | 95.64 |
|        pillow       | 57.25 | 68.79 |
|     screen door     | 58.12 | 67.28 |
|       stairway      |  26.1 | 31.11 |
|        river        |  2.28 |  4.53 |
|        bridge       | 53.83 | 61.04 |
|       bookcase      | 39.14 | 49.94 |
|        blind        | 23.76 | 26.54 |
|     coffee table    | 54.11 | 78.94 |
|        toilet       | 84.55 | 88.34 |
|        flower       | 30.94 | 44.67 |
|         book        | 45.17 | 64.17 |
|         hill        | 11.63 | 14.48 |
|        bench        | 46.37 |  53.4 |
|      countertop     |  55.5 | 63.98 |
|        stove        | 70.97 | 77.57 |
|         palm        | 47.16 | 60.83 |
|    kitchen island   | 31.13 | 49.06 |
|       computer      | 56.93 | 65.27 |
|     swivel chair    |  45.2 |  53.6 |
|         boat        | 36.83 | 38.63 |
|         bar         | 32.12 | 37.98 |
|    arcade machine   | 27.02 | 28.39 |
|        hovel        |  3.02 |  3.22 |
|         bus         | 85.15 | 93.65 |
|        towel        | 50.37 | 54.56 |
|        light        |  52.3 | 60.83 |
|        truck        | 22.82 | 35.17 |
|        tower        | 13.34 | 20.36 |
|      chandelier     | 59.47 | 73.32 |
|        awning       | 23.07 | 24.23 |
|     streetlight     | 25.11 | 33.64 |
|        booth        | 41.48 | 43.74 |
| television receiver | 59.14 | 74.21 |
|       airplane      |  51.0 | 56.06 |
|      dirt track     |  9.8  | 15.55 |
|       apparel       | 35.86 |  47.9 |
|         pole        | 25.52 | 35.92 |
|         land        |  2.93 |  4.19 |
|      bannister      |  5.8  |  7.06 |
|      escalator      | 21.35 | 22.56 |
|       ottoman       | 43.26 | 54.35 |
|        bottle       | 27.71 | 40.81 |
|        buffet       | 41.43 |  47.4 |
|        poster       | 27.44 | 38.14 |
|        stage        | 13.08 | 16.68 |
|         van         | 37.65 | 58.11 |
|         ship        |  5.4  |  7.91 |
|       fountain      |  1.93 |  1.94 |
|    conveyer belt    | 75.91 | 80.94 |
|        canopy       | 10.36 | 10.99 |
|        washer       | 66.17 | 68.27 |
|      plaything      | 20.27 | 30.55 |
|    swimming pool    | 32.98 |  51.8 |
|        stool        | 41.27 | 52.58 |
|        barrel       | 37.52 | 65.34 |
|        basket       | 21.79 | 26.29 |
|      waterfall      | 29.87 |  38.2 |
|         tent        | 95.18 | 97.37 |
|         bag         |  6.47 |  7.13 |
|       minibike      | 41.27 | 43.19 |
|        cradle       | 76.91 | 94.72 |
|         oven        | 32.43 |  36.9 |
|         ball        | 44.82 | 58.29 |
|         food        | 54.98 | 63.17 |
|         step        |  7.47 |  9.15 |
|         tank        | 31.02 | 31.52 |
|      trade name     |  31.2 |  37.5 |
|      microwave      | 40.13 | 44.48 |
|         pot         | 44.31 | 51.38 |
|        animal       | 50.15 | 53.56 |
|       bicycle       | 50.24 | 64.02 |
|         lake        | 62.58 | 65.85 |
|      dishwasher     | 65.82 | 76.59 |
|        screen       | 62.72 | 85.78 |
|       blanket       |  9.93 | 11.26 |
|      sculpture      | 45.95 | 50.62 |
|         hood        | 54.17 |  57.1 |
|        sconce       | 43.25 | 52.06 |
|         vase        | 26.05 | 36.96 |
|    traffic light    | 24.85 | 34.47 |
|         tray        | 10.54 | 19.98 |
|        ashcan       | 39.81 | 49.99 |
|         fan         | 55.49 | 65.39 |
|         pier        | 33.34 |  45.8 |
|      crt screen     | 11.31 | 19.98 |
|        plate        | 45.29 | 52.75 |
|       monitor       | 40.93 | 47.54 |
|    bulletin board   | 30.99 | 34.31 |
|        shower       |  2.23 |  3.28 |
|       radiator      | 51.11 | 53.65 |
|        glass        |  7.67 |  8.17 |
|        clock        | 21.97 | 26.75 |
|         flag        | 36.49 | 38.83 |
+---------------------+-------+-------+
10/06 07:54:32 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.8700  mIoU: 43.8800  mAcc: 53.4400  data_time: 0.0017  time: 0.1956
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
10/06 07:54:35 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1782414563
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1782414563
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:54:37 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:54:40,397 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:54:40,397 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:54:40,397 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:54:40,397 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 07:54:40,397 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:54:40,397 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:54:40,397 - mmseg - INFO - res_post_norm: False
2024-10-06 07:54:40,397 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:54:42 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:54:42 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:54:43 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:54:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 07:55:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:28:01  time: 0.4216  data_time: 0.0015  memory: 16851  
10/06 07:55:52 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:20  time: 0.5706  data_time: 0.0016  memory: 16820  
10/06 07:56:05 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:38  time: 0.2583  data_time: 0.0039  memory: 9701  
10/06 07:56:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:05  time: 0.3458  data_time: 0.0020  memory: 11263  
10/06 07:56:44 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:01  time: 0.1990  data_time: 0.0015  memory: 11241  
10/06 07:57:01 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:52  time: 0.0850  data_time: 0.0016  memory: 11267  
10/06 07:57:19 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:07  time: 0.2340  data_time: 0.0015  memory: 11274  
10/06 07:57:33 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:14  time: 0.2461  data_time: 0.0014  memory: 11243  
10/06 07:57:40 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:06  time: 0.1832  data_time: 0.0015  memory: 9517  
10/06 07:57:47 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:08  time: 0.0810  data_time: 0.0015  memory: 8809  
10/06 07:57:55 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:21  time: 0.2434  data_time: 0.0016  memory: 9892  
10/06 07:58:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:39  time: 0.2296  data_time: 0.0016  memory: 9701  
10/06 07:58:12 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:11  time: 0.2663  data_time: 0.0014  memory: 9705  
10/06 07:58:25 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:49  time: 0.0796  data_time: 0.0015  memory: 11272  
10/06 07:58:39 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:30  time: 0.5785  data_time: 0.0015  memory: 9887  
10/06 07:58:44 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:59  time: 0.0737  data_time: 0.0015  memory: 9703  
10/06 07:58:48 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:29  time: 0.0795  data_time: 0.0016  memory: 693  
10/06 07:58:55 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:06  time: 0.1755  data_time: 0.0014  memory: 8958  
10/06 07:59:08 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:51  time: 0.3352  data_time: 0.0015  memory: 10823  
10/06 07:59:16 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:32  time: 0.0784  data_time: 0.0015  memory: 10825  
10/06 07:59:27 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:15  time: 0.4215  data_time: 0.0015  memory: 10634  
10/06 07:59:37 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:59  time: 0.0785  data_time: 0.0016  memory: 9889  
10/06 07:59:43 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:40  time: 0.2015  data_time: 0.0015  memory: 8819  
10/06 07:59:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:21  time: 0.0790  data_time: 0.0015  memory: 1883  
10/06 07:59:54 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:05  time: 0.2018  data_time: 0.0014  memory: 11263  
10/06 07:59:58 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:48  time: 0.0781  data_time: 0.0014  memory: 695  
10/06 08:00:03 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:33  time: 0.0732  data_time: 0.0026  memory: 8622  
10/06 08:00:14 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:21  time: 0.2718  data_time: 0.0014  memory: 10447  
10/06 08:00:21 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:07  time: 0.2286  data_time: 0.0014  memory: 8958  
10/06 08:00:24 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:53  time: 0.0704  data_time: 0.0014  memory: 694  
10/06 08:00:30 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:40  time: 0.0811  data_time: 0.0014  memory: 10635  
10/06 08:00:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:27  time: 0.0793  data_time: 0.0016  memory: 692  
10/06 08:00:43 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:16  time: 0.0727  data_time: 0.0032  memory: 11273  
10/06 08:00:52 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:04  time: 0.0808  data_time: 0.0017  memory: 9145  
10/06 08:00:59 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:53  time: 0.0817  data_time: 0.0015  memory: 10265  
10/06 08:01:04 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:42  time: 0.0757  data_time: 0.0016  memory: 8624  
10/06 08:01:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0802  data_time: 0.0016  memory: 642  
10/06 08:01:13 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0793  data_time: 0.0015  memory: 8660  
10/06 08:01:21 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0783  data_time: 0.0015  memory: 8823  
10/06 08:01:28 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0731  data_time: 0.0013  memory: 8584  
10/06 08:01:28 - mmengine - INFO - per class results:
10/06 08:01:28 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.86 |  88.9 |
|       building      | 81.05 | 93.03 |
|         sky         |  93.9 | 97.16 |
|        floor        | 78.12 | 90.83 |
|         tree        | 72.73 | 87.72 |
|       ceiling       | 81.68 | 89.73 |
|         road        | 81.03 | 87.51 |
|         bed         | 87.78 | 94.48 |
|      windowpane     | 59.64 | 75.88 |
|        grass        | 68.08 | 82.45 |
|       cabinet       | 57.23 | 69.87 |
|       sidewalk      | 62.05 | 81.49 |
|        person       | 77.51 |  89.7 |
|        earth        | 30.73 | 44.65 |
|         door        | 44.88 | 58.86 |
|        table        | 56.42 | 74.25 |
|       mountain      | 58.59 |  75.7 |
|        plant        |  49.4 | 58.58 |
|       curtain       | 70.82 | 81.61 |
|        chair        | 51.97 | 62.89 |
|         car         | 83.44 |  92.1 |
|        water        | 47.65 | 62.74 |
|       painting      | 70.61 | 84.55 |
|         sofa        | 63.23 | 83.17 |
|        shelf        | 42.19 | 63.18 |
|        house        | 34.36 | 43.55 |
|         sea         | 53.01 | 75.17 |
|        mirror       | 59.49 | 67.03 |
|         rug         | 55.04 | 63.03 |
|        field        | 28.48 | 43.28 |
|       armchair      | 38.26 | 54.17 |
|         seat        | 57.65 | 78.86 |
|        fence        | 39.69 | 54.08 |
|         desk        | 46.47 |  61.7 |
|         rock        |  42.2 | 64.87 |
|       wardrobe      | 47.05 |  68.8 |
|         lamp        | 58.95 | 70.63 |
|       bathtub       | 76.22 | 84.27 |
|       railing       |  29.5 | 37.36 |
|       cushion       |  53.8 | 65.14 |
|         base        | 13.46 | 17.16 |
|         box         | 17.51 |  22.4 |
|        column       | 40.37 | 49.35 |
|      signboard      | 32.83 | 42.03 |
|   chest of drawers  | 43.76 | 56.77 |
|       counter       |  35.0 | 40.76 |
|         sand        | 38.86 | 54.16 |
|         sink        | 66.94 | 77.39 |
|      skyscraper     |  60.1 | 76.97 |
|      fireplace      | 72.29 | 83.61 |
|     refrigerator    | 74.76 | 86.63 |
|      grandstand     | 44.91 |  76.3 |
|         path        | 20.16 |  32.0 |
|        stairs       | 30.62 | 41.97 |
|        runway       | 70.19 | 95.62 |
|         case        | 63.79 | 73.38 |
|      pool table     |  91.4 | 95.78 |
|        pillow       | 55.57 | 67.86 |
|     screen door     | 51.23 | 60.06 |
|       stairway      | 27.35 | 32.83 |
|        river        | 10.09 | 20.75 |
|        bridge       | 61.23 | 71.54 |
|       bookcase      | 40.54 | 54.08 |
|        blind        | 15.87 | 16.35 |
|     coffee table    | 55.31 | 79.32 |
|        toilet       | 80.92 | 88.27 |
|        flower       | 40.36 | 52.33 |
|         book        | 49.59 | 65.35 |
|         hill        | 15.33 | 19.46 |
|        bench        | 47.99 | 56.06 |
|      countertop     | 53.19 | 63.63 |
|        stove        | 71.96 | 82.07 |
|         palm        | 52.11 | 71.52 |
|    kitchen island   | 27.44 | 43.44 |
|       computer      | 58.88 | 67.01 |
|     swivel chair    | 46.75 | 57.07 |
|         boat        | 42.24 | 48.29 |
|         bar         | 35.65 | 41.17 |
|    arcade machine   | 28.85 |  30.4 |
|        hovel        | 13.08 | 14.46 |
|         bus         | 86.44 | 93.04 |
|        towel        | 53.56 | 58.32 |
|        light        | 47.74 | 52.47 |
|        truck        | 33.45 | 47.09 |
|        tower        | 19.37 | 29.98 |
|      chandelier     | 63.59 |  75.6 |
|        awning       | 24.49 | 27.27 |
|     streetlight     | 23.73 | 29.74 |
|        booth        | 59.37 |  64.4 |
| television receiver | 63.33 | 74.24 |
|       airplane      | 52.47 |  62.7 |
|      dirt track     |  4.46 | 12.23 |
|       apparel       | 29.33 | 41.67 |
|         pole        | 25.87 | 36.27 |
|         land        |  3.39 |  4.71 |
|      bannister      |  7.32 |  9.16 |
|      escalator      | 21.49 | 25.84 |
|       ottoman       | 46.66 | 60.42 |
|        bottle       | 30.38 | 38.48 |
|        buffet       | 43.23 | 51.84 |
|        poster       | 26.27 | 38.19 |
|        stage        | 11.85 | 14.45 |
|         van         | 43.75 | 60.49 |
|         ship        | 17.38 | 27.14 |
|       fountain      |  5.69 |  5.72 |
|    conveyer belt    | 68.76 | 81.88 |
|        canopy       | 13.97 |  15.0 |
|        washer       | 68.77 | 74.56 |
|      plaything      | 25.52 | 33.19 |
|    swimming pool    | 43.26 | 49.38 |
|        stool        | 40.74 |  51.5 |
|        barrel       | 32.23 | 52.16 |
|        basket       | 27.12 |  32.9 |
|      waterfall      | 49.81 | 59.93 |
|         tent        | 94.23 | 97.73 |
|         bag         |  6.7  |  8.34 |
|       minibike      | 65.36 | 70.75 |
|        cradle       | 74.71 | 94.98 |
|         oven        | 33.92 | 38.75 |
|         ball        | 38.56 | 45.54 |
|         food        |  46.8 | 53.28 |
|         step        |  7.88 |  9.79 |
|         tank        | 41.41 | 41.71 |
|      trade name     | 25.05 |  29.3 |
|      microwave      | 67.67 | 74.87 |
|         pot         | 44.53 | 51.74 |
|        animal       | 55.77 | 57.78 |
|       bicycle       | 53.62 | 71.16 |
|         lake        | 62.67 |  68.2 |
|      dishwasher     | 60.81 | 68.61 |
|        screen       |  69.3 | 85.88 |
|       blanket       |  8.42 |  9.08 |
|      sculpture      | 59.44 | 67.87 |
|         hood        | 55.73 |  58.6 |
|        sconce       | 43.72 | 52.57 |
|         vase        | 29.66 | 38.62 |
|    traffic light    | 27.17 | 39.48 |
|         tray        |  8.83 | 16.32 |
|        ashcan       | 36.13 |  47.9 |
|         fan         | 54.42 | 66.64 |
|         pier        | 41.31 | 58.96 |
|      crt screen     |  4.37 | 11.11 |
|        plate        | 50.95 | 60.47 |
|       monitor       |  4.36 |  5.41 |
|    bulletin board   | 38.69 | 42.65 |
|        shower       |  3.87 |  12.8 |
|       radiator      | 52.11 | 55.47 |
|        glass        |  7.84 |  8.14 |
|        clock        | 20.06 |  22.5 |
|         flag        | 41.66 | 45.68 |
+---------------------+-------+-------+
10/06 08:01:28 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.4200  mIoU: 45.4500  mAcc: 55.3900  data_time: 0.0017  time: 0.2020
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
10/06 08:01:32 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2110253436
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2110253436
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:01:33 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:01:36,904 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:01:36,904 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:01:36,904 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:01:36,904 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 08:01:36,904 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:01:36,904 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:01:36,904 - mmseg - INFO - res_post_norm: False
2024-10-06 08:01:36,904 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:01:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:01:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:01:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 08:01:41 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 08:03:12 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:59:33  time: 1.4434  data_time: 0.0016  memory: 16851  
10/06 08:04:25 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:51:54  time: 1.5671  data_time: 0.0017  memory: 16820  
10/06 08:05:26 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:46:16  time: 1.2364  data_time: 0.0016  memory: 9701  
10/06 08:06:34 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:43:58  time: 1.2873  data_time: 0.0016  memory: 11263  
10/06 08:07:39 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:41:50  time: 1.1337  data_time: 0.0016  memory: 11241  
10/06 08:08:41 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:39:41  time: 1.0458  data_time: 0.0017  memory: 11267  
10/06 08:09:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:38:06  time: 1.1268  data_time: 0.0016  memory: 11274  
10/06 08:10:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:36:25  time: 1.2052  data_time: 0.0015  memory: 11243  
10/06 08:11:37 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:34:13  time: 1.0424  data_time: 0.0016  memory: 9517  
10/06 08:12:30 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:32:27  time: 0.9889  data_time: 0.0015  memory: 8809  
10/06 08:13:27 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:31:01  time: 1.2280  data_time: 0.0016  memory: 9892  
10/06 08:14:20 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:29:31  time: 1.1857  data_time: 0.0017  memory: 9701  
10/06 08:15:16 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:28:13  time: 1.1978  data_time: 0.0014  memory: 9705  
10/06 08:16:18 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:27:09  time: 1.0639  data_time: 0.0017  memory: 11272  
10/06 08:17:20 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:26:04  time: 1.4970  data_time: 0.0016  memory: 9887  
10/06 08:18:10 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:24:43  time: 1.0216  data_time: 0.0017  memory: 9703  
10/06 08:19:01 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:23:27  time: 1.0475  data_time: 0.0018  memory: 693  
10/06 08:19:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:13  time: 1.0024  data_time: 0.0015  memory: 8958  
10/06 08:20:52 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:12  time: 1.2449  data_time: 0.0017  memory: 10823  
10/06 08:21:45 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:04  time: 0.9751  data_time: 0.0015  memory: 10825  
10/06 08:22:45 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:03  time: 1.4065  data_time: 0.0015  memory: 10634  
10/06 08:23:41 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:00  time: 1.0091  data_time: 0.0016  memory: 9889  
10/06 08:24:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:54  time: 1.1474  data_time: 0.0015  memory: 8819  
10/06 08:25:27 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:50  time: 1.0452  data_time: 0.0016  memory: 1883  
10/06 08:26:19 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:46  time: 1.1269  data_time: 0.0015  memory: 11263  
10/06 08:27:07 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:41  time: 1.0246  data_time: 0.0015  memory: 695  
10/06 08:27:59 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:39  time: 0.9529  data_time: 0.0015  memory: 8622  
10/06 08:28:56 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:40  time: 1.2733  data_time: 0.0015  memory: 10447  
10/06 08:29:48 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:39  time: 1.2051  data_time: 0.0015  memory: 8958  
10/06 08:30:38 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:38  time: 0.9606  data_time: 0.0015  memory: 694  
10/06 08:31:33 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:40  time: 1.0518  data_time: 0.0015  memory: 10635  
10/06 08:32:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:40  time: 1.0194  data_time: 0.0017  memory: 692  
10/06 08:33:19 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:42  time: 0.9500  data_time: 0.0015  memory: 11273  
10/06 08:34:16 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:44  time: 1.0279  data_time: 0.0018  memory: 9145  
10/06 08:35:10 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:47  time: 1.0017  data_time: 0.0015  memory: 10265  
10/06 08:36:00 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:48  time: 1.0330  data_time: 0.0017  memory: 8624  
10/06 08:36:51 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:51  time: 1.0207  data_time: 0.0017  memory: 642  
10/06 08:37:41 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:53  time: 1.0022  data_time: 0.0016  memory: 8660  
10/06 08:38:36 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:56  time: 0.9905  data_time: 0.0015  memory: 8823  
10/06 08:39:28 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9049  data_time: 0.0014  memory: 8584  
10/06 08:39:28 - mmengine - INFO - per class results:
10/06 08:39:28 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 62.98 | 78.53 |
|       building      | 73.53 | 88.04 |
|         sky         | 84.19 | 91.43 |
|        floor        | 66.95 | 81.34 |
|         tree        | 62.62 | 79.47 |
|       ceiling       | 68.84 | 82.42 |
|         road        | 76.18 | 85.45 |
|         bed         | 76.15 | 87.45 |
|      windowpane     | 48.44 | 65.21 |
|        grass        | 57.49 |  74.7 |
|       cabinet       | 49.34 |  64.0 |
|       sidewalk      | 55.38 | 72.85 |
|        person       | 60.25 | 77.87 |
|        earth        | 32.09 |  45.4 |
|         door        | 39.38 | 53.14 |
|        table        | 40.62 | 60.25 |
|       mountain      | 53.45 | 66.35 |
|        plant        | 40.36 | 54.26 |
|       curtain       | 52.38 | 70.18 |
|        chair        |  40.0 | 56.26 |
|         car         | 62.25 | 77.74 |
|        water        | 48.25 | 65.28 |
|       painting      | 45.52 | 68.35 |
|         sofa        | 51.07 | 70.17 |
|        shelf        | 34.63 | 53.66 |
|        house        | 27.54 |  35.7 |
|         sea         | 46.75 | 64.75 |
|        mirror       | 52.78 | 66.19 |
|         rug         | 40.94 | 55.39 |
|        field        | 21.68 | 35.54 |
|       armchair      | 33.78 | 50.13 |
|         seat        |  54.7 | 73.25 |
|        fence        | 30.11 | 47.13 |
|         desk        | 35.44 |  51.1 |
|         rock        | 37.47 | 62.83 |
|       wardrobe      | 42.85 | 60.61 |
|         lamp        |  29.6 | 46.08 |
|       bathtub       | 65.49 | 76.19 |
|       railing       | 21.09 | 30.77 |
|       cushion       | 37.41 | 50.39 |
|         base        | 18.72 | 28.57 |
|         box         | 15.41 | 20.62 |
|        column       |  29.1 | 42.05 |
|      signboard      | 21.64 | 32.84 |
|   chest of drawers  | 31.07 | 42.12 |
|       counter       | 33.51 | 44.77 |
|         sand        | 32.49 | 48.99 |
|         sink        | 44.83 | 59.34 |
|      skyscraper     | 46.36 | 61.79 |
|      fireplace      | 63.53 | 81.68 |
|     refrigerator    | 62.53 | 73.73 |
|      grandstand     | 43.12 | 71.27 |
|         path        | 18.37 | 27.84 |
|        stairs       | 22.66 | 29.31 |
|        runway       | 66.27 | 89.81 |
|         case        | 47.81 | 56.49 |
|      pool table     | 73.87 | 84.26 |
|        pillow       | 41.24 | 57.37 |
|     screen door     | 55.78 | 73.43 |
|       stairway      | 22.95 | 27.59 |
|        river        |  9.55 | 20.91 |
|        bridge       | 43.68 | 59.01 |
|       bookcase      | 28.77 | 44.39 |
|        blind        | 32.41 | 38.83 |
|     coffee table    | 41.51 | 66.43 |
|        toilet       | 58.19 | 71.94 |
|        flower       | 28.53 | 42.05 |
|         book        |  31.4 | 49.48 |
|         hill        | 11.43 | 17.45 |
|        bench        | 38.92 | 49.22 |
|      countertop     | 42.12 | 62.41 |
|        stove        | 60.89 | 73.61 |
|         palm        | 37.72 | 59.26 |
|    kitchen island   | 18.68 | 33.19 |
|       computer      | 49.04 | 62.28 |
|     swivel chair    | 34.48 | 53.33 |
|         boat        | 30.91 | 47.61 |
|         bar         | 31.16 | 37.61 |
|    arcade machine   | 27.04 | 31.89 |
|        hovel        | 27.39 | 34.12 |
|         bus         | 74.77 |  90.1 |
|        towel        |  34.6 |  50.3 |
|        light        | 14.24 | 22.02 |
|        truck        | 25.72 | 37.42 |
|        tower        | 17.66 | 29.92 |
|      chandelier     | 43.71 | 61.24 |
|        awning       | 17.96 | 24.91 |
|     streetlight     |  7.59 | 12.48 |
|        booth        | 42.99 | 44.98 |
| television receiver | 49.27 | 62.51 |
|       airplane      | 35.63 | 49.13 |
|      dirt track     |  5.06 |  6.84 |
|       apparel       | 19.98 | 37.76 |
|         pole        | 11.55 | 17.94 |
|         land        |  2.45 |  3.74 |
|      bannister      |  3.15 |  4.32 |
|      escalator      | 20.29 | 24.98 |
|       ottoman       | 36.91 | 52.85 |
|        bottle       | 25.52 | 41.73 |
|        buffet       | 36.37 | 43.43 |
|        poster       | 23.92 |  37.2 |
|        stage        | 11.22 | 14.38 |
|         van         |  37.0 | 49.89 |
|         ship        |  8.72 | 14.24 |
|       fountain      |  3.49 |  3.56 |
|    conveyer belt    | 63.36 | 77.52 |
|        canopy       |  16.2 |  22.0 |
|        washer       | 60.66 | 67.86 |
|      plaything      | 11.17 | 17.49 |
|    swimming pool    | 29.05 | 43.01 |
|        stool        |  24.0 |  35.9 |
|        barrel       | 26.38 | 62.46 |
|        basket       |  21.3 | 29.81 |
|      waterfall      | 41.93 | 52.34 |
|         tent        | 77.76 | 88.01 |
|         bag         |  6.14 |  8.56 |
|       minibike      | 51.49 | 63.42 |
|        cradle       | 56.53 | 81.93 |
|         oven        | 28.29 | 37.11 |
|         ball        | 29.52 | 35.58 |
|         food        | 40.05 | 50.46 |
|         step        |  6.69 |  8.66 |
|         tank        | 44.49 |  47.0 |
|      trade name     | 14.72 | 17.82 |
|      microwave      | 50.91 | 60.37 |
|         pot         |  21.6 | 30.02 |
|        animal       | 47.97 | 56.06 |
|       bicycle       | 43.42 | 67.29 |
|         lake        | 53.73 | 67.57 |
|      dishwasher     | 49.79 | 57.76 |
|        screen       | 62.75 |  77.4 |
|       blanket       |  3.75 |  5.13 |
|      sculpture      |  43.0 | 66.32 |
|         hood        | 44.14 | 51.28 |
|        sconce       | 19.87 | 30.76 |
|         vase        | 13.69 | 22.36 |
|    traffic light    | 15.03 | 27.49 |
|         tray        |  5.91 | 10.52 |
|        ashcan       | 21.64 | 37.14 |
|         fan         |  26.7 | 42.29 |
|         pier        | 49.88 | 74.73 |
|      crt screen     | 11.85 | 26.83 |
|        plate        | 35.81 | 46.86 |
|       monitor       | 11.11 | 14.77 |
|    bulletin board   | 24.07 | 30.95 |
|        shower       |  0.96 |  2.61 |
|       radiator      | 40.35 | 49.68 |
|        glass        |  6.14 |  6.8  |
|        clock        |  7.66 | 10.46 |
|         flag        | 25.27 | 32.37 |
+---------------------+-------+-------+
10/06 08:39:28 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 73.9300  mIoU: 36.2100  mAcc: 48.5000  data_time: 0.0018  time: 1.1334
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
10/06 08:39:31 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1941533173
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1941533173
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:39:33 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:39:36,409 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:39:36,409 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:39:36,409 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:39:36,409 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 08:39:36,409 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:39:36,409 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:39:36,409 - mmseg - INFO - res_post_norm: False
2024-10-06 08:39:36,409 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:39:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:39:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:39:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 08:39:40 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 08:40:23 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:27:49  time: 0.4181  data_time: 0.0016  memory: 16851  
10/06 08:40:47 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:10  time: 0.5633  data_time: 0.0016  memory: 16820  
10/06 08:41:01 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:29  time: 0.2546  data_time: 0.0016  memory: 9701  
10/06 08:41:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:14:56  time: 0.3419  data_time: 0.0015  memory: 11263  
10/06 08:41:39 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:51  time: 0.1956  data_time: 0.0015  memory: 11241  
10/06 08:41:55 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:42  time: 0.0773  data_time: 0.0016  memory: 11267  
10/06 08:42:13 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:58  time: 0.2279  data_time: 0.0015  memory: 11274  
10/06 08:42:27 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:05  time: 0.2327  data_time: 0.0014  memory: 11243  
10/06 08:42:34 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:58  time: 0.1762  data_time: 0.0014  memory: 9517  
10/06 08:42:40 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:00  time: 0.0757  data_time: 0.0015  memory: 8809  
10/06 08:42:48 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:13  time: 0.2388  data_time: 0.0015  memory: 9892  
10/06 08:42:54 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:32  time: 0.2241  data_time: 0.0016  memory: 9701  
10/06 08:43:04 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:03  time: 0.2614  data_time: 0.0016  memory: 9705  
10/06 08:43:18 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:43  time: 0.0778  data_time: 0.0016  memory: 11272  
10/06 08:43:31 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:24  time: 0.5759  data_time: 0.0015  memory: 9887  
10/06 08:43:36 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:54  time: 0.0726  data_time: 0.0016  memory: 9703  
10/06 08:43:40 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:24  time: 0.0730  data_time: 0.0016  memory: 693  
10/06 08:43:47 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:01  time: 0.1709  data_time: 0.0014  memory: 8958  
10/06 08:44:00 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:46  time: 0.3347  data_time: 0.0015  memory: 10823  
10/06 08:44:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:27  time: 0.0710  data_time: 0.0015  memory: 10825  
10/06 08:44:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:11  time: 0.4215  data_time: 0.0015  memory: 10634  
10/06 08:44:27 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:54  time: 0.0741  data_time: 0.0016  memory: 9889  
10/06 08:44:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:36  time: 0.2017  data_time: 0.0015  memory: 8819  
10/06 08:44:38 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:18  time: 0.0739  data_time: 0.0015  memory: 1883  
10/06 08:44:45 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:02  time: 0.1913  data_time: 0.0015  memory: 11263  
10/06 08:44:48 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:45  time: 0.0740  data_time: 0.0015  memory: 695  
10/06 08:44:53 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:30  time: 0.0714  data_time: 0.0015  memory: 8622  
10/06 08:45:04 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:18  time: 0.2673  data_time: 0.0015  memory: 10447  
10/06 08:45:10 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:04  time: 0.2247  data_time: 0.0015  memory: 8958  
10/06 08:45:14 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:51  time: 0.0744  data_time: 0.0015  memory: 694  
10/06 08:45:19 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:38  time: 0.0769  data_time: 0.0015  memory: 10635  
10/06 08:45:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:25  time: 0.0700  data_time: 0.0027  memory: 692  
10/06 08:45:32 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:14  time: 0.0690  data_time: 0.0014  memory: 11273  
10/06 08:45:40 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:03  time: 0.0718  data_time: 0.0016  memory: 9145  
10/06 08:45:47 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:52  time: 0.0765  data_time: 0.0014  memory: 10265  
10/06 08:45:52 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:41  time: 0.0750  data_time: 0.0016  memory: 8624  
10/06 08:45:55 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:30  time: 0.0742  data_time: 0.0016  memory: 642  
10/06 08:46:00 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:19  time: 0.0760  data_time: 0.0015  memory: 8660  
10/06 08:46:08 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0739  data_time: 0.0015  memory: 8823  
10/06 08:46:15 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0674  data_time: 0.0014  memory: 8584  
10/06 08:46:15 - mmengine - INFO - per class results:
10/06 08:46:15 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.69 | 88.38 |
|       building      | 78.91 | 94.06 |
|         sky         | 93.49 | 97.19 |
|        floor        |  79.0 | 91.31 |
|         tree        | 70.49 | 83.41 |
|       ceiling       | 82.81 | 91.23 |
|         road        | 81.49 | 85.91 |
|         bed         | 88.21 | 94.11 |
|      windowpane     | 58.19 |  75.0 |
|        grass        | 61.75 | 83.75 |
|       cabinet       | 57.49 | 71.33 |
|       sidewalk      | 63.41 | 84.27 |
|        person       | 76.59 | 87.36 |
|        earth        | 31.23 | 43.76 |
|         door        |  44.7 |  58.7 |
|        table        | 53.97 | 75.12 |
|       mountain      | 53.67 | 61.51 |
|        plant        | 47.55 | 57.46 |
|       curtain       | 66.85 | 81.39 |
|        chair        | 51.95 | 64.63 |
|         car         | 81.05 | 88.38 |
|        water        | 49.81 | 70.37 |
|       painting      |  70.4 | 87.59 |
|         sofa        | 61.35 |  86.8 |
|        shelf        | 42.55 | 62.03 |
|        house        | 33.58 | 38.21 |
|         sea         | 49.21 | 63.65 |
|        mirror       | 62.01 |  69.2 |
|         rug         | 57.66 | 65.26 |
|        field        | 26.08 | 43.12 |
|       armchair      | 36.07 | 49.39 |
|         seat        | 62.37 |  78.7 |
|        fence        | 36.56 | 47.56 |
|         desk        | 38.46 | 49.76 |
|         rock        | 38.08 | 68.39 |
|       wardrobe      | 50.89 | 71.08 |
|         lamp        | 58.68 | 70.69 |
|       bathtub       | 74.98 | 81.55 |
|       railing       | 31.18 | 39.57 |
|       cushion       | 53.45 | 63.15 |
|         base        | 14.27 | 17.38 |
|         box         | 21.51 | 29.32 |
|        column       | 37.09 | 44.49 |
|      signboard      |  33.4 |  44.1 |
|   chest of drawers  | 39.77 | 56.64 |
|       counter       | 38.17 | 48.64 |
|         sand        | 39.18 | 53.02 |
|         sink        | 67.17 |  75.8 |
|      skyscraper     |  60.1 | 63.21 |
|      fireplace      | 69.42 | 79.65 |
|     refrigerator    | 74.34 |  84.2 |
|      grandstand     | 40.26 | 66.88 |
|         path        | 18.93 | 29.74 |
|        stairs       | 31.02 | 46.17 |
|        runway       |  69.8 | 93.57 |
|         case        | 57.86 | 68.82 |
|      pool table     | 91.36 | 95.64 |
|        pillow       | 57.25 | 68.79 |
|     screen door     | 58.12 | 67.28 |
|       stairway      |  26.1 | 31.11 |
|        river        |  2.28 |  4.53 |
|        bridge       | 53.83 | 61.04 |
|       bookcase      | 39.14 | 49.94 |
|        blind        | 23.76 | 26.54 |
|     coffee table    | 54.11 | 78.94 |
|        toilet       | 84.55 | 88.34 |
|        flower       | 30.94 | 44.67 |
|         book        | 45.17 | 64.17 |
|         hill        | 11.63 | 14.48 |
|        bench        | 46.37 |  53.4 |
|      countertop     |  55.5 | 63.98 |
|        stove        | 70.97 | 77.57 |
|         palm        | 47.16 | 60.83 |
|    kitchen island   | 31.13 | 49.06 |
|       computer      | 56.93 | 65.27 |
|     swivel chair    |  45.2 |  53.6 |
|         boat        | 36.83 | 38.63 |
|         bar         | 32.12 | 37.98 |
|    arcade machine   | 27.02 | 28.39 |
|        hovel        |  3.02 |  3.22 |
|         bus         | 85.15 | 93.65 |
|        towel        | 50.37 | 54.56 |
|        light        |  52.3 | 60.83 |
|        truck        | 22.82 | 35.17 |
|        tower        | 13.34 | 20.36 |
|      chandelier     | 59.47 | 73.32 |
|        awning       | 23.07 | 24.23 |
|     streetlight     | 25.11 | 33.64 |
|        booth        | 41.48 | 43.74 |
| television receiver | 59.14 | 74.21 |
|       airplane      |  51.0 | 56.06 |
|      dirt track     |  9.8  | 15.55 |
|       apparel       | 35.86 |  47.9 |
|         pole        | 25.52 | 35.92 |
|         land        |  2.93 |  4.19 |
|      bannister      |  5.8  |  7.06 |
|      escalator      | 21.35 | 22.56 |
|       ottoman       | 43.26 | 54.35 |
|        bottle       | 27.71 | 40.81 |
|        buffet       | 41.43 |  47.4 |
|        poster       | 27.44 | 38.14 |
|        stage        | 13.08 | 16.68 |
|         van         | 37.65 | 58.11 |
|         ship        |  5.4  |  7.91 |
|       fountain      |  1.93 |  1.94 |
|    conveyer belt    | 75.91 | 80.94 |
|        canopy       | 10.36 | 10.99 |
|        washer       | 66.17 | 68.27 |
|      plaything      | 20.27 | 30.55 |
|    swimming pool    | 32.98 |  51.8 |
|        stool        | 41.27 | 52.58 |
|        barrel       | 37.52 | 65.34 |
|        basket       | 21.79 | 26.29 |
|      waterfall      | 29.87 |  38.2 |
|         tent        | 95.18 | 97.37 |
|         bag         |  6.47 |  7.13 |
|       minibike      | 41.27 | 43.19 |
|        cradle       | 76.91 | 94.72 |
|         oven        | 32.43 |  36.9 |
|         ball        | 44.82 | 58.29 |
|         food        | 54.98 | 63.17 |
|         step        |  7.47 |  9.15 |
|         tank        | 31.02 | 31.52 |
|      trade name     |  31.2 |  37.5 |
|      microwave      | 40.13 | 44.48 |
|         pot         | 44.31 | 51.38 |
|        animal       | 50.15 | 53.56 |
|       bicycle       | 50.24 | 64.02 |
|         lake        | 62.58 | 65.85 |
|      dishwasher     | 65.82 | 76.59 |
|        screen       | 62.72 | 85.78 |
|       blanket       |  9.93 | 11.26 |
|      sculpture      | 45.95 | 50.62 |
|         hood        | 54.17 |  57.1 |
|        sconce       | 43.25 | 52.06 |
|         vase        | 26.05 | 36.96 |
|    traffic light    | 24.85 | 34.47 |
|         tray        | 10.54 | 19.98 |
|        ashcan       | 39.81 | 49.99 |
|         fan         | 55.49 | 65.39 |
|         pier        | 33.34 |  45.8 |
|      crt screen     | 11.31 | 19.98 |
|        plate        | 45.29 | 52.75 |
|       monitor       | 40.93 | 47.54 |
|    bulletin board   | 30.99 | 34.31 |
|        shower       |  2.23 |  3.28 |
|       radiator      | 51.11 | 53.65 |
|        glass        |  7.67 |  8.17 |
|        clock        | 21.97 | 26.75 |
|         flag        | 36.49 | 38.83 |
+---------------------+-------+-------+
10/06 08:46:15 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.8700  mIoU: 43.8800  mAcc: 53.4400  data_time: 0.0017  time: 0.1974
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
10/06 08:46:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 701183824
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 701183824
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:46:20 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_t_512_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:46:23,817 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:46:23,817 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:46:23,817 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:46:23,817 - mmseg - INFO - using dpr: linear, 0.2
2024-10-06 08:46:23,817 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:46:23,817 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:46:23,817 - mmseg - INFO - res_post_norm: False
2024-10-06 08:46:23,817 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:46:25 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:46:25 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:46:26 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 08:46:28 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_t_512_160k_ade20k.pth
10/06 08:47:11 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:28:05  time: 0.4262  data_time: 0.0016  memory: 16851  
10/06 08:47:35 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:21:22  time: 0.5726  data_time: 0.0017  memory: 16820  
10/06 08:47:49 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:16:40  time: 0.2587  data_time: 0.0016  memory: 9701  
10/06 08:48:08 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:07  time: 0.3481  data_time: 0.0015  memory: 11263  
10/06 08:48:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:02  time: 0.2015  data_time: 0.0015  memory: 11241  
10/06 08:48:44 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:52  time: 0.0776  data_time: 0.0016  memory: 11267  
10/06 08:49:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:07  time: 0.2318  data_time: 0.0015  memory: 11274  
10/06 08:49:16 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:15  time: 0.2448  data_time: 0.0015  memory: 11243  
10/06 08:49:24 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:06  time: 0.1771  data_time: 0.0014  memory: 9517  
10/06 08:49:30 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:07  time: 0.0810  data_time: 0.0015  memory: 8809  
10/06 08:49:38 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:21  time: 0.2447  data_time: 0.0016  memory: 9892  
10/06 08:49:45 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:39  time: 0.2253  data_time: 0.0030  memory: 9701  
10/06 08:49:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:10  time: 0.2661  data_time: 0.0023  memory: 9705  
10/06 08:50:08 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:49  time: 0.0834  data_time: 0.0015  memory: 11272  
10/06 08:50:22 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:30  time: 0.5804  data_time: 0.0015  memory: 9887  
10/06 08:50:28 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:59  time: 0.0800  data_time: 0.0016  memory: 9703  
10/06 08:50:32 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:29  time: 0.0827  data_time: 0.0016  memory: 693  
10/06 08:50:39 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:07  time: 0.1767  data_time: 0.0014  memory: 8958  
10/06 08:50:52 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:52  time: 0.3403  data_time: 0.0015  memory: 10823  
10/06 08:51:00 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:32  time: 0.0767  data_time: 0.0015  memory: 10825  
10/06 08:51:11 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:16  time: 0.4274  data_time: 0.0015  memory: 10634  
10/06 08:51:20 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:59  time: 0.0790  data_time: 0.0016  memory: 9889  
10/06 08:51:27 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:41  time: 0.2057  data_time: 0.0015  memory: 8819  
10/06 08:51:31 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:22  time: 0.0789  data_time: 0.0015  memory: 1883  
10/06 08:51:38 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:06  time: 0.2013  data_time: 0.0015  memory: 11263  
10/06 08:51:42 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:49  time: 0.0825  data_time: 0.0015  memory: 695  
10/06 08:51:47 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:33  time: 0.0777  data_time: 0.0015  memory: 8622  
10/06 08:51:58 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:21  time: 0.2736  data_time: 0.0015  memory: 10447  
10/06 08:52:05 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:07  time: 0.2269  data_time: 0.0033  memory: 8958  
10/06 08:52:09 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:53  time: 0.0766  data_time: 0.0015  memory: 694  
10/06 08:52:14 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:40  time: 0.0831  data_time: 0.0015  memory: 10635  
10/06 08:52:18 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:27  time: 0.0777  data_time: 0.0016  memory: 692  
10/06 08:52:28 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:16  time: 0.0739  data_time: 0.0014  memory: 11273  
10/06 08:52:36 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:04  time: 0.0810  data_time: 0.0016  memory: 9145  
10/06 08:52:43 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:53  time: 0.0768  data_time: 0.0014  memory: 10265  
10/06 08:52:48 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:42  time: 0.0819  data_time: 0.0016  memory: 8624  
10/06 08:52:52 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0805  data_time: 0.0016  memory: 642  
10/06 08:52:57 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0795  data_time: 0.0015  memory: 8660  
10/06 08:53:05 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0711  data_time: 0.0014  memory: 8823  
10/06 08:53:12 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0685  data_time: 0.0013  memory: 8584  
10/06 08:53:12 - mmengine - INFO - per class results:
10/06 08:53:12 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.86 |  88.9 |
|       building      | 81.05 | 93.03 |
|         sky         |  93.9 | 97.16 |
|        floor        | 78.12 | 90.83 |
|         tree        | 72.73 | 87.72 |
|       ceiling       | 81.68 | 89.73 |
|         road        | 81.03 | 87.51 |
|         bed         | 87.78 | 94.48 |
|      windowpane     | 59.64 | 75.88 |
|        grass        | 68.08 | 82.45 |
|       cabinet       | 57.23 | 69.87 |
|       sidewalk      | 62.05 | 81.49 |
|        person       | 77.51 |  89.7 |
|        earth        | 30.73 | 44.65 |
|         door        | 44.88 | 58.86 |
|        table        | 56.42 | 74.25 |
|       mountain      | 58.59 |  75.7 |
|        plant        |  49.4 | 58.58 |
|       curtain       | 70.82 | 81.61 |
|        chair        | 51.97 | 62.89 |
|         car         | 83.44 |  92.1 |
|        water        | 47.65 | 62.74 |
|       painting      | 70.61 | 84.55 |
|         sofa        | 63.23 | 83.17 |
|        shelf        | 42.19 | 63.18 |
|        house        | 34.36 | 43.55 |
|         sea         | 53.01 | 75.17 |
|        mirror       | 59.49 | 67.03 |
|         rug         | 55.04 | 63.03 |
|        field        | 28.48 | 43.28 |
|       armchair      | 38.26 | 54.17 |
|         seat        | 57.65 | 78.86 |
|        fence        | 39.69 | 54.08 |
|         desk        | 46.47 |  61.7 |
|         rock        |  42.2 | 64.87 |
|       wardrobe      | 47.05 |  68.8 |
|         lamp        | 58.95 | 70.63 |
|       bathtub       | 76.22 | 84.27 |
|       railing       |  29.5 | 37.36 |
|       cushion       |  53.8 | 65.14 |
|         base        | 13.46 | 17.16 |
|         box         | 17.51 |  22.4 |
|        column       | 40.37 | 49.35 |
|      signboard      | 32.83 | 42.03 |
|   chest of drawers  | 43.76 | 56.77 |
|       counter       |  35.0 | 40.76 |
|         sand        | 38.86 | 54.16 |
|         sink        | 66.94 | 77.39 |
|      skyscraper     |  60.1 | 76.97 |
|      fireplace      | 72.29 | 83.61 |
|     refrigerator    | 74.76 | 86.63 |
|      grandstand     | 44.91 |  76.3 |
|         path        | 20.16 |  32.0 |
|        stairs       | 30.62 | 41.97 |
|        runway       | 70.19 | 95.62 |
|         case        | 63.79 | 73.38 |
|      pool table     |  91.4 | 95.78 |
|        pillow       | 55.57 | 67.86 |
|     screen door     | 51.23 | 60.06 |
|       stairway      | 27.35 | 32.83 |
|        river        | 10.09 | 20.75 |
|        bridge       | 61.23 | 71.54 |
|       bookcase      | 40.54 | 54.08 |
|        blind        | 15.87 | 16.35 |
|     coffee table    | 55.31 | 79.32 |
|        toilet       | 80.92 | 88.27 |
|        flower       | 40.36 | 52.33 |
|         book        | 49.59 | 65.35 |
|         hill        | 15.33 | 19.46 |
|        bench        | 47.99 | 56.06 |
|      countertop     | 53.19 | 63.63 |
|        stove        | 71.96 | 82.07 |
|         palm        | 52.11 | 71.52 |
|    kitchen island   | 27.44 | 43.44 |
|       computer      | 58.88 | 67.01 |
|     swivel chair    | 46.75 | 57.07 |
|         boat        | 42.24 | 48.29 |
|         bar         | 35.65 | 41.17 |
|    arcade machine   | 28.85 |  30.4 |
|        hovel        | 13.08 | 14.46 |
|         bus         | 86.44 | 93.04 |
|        towel        | 53.56 | 58.32 |
|        light        | 47.74 | 52.47 |
|        truck        | 33.45 | 47.09 |
|        tower        | 19.37 | 29.98 |
|      chandelier     | 63.59 |  75.6 |
|        awning       | 24.49 | 27.27 |
|     streetlight     | 23.73 | 29.74 |
|        booth        | 59.37 |  64.4 |
| television receiver | 63.33 | 74.24 |
|       airplane      | 52.47 |  62.7 |
|      dirt track     |  4.46 | 12.23 |
|       apparel       | 29.33 | 41.67 |
|         pole        | 25.87 | 36.27 |
|         land        |  3.39 |  4.71 |
|      bannister      |  7.32 |  9.16 |
|      escalator      | 21.49 | 25.84 |
|       ottoman       | 46.66 | 60.42 |
|        bottle       | 30.38 | 38.48 |
|        buffet       | 43.23 | 51.84 |
|        poster       | 26.27 | 38.19 |
|        stage        | 11.85 | 14.45 |
|         van         | 43.75 | 60.49 |
|         ship        | 17.38 | 27.14 |
|       fountain      |  5.69 |  5.72 |
|    conveyer belt    | 68.76 | 81.88 |
|        canopy       | 13.97 |  15.0 |
|        washer       | 68.77 | 74.56 |
|      plaything      | 25.52 | 33.19 |
|    swimming pool    | 43.26 | 49.38 |
|        stool        | 40.74 |  51.5 |
|        barrel       | 32.23 | 52.16 |
|        basket       | 27.12 |  32.9 |
|      waterfall      | 49.81 | 59.93 |
|         tent        | 94.23 | 97.73 |
|         bag         |  6.7  |  8.34 |
|       minibike      | 65.36 | 70.75 |
|        cradle       | 74.71 | 94.98 |
|         oven        | 33.92 | 38.75 |
|         ball        | 38.56 | 45.54 |
|         food        |  46.8 | 53.28 |
|         step        |  7.88 |  9.79 |
|         tank        | 41.41 | 41.71 |
|      trade name     | 25.05 |  29.3 |
|      microwave      | 67.67 | 74.87 |
|         pot         | 44.53 | 51.74 |
|        animal       | 55.77 | 57.78 |
|       bicycle       | 53.62 | 71.16 |
|         lake        | 62.67 |  68.2 |
|      dishwasher     | 60.81 | 68.61 |
|        screen       |  69.3 | 85.88 |
|       blanket       |  8.42 |  9.08 |
|      sculpture      | 59.44 | 67.87 |
|         hood        | 55.73 |  58.6 |
|        sconce       | 43.72 | 52.57 |
|         vase        | 29.66 | 38.62 |
|    traffic light    | 27.17 | 39.48 |
|         tray        |  8.83 | 16.32 |
|        ashcan       | 36.13 |  47.9 |
|         fan         | 54.42 | 66.64 |
|         pier        | 41.31 | 58.96 |
|      crt screen     |  4.37 | 11.11 |
|        plate        | 50.95 | 60.47 |
|       monitor       |  4.36 |  5.41 |
|    bulletin board   | 38.69 | 42.65 |
|        shower       |  3.87 |  12.8 |
|       radiator      | 52.11 | 55.47 |
|        glass        |  7.84 |  8.14 |
|        clock        | 20.06 |  22.5 |
|         flag        | 41.66 | 45.68 |
+---------------------+-------+-------+
10/06 08:53:12 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.4200  mIoU: 45.4500  mAcc: 55.3900  data_time: 0.0017  time: 0.2024
Finished processing corruption type: jpeg_compression
Runtime: 1728197593

============================= JOB FEEDBACK =============================

NodeName=uc2n484
Job ID: 24369580
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 06:35:48
CPU Efficiency: 5.28% of 5-05:02:24 core-walltime
Job Wall-clock time: 07:48:54
Memory Utilized: 2.54 GB
Memory Efficiency: 2.54% of 100.00 GB
