Started at Fri Oct 25 23:38:40 CEST 2024
10/25 23:38:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 265179174
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 265179174
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/25 23:38:47 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    512,
    512,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2048,
                512,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/upernet/upernet_internimage_t_512_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    attack_cfg=dict(
        alpha=0.1, epsilon=64, iterations=20, name='cospgd', norm='l2'),
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=256,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=64,
        core_op='DCNv3',
        depths=[
            4,
            4,
            18,
            4,
        ],
        drop_path_rate=0.2,
        groups=[
            4,
            8,
            16,
            32,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            256,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=True,
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=6e-05,
    paramwise_cfg=dict(
        depths=[
            4,
            4,
            18,
            4,
        ], layer_decay_rate=1.0, num_layers=30),
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_t_1k_224.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2048,
            512,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../aa_workdir/ade/upernet/upernet_internimage_t_512_160k_ade20k/attack_cospgd/norm_l2/iterations_20/epsilon_64/alpha_0.1/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/upernet/upernet_internimage_t_512_160k_ade20k/attack_cospgd/norm_l2/iterations_20/epsilon_64/alpha_0.1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-25 23:38:52,513 - mmseg - INFO - using core type: DCNv3
2024-10-25 23:38:52,513 - mmseg - INFO - using activation layer: GELU
2024-10-25 23:38:52,513 - mmseg - INFO - using main norm layer: LN
2024-10-25 23:38:52,513 - mmseg - INFO - using dpr: linear, 0.2
2024-10-25 23:38:52,513 - mmseg - INFO - level2_post_norm: False
2024-10-25 23:38:52,513 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-25 23:38:52,513 - mmseg - INFO - res_post_norm: False
2024-10-25 23:38:52,513 - mmseg - INFO - use_dcn_v4_op: False
10/25 23:38:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/25 23:38:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/25 23:38:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/upernet/upernet_internimage_t_512_160k_ade20k.pth
10/25 23:38:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/upernet/upernet_internimage_t_512_160k_ade20k.pth
10/25 23:44:33 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:36:33  time: 5.8057  data_time: 0.0025  memory: 18142  
10/25 23:49:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:16:25  time: 6.1786  data_time: 0.0025  memory: 15620  
10/25 23:53:51 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:03:08  time: 5.4064  data_time: 0.0018  memory: 14485  
10/25 23:58:30 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:55:38  time: 5.3235  data_time: 0.0017  memory: 15791  
10/26 00:02:58 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:47:50  time: 4.9122  data_time: 0.0016  memory: 16275  
10/26 00:07:21 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:40:44  time: 4.9604  data_time: 0.0018  memory: 15955  
10/26 00:11:49 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:34:47  time: 4.8765  data_time: 0.0015  memory: 16254  
10/26 00:16:07 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:28:31  time: 5.0086  data_time: 0.0015  memory: 15648  
10/26 00:20:00 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:21:18  time: 4.6113  data_time: 0.0015  memory: 14168  
10/26 00:24:03 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:15:09  time: 4.6361  data_time: 0.0015  memory: 12306  
10/26 00:28:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:10:04  time: 5.2264  data_time: 0.0016  memory: 14664  
10/26 00:32:25 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:04:40  time: 5.3022  data_time: 0.0017  memory: 14337  
10/26 00:36:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:59:35  time: 5.1938  data_time: 0.0015  memory: 14507  
10/26 00:41:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:55:11  time: 4.9748  data_time: 0.0016  memory: 16165  
10/26 00:45:26 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:50:42  time: 6.0815  data_time: 0.0472  memory: 14714  
10/26 00:49:22 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:45:32  time: 4.8155  data_time: 0.0016  memory: 14500  
10/26 00:53:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:40:41  time: 4.8866  data_time: 0.0016  memory: 8072  
10/26 00:57:17 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:35:41  time: 4.5453  data_time: 0.0015  memory: 13301  
10/26 01:01:35 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:31:15  time: 5.2614  data_time: 0.0016  memory: 16171  
10/26 01:05:34 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:26:34  time: 4.6001  data_time: 0.0015  memory: 16194  
10/26 01:09:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:22:10  time: 5.5254  data_time: 0.0015  memory: 15672  
10/26 01:13:58 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:17:41  time: 4.7738  data_time: 0.0016  memory: 14629  
10/26 01:17:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:13:09  time: 4.9472  data_time: 0.0015  memory: 12580  
10/26 01:22:04 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:08:42  time: 4.5651  data_time: 0.0015  memory: 16649  
10/26 01:25:59 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:04:11  time: 4.8763  data_time: 0.0014  memory: 15712  
10/26 01:29:47 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:59:38  time: 4.6745  data_time: 0.0015  memory: 8153  
10/26 01:33:41 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:55:13  time: 4.4685  data_time: 0.0015  memory: 11898  
10/26 01:37:47 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:50:54  time: 5.0645  data_time: 0.0014  memory: 15517  
10/26 01:41:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:46:30  time: 4.9058  data_time: 0.0014  memory: 13332  
10/26 01:45:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:42:08  time: 4.3777  data_time: 0.0014  memory: 8072  
10/26 01:49:34 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:37:54  time: 4.7421  data_time: 0.0018  memory: 15881  
10/26 01:53:25 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:33:36  time: 4.6705  data_time: 0.0017  memory: 7986  
10/26 01:57:25 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:29:21  time: 4.3873  data_time: 0.0014  memory: 16267  
10/26 02:01:24 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:25:07  time: 4.7937  data_time: 0.0016  memory: 13686  
10/26 02:05:26 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:20:54  time: 4.5456  data_time: 0.0014  memory: 15360  
10/26 02:09:19 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:16:41  time: 4.8434  data_time: 0.0016  memory: 12036  
10/26 02:13:19 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:12:30  time: 4.7953  data_time: 0.0016  memory: 7261  
10/26 02:17:08 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:08:19  time: 4.4804  data_time: 0.0014  memory: 13985  
10/26 02:21:09 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:04:09  time: 4.5701  data_time: 0.0014  memory: 15890  
10/26 02:25:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 4.3039  data_time: 0.0014  memory: 12728  
10/26 02:25:06 - mmengine - INFO - per class results:
10/26 02:25:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 60.14 | 75.76 |
|       building      | 68.86 | 83.41 |
|         sky         | 88.33 | 92.18 |
|        floor        | 68.08 |  81.8 |
|         tree        | 64.97 |  81.7 |
|       ceiling       | 65.07 | 77.76 |
|         road        | 64.31 | 75.99 |
|         bed         |  76.6 | 85.93 |
|      windowpane     | 45.17 | 64.77 |
|        grass        | 56.34 | 72.59 |
|       cabinet       | 37.16 | 53.99 |
|       sidewalk      | 37.18 | 57.77 |
|        person       | 72.98 | 87.97 |
|        earth        | 16.53 | 26.08 |
|         door        | 15.77 | 29.25 |
|        table        | 44.44 | 64.15 |
|       mountain      | 36.73 | 56.68 |
|        plant        | 38.49 | 50.55 |
|       curtain       |  49.7 |  68.2 |
|        chair        | 39.51 | 53.82 |
|         car         | 77.89 | 87.68 |
|        water        | 33.83 |  48.2 |
|       painting      | 55.46 | 78.21 |
|         sofa        | 41.12 | 60.89 |
|        shelf        | 24.91 | 41.25 |
|        house        |  8.46 | 16.38 |
|         sea         | 35.13 | 56.86 |
|        mirror       | 42.42 | 53.08 |
|         rug         |  34.2 | 49.24 |
|        field        |  14.2 | 29.58 |
|       armchair      | 19.65 | 36.13 |
|         seat        |  37.4 | 61.58 |
|        fence        | 27.68 | 41.91 |
|         desk        | 27.75 | 44.24 |
|         rock        | 17.36 |  28.2 |
|       wardrobe      | 21.93 | 38.39 |
|         lamp        | 52.52 | 68.51 |
|       bathtub       | 50.31 |  63.8 |
|       railing       | 21.06 |  31.7 |
|       cushion       | 41.33 | 53.72 |
|         base        |  3.53 |  5.73 |
|         box         |  11.7 | 18.26 |
|        column       | 24.64 | 35.72 |
|      signboard      | 29.22 | 45.69 |
|   chest of drawers  | 14.25 | 26.12 |
|       counter       |  8.84 | 13.09 |
|         sand        | 13.75 | 21.18 |
|         sink        | 56.41 | 71.88 |
|      skyscraper     | 31.33 | 42.59 |
|      fireplace      | 53.26 | 74.63 |
|     refrigerator    | 43.39 | 63.03 |
|      grandstand     | 32.56 | 60.41 |
|         path        |  8.29 | 14.69 |
|        stairs       | 24.21 | 35.56 |
|        runway       | 57.14 | 75.45 |
|         case        | 32.98 | 43.14 |
|      pool table     |  85.1 | 93.43 |
|        pillow       | 39.34 | 55.57 |
|     screen door     | 14.89 | 24.12 |
|       stairway      | 22.44 | 28.62 |
|        river        |  5.61 | 16.74 |
|        bridge       | 17.49 | 32.57 |
|       bookcase      | 24.61 | 36.86 |
|        blind        | 10.08 | 13.23 |
|     coffee table    | 41.47 | 71.24 |
|        toilet       | 72.36 | 80.28 |
|        flower       | 37.69 | 53.57 |
|         book        |  45.6 | 66.51 |
|         hill        |  2.86 |  5.98 |
|        bench        | 30.44 | 43.51 |
|      countertop     | 40.22 | 60.75 |
|        stove        | 50.81 | 64.54 |
|         palm        | 44.02 | 66.55 |
|    kitchen island   | 12.81 |  28.9 |
|       computer      | 51.38 | 60.46 |
|     swivel chair    | 25.93 | 40.78 |
|         boat        | 29.66 | 44.23 |
|         bar         | 13.86 | 19.21 |
|    arcade machine   | 18.02 | 20.58 |
|        hovel        |  0.22 |  0.3  |
|         bus         |  72.5 | 86.37 |
|        towel        | 44.49 | 58.74 |
|        light        | 46.24 | 52.99 |
|        truck        | 20.02 | 33.88 |
|        tower        |  5.5  | 11.96 |
|      chandelier     |  58.4 | 72.61 |
|        awning       | 13.64 | 22.85 |
|     streetlight     | 22.17 | 33.17 |
|        booth        | 30.67 | 36.85 |
| television receiver | 42.29 | 53.26 |
|       airplane      | 50.58 | 63.29 |
|      dirt track     |  0.02 |  0.07 |
|       apparel       | 23.66 | 39.59 |
|         pole        | 13.92 | 21.77 |
|         land        |  0.23 |  0.39 |
|      bannister      |  6.2  |  7.84 |
|      escalator      | 19.34 | 22.02 |
|       ottoman       | 15.75 | 33.02 |
|        bottle       | 31.88 | 46.78 |
|        buffet       | 25.47 | 33.77 |
|        poster       |  9.78 | 17.14 |
|        stage        |  2.65 |  4.11 |
|         van         | 29.59 | 47.13 |
|         ship        |  4.04 |  7.07 |
|       fountain      |  1.59 |  1.66 |
|    conveyer belt    | 40.42 | 65.47 |
|        canopy       |  6.45 | 10.84 |
|        washer       | 54.79 | 67.83 |
|      plaything      | 15.18 | 27.91 |
|    swimming pool    |  16.3 | 25.76 |
|        stool        | 25.17 | 41.84 |
|        barrel       | 14.46 | 65.15 |
|        basket       | 23.52 | 35.04 |
|      waterfall      |  30.5 | 38.53 |
|         tent        | 87.31 | 98.03 |
|         bag         |  5.57 |  8.45 |
|       minibike      | 40.33 | 46.38 |
|        cradle       | 48.43 | 63.82 |
|         oven        |  9.43 | 14.52 |
|         ball        |  31.9 | 36.07 |
|         food        | 36.35 | 41.95 |
|         step        |  3.18 |  5.57 |
|         tank        |  2.5  |  2.64 |
|      trade name     | 21.62 | 29.68 |
|      microwave      | 27.03 | 32.21 |
|         pot         | 27.28 | 33.73 |
|        animal       |  41.3 | 44.35 |
|       bicycle       |  48.3 | 73.04 |
|         lake        | 37.82 | 49.97 |
|      dishwasher     | 29.68 | 41.53 |
|        screen       | 42.75 | 63.59 |
|       blanket       |  3.0  |  3.82 |
|      sculpture      | 34.17 | 54.59 |
|         hood        | 48.31 | 53.12 |
|        sconce       | 36.74 | 49.19 |
|         vase        | 29.74 | 43.84 |
|    traffic light    | 19.48 | 36.43 |
|         tray        |  9.14 | 21.44 |
|        ashcan       | 22.93 | 34.21 |
|         fan         | 56.08 | 69.23 |
|         pier        | 31.21 | 39.97 |
|      crt screen     |  3.56 |  9.86 |
|        plate        | 50.39 | 62.06 |
|       monitor       |  4.67 |  5.66 |
|    bulletin board   |  26.1 | 31.42 |
|        shower       |  1.13 |  13.7 |
|       radiator      | 37.95 | 48.05 |
|        glass        |  9.34 |  9.95 |
|        clock        | 17.11 |  22.4 |
|         flag        | 27.51 |  32.5 |
+---------------------+-------+-------+
10/26 02:25:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 69.8800  mIoU: 31.6000  mAcc: 43.4600  data_time: 0.0173  time: 4.9827
Runtime: 9988

============================= JOB FEEDBACK =============================

NodeName=uc2n487
Job ID: 24525264
Array Job ID: 24523761_1
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 02:35:28
CPU Efficiency: 11.64% of 22:15:36 core-walltime
Job Wall-clock time: 02:46:57
Memory Utilized: 3.81 GB
Memory Efficiency: 38.09% of 10.00 GB
