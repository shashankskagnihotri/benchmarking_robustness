Started at Sat Oct 26 06:04:37 CEST 2024
10/26 06:04:39 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1826441583
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1826441583
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/26 06:04:40 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/upernet/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    attack_cfg=dict(
        alpha=0.1, epsilon=64, iterations=20, name='pgd', norm='l2'),
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=True,
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../aa_workdir/ade/upernet/upernet_internimage_l_640_160k_ade20k/attack_pgd/norm_l2/iterations_20/epsilon_64/alpha_0.1/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/upernet/upernet_internimage_l_640_160k_ade20k/attack_pgd/norm_l2/iterations_20/epsilon_64/alpha_0.1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-26 06:04:43,636 - mmseg - INFO - using core type: DCNv3
2024-10-26 06:04:43,636 - mmseg - INFO - using activation layer: GELU
2024-10-26 06:04:43,636 - mmseg - INFO - using main norm layer: LN
2024-10-26 06:04:43,636 - mmseg - INFO - using dpr: linear, 0.4
2024-10-26 06:04:43,636 - mmseg - INFO - level2_post_norm: False
2024-10-26 06:04:43,636 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-26 06:04:43,636 - mmseg - INFO - res_post_norm: False
2024-10-26 06:04:43,636 - mmseg - INFO - use_dcn_v4_op: False
10/26 06:04:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/26 06:04:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/26 06:04:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/upernet/upernet_internimage_l_640_160k_ade20k.pth
10/26 06:04:54 - mmengine - INFO - Load checkpoint from ../checkpoint_files/upernet/upernet_internimage_l_640_160k_ade20k.pth
10/26 06:13:47 - mmengine - INFO - Iter(test) [  50/2000]    eta: 5:45:38  time: 10.1707  data_time: 0.0026  memory: 25977  
10/26 06:21:54 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 5:22:22  time: 10.3338  data_time: 0.0027  memory: 22996  
10/26 06:29:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 5:04:23  time: 9.4458  data_time: 0.0017  memory: 22154  
10/26 06:37:43 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 4:55:20  time: 9.4342  data_time: 0.0018  memory: 26305  
10/26 06:45:25 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 4:43:31  time: 8.8998  data_time: 0.0017  memory: 28748  
10/26 06:53:01 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 4:32:30  time: 8.9933  data_time: 0.0018  memory: 23350  
10/26 07:00:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 4:23:20  time: 8.5450  data_time: 0.0017  memory: 23459  
10/26 07:08:20 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 4:13:39  time: 9.1459  data_time: 0.0016  memory: 23842  
10/26 07:15:04 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 4:01:38  time: 8.2685  data_time: 0.0016  memory: 21726  
10/26 07:22:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 3:52:23  time: 8.4288  data_time: 0.0016  memory: 20112  
10/26 07:30:13 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 3:44:51  time: 9.5376  data_time: 0.0016  memory: 22486  
10/26 07:37:32 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 3:36:04  time: 9.4594  data_time: 0.0017  memory: 22018  
10/26 07:44:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 3:27:40  time: 9.0715  data_time: 0.0015  memory: 23474  
10/26 07:52:51 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 3:20:24  time: 9.0818  data_time: 0.0017  memory: 23678  
10/26 08:00:32 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 3:12:41  time: 9.7339  data_time: 0.0016  memory: 23851  
10/26 08:07:25 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 3:03:43  time: 8.8623  data_time: 0.0017  memory: 22182  
10/26 08:14:52 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:55:46  time: 8.9537  data_time: 0.0024  memory: 18482  
10/26 08:21:40 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:47:07  time: 7.9629  data_time: 0.0016  memory: 20517  
10/26 08:29:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:39:37  time: 9.1192  data_time: 0.0017  memory: 22765  
10/26 08:36:26 - mmengine - INFO - Iter(test) [1000/2000]    eta: 2:31:30  time: 8.3477  data_time: 0.0017  memory: 21668  
10/26 08:44:09 - mmengine - INFO - Iter(test) [1050/2000]    eta: 2:24:03  time: 9.8071  data_time: 0.0017  memory: 23186  
10/26 08:51:38 - mmengine - INFO - Iter(test) [1100/2000]    eta: 2:16:22  time: 8.4884  data_time: 0.0017  memory: 22445  
10/26 08:58:51 - mmengine - INFO - Iter(test) [1150/2000]    eta: 2:08:32  time: 8.9864  data_time: 0.0016  memory: 20848  
10/26 09:06:17 - mmengine - INFO - Iter(test) [1200/2000]    eta: 2:00:53  time: 8.4129  data_time: 0.0017  memory: 20956  
10/26 09:13:18 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:53:01  time: 8.7420  data_time: 0.0020  memory: 22824  
10/26 09:20:04 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:45:03  time: 8.7444  data_time: 0.0018  memory: 18693  
10/26 09:27:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:37:23  time: 8.0054  data_time: 0.0016  memory: 18708  
10/26 09:34:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:29:50  time: 9.4268  data_time: 0.0016  memory: 23668  
10/26 09:41:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:22:08  time: 9.2335  data_time: 0.0015  memory: 21126  
10/26 09:48:29 - mmengine - INFO - Iter(test) [1500/2000]    eta: 1:14:30  time: 7.9639  data_time: 0.0015  memory: 18481  
10/26 09:56:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 1:07:06  time: 8.9093  data_time: 0.0016  memory: 20740  
10/26 10:03:06 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:59:32  time: 8.5987  data_time: 0.0017  memory: 18341  
10/26 10:10:16 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:52:02  time: 7.8829  data_time: 0.0015  memory: 25774  
10/26 10:17:43 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:44:36  time: 8.8071  data_time: 0.0017  memory: 21012  
10/26 10:25:11 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:37:10  time: 8.4257  data_time: 0.0029  memory: 23417  
10/26 10:32:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:29:41  time: 8.9599  data_time: 0.0017  memory: 18839  
10/26 10:39:34 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:22:15  time: 8.8797  data_time: 0.0017  memory: 16766  
10/26 10:46:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:14:48  time: 8.2898  data_time: 0.0016  memory: 22461  
10/26 10:53:45 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:07:24  time: 8.3847  data_time: 0.0015  memory: 27224  
10/26 11:00:47 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 7.8166  data_time: 0.0015  memory: 22478  
10/26 11:00:47 - mmengine - INFO - per class results:
10/26 11:00:47 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 66.97 | 78.16 |
|       building      | 74.17 | 87.44 |
|         sky         | 89.33 | 92.42 |
|        floor        |  75.2 | 85.22 |
|         tree        | 69.85 | 84.92 |
|       ceiling       |  72.7 |  85.2 |
|         road        | 67.44 |  77.6 |
|         bed         | 86.21 | 94.39 |
|      windowpane     | 49.73 | 65.06 |
|        grass        | 58.12 |  73.6 |
|       cabinet       |  46.4 | 62.34 |
|       sidewalk      | 42.61 | 64.83 |
|        person       | 77.45 | 88.61 |
|        earth        |  23.1 | 34.74 |
|         door        | 28.13 |  44.7 |
|        table        | 52.09 | 67.98 |
|       mountain      | 43.73 | 63.99 |
|        plant        | 44.67 |  55.3 |
|       curtain       | 58.28 | 78.06 |
|        chair        | 48.55 | 61.76 |
|         car         | 78.88 | 89.72 |
|        water        | 41.55 |  52.0 |
|       painting      | 58.55 | 82.55 |
|         sofa        |  55.9 | 73.86 |
|        shelf        | 29.63 | 46.61 |
|        house        | 28.68 | 57.24 |
|         sea         | 47.62 |  67.2 |
|        mirror       | 51.44 | 62.77 |
|         rug         | 46.54 | 57.93 |
|        field        | 18.18 | 31.93 |
|       armchair      | 31.88 | 53.66 |
|         seat        | 45.05 | 67.23 |
|        fence        | 36.33 | 49.33 |
|         desk        | 31.27 | 53.32 |
|         rock        | 40.41 | 63.79 |
|       wardrobe      | 26.39 | 52.95 |
|         lamp        | 58.36 | 73.68 |
|       bathtub       | 61.84 | 78.48 |
|       railing       | 25.65 | 34.83 |
|       cushion       | 50.49 |  69.4 |
|         base        | 14.24 | 19.32 |
|         box         |  22.0 |  29.9 |
|        column       | 33.57 | 52.38 |
|      signboard      | 31.43 |  45.5 |
|   chest of drawers  | 25.98 | 53.35 |
|       counter       |  9.95 | 15.48 |
|         sand        | 37.66 | 52.82 |
|         sink        | 60.97 | 73.33 |
|      skyscraper     | 34.95 | 47.56 |
|      fireplace      | 57.48 | 88.78 |
|     refrigerator    | 59.78 | 80.42 |
|      grandstand     | 34.62 | 70.88 |
|         path        |  15.2 | 30.96 |
|        stairs       | 13.04 | 19.85 |
|        runway       |  60.1 | 82.46 |
|         case        | 33.32 | 53.49 |
|      pool table     |  87.4 | 96.32 |
|        pillow       | 41.97 | 47.65 |
|     screen door     | 34.73 | 41.14 |
|       stairway      | 20.38 | 35.08 |
|        river        |  5.49 | 17.99 |
|        bridge       | 23.68 | 33.42 |
|       bookcase      | 29.41 | 50.66 |
|        blind        |  32.8 | 47.25 |
|     coffee table    | 53.13 |  80.2 |
|        toilet       | 78.05 | 88.05 |
|        flower       | 40.17 | 54.83 |
|         book        | 47.05 | 70.36 |
|         hill        |  2.47 |  5.61 |
|        bench        |  36.4 | 51.16 |
|      countertop     | 47.51 | 69.28 |
|        stove        |  66.2 | 82.85 |
|         palm        | 44.23 | 78.33 |
|    kitchen island   | 29.28 | 64.99 |
|       computer      | 68.49 | 87.29 |
|     swivel chair    |  29.9 | 43.65 |
|         boat        | 31.71 | 51.73 |
|         bar         | 33.45 | 50.87 |
|    arcade machine   | 37.71 | 43.52 |
|        hovel        |  9.61 |  12.6 |
|         bus         | 77.24 | 95.73 |
|        towel        | 51.73 | 70.08 |
|        light        | 48.49 | 56.36 |
|        truck        | 23.17 | 44.93 |
|        tower        | 13.87 | 30.81 |
|      chandelier     | 65.31 | 82.29 |
|        awning       | 17.86 |  25.2 |
|     streetlight     | 23.27 | 31.11 |
|        booth        | 18.42 | 38.97 |
| television receiver | 50.85 | 67.71 |
|       airplane      | 56.47 | 64.38 |
|      dirt track     |  5.53 | 15.85 |
|       apparel       | 33.49 | 46.02 |
|         pole        | 13.73 |  18.1 |
|         land        |  0.08 |  0.17 |
|      bannister      | 10.56 | 14.59 |
|      escalator      | 45.35 | 81.96 |
|       ottoman       | 36.55 | 64.41 |
|        bottle       |  37.5 | 65.32 |
|        buffet       | 24.69 | 31.54 |
|        poster       | 12.65 | 24.51 |
|        stage        | 13.35 | 27.02 |
|         van         | 21.22 | 29.99 |
|         ship        | 54.09 | 90.58 |
|       fountain      |  20.2 |  21.1 |
|    conveyer belt    | 53.92 |  87.1 |
|        canopy       | 11.62 | 23.82 |
|        washer       | 63.15 |  73.2 |
|      plaything      |  31.0 |  56.7 |
|    swimming pool    | 44.72 | 56.74 |
|        stool        | 34.44 | 47.39 |
|        barrel       | 10.04 | 65.12 |
|        basket       | 25.45 |  39.8 |
|      waterfall      | 46.35 | 53.46 |
|         tent        | 57.11 | 99.27 |
|         bag         | 10.22 | 12.95 |
|       minibike      | 58.08 | 75.12 |
|        cradle       | 77.51 | 95.31 |
|         oven        | 14.16 | 36.77 |
|         ball        | 47.73 | 59.75 |
|         food        | 53.67 | 57.97 |
|         step        |  0.93 |  1.1  |
|         tank        | 54.42 | 63.35 |
|      trade name     | 17.25 | 20.12 |
|      microwave      | 51.94 | 62.75 |
|         pot         |  39.3 | 47.42 |
|        animal       | 56.04 | 57.47 |
|       bicycle       | 51.83 | 70.88 |
|         lake        | 32.59 | 63.73 |
|      dishwasher     | 42.39 | 57.71 |
|        screen       | 53.09 | 82.35 |
|       blanket       | 12.09 | 14.75 |
|      sculpture      | 46.45 | 78.39 |
|         hood        | 46.75 |  55.5 |
|        sconce       | 42.37 | 54.86 |
|         vase        | 36.71 | 47.68 |
|    traffic light    | 25.98 | 45.92 |
|         tray        |  3.68 |  5.53 |
|        ashcan       | 22.59 | 36.27 |
|         fan         | 56.11 |  79.6 |
|         pier        | 32.27 | 42.45 |
|      crt screen     |  2.07 |  7.21 |
|        plate        | 51.69 | 69.32 |
|       monitor       | 10.63 | 12.97 |
|    bulletin board   |  36.4 | 50.79 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 43.81 | 59.99 |
|        glass        | 13.04 | 14.23 |
|        clock        | 22.02 | 30.62 |
|         flag        | 39.04 | 48.82 |
+---------------------+-------+-------+
10/26 11:00:47 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 75.1700  mIoU: 39.1500  mAcc: 54.3100  data_time: 0.0168  time: 8.8748
Runtime: 17786

============================= JOB FEEDBACK =============================

NodeName=uc2n483
Job ID: 24525443
Array Job ID: 24523764_0
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 04:44:31
CPU Efficiency: 11.98% of 1-15:35:36 core-walltime
Job Wall-clock time: 04:56:57
Memory Utilized: 2.96 GB
Memory Efficiency: 14.79% of 20.00 GB
