Started at Sun Nov 10 16:39:07 CET 2024
Processing corruption type: gaussian_noise
11/10 16:39:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 258212537
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 258212537
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 16:39:15 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/gaussian_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 16:39:18,985 - mmseg - INFO - using core type: DCNv3
2024-11-10 16:39:18,985 - mmseg - INFO - using activation layer: GELU
2024-11-10 16:39:18,985 - mmseg - INFO - using main norm layer: LN
2024-11-10 16:39:18,985 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 16:39:18,985 - mmseg - INFO - level2_post_norm: True
2024-11-10 16:39:18,985 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 16:39:18,985 - mmseg - INFO - res_post_norm: True
2024-11-10 16:39:18,985 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 16:39:36 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 16:39:36 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 16:39:37 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 16:39:46 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 16:40:44 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:38:16  time: 0.7660  data_time: 0.0015  memory: 25645  
11/10 16:41:23 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:46  time: 0.8732  data_time: 0.0016  memory: 24207  
11/10 16:41:49 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:25:27  time: 0.5209  data_time: 0.0014  memory: 13887  
11/10 16:42:23 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:37  time: 0.6187  data_time: 0.0014  memory: 24212  
11/10 16:42:56 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:22:14  time: 0.4819  data_time: 0.0014  memory: 24175  
11/10 16:43:25 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:20:45  time: 0.3476  data_time: 0.0015  memory: 24217  
11/10 16:43:58 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:48  time: 0.4766  data_time: 0.0014  memory: 24229  
11/10 16:44:25 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:39  time: 0.5043  data_time: 0.0014  memory: 24178  
11/10 16:44:45 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:10  time: 0.4267  data_time: 0.0014  memory: 13702  
11/10 16:45:05 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:58  time: 0.3301  data_time: 0.0014  memory: 12983  
11/10 16:45:26 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:57  time: 0.5118  data_time: 0.0015  memory: 14079  
11/10 16:45:46 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:00  time: 0.5047  data_time: 0.0015  memory: 13888  
11/10 16:46:09 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:17  time: 0.5332  data_time: 0.0013  memory: 14369  
11/10 16:46:36 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:43  time: 0.3567  data_time: 0.0015  memory: 24226  
11/10 16:47:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:10  time: 0.8502  data_time: 0.0014  memory: 14074  
11/10 16:47:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:23  time: 0.3411  data_time: 0.0015  memory: 13889  
11/10 16:47:38 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:39  time: 0.3431  data_time: 0.0015  memory: 4878  
11/10 16:47:57 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:01  time: 0.4095  data_time: 0.0014  memory: 13142  
11/10 16:48:24 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:32  time: 0.6016  data_time: 0.0014  memory: 15016  
11/10 16:48:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:58  time: 0.3249  data_time: 0.0014  memory: 15018  
11/10 16:49:09 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:30  time: 0.6984  data_time: 0.0014  memory: 14825  
11/10 16:49:33 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:00  time: 0.3993  data_time: 0.0015  memory: 14077  
11/10 16:49:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:29  time: 0.5168  data_time: 0.0014  memory: 12995  
11/10 16:50:12 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:57  time: 0.3744  data_time: 0.0014  memory: 6023  
11/10 16:50:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:28  time: 0.5115  data_time: 0.0014  memory: 24213  
11/10 16:50:53 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:59  time: 0.4094  data_time: 0.0014  memory: 4881  
11/10 16:51:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:30  time: 0.3986  data_time: 0.0015  memory: 11450  
11/10 16:51:41 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:06  time: 0.5732  data_time: 0.0014  memory: 14637  
11/10 16:52:05 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:40  time: 0.5680  data_time: 0.0014  memory: 13142  
11/10 16:52:23 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:12  time: 0.3946  data_time: 0.0014  memory: 4880  
11/10 16:52:46 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:46  time: 0.4129  data_time: 0.0014  memory: 14827  
11/10 16:53:05 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:19  time: 0.3626  data_time: 0.0015  memory: 4877  
11/10 16:53:30 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:54  time: 0.3295  data_time: 0.0014  memory: 24226  
11/10 16:53:55 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:29  time: 0.3526  data_time: 0.0015  memory: 13328  
11/10 16:54:17 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:04  time: 0.4055  data_time: 0.0014  memory: 14454  
11/10 16:54:37 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:39  time: 0.4202  data_time: 0.0015  memory: 11821  
11/10 16:54:57 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:13  time: 0.4229  data_time: 0.0015  memory: 4822  
11/10 16:55:16 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:48  time: 0.4041  data_time: 0.0014  memory: 9193  
11/10 16:55:38 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:24  time: 0.3832  data_time: 0.0014  memory: 13001  
11/10 16:56:01 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.4107  data_time: 0.0013  memory: 12765  
11/10 16:56:01 - mmengine - INFO - per class results:
11/10 16:56:01 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  78.6 | 91.01 |
|       building      |  83.6 | 93.04 |
|         sky         |  93.7 | 97.16 |
|        floor        | 81.74 | 92.25 |
|         tree        | 74.89 | 88.11 |
|       ceiling       | 83.62 | 91.33 |
|         road        | 84.12 | 89.33 |
|         bed         | 90.38 | 95.92 |
|      windowpane     | 64.12 | 79.31 |
|        grass        | 71.95 | 84.54 |
|       cabinet       | 64.52 | 72.73 |
|       sidewalk      | 65.38 | 83.72 |
|        person       | 81.12 | 88.87 |
|        earth        | 41.49 | 64.78 |
|         door        | 52.67 | 60.22 |
|        table        | 65.66 | 81.24 |
|       mountain      |  59.1 | 74.41 |
|        plant        | 51.91 | 59.88 |
|       curtain       | 72.51 | 81.48 |
|        chair        | 61.41 | 72.15 |
|         car         | 85.81 | 92.24 |
|        water        |  65.5 | 84.51 |
|       painting      | 72.56 | 75.81 |
|         sofa        |  78.8 | 90.55 |
|        shelf        | 46.93 | 69.74 |
|        house        |  51.9 | 67.44 |
|         sea         |  66.4 | 73.63 |
|        mirror       | 71.27 | 78.77 |
|         rug         | 56.91 | 59.51 |
|        field        | 43.64 | 54.81 |
|       armchair      | 59.21 | 70.97 |
|         seat        | 66.07 |  84.9 |
|        fence        | 43.03 | 52.87 |
|         desk        | 55.41 | 77.77 |
|         rock        | 56.28 | 74.12 |
|       wardrobe      | 60.79 | 80.54 |
|         lamp        | 67.29 | 75.26 |
|       bathtub       | 79.47 | 84.76 |
|       railing       |  33.4 | 47.52 |
|       cushion       | 65.19 | 71.04 |
|         base        | 29.76 | 38.58 |
|         box         | 26.09 | 29.78 |
|        column       | 51.39 | 58.86 |
|      signboard      | 34.45 | 40.41 |
|   chest of drawers  | 48.63 | 65.04 |
|       counter       |  49.4 | 64.47 |
|         sand        | 50.08 | 74.84 |
|         sink        | 77.62 | 83.57 |
|      skyscraper     | 48.91 | 60.46 |
|      fireplace      | 72.82 | 89.21 |
|     refrigerator    | 81.52 | 91.17 |
|      grandstand     | 49.58 | 88.58 |
|         path        | 28.25 | 40.71 |
|        stairs       | 47.22 | 67.56 |
|        runway       | 72.81 | 96.79 |
|         case        | 58.48 |  72.2 |
|      pool table     | 92.04 | 95.33 |
|        pillow       |  60.0 |  69.0 |
|     screen door     |  59.3 | 62.28 |
|       stairway      | 56.14 | 74.01 |
|        river        | 15.17 | 28.67 |
|        bridge       | 37.57 | 50.92 |
|       bookcase      | 42.06 | 48.49 |
|        blind        | 36.32 | 36.92 |
|     coffee table    | 58.74 | 69.69 |
|        toilet       | 86.09 | 91.11 |
|        flower       | 38.85 | 56.39 |
|         book        | 48.62 | 59.65 |
|         hill        |  5.67 |  8.68 |
|        bench        | 52.28 | 60.35 |
|      countertop     | 54.55 | 66.64 |
|        stove        | 80.43 | 86.04 |
|         palm        | 55.04 | 74.97 |
|    kitchen island   | 35.61 |  62.0 |
|       computer      | 77.33 |  89.3 |
|     swivel chair    | 48.41 |  68.0 |
|         boat        | 66.07 | 86.75 |
|         bar         | 62.63 | 70.58 |
|    arcade machine   | 84.45 | 90.02 |
|        hovel        | 57.01 | 70.51 |
|         bus         | 93.02 | 94.75 |
|        towel        | 62.79 | 70.72 |
|        light        | 37.17 | 41.13 |
|        truck        |  47.9 | 56.37 |
|        tower        |  6.7  | 11.17 |
|      chandelier     | 66.35 | 78.81 |
|        awning       |  34.6 |  42.0 |
|     streetlight     |  29.1 | 36.51 |
|        booth        | 61.05 | 77.79 |
| television receiver | 70.39 | 76.06 |
|       airplane      | 63.44 | 70.16 |
|      dirt track     |  0.15 |  1.01 |
|       apparel       | 40.63 | 47.89 |
|         pole        | 24.54 | 35.02 |
|         land        |  0.01 |  0.02 |
|      bannister      | 14.34 | 21.09 |
|      escalator      | 57.15 | 76.42 |
|       ottoman       | 52.27 | 68.19 |
|        bottle       | 38.71 | 55.13 |
|        buffet       | 50.44 | 54.86 |
|        poster       | 37.14 | 49.87 |
|        stage        | 12.54 | 15.51 |
|         van         | 45.86 | 74.27 |
|         ship        | 85.54 | 96.86 |
|       fountain      | 49.11 | 50.16 |
|    conveyer belt    |  68.1 | 91.67 |
|        canopy       | 53.69 | 75.41 |
|        washer       | 87.91 | 91.76 |
|      plaything      | 30.88 | 33.02 |
|    swimming pool    | 68.09 | 73.86 |
|        stool        | 50.59 | 66.76 |
|        barrel       | 62.79 | 71.78 |
|        basket       | 37.39 | 49.52 |
|      waterfall      | 49.48 |  60.0 |
|         tent        |  94.8 | 98.78 |
|         bag         |  14.3 | 15.66 |
|       minibike      | 73.91 | 83.58 |
|        cradle       | 80.25 | 97.04 |
|         oven        | 62.89 | 79.14 |
|         ball        | 55.23 | 69.36 |
|         food        |  48.3 | 54.57 |
|         step        |  5.99 |  6.04 |
|         tank        | 62.17 | 68.02 |
|      trade name     | 22.38 | 25.78 |
|      microwave      | 87.76 | 94.84 |
|         pot         | 55.88 |  63.7 |
|        animal       | 58.49 | 60.65 |
|       bicycle       | 56.26 | 67.95 |
|         lake        | 63.03 | 63.34 |
|      dishwasher     | 71.15 |  75.7 |
|        screen       | 54.37 | 64.41 |
|       blanket       |  9.58 |  9.75 |
|      sculpture      | 75.12 | 83.53 |
|         hood        | 60.41 | 64.35 |
|        sconce       | 39.39 | 42.15 |
|         vase        |  41.5 | 55.39 |
|    traffic light    | 31.69 | 36.92 |
|         tray        | 15.56 | 24.77 |
|        ashcan       | 39.93 | 44.01 |
|         fan         | 62.78 | 74.91 |
|         pier        | 26.99 | 40.37 |
|      crt screen     |  4.14 | 13.74 |
|        plate        | 59.21 | 71.77 |
|       monitor       | 11.61 | 12.39 |
|    bulletin board   | 39.59 | 43.05 |
|        shower       |  0.8  |  7.54 |
|       radiator      | 63.11 | 65.23 |
|        glass        | 18.42 | 19.79 |
|        clock        | 40.08 | 44.53 |
|         flag        | 65.79 | 70.86 |
+---------------------+-------+-------+
11/10 16:56:01 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.5100  mIoU: 53.6600  mAcc: 63.8400  data_time: 0.0016  time: 0.4879
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
11/10 16:56:05 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1187353722
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1187353722
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 16:56:06 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/shot_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 16:56:09,852 - mmseg - INFO - using core type: DCNv3
2024-11-10 16:56:09,852 - mmseg - INFO - using activation layer: GELU
2024-11-10 16:56:09,852 - mmseg - INFO - using main norm layer: LN
2024-11-10 16:56:09,852 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 16:56:09,852 - mmseg - INFO - level2_post_norm: True
2024-11-10 16:56:09,852 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 16:56:09,852 - mmseg - INFO - res_post_norm: True
2024-11-10 16:56:09,852 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 16:56:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 16:56:26 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 16:56:27 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 16:56:31 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 16:57:37 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:42:58  time: 0.8492  data_time: 0.0014  memory: 25645  
11/10 16:58:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:34:46  time: 0.9930  data_time: 0.0015  memory: 24207  
11/10 16:58:53 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:29:05  time: 0.6229  data_time: 0.0015  memory: 13887  
11/10 16:59:34 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:19  time: 0.7702  data_time: 0.0015  memory: 24212  
11/10 17:00:13 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:53  time: 0.5898  data_time: 0.0014  memory: 24175  
11/10 17:00:52 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:24:36  time: 0.5567  data_time: 0.0015  memory: 24217  
11/10 17:01:33 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:23:41  time: 0.6352  data_time: 0.0014  memory: 24229  
11/10 17:02:09 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:22:29  time: 0.6533  data_time: 0.0014  memory: 24178  
11/10 17:02:36 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:20:55  time: 0.5810  data_time: 0.0014  memory: 13702  
11/10 17:03:01 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:19:29  time: 0.4241  data_time: 0.0015  memory: 12983  
11/10 17:03:29 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:18:19  time: 0.6608  data_time: 0.0015  memory: 14079  
11/10 17:03:53 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:17:11  time: 0.6312  data_time: 0.0015  memory: 13888  
11/10 17:04:24 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:16:21  time: 0.6791  data_time: 0.0014  memory: 14369  
11/10 17:04:58 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:15:39  time: 0.4644  data_time: 0.0015  memory: 24226  
11/10 17:05:31 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:14:59  time: 1.0294  data_time: 0.0014  memory: 14074  
11/10 17:05:55 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:14:05  time: 0.4769  data_time: 0.0015  memory: 13889  
11/10 17:06:18 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:13:13  time: 0.4612  data_time: 0.0016  memory: 4878  
11/10 17:06:41 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:12:24  time: 0.4903  data_time: 0.0014  memory: 13142  
11/10 17:07:13 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:11:49  time: 0.8045  data_time: 0.0015  memory: 15016  
11/10 17:07:39 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:11:07  time: 0.4162  data_time: 0.0014  memory: 15018  
11/10 17:08:10 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:10:31  time: 0.8721  data_time: 0.0015  memory: 14825  
11/10 17:08:37 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:09:53  time: 0.4019  data_time: 0.0015  memory: 14077  
11/10 17:09:00 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:09:13  time: 0.5506  data_time: 0.0015  memory: 12995  
11/10 17:09:21 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:08:33  time: 0.3963  data_time: 0.0015  memory: 6023  
11/10 17:09:44 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:07:55  time: 0.5230  data_time: 0.0014  memory: 24213  
11/10 17:10:03 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:16  time: 0.4067  data_time: 0.0014  memory: 4881  
11/10 17:10:24 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:40  time: 0.3762  data_time: 0.0014  memory: 11450  
11/10 17:10:51 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:06:08  time: 0.6152  data_time: 0.0014  memory: 14637  
11/10 17:11:13 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:34  time: 0.5693  data_time: 0.0014  memory: 13142  
11/10 17:11:32 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:05:00  time: 0.3695  data_time: 0.0014  memory: 4880  
11/10 17:11:55 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:28  time: 0.4188  data_time: 0.0014  memory: 14827  
11/10 17:12:15 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:55  time: 0.3959  data_time: 0.0015  memory: 4877  
11/10 17:12:40 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:25  time: 0.3683  data_time: 0.0014  memory: 24226  
11/10 17:13:05 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:55  time: 0.4081  data_time: 0.0015  memory: 13328  
11/10 17:13:28 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:25  time: 0.3994  data_time: 0.0014  memory: 14454  
11/10 17:13:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:55  time: 0.4128  data_time: 0.0016  memory: 11821  
11/10 17:14:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:25  time: 0.4100  data_time: 0.0016  memory: 4822  
11/10 17:14:30 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:56  time: 0.3921  data_time: 0.0014  memory: 9193  
11/10 17:14:54 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:28  time: 0.3937  data_time: 0.0014  memory: 13001  
11/10 17:15:17 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.3657  data_time: 0.0035  memory: 12765  
11/10 17:15:17 - mmengine - INFO - per class results:
11/10 17:15:17 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.67 | 91.09 |
|       building      | 83.07 | 92.78 |
|         sky         |  93.8 | 96.99 |
|        floor        | 82.18 | 92.59 |
|         tree        | 75.81 | 88.29 |
|       ceiling       | 83.68 | 91.71 |
|         road        | 84.89 | 90.45 |
|         bed         | 90.45 |  95.9 |
|      windowpane     | 64.26 | 78.84 |
|        grass        | 71.78 | 85.11 |
|       cabinet       | 65.27 | 73.69 |
|       sidewalk      | 64.62 | 82.48 |
|        person       | 81.65 | 89.41 |
|        earth        | 42.97 | 66.55 |
|         door        | 53.08 | 60.99 |
|        table        | 65.58 | 80.78 |
|       mountain      | 58.09 |  73.4 |
|        plant        | 52.38 | 59.95 |
|       curtain       | 71.78 | 80.13 |
|        chair        | 62.34 |  73.4 |
|         car         | 86.19 | 92.62 |
|        water        | 66.75 | 85.13 |
|       painting      |  72.0 | 75.37 |
|         sofa        | 79.01 | 91.18 |
|        shelf        | 46.26 | 68.96 |
|        house        |  46.8 | 60.79 |
|         sea         | 66.59 | 73.81 |
|        mirror       | 70.86 | 78.61 |
|         rug         | 58.41 | 61.02 |
|        field        | 43.87 | 55.59 |
|       armchair      | 58.41 | 69.88 |
|         seat        | 67.94 | 85.43 |
|        fence        | 45.27 | 54.36 |
|         desk        | 56.68 | 79.01 |
|         rock        | 54.05 | 74.61 |
|       wardrobe      | 60.61 | 78.21 |
|         lamp        | 63.83 | 71.22 |
|       bathtub       | 78.76 | 84.33 |
|       railing       | 33.17 | 46.87 |
|       cushion       | 65.41 | 71.85 |
|         base        | 29.66 | 39.22 |
|         box         | 27.08 | 31.36 |
|        column       | 51.46 | 60.83 |
|      signboard      | 34.84 | 41.24 |
|   chest of drawers  |  46.5 | 65.08 |
|       counter       | 48.91 | 64.51 |
|         sand        | 50.65 | 76.08 |
|         sink        | 75.81 | 81.78 |
|      skyscraper     | 42.98 | 53.42 |
|      fireplace      | 71.91 |  86.9 |
|     refrigerator    | 82.33 | 91.51 |
|      grandstand     | 53.25 | 88.66 |
|         path        | 26.76 | 40.13 |
|        stairs       |  46.8 | 67.13 |
|        runway       | 73.07 | 96.19 |
|         case        | 57.75 | 71.61 |
|      pool table     | 92.22 | 95.45 |
|        pillow       | 60.19 |  69.1 |
|     screen door     | 57.48 |  61.9 |
|       stairway      | 54.77 | 74.74 |
|        river        | 14.89 |  28.4 |
|        bridge       | 37.41 | 49.97 |
|       bookcase      | 36.35 | 41.33 |
|        blind        | 36.33 |  37.0 |
|     coffee table    | 58.44 |  68.9 |
|        toilet       |  85.8 | 90.83 |
|        flower       | 39.98 | 55.43 |
|         book        | 49.51 | 61.14 |
|         hill        |  6.2  |  9.97 |
|        bench        | 59.76 | 69.66 |
|      countertop     | 56.09 | 68.04 |
|        stove        | 80.59 |  86.1 |
|         palm        |  54.3 | 76.74 |
|    kitchen island   | 29.41 | 49.16 |
|       computer      | 76.34 | 87.81 |
|     swivel chair    |  48.6 | 69.19 |
|         boat        | 65.95 | 86.32 |
|         bar         |  63.4 | 71.46 |
|    arcade machine   | 85.53 | 90.41 |
|        hovel        | 49.45 | 69.05 |
|         bus         | 93.57 | 95.44 |
|        towel        | 62.64 | 68.97 |
|        light        | 34.39 | 38.17 |
|        truck        | 47.08 | 55.67 |
|        tower        |  4.48 |  7.52 |
|      chandelier     | 63.97 | 76.81 |
|        awning       | 33.11 | 41.73 |
|     streetlight     | 29.69 | 37.31 |
|        booth        | 55.83 | 72.67 |
| television receiver | 70.69 | 75.85 |
|       airplane      | 75.09 | 83.54 |
|      dirt track     |  0.25 |  0.74 |
|       apparel       | 46.15 |  55.3 |
|         pole        | 25.56 | 36.74 |
|         land        |  0.0  |  0.0  |
|      bannister      | 14.95 | 21.77 |
|      escalator      | 58.53 | 77.09 |
|       ottoman       | 53.11 | 70.27 |
|        bottle       |  35.2 | 53.03 |
|        buffet       | 50.55 | 54.99 |
|        poster       | 33.12 | 43.79 |
|        stage        | 12.83 | 15.72 |
|         van         | 46.56 | 73.84 |
|         ship        | 85.72 | 97.58 |
|       fountain      | 52.57 | 53.87 |
|    conveyer belt    | 67.06 | 92.29 |
|        canopy       | 49.94 | 73.51 |
|        washer       | 85.03 | 88.93 |
|      plaything      | 27.95 | 29.57 |
|    swimming pool    |  63.3 | 74.35 |
|        stool        | 52.66 | 69.15 |
|        barrel       | 60.77 | 70.42 |
|        basket       | 39.19 | 51.89 |
|      waterfall      | 49.17 | 54.83 |
|         tent        | 95.34 | 98.64 |
|         bag         | 18.95 | 20.84 |
|       minibike      | 74.94 | 85.94 |
|        cradle       | 78.93 | 96.65 |
|         oven        | 66.08 | 79.73 |
|         ball        | 57.24 | 68.89 |
|         food        | 48.31 | 54.07 |
|         step        |  6.16 |  6.28 |
|         tank        | 54.07 | 59.52 |
|      trade name     | 22.24 | 25.67 |
|      microwave      | 87.83 | 95.17 |
|         pot         | 57.41 | 65.48 |
|        animal       | 60.18 | 62.24 |
|       bicycle       | 57.79 | 71.45 |
|         lake        | 45.35 | 45.35 |
|      dishwasher     | 71.44 | 77.62 |
|        screen       | 52.71 | 64.75 |
|       blanket       | 10.92 | 11.17 |
|      sculpture      | 74.87 | 83.21 |
|         hood        | 60.45 | 64.21 |
|        sconce       | 35.44 | 37.89 |
|         vase        | 43.32 |  57.5 |
|    traffic light    | 35.34 | 41.85 |
|         tray        | 15.39 | 27.22 |
|        ashcan       | 44.48 | 49.32 |
|         fan         | 63.36 | 75.91 |
|         pier        | 26.48 | 42.37 |
|      crt screen     |  4.71 | 15.98 |
|        plate        | 59.18 | 70.82 |
|       monitor       |  4.56 |  4.92 |
|    bulletin board   | 41.13 | 44.77 |
|        shower       |  0.76 |  7.01 |
|       radiator      | 56.68 | 58.71 |
|        glass        | 19.04 |  20.6 |
|        clock        | 38.23 | 41.89 |
|         flag        | 67.29 | 72.17 |
+---------------------+-------+-------+
11/10 17:15:17 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.5500  mIoU: 53.3600  mAcc: 63.6400  data_time: 0.0016  time: 0.5628
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
11/10 17:15:21 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 841940986
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 841940986
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 17:15:22 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/impulse_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 17:15:25,774 - mmseg - INFO - using core type: DCNv3
2024-11-10 17:15:25,774 - mmseg - INFO - using activation layer: GELU
2024-11-10 17:15:25,774 - mmseg - INFO - using main norm layer: LN
2024-11-10 17:15:25,774 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 17:15:25,774 - mmseg - INFO - level2_post_norm: True
2024-11-10 17:15:25,774 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 17:15:25,775 - mmseg - INFO - res_post_norm: True
2024-11-10 17:15:25,775 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 17:15:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 17:15:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 17:15:43 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 17:15:47 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 17:16:42 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:53  time: 0.7109  data_time: 0.0014  memory: 25645  
11/10 17:17:19 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:29:01  time: 0.8414  data_time: 0.0015  memory: 24207  
11/10 17:17:44 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:07  time: 0.5051  data_time: 0.0014  memory: 13887  
11/10 17:18:17 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:31  time: 0.6021  data_time: 0.0014  memory: 24212  
11/10 17:18:49 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:15  time: 0.4442  data_time: 0.0014  memory: 24175  
11/10 17:19:17 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:51  time: 0.3316  data_time: 0.0015  memory: 24217  
11/10 17:19:47 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:53  time: 0.4592  data_time: 0.0014  memory: 24229  
11/10 17:20:14 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:48  time: 0.4858  data_time: 0.0014  memory: 24178  
11/10 17:20:33 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:23  time: 0.4114  data_time: 0.0014  memory: 13702  
11/10 17:20:51 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:12  time: 0.3144  data_time: 0.0015  memory: 12983  
11/10 17:21:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:15  time: 0.4950  data_time: 0.0016  memory: 14079  
11/10 17:21:30 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:20  time: 0.4903  data_time: 0.0015  memory: 13888  
11/10 17:21:53 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:39  time: 0.5198  data_time: 0.0013  memory: 14369  
11/10 17:22:19 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:08  time: 0.3393  data_time: 0.0015  memory: 24226  
11/10 17:22:45 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:37  time: 0.8323  data_time: 0.0014  memory: 14074  
11/10 17:23:02 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:52  time: 0.3212  data_time: 0.0015  memory: 13889  
11/10 17:23:20 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:13  time: 0.5447  data_time: 0.0059  memory: 4878  
11/10 17:23:39 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:37  time: 0.3933  data_time: 0.0014  memory: 13142  
11/10 17:24:05 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:10  time: 0.5845  data_time: 0.0015  memory: 15016  
11/10 17:24:24 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:37  time: 0.3066  data_time: 0.0014  memory: 15018  
11/10 17:24:48 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:09  time: 0.6809  data_time: 0.0014  memory: 14825  
11/10 17:25:09 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:40  time: 0.3090  data_time: 0.0015  memory: 14077  
11/10 17:25:28 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:09  time: 0.4517  data_time: 0.0014  memory: 12995  
11/10 17:25:44 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:38  time: 0.3131  data_time: 0.0014  memory: 6023  
11/10 17:26:03 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:09  time: 0.4415  data_time: 0.0014  memory: 24213  
11/10 17:26:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:39  time: 0.3234  data_time: 0.0014  memory: 4881  
11/10 17:26:35 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:11  time: 0.2943  data_time: 0.0014  memory: 11450  
11/10 17:26:57 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:47  time: 0.5228  data_time: 0.0014  memory: 14637  
11/10 17:27:15 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:21  time: 0.4828  data_time: 0.0014  memory: 13142  
11/10 17:27:31 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:54  time: 0.2936  data_time: 0.0014  memory: 4880  
11/10 17:27:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:29  time: 0.3325  data_time: 0.0015  memory: 14827  
11/10 17:28:04 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:04  time: 0.3132  data_time: 0.0015  memory: 4877  
11/10 17:28:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:40  time: 0.2887  data_time: 0.0014  memory: 24226  
11/10 17:28:46 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:17  time: 0.3189  data_time: 0.0016  memory: 13328  
11/10 17:29:06 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:54  time: 0.3150  data_time: 0.0014  memory: 14454  
11/10 17:29:22 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:30  time: 0.3281  data_time: 0.0015  memory: 11821  
11/10 17:29:39 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:07  time: 0.3232  data_time: 0.0015  memory: 4822  
11/10 17:29:55 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:44  time: 0.3131  data_time: 0.0014  memory: 9193  
11/10 17:30:15 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:22  time: 0.3096  data_time: 0.0014  memory: 13001  
11/10 17:30:34 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2886  data_time: 0.0013  memory: 12765  
11/10 17:30:34 - mmengine - INFO - per class results:
11/10 17:30:34 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.01 | 87.96 |
|       building      | 82.98 | 91.56 |
|         sky         | 93.67 | 96.31 |
|        floor        | 80.56 | 90.96 |
|         tree        | 72.72 | 89.03 |
|       ceiling       | 82.07 | 95.34 |
|         road        | 79.91 | 87.23 |
|         bed         | 90.43 | 95.92 |
|      windowpane     | 62.79 | 77.87 |
|        grass        | 72.37 |  89.1 |
|       cabinet       | 59.75 | 70.73 |
|       sidewalk      |  60.0 |  80.0 |
|        person       | 79.89 | 89.23 |
|        earth        | 34.92 | 46.22 |
|         door        | 52.75 | 60.67 |
|        table        | 64.34 | 77.78 |
|       mountain      |  54.5 | 60.78 |
|        plant        | 49.92 | 64.35 |
|       curtain       | 67.61 | 88.53 |
|        chair        | 61.05 | 73.66 |
|         car         | 83.85 | 92.64 |
|        water        | 63.71 | 80.55 |
|       painting      | 74.63 | 81.72 |
|         sofa        | 75.48 | 91.14 |
|        shelf        | 44.16 | 69.43 |
|        house        | 54.36 |  71.5 |
|         sea         | 67.63 | 79.23 |
|        mirror       | 68.42 | 74.57 |
|         rug         | 50.83 | 52.35 |
|        field        | 49.99 |  69.7 |
|       armchair      | 56.93 | 70.55 |
|         seat        | 66.13 | 88.71 |
|        fence        | 40.47 | 57.77 |
|         desk        | 52.32 | 80.35 |
|         rock        | 54.49 | 62.25 |
|       wardrobe      | 50.29 | 71.61 |
|         lamp        | 63.12 | 75.81 |
|       bathtub       | 78.33 | 83.21 |
|       railing       | 33.79 | 52.82 |
|       cushion       | 64.46 | 72.65 |
|         base        | 27.26 | 39.27 |
|         box         | 29.46 | 37.58 |
|        column       | 49.12 | 62.69 |
|      signboard      | 34.14 | 40.29 |
|   chest of drawers  | 35.34 | 68.12 |
|       counter       | 43.45 | 54.21 |
|         sand        | 48.56 | 69.99 |
|         sink        | 71.68 | 78.55 |
|      skyscraper     | 43.12 | 51.61 |
|      fireplace      | 76.35 | 85.56 |
|     refrigerator    | 80.71 | 86.93 |
|      grandstand     | 53.53 | 89.58 |
|         path        | 23.57 | 34.17 |
|        stairs       | 40.99 | 61.78 |
|        runway       | 69.26 | 95.77 |
|         case        | 49.68 | 57.21 |
|      pool table     | 90.71 | 96.84 |
|        pillow       | 60.32 | 71.17 |
|     screen door     | 60.93 | 73.11 |
|       stairway      | 49.61 | 74.17 |
|        river        |  9.04 | 20.79 |
|        bridge       |  38.3 | 49.21 |
|       bookcase      | 37.96 | 44.74 |
|        blind        | 30.98 | 32.42 |
|     coffee table    | 69.88 | 81.33 |
|        toilet       | 85.15 | 91.59 |
|        flower       | 37.41 | 46.26 |
|         book        | 47.31 | 59.77 |
|         hill        | 10.23 | 20.44 |
|        bench        | 45.32 | 57.35 |
|      countertop     | 56.41 | 72.86 |
|        stove        | 81.31 | 87.15 |
|         palm        |  48.0 | 76.98 |
|    kitchen island   | 36.81 | 72.76 |
|       computer      | 62.65 | 69.61 |
|     swivel chair    | 50.03 | 72.82 |
|         boat        | 78.45 | 85.29 |
|         bar         | 61.06 | 81.03 |
|    arcade machine   | 85.47 | 92.41 |
|        hovel        | 48.32 | 56.93 |
|         bus         | 92.04 | 95.66 |
|        towel        | 56.79 | 65.47 |
|        light        | 37.98 | 42.05 |
|        truck        | 42.15 |  53.1 |
|        tower        | 27.95 | 53.33 |
|      chandelier     | 63.89 | 79.53 |
|        awning       | 42.58 | 51.81 |
|     streetlight     | 28.58 | 37.98 |
|        booth        |  46.1 | 56.05 |
| television receiver | 68.07 | 74.31 |
|       airplane      | 57.52 | 66.02 |
|      dirt track     |  0.39 |  0.43 |
|       apparel       | 48.13 | 71.01 |
|         pole        | 20.55 | 27.72 |
|         land        |  0.87 |  1.87 |
|      bannister      | 12.29 | 19.46 |
|      escalator      | 53.99 | 66.47 |
|       ottoman       | 61.91 | 72.54 |
|        bottle       | 33.61 | 49.46 |
|        buffet       | 52.42 | 58.87 |
|        poster       | 30.24 | 35.33 |
|        stage        | 14.83 | 18.89 |
|         van         | 48.06 | 71.49 |
|         ship        | 43.84 | 45.58 |
|       fountain      | 50.84 | 52.18 |
|    conveyer belt    | 82.43 | 93.58 |
|        canopy       | 44.36 | 70.01 |
|        washer       | 86.12 | 89.95 |
|      plaything      | 18.66 | 20.96 |
|    swimming pool    | 51.36 | 78.15 |
|        stool        | 47.99 | 66.09 |
|        barrel       | 56.13 | 62.76 |
|        basket       | 34.23 | 56.12 |
|      waterfall      | 45.99 | 52.09 |
|         tent        | 84.73 | 99.38 |
|         bag         | 14.84 | 17.64 |
|       minibike      | 73.92 | 83.31 |
|        cradle       |  82.3 | 97.32 |
|         oven        | 65.68 | 76.48 |
|         ball        | 48.05 | 58.24 |
|         food        | 50.85 | 53.23 |
|         step        | 13.14 | 14.55 |
|         tank        | 63.88 |  64.7 |
|      trade name     | 29.04 | 36.12 |
|      microwave      | 86.66 | 92.06 |
|         pot         | 53.14 | 63.51 |
|        animal       | 57.83 | 60.16 |
|       bicycle       | 54.85 | 69.27 |
|         lake        |  0.97 |  0.97 |
|      dishwasher     | 51.35 | 57.58 |
|        screen       | 64.02 | 87.59 |
|       blanket       |  9.76 | 10.04 |
|      sculpture      | 68.11 | 85.09 |
|         hood        | 56.98 | 62.74 |
|        sconce       | 35.14 | 39.16 |
|         vase        | 39.05 | 52.44 |
|    traffic light    | 34.19 | 43.11 |
|         tray        | 13.01 | 20.84 |
|        ashcan       | 35.73 |  43.5 |
|         fan         | 62.25 | 75.83 |
|         pier        | 37.37 | 43.37 |
|      crt screen     |  5.95 | 24.12 |
|        plate        | 55.24 | 71.28 |
|       monitor       | 12.84 | 14.07 |
|    bulletin board   | 12.93 | 13.17 |
|        shower       |  2.33 | 12.33 |
|       radiator      | 67.47 | 72.57 |
|        glass        | 15.67 | 16.58 |
|        clock        | 37.18 | 49.02 |
|         flag        | 63.91 | 71.13 |
+---------------------+-------+-------+
11/10 17:30:34 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.2700  mIoU: 51.2900  mAcc: 62.6700  data_time: 0.0016  time: 0.4436
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
11/10 17:30:43 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1455341829
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1455341829
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 17:30:44 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/defocus_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 17:30:49,694 - mmseg - INFO - using core type: DCNv3
2024-11-10 17:30:49,694 - mmseg - INFO - using activation layer: GELU
2024-11-10 17:30:49,694 - mmseg - INFO - using main norm layer: LN
2024-11-10 17:30:49,694 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 17:30:49,694 - mmseg - INFO - level2_post_norm: True
2024-11-10 17:30:49,694 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 17:30:49,694 - mmseg - INFO - res_post_norm: True
2024-11-10 17:30:49,694 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 17:31:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 17:31:06 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 17:31:07 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 17:31:11 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 17:32:09 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:37:16  time: 0.7216  data_time: 0.0014  memory: 25645  
11/10 17:32:45 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:29:48  time: 0.8490  data_time: 0.0015  memory: 24207  
11/10 17:33:12 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:43  time: 0.5133  data_time: 0.0015  memory: 13887  
11/10 17:33:45 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:01  time: 0.6091  data_time: 0.0014  memory: 24212  
11/10 17:34:17 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:41  time: 0.4509  data_time: 0.0015  memory: 24175  
11/10 17:34:46 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:20:16  time: 0.3444  data_time: 0.0016  memory: 24217  
11/10 17:35:17 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:16  time: 0.4682  data_time: 0.0015  memory: 24229  
11/10 17:35:44 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:09  time: 0.4921  data_time: 0.0014  memory: 24178  
11/10 17:36:02 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:42  time: 0.4159  data_time: 0.0014  memory: 13702  
11/10 17:36:21 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:29  time: 0.3183  data_time: 0.0015  memory: 12983  
11/10 17:36:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:30  time: 0.5004  data_time: 0.0015  memory: 14079  
11/10 17:37:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:34  time: 0.4935  data_time: 0.0015  memory: 13888  
11/10 17:37:23 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:52  time: 0.5220  data_time: 0.0013  memory: 14369  
11/10 17:37:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:19  time: 0.3440  data_time: 0.0015  memory: 24226  
11/10 17:38:16 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:48  time: 0.8366  data_time: 0.0014  memory: 14074  
11/10 17:38:33 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:02  time: 0.3249  data_time: 0.0015  memory: 13889  
11/10 17:38:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:20  time: 0.3299  data_time: 0.0016  memory: 4878  
11/10 17:39:08 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:43  time: 0.3993  data_time: 0.0014  memory: 13142  
11/10 17:39:34 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:15  time: 0.5889  data_time: 0.0015  memory: 15016  
11/10 17:39:54 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:42  time: 0.3106  data_time: 0.0014  memory: 15018  
11/10 17:40:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:14  time: 0.6862  data_time: 0.0015  memory: 14825  
11/10 17:40:40 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:44  time: 0.3147  data_time: 0.0015  memory: 14077  
11/10 17:40:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:13  time: 0.4555  data_time: 0.0014  memory: 12995  
11/10 17:41:15 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:42  time: 0.3155  data_time: 0.0015  memory: 6023  
11/10 17:41:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:13  time: 0.4466  data_time: 0.0014  memory: 24213  
11/10 17:41:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:43  time: 0.3279  data_time: 0.0014  memory: 4881  
11/10 17:42:06 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:15  time: 0.2998  data_time: 0.0014  memory: 11450  
11/10 17:42:29 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:50  time: 0.5290  data_time: 0.0014  memory: 14637  
11/10 17:42:47 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:23  time: 0.4858  data_time: 0.0014  memory: 13142  
11/10 17:43:03 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:57  time: 0.2967  data_time: 0.0014  memory: 4880  
11/10 17:43:21 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:31  time: 0.3364  data_time: 0.0014  memory: 14827  
11/10 17:43:37 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:06  time: 0.3158  data_time: 0.0015  memory: 4877  
11/10 17:43:58 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:42  time: 0.2944  data_time: 0.0014  memory: 24226  
11/10 17:44:24 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:19  time: 0.3243  data_time: 0.0016  memory: 13328  
11/10 17:44:43 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:55  time: 0.3183  data_time: 0.0014  memory: 14454  
11/10 17:45:00 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:32  time: 0.3280  data_time: 0.0016  memory: 11821  
11/10 17:45:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:08  time: 0.3267  data_time: 0.0016  memory: 4822  
11/10 17:45:33 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:45  time: 0.3163  data_time: 0.0015  memory: 9193  
11/10 17:45:53 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:22  time: 0.3143  data_time: 0.0014  memory: 13001  
11/10 17:46:12 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2904  data_time: 0.0013  memory: 12765  
11/10 17:46:13 - mmengine - INFO - per class results:
11/10 17:46:13 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 80.55 | 88.88 |
|       building      | 82.98 | 93.49 |
|         sky         | 94.48 |  97.5 |
|        floor        | 82.89 | 91.95 |
|         tree        | 74.63 | 88.03 |
|       ceiling       | 85.86 | 94.75 |
|         road        | 84.76 | 89.28 |
|         bed         | 91.77 | 96.58 |
|      windowpane     | 63.69 | 80.36 |
|        grass        | 70.08 | 82.24 |
|       cabinet       | 65.31 | 75.67 |
|       sidewalk      | 65.24 | 82.52 |
|        person       | 81.95 | 90.68 |
|        earth        | 41.35 |  57.5 |
|         door        | 57.91 | 66.99 |
|        table        | 67.03 | 80.55 |
|       mountain      | 54.11 | 59.33 |
|        plant        | 51.22 | 58.42 |
|       curtain       | 74.77 | 84.56 |
|        chair        | 63.26 |  80.5 |
|         car         |  86.1 | 93.51 |
|        water        | 63.58 | 79.14 |
|       painting      |  78.2 |  86.3 |
|         sofa        | 81.07 | 89.93 |
|        shelf        |  49.1 | 69.52 |
|        house        | 50.16 | 66.49 |
|         sea         | 64.14 | 73.69 |
|        mirror       | 72.48 | 80.19 |
|         rug         | 60.35 | 63.68 |
|        field        | 43.34 | 69.56 |
|       armchair      | 59.73 | 73.91 |
|         seat        | 67.66 | 87.77 |
|        fence        |  39.5 | 68.56 |
|         desk        | 53.62 | 79.52 |
|         rock        | 52.46 | 76.06 |
|       wardrobe      | 58.91 | 76.39 |
|         lamp        | 69.64 | 84.41 |
|       bathtub       | 82.44 | 85.23 |
|       railing       | 35.51 | 59.26 |
|       cushion       | 69.12 | 79.76 |
|         base        | 31.68 | 51.31 |
|         box         | 32.78 | 40.52 |
|        column       | 51.59 | 63.51 |
|      signboard      | 37.56 | 48.67 |
|   chest of drawers  | 42.46 | 67.16 |
|       counter       | 52.91 | 69.71 |
|         sand        | 43.53 | 60.67 |
|         sink        | 76.23 | 82.99 |
|      skyscraper     | 48.83 | 54.09 |
|      fireplace      | 78.67 | 88.89 |
|     refrigerator    | 75.23 | 83.33 |
|      grandstand     | 51.41 | 89.39 |
|         path        | 27.46 | 43.65 |
|        stairs       | 41.41 | 49.43 |
|        runway       | 73.52 | 98.31 |
|         case        | 55.22 | 67.77 |
|      pool table     | 93.07 | 97.52 |
|        pillow       | 66.25 | 77.32 |
|     screen door     | 82.94 | 96.17 |
|       stairway      | 45.11 | 66.32 |
|        river        | 14.24 | 29.22 |
|        bridge       | 42.35 | 49.83 |
|       bookcase      | 47.95 | 59.92 |
|        blind        | 39.47 | 51.92 |
|     coffee table    |  64.4 | 80.85 |
|        toilet       | 86.72 | 92.01 |
|        flower       |  39.8 | 52.19 |
|         book        | 51.42 | 69.82 |
|         hill        |  4.59 | 10.67 |
|        bench        | 60.11 | 71.83 |
|      countertop     | 66.27 | 84.99 |
|        stove        | 82.89 | 90.39 |
|         palm        | 57.18 |  80.6 |
|    kitchen island   | 46.42 | 75.44 |
|       computer      | 78.55 |  88.3 |
|     swivel chair    |  44.2 | 63.35 |
|         boat        | 81.29 |  89.9 |
|         bar         |  59.6 |  70.5 |
|    arcade machine   | 88.95 | 95.76 |
|        hovel        | 44.71 | 49.55 |
|         bus         | 92.24 | 96.54 |
|        towel        | 72.01 |  79.8 |
|        light        | 53.67 | 66.34 |
|        truck        | 47.35 | 59.31 |
|        tower        |  8.63 | 16.97 |
|      chandelier     | 68.84 | 82.86 |
|        awning       | 39.64 | 50.99 |
|     streetlight     | 31.95 | 41.15 |
|        booth        | 47.56 | 69.45 |
| television receiver | 76.08 | 84.04 |
|       airplane      | 59.87 | 64.59 |
|      dirt track     | 15.02 | 24.88 |
|       apparel       | 61.53 | 80.12 |
|         pole        | 20.99 | 26.98 |
|         land        |  3.83 |  6.83 |
|      bannister      | 15.57 | 19.28 |
|      escalator      | 57.07 | 77.88 |
|       ottoman       |  55.8 | 66.38 |
|        bottle       | 38.97 | 58.64 |
|        buffet       | 51.29 | 57.36 |
|        poster       | 33.04 | 39.97 |
|        stage        |  19.6 | 30.77 |
|         van         | 46.01 | 65.22 |
|         ship        | 55.65 | 67.61 |
|       fountain      | 44.46 | 45.91 |
|    conveyer belt    | 81.37 | 87.76 |
|        canopy       | 38.73 | 53.57 |
|        washer       | 87.85 | 92.56 |
|      plaything      | 35.09 |  50.0 |
|    swimming pool    | 73.44 | 79.01 |
|        stool        | 46.65 | 70.57 |
|        barrel       | 59.43 |  83.6 |
|        basket       | 29.96 |  47.6 |
|      waterfall      | 73.42 | 83.57 |
|         tent        | 93.55 | 98.98 |
|         bag         | 19.67 | 21.84 |
|       minibike      | 73.73 | 89.21 |
|        cradle       |  81.5 | 98.13 |
|         oven        |  66.6 | 81.87 |
|         ball        | 51.64 | 55.27 |
|         food        |  51.3 | 53.79 |
|         step        | 20.04 | 23.44 |
|         tank        | 54.89 | 57.71 |
|      trade name     | 23.14 | 29.35 |
|      microwave      | 87.98 | 95.19 |
|         pot         | 56.97 | 66.65 |
|        animal       | 62.35 | 64.25 |
|       bicycle       | 59.01 |  76.5 |
|         lake        |  52.7 | 63.54 |
|      dishwasher     |  68.2 | 77.41 |
|        screen       | 60.43 |  85.1 |
|       blanket       | 19.84 | 20.99 |
|      sculpture      | 76.09 | 86.18 |
|         hood        | 60.12 | 74.84 |
|        sconce       | 56.83 | 68.78 |
|         vase        | 44.61 | 58.94 |
|    traffic light    | 38.08 | 51.83 |
|         tray        | 14.31 | 22.88 |
|        ashcan       | 44.57 | 54.31 |
|         fan         | 63.01 |  86.2 |
|         pier        | 32.27 | 40.71 |
|      crt screen     |  4.51 | 15.13 |
|        plate        | 58.78 | 80.72 |
|       monitor       | 12.94 |  14.4 |
|    bulletin board   | 56.69 | 67.81 |
|        shower       | 11.06 |  14.4 |
|       radiator      |  63.0 | 81.85 |
|        glass        | 19.34 | 21.23 |
|        clock        | 47.16 | 55.39 |
|         flag        | 66.11 | 75.36 |
+---------------------+-------+-------+
11/10 17:46:13 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.8900  mIoU: 55.3000  mAcc: 67.3000  data_time: 0.0019  time: 0.4504
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
11/10 17:47:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 745270311
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 745270311
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 17:47:15 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/glass_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 17:47:40,591 - mmseg - INFO - using core type: DCNv3
2024-11-10 17:47:40,591 - mmseg - INFO - using activation layer: GELU
2024-11-10 17:47:40,592 - mmseg - INFO - using main norm layer: LN
2024-11-10 17:47:40,592 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 17:47:40,592 - mmseg - INFO - level2_post_norm: True
2024-11-10 17:47:40,592 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 17:47:40,592 - mmseg - INFO - res_post_norm: True
2024-11-10 17:47:40,592 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 17:47:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 17:47:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 17:48:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 17:48:08 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 17:54:47 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:19:13  time: 8.6864  data_time: 0.0776  memory: 25645  
11/10 18:00:45 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:59:45  time: 7.4610  data_time: 0.0035  memory: 24207  
11/10 18:06:29 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:46:17  time: 7.0426  data_time: 0.0017  memory: 13887  
11/10 18:12:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:39:42  time: 6.9157  data_time: 0.0017  memory: 24212  
11/10 18:18:31 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:32:39  time: 7.3383  data_time: 0.0017  memory: 24175  
11/10 18:24:15 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:24:37  time: 6.8584  data_time: 0.0017  memory: 24217  
11/10 18:30:03 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:17:37  time: 6.5654  data_time: 0.0017  memory: 24229  
11/10 18:36:16 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:12:31  time: 7.6512  data_time: 0.0016  memory: 24178  
11/10 18:41:46 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:04:43  time: 6.4029  data_time: 0.0017  memory: 13702  
11/10 18:47:17 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:57:27  time: 6.3936  data_time: 0.0017  memory: 12983  
11/10 18:53:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:51:54  time: 7.3472  data_time: 0.0018  memory: 14079  
11/10 18:58:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:45:14  time: 6.9945  data_time: 0.0019  memory: 13888  
11/10 19:04:47 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:39:11  time: 6.8277  data_time: 0.0017  memory: 14369  
11/10 19:10:46 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:33:26  time: 7.2061  data_time: 0.0019  memory: 24226  
11/10 19:16:36 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:27:26  time: 7.0457  data_time: 0.0018  memory: 14074  
11/10 19:22:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:20:48  time: 6.8900  data_time: 0.0019  memory: 13889  
11/10 19:27:52 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:14:55  time: 7.7066  data_time: 0.0019  memory: 4878  
11/10 19:33:16 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:08:30  time: 6.0193  data_time: 0.0016  memory: 13142  
11/10 19:39:39 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:03:14  time: 7.3622  data_time: 0.0018  memory: 15016  
11/10 19:45:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:57:05  time: 6.5593  data_time: 0.0050  memory: 15018  
11/10 19:51:15 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:51:23  time: 7.2483  data_time: 0.0018  memory: 14825  
11/10 19:57:10 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:45:34  time: 6.6998  data_time: 0.0019  memory: 14077  
11/10 20:02:47 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:39:31  time: 6.8049  data_time: 0.0017  memory: 12995  
11/10 20:08:28 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:33:32  time: 6.3877  data_time: 0.0018  memory: 6023  
11/10 20:13:59 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:27:30  time: 6.7474  data_time: 0.0017  memory: 24213  
11/10 20:19:23 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:21:26  time: 6.9829  data_time: 0.0017  memory: 4881  
11/10 20:25:01 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:15:31  time: 6.0815  data_time: 0.0019  memory: 11450  
11/10 20:30:36 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:09:37  time: 7.0359  data_time: 0.0016  memory: 14637  
11/10 20:35:54 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:03:38  time: 7.4709  data_time: 0.0016  memory: 13142  
11/10 20:41:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:57:44  time: 6.1301  data_time: 0.0016  memory: 4880  
11/10 20:47:06 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:51:57  time: 6.7032  data_time: 0.0017  memory: 14827  
11/10 20:52:43 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:46:08  time: 6.4153  data_time: 0.0018  memory: 4877  
11/10 20:58:10 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:40:18  time: 6.0662  data_time: 0.0245  memory: 24226  
11/10 21:03:53 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:34:32  time: 6.6177  data_time: 0.0019  memory: 13328  
11/10 21:09:40 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:28:47  time: 7.1252  data_time: 0.0017  memory: 14454  
11/10 21:14:51 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:22:58  time: 6.4328  data_time: 0.0017  memory: 11821  
11/10 21:20:02 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:17:10  time: 6.1514  data_time: 0.0017  memory: 4822  
11/10 21:24:54 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:11:24  time: 5.9859  data_time: 0.0015  memory: 9193  
11/10 21:30:07 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:41  time: 5.9649  data_time: 0.0014  memory: 13001  
11/10 21:35:05 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 5.5705  data_time: 0.0013  memory: 12765  
11/10 21:35:06 - mmengine - INFO - per class results:
11/10 21:35:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.62 | 89.94 |
|       building      | 83.25 | 93.16 |
|         sky         | 93.92 | 97.49 |
|        floor        | 83.22 | 91.49 |
|         tree        | 75.63 | 88.75 |
|       ceiling       | 85.41 |  95.6 |
|         road        | 84.37 | 87.93 |
|         bed         | 91.09 | 95.31 |
|      windowpane     | 63.86 | 79.14 |
|        grass        | 66.13 |  92.4 |
|       cabinet       | 64.86 | 77.54 |
|       sidewalk      | 65.89 |  85.6 |
|        person       | 81.68 |  90.1 |
|        earth        | 35.15 | 44.99 |
|         door        | 55.88 | 66.16 |
|        table        |  65.9 | 79.59 |
|       mountain      | 53.14 | 64.98 |
|        plant        | 53.58 | 62.81 |
|       curtain       | 72.28 | 87.14 |
|        chair        | 62.61 | 75.62 |
|         car         | 84.66 | 92.56 |
|        water        | 68.59 | 86.03 |
|       painting      | 74.78 | 89.37 |
|         sofa        | 79.01 | 92.76 |
|        shelf        | 46.73 | 70.41 |
|        house        | 54.33 | 66.15 |
|         sea         | 70.27 | 82.39 |
|        mirror       | 69.17 | 75.49 |
|         rug         | 66.23 | 71.54 |
|        field        | 38.11 | 47.75 |
|       armchair      | 57.08 | 68.83 |
|         seat        | 67.11 | 87.57 |
|        fence        | 48.37 | 58.62 |
|         desk        | 55.22 | 75.64 |
|         rock        | 44.52 | 60.41 |
|       wardrobe      | 60.87 | 79.18 |
|         lamp        | 67.63 | 76.88 |
|       bathtub       | 82.18 | 85.32 |
|       railing       | 33.87 | 46.28 |
|       cushion       | 66.15 | 73.14 |
|         base        | 25.27 | 33.86 |
|         box         | 28.34 | 35.36 |
|        column       |  50.3 |  57.6 |
|      signboard      | 34.36 | 40.99 |
|   chest of drawers  | 43.71 | 70.74 |
|       counter       | 45.51 | 51.96 |
|         sand        | 48.82 | 70.35 |
|         sink        | 75.43 | 80.88 |
|      skyscraper     | 47.88 | 58.23 |
|      fireplace      | 74.92 | 90.12 |
|     refrigerator    | 72.91 | 77.76 |
|      grandstand     | 44.87 | 91.16 |
|         path        | 30.74 | 46.24 |
|        stairs       | 35.64 | 46.84 |
|        runway       | 71.51 | 97.57 |
|         case        | 58.17 | 69.89 |
|      pool table     |  93.0 | 96.22 |
|        pillow       | 66.16 | 81.19 |
|     screen door     | 81.82 | 91.89 |
|       stairway      | 48.37 | 70.34 |
|        river        | 10.67 | 15.29 |
|        bridge       |  41.4 |  47.7 |
|       bookcase      | 38.57 | 49.25 |
|        blind        | 35.24 | 35.63 |
|     coffee table    | 63.48 | 75.97 |
|        toilet       |  86.3 | 91.24 |
|        flower       | 37.66 | 60.25 |
|         book        | 48.09 | 65.85 |
|         hill        |  5.38 | 11.23 |
|        bench        | 50.91 | 59.12 |
|      countertop     | 59.03 | 72.82 |
|        stove        | 83.79 | 88.17 |
|         palm        | 52.91 | 61.45 |
|    kitchen island   | 41.76 | 70.43 |
|       computer      | 73.78 | 79.44 |
|     swivel chair    | 42.02 | 62.34 |
|         boat        | 72.92 | 83.72 |
|         bar         | 62.74 | 81.88 |
|    arcade machine   | 87.74 | 96.15 |
|        hovel        | 46.35 | 52.36 |
|         bus         | 92.34 | 95.47 |
|        towel        | 62.15 | 80.25 |
|        light        | 46.04 | 52.87 |
|        truck        | 51.27 | 63.95 |
|        tower        | 18.19 | 31.17 |
|      chandelier     | 64.58 | 82.51 |
|        awning       | 30.73 | 40.81 |
|     streetlight     | 28.49 |  37.4 |
|        booth        |  34.1 | 45.38 |
| television receiver | 73.75 | 82.73 |
|       airplane      |  71.4 | 80.58 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       | 57.81 | 78.31 |
|         pole        | 23.88 | 31.89 |
|         land        |  2.1  |  2.92 |
|      bannister      | 13.05 | 20.87 |
|      escalator      | 59.21 | 78.87 |
|       ottoman       | 55.85 | 68.62 |
|        bottle       | 29.25 | 36.18 |
|        buffet       | 64.79 |  71.5 |
|        poster       | 30.46 |  36.2 |
|        stage        | 18.61 | 26.26 |
|         van         | 45.48 | 64.67 |
|         ship        | 80.71 | 85.08 |
|       fountain      | 48.81 | 50.23 |
|    conveyer belt    | 85.36 | 91.35 |
|        canopy       | 20.56 | 26.12 |
|        washer       | 84.51 | 89.58 |
|      plaything      | 31.36 | 37.15 |
|    swimming pool    | 65.38 | 87.07 |
|        stool        | 53.02 | 71.87 |
|        barrel       | 58.27 | 68.07 |
|        basket       | 36.33 |  42.2 |
|      waterfall      | 52.84 | 62.44 |
|         tent        |  95.9 | 98.46 |
|         bag         |  20.3 | 21.32 |
|       minibike      | 71.69 | 84.19 |
|        cradle       | 84.36 | 97.28 |
|         oven        | 61.88 | 79.55 |
|         ball        | 57.21 | 68.01 |
|         food        | 54.45 | 58.41 |
|         step        | 14.82 | 17.78 |
|         tank        | 64.94 | 66.02 |
|      trade name     | 14.78 | 17.24 |
|      microwave      | 87.64 |  94.8 |
|         pot         | 60.09 | 69.21 |
|        animal       | 57.31 | 59.07 |
|       bicycle       | 54.22 | 67.52 |
|         lake        | 62.35 | 63.51 |
|      dishwasher     | 66.25 | 77.31 |
|        screen       | 66.54 | 90.42 |
|       blanket       | 21.55 | 22.42 |
|      sculpture      | 73.32 | 85.16 |
|         hood        | 58.12 | 75.68 |
|        sconce       | 48.16 | 55.32 |
|         vase        | 42.56 |  51.9 |
|    traffic light    | 35.27 | 43.15 |
|         tray        | 10.56 |  13.5 |
|        ashcan       |  46.6 | 54.61 |
|         fan         | 64.72 | 80.44 |
|         pier        | 32.63 | 48.74 |
|      crt screen     |  6.73 | 23.73 |
|        plate        | 58.11 | 71.61 |
|       monitor       | 10.42 |  11.7 |
|    bulletin board   | 52.48 |  64.8 |
|        shower       | 10.87 | 14.33 |
|       radiator      | 69.63 | 76.74 |
|        glass        | 14.24 | 15.09 |
|        clock        | 41.26 | 45.63 |
|         flag        |  63.3 | 71.11 |
+---------------------+-------+-------+
11/10 21:35:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.7000  mIoU: 54.1100  mAcc: 64.8500  data_time: 0.0039  time: 6.8082
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
11/10 21:37:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 892198086
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 892198086
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 21:37:12 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/motion_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 21:38:11,471 - mmseg - INFO - using core type: DCNv3
2024-11-10 21:38:11,471 - mmseg - INFO - using activation layer: GELU
2024-11-10 21:38:11,471 - mmseg - INFO - using main norm layer: LN
2024-11-10 21:38:11,471 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 21:38:11,471 - mmseg - INFO - level2_post_norm: True
2024-11-10 21:38:11,471 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 21:38:11,471 - mmseg - INFO - res_post_norm: True
2024-11-10 21:38:11,471 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 21:38:33 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 21:38:33 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 21:38:36 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 21:38:45 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 21:41:16 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:38:29  time: 1.4101  data_time: 0.0015  memory: 25645  
11/10 21:42:27 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:10:17  time: 1.5328  data_time: 0.0015  memory: 24207  
11/10 21:43:25 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:57:37  time: 1.1662  data_time: 0.0014  memory: 13887  
11/10 21:44:32 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:52:05  time: 1.2799  data_time: 0.0014  memory: 24212  
11/10 21:45:37 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:48:06  time: 1.1191  data_time: 0.0014  memory: 24175  
11/10 21:46:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:44:42  time: 1.0347  data_time: 0.0016  memory: 24217  
11/10 21:47:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:42:08  time: 1.1056  data_time: 0.0014  memory: 24229  
11/10 21:48:41 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:39:46  time: 1.1778  data_time: 0.0014  memory: 24178  
11/10 21:49:29 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:37:00  time: 1.0299  data_time: 0.0015  memory: 13702  
11/10 21:50:21 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:34:48  time: 0.9313  data_time: 0.0014  memory: 12983  
11/10 21:51:15 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:32:58  time: 1.1787  data_time: 0.0015  memory: 14079  
11/10 21:52:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:31:06  time: 1.1269  data_time: 0.0015  memory: 13888  
11/10 21:53:00 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:29:36  time: 1.1781  data_time: 0.0013  memory: 14369  
11/10 21:54:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:22  time: 1.0366  data_time: 0.0015  memory: 24226  
11/10 21:55:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:10  time: 1.5619  data_time: 0.0015  memory: 14074  
11/10 21:55:51 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:40  time: 0.9586  data_time: 0.0016  memory: 13889  
11/10 21:56:39 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:13  time: 0.9548  data_time: 0.0016  memory: 4878  
11/10 21:57:28 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:53  time: 0.9867  data_time: 0.0014  memory: 13142  
11/10 21:58:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:47  time: 1.2591  data_time: 0.0015  memory: 15016  
11/10 21:59:19 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:34  time: 0.9389  data_time: 0.0014  memory: 15018  
11/10 22:00:16 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:28  time: 1.3915  data_time: 0.0014  memory: 14825  
11/10 22:01:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:21  time: 0.9565  data_time: 0.0014  memory: 14077  
11/10 22:02:02 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:12  time: 1.1069  data_time: 0.0015  memory: 12995  
11/10 22:02:52 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:04  time: 0.9663  data_time: 0.0014  memory: 6023  
11/10 22:03:42 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:58  time: 1.0861  data_time: 0.0014  memory: 24213  
11/10 22:04:28 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:51  time: 0.9692  data_time: 0.0014  memory: 4881  
11/10 22:05:18 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:47  time: 0.9079  data_time: 0.0014  memory: 11450  
11/10 22:06:14 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:46  time: 1.2371  data_time: 0.0014  memory: 14637  
11/10 22:07:04 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:44  time: 1.1910  data_time: 0.0014  memory: 13142  
11/10 22:07:51 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:42  time: 0.8909  data_time: 0.0014  memory: 4880  
11/10 22:08:44 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:42  time: 1.0089  data_time: 0.0014  memory: 14827  
11/10 22:09:30 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:41  time: 0.9239  data_time: 0.0015  memory: 4877  
11/10 22:10:23 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:42  time: 0.9057  data_time: 0.0013  memory: 24226  
11/10 22:11:18 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:44  time: 0.9976  data_time: 0.0015  memory: 13328  
11/10 22:12:11 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:46  time: 1.0105  data_time: 0.0014  memory: 14454  
11/10 22:12:59 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:48  time: 0.9769  data_time: 0.0016  memory: 11821  
11/10 22:13:46 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:50  time: 0.9440  data_time: 0.0015  memory: 4822  
11/10 22:14:33 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:53  time: 0.9584  data_time: 0.0014  memory: 9193  
11/10 22:15:27 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:56  time: 0.9715  data_time: 0.0014  memory: 13001  
11/10 22:16:17 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8622  data_time: 0.0013  memory: 12765  
11/10 22:16:17 - mmengine - INFO - per class results:
11/10 22:16:17 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 80.28 | 88.64 |
|       building      |  83.1 | 93.43 |
|         sky         |  94.1 | 97.56 |
|        floor        | 82.62 |  91.5 |
|         tree        | 74.12 | 84.43 |
|       ceiling       | 86.01 |  94.4 |
|         road        | 85.43 | 91.36 |
|         bed         | 91.08 | 95.96 |
|      windowpane     | 64.34 | 81.44 |
|        grass        |  67.7 | 83.21 |
|       cabinet       | 66.05 | 77.04 |
|       sidewalk      | 66.61 | 79.58 |
|        person       | 80.75 | 89.77 |
|        earth        | 36.47 | 48.02 |
|         door        | 57.58 | 68.34 |
|        table        | 67.71 | 79.23 |
|       mountain      | 58.67 | 65.98 |
|        plant        | 51.94 | 63.27 |
|       curtain       | 73.57 | 85.07 |
|        chair        | 62.84 |  79.6 |
|         car         | 85.67 |  93.4 |
|        water        | 64.62 | 80.99 |
|       painting      | 76.95 | 87.39 |
|         sofa        | 81.68 | 90.72 |
|        shelf        | 49.48 |  70.4 |
|        house        | 50.95 | 69.75 |
|         sea         | 69.59 | 83.15 |
|        mirror       | 72.08 | 80.35 |
|         rug         | 64.78 | 73.13 |
|        field        | 36.29 | 71.26 |
|       armchair      | 58.53 | 72.17 |
|         seat        | 68.46 |  87.4 |
|        fence        | 50.95 | 65.65 |
|         desk        | 59.32 | 78.46 |
|         rock        | 54.11 | 78.88 |
|       wardrobe      | 59.75 | 78.61 |
|         lamp        | 68.88 | 81.39 |
|       bathtub       | 80.69 | 84.28 |
|       railing       | 39.98 | 56.29 |
|       cushion       | 70.47 | 80.44 |
|         base        |  38.1 | 54.16 |
|         box         | 37.32 | 47.57 |
|        column       | 51.73 | 61.41 |
|      signboard      | 35.28 | 47.38 |
|   chest of drawers  | 43.64 | 62.77 |
|       counter       |  49.9 | 56.36 |
|         sand        | 52.53 | 74.47 |
|         sink        |  80.2 | 86.41 |
|      skyscraper     | 51.32 | 56.28 |
|      fireplace      | 73.23 | 92.21 |
|     refrigerator    | 80.67 | 86.78 |
|      grandstand     | 50.05 | 87.44 |
|         path        | 25.22 | 50.27 |
|        stairs       | 36.48 | 44.92 |
|        runway       | 69.25 |  94.3 |
|         case        | 63.72 | 79.38 |
|      pool table     | 92.04 | 96.76 |
|        pillow       | 67.36 |  79.3 |
|     screen door     |  78.7 | 83.03 |
|       stairway      | 40.12 | 64.74 |
|        river        | 14.27 | 28.37 |
|        bridge       | 47.77 | 54.37 |
|       bookcase      | 48.75 | 68.22 |
|        blind        |  37.3 | 39.74 |
|     coffee table    |  66.3 | 87.02 |
|        toilet       | 86.53 | 91.51 |
|        flower       |  40.8 |  58.2 |
|         book        |  52.0 | 71.62 |
|         hill        |  5.2  | 12.19 |
|        bench        | 64.93 | 73.56 |
|      countertop     | 64.34 | 82.23 |
|        stove        | 83.09 | 91.23 |
|         palm        | 50.77 | 78.92 |
|    kitchen island   | 45.41 | 77.58 |
|       computer      | 77.76 | 88.33 |
|     swivel chair    | 44.22 | 58.82 |
|         boat        | 81.84 |  90.4 |
|         bar         | 59.06 | 75.07 |
|    arcade machine   | 87.27 | 94.14 |
|        hovel        | 23.19 | 25.23 |
|         bus         | 92.21 | 96.99 |
|        towel        | 70.01 | 80.32 |
|        light        | 51.45 | 59.73 |
|        truck        | 54.33 |  68.8 |
|        tower        | 29.75 | 61.78 |
|      chandelier     | 68.97 | 81.49 |
|        awning       | 34.39 | 44.81 |
|     streetlight     | 29.93 | 39.83 |
|        booth        | 54.77 | 77.09 |
| television receiver | 76.58 |  85.9 |
|       airplane      | 62.53 | 70.36 |
|      dirt track     |  7.57 | 31.48 |
|       apparel       | 55.95 | 70.96 |
|         pole        | 18.68 | 25.22 |
|         land        |  2.77 |  4.28 |
|      bannister      |  15.7 | 21.72 |
|      escalator      | 60.14 | 81.38 |
|       ottoman       | 53.69 | 69.77 |
|        bottle       | 40.75 |  62.1 |
|        buffet       | 49.07 | 57.15 |
|        poster       | 37.28 | 43.47 |
|        stage        | 19.66 | 35.53 |
|         van         | 48.54 | 69.36 |
|         ship        |  79.4 | 91.71 |
|       fountain      | 38.35 | 39.32 |
|    conveyer belt    | 80.48 | 90.86 |
|        canopy       | 38.21 | 56.65 |
|        washer       | 86.04 | 92.33 |
|      plaything      | 37.89 | 45.55 |
|    swimming pool    | 66.94 | 74.55 |
|        stool        | 48.76 | 67.93 |
|        barrel       | 69.34 | 90.29 |
|        basket       | 36.71 | 56.08 |
|      waterfall      | 52.06 | 56.93 |
|         tent        | 95.86 | 98.78 |
|         bag         | 21.17 | 23.68 |
|       minibike      | 72.22 | 89.82 |
|        cradle       | 85.31 |  96.5 |
|         oven        | 66.84 | 80.43 |
|         ball        | 60.87 | 70.97 |
|         food        | 50.78 | 57.97 |
|         step        |  16.4 | 19.05 |
|         tank        | 63.68 | 68.72 |
|      trade name     | 18.05 | 21.64 |
|      microwave      | 87.86 | 95.72 |
|         pot         | 59.03 |  70.0 |
|        animal       | 60.39 | 62.89 |
|       bicycle       | 58.79 | 80.84 |
|         lake        | 57.89 | 63.52 |
|      dishwasher     |  68.4 | 76.11 |
|        screen       | 62.27 | 83.55 |
|       blanket       |  27.5 | 30.57 |
|      sculpture      | 77.14 | 86.61 |
|         hood        | 61.25 | 74.97 |
|        sconce       | 54.34 | 67.39 |
|         vase        | 46.55 |  62.6 |
|    traffic light    | 38.21 | 55.54 |
|         tray        | 16.92 |  24.6 |
|        ashcan       | 43.98 | 57.45 |
|         fan         | 64.36 |  82.2 |
|         pier        | 30.62 | 43.76 |
|      crt screen     |  4.93 | 15.03 |
|        plate        | 58.92 | 77.58 |
|       monitor       |  12.6 | 14.23 |
|    bulletin board   | 59.49 | 70.84 |
|        shower       |  2.62 | 10.76 |
|       radiator      | 68.79 | 80.01 |
|        glass        | 19.94 | 22.15 |
|        clock        | 45.89 | 57.53 |
|         flag        | 63.52 | 73.47 |
+---------------------+-------+-------+
11/10 22:16:17 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.8900  mIoU: 55.7600  mAcc: 68.1600  data_time: 0.0020  time: 1.1263
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
11/10 22:16:21 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1178811119
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1178811119
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 22:16:22 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/zoom_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 22:16:25,306 - mmseg - INFO - using core type: DCNv3
2024-11-10 22:16:25,306 - mmseg - INFO - using activation layer: GELU
2024-11-10 22:16:25,306 - mmseg - INFO - using main norm layer: LN
2024-11-10 22:16:25,306 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 22:16:25,306 - mmseg - INFO - level2_post_norm: True
2024-11-10 22:16:25,306 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 22:16:25,306 - mmseg - INFO - res_post_norm: True
2024-11-10 22:16:25,306 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 22:16:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 22:16:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 22:16:43 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 22:16:47 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 22:18:14 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:56:42  time: 1.3898  data_time: 0.0015  memory: 25645  
11/10 22:19:22 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:49:13  time: 1.4999  data_time: 0.0016  memory: 24207  
11/10 22:20:20 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:43:47  time: 1.1611  data_time: 0.0015  memory: 13887  
11/10 22:21:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:41:46  time: 1.2418  data_time: 0.0015  memory: 24212  
11/10 22:22:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:39:48  time: 1.0691  data_time: 0.0014  memory: 24175  
11/10 22:23:27 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:37:46  time: 0.9798  data_time: 0.0015  memory: 24217  
11/10 22:24:28 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:36:16  time: 1.0597  data_time: 0.0014  memory: 24229  
11/10 22:25:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:34:38  time: 1.1294  data_time: 0.0015  memory: 24178  
11/10 22:26:13 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:32:31  time: 0.9894  data_time: 0.0015  memory: 13702  
11/10 22:27:03 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:30:48  time: 0.9261  data_time: 0.0014  memory: 12983  
11/10 22:27:56 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:29:25  time: 1.1538  data_time: 0.0015  memory: 14079  
11/10 22:28:46 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:27:59  time: 1.1382  data_time: 0.0016  memory: 13888  
11/10 22:29:40 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:26:46  time: 1.1501  data_time: 0.0014  memory: 14369  
11/10 22:30:39 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:25:45  time: 0.9896  data_time: 0.0016  memory: 24226  
11/10 22:31:37 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:24:44  time: 1.4458  data_time: 0.0014  memory: 14074  
11/10 22:32:23 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:23:25  time: 0.9550  data_time: 0.0016  memory: 13889  
11/10 22:33:12 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:22:12  time: 0.9661  data_time: 0.0016  memory: 4878  
11/10 22:33:59 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:21:02  time: 0.9585  data_time: 0.0014  memory: 13142  
11/10 22:34:57 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:20:04  time: 1.1999  data_time: 0.0015  memory: 15016  
11/10 22:35:47 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:18:59  time: 0.9101  data_time: 0.0015  memory: 15018  
11/10 22:36:42 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:01  time: 1.3334  data_time: 0.0015  memory: 14825  
11/10 22:37:41 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:06  time: 0.9299  data_time: 0.0015  memory: 14077  
11/10 22:38:30 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:03  time: 1.0838  data_time: 0.0014  memory: 12995  
11/10 22:39:19 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:01  time: 0.9271  data_time: 0.0015  memory: 6023  
11/10 22:40:07 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:00  time: 1.0506  data_time: 0.0014  memory: 24213  
11/10 22:40:52 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:12:58  time: 0.9547  data_time: 0.0015  memory: 4881  
11/10 22:41:40 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:11:59  time: 0.8791  data_time: 0.0014  memory: 11450  
11/10 22:42:34 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:03  time: 1.1864  data_time: 0.0015  memory: 14637  
11/10 22:43:22 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:05  time: 1.1312  data_time: 0.0014  memory: 13142  
11/10 22:44:12 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:08  time: 0.8774  data_time: 0.0014  memory: 4880  
11/10 22:45:03 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:12  time: 0.9778  data_time: 0.0015  memory: 14827  
11/10 22:45:49 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:15  time: 0.9288  data_time: 0.0015  memory: 4877  
11/10 22:46:41 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:20  time: 0.8656  data_time: 0.0014  memory: 24226  
11/10 22:47:33 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:25  time: 0.9502  data_time: 0.0016  memory: 13328  
11/10 22:48:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:31  time: 0.9355  data_time: 0.0014  memory: 14454  
11/10 22:49:11 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:35  time: 0.9618  data_time: 0.0016  memory: 11821  
11/10 22:49:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:41  time: 0.9525  data_time: 0.0016  memory: 4822  
11/10 22:50:44 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:47  time: 0.9188  data_time: 0.0014  memory: 9193  
11/10 22:51:37 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:53  time: 0.9142  data_time: 0.0014  memory: 13001  
11/10 22:52:26 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8507  data_time: 0.0015  memory: 12765  
11/10 22:52:26 - mmengine - INFO - per class results:
11/10 22:52:26 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 70.62 | 82.97 |
|       building      | 77.32 | 93.82 |
|         sky         | 88.72 | 91.83 |
|        floor        | 70.82 | 85.99 |
|         tree        | 64.96 | 78.96 |
|       ceiling       | 75.14 | 92.13 |
|         road        | 74.81 | 85.86 |
|         bed         | 83.21 |  94.4 |
|      windowpane     |  55.8 | 78.94 |
|        grass        | 59.01 | 72.41 |
|       cabinet       | 56.86 | 67.12 |
|       sidewalk      | 48.28 | 58.81 |
|        person       |  69.2 | 78.17 |
|        earth        | 24.86 | 30.34 |
|         door        | 48.48 | 58.32 |
|        table        | 54.71 | 70.83 |
|       mountain      |  45.2 | 49.84 |
|        plant        | 38.79 |  50.7 |
|       curtain       | 56.32 | 70.13 |
|        chair        | 49.49 | 66.39 |
|         car         | 74.53 | 86.87 |
|        water        | 56.69 | 78.28 |
|       painting      | 63.67 |  77.8 |
|         sofa        | 69.86 | 81.25 |
|        shelf        | 36.66 | 66.13 |
|        house        | 48.58 | 71.56 |
|         sea         | 65.27 | 76.88 |
|        mirror       | 60.21 | 67.31 |
|         rug         | 28.16 |  29.4 |
|        field        | 25.54 | 74.21 |
|       armchair      | 47.27 |  59.6 |
|         seat        | 52.78 | 85.54 |
|        fence        | 38.67 | 52.14 |
|         desk        | 48.93 | 70.73 |
|         rock        | 37.18 | 56.82 |
|       wardrobe      | 51.91 | 74.31 |
|         lamp        | 52.16 | 69.36 |
|       bathtub       | 75.54 | 81.96 |
|       railing       | 32.04 | 47.28 |
|       cushion       | 50.82 | 63.37 |
|         base        | 19.57 | 37.57 |
|         box         | 20.06 | 26.84 |
|        column       | 37.06 | 49.07 |
|      signboard      | 23.46 | 29.85 |
|   chest of drawers  | 45.82 | 62.86 |
|       counter       | 39.51 | 48.68 |
|         sand        | 37.59 | 55.63 |
|         sink        | 67.66 | 76.31 |
|      skyscraper     | 47.31 | 55.38 |
|      fireplace      | 70.05 | 83.85 |
|     refrigerator    | 72.12 | 84.01 |
|      grandstand     | 38.38 | 76.25 |
|         path        | 17.33 | 47.45 |
|        stairs       | 12.69 |  14.1 |
|        runway       | 61.98 | 86.81 |
|         case        | 48.73 | 70.34 |
|      pool table     | 87.99 | 96.86 |
|        pillow       | 50.95 | 59.49 |
|     screen door     | 46.51 | 58.82 |
|       stairway      | 42.87 | 57.79 |
|        river        |  7.58 |  15.8 |
|        bridge       |  37.9 | 48.17 |
|       bookcase      | 27.13 | 34.39 |
|        blind        | 17.95 | 19.75 |
|     coffee table    | 52.84 | 66.51 |
|        toilet       | 77.33 | 88.51 |
|        flower       | 23.56 | 41.94 |
|         book        | 35.37 | 45.25 |
|         hill        |  3.94 |  9.96 |
|        bench        | 41.08 | 49.01 |
|      countertop     |  51.4 | 71.22 |
|        stove        | 73.12 | 83.09 |
|         palm        | 29.94 | 45.25 |
|    kitchen island   | 38.06 | 48.13 |
|       computer      | 52.61 | 60.92 |
|     swivel chair    | 37.41 | 54.78 |
|         boat        | 70.86 | 82.73 |
|         bar         | 58.53 | 70.02 |
|    arcade machine   | 69.23 | 88.35 |
|        hovel        | 13.83 | 15.36 |
|         bus         | 80.93 | 86.95 |
|        towel        | 43.31 |  51.0 |
|        light        | 30.38 | 43.54 |
|        truck        | 31.98 | 45.64 |
|        tower        | 18.78 | 40.21 |
|      chandelier     | 54.21 | 73.11 |
|        awning       | 24.92 | 35.85 |
|     streetlight     | 12.08 | 13.55 |
|        booth        | 41.05 | 44.67 |
| television receiver | 54.68 | 63.84 |
|       airplane      | 48.43 | 57.59 |
|      dirt track     |  2.56 |  20.1 |
|       apparel       | 33.72 | 42.05 |
|         pole        | 14.44 | 17.32 |
|         land        |  2.66 |  3.1  |
|      bannister      |  3.26 |  5.85 |
|      escalator      | 45.76 | 69.26 |
|       ottoman       | 48.42 | 62.14 |
|        bottle       | 28.11 |  41.0 |
|        buffet       | 47.41 | 67.06 |
|        poster       | 29.18 | 37.88 |
|        stage        | 15.12 | 27.61 |
|         van         | 39.15 | 47.26 |
|         ship        | 18.18 | 18.61 |
|       fountain      | 19.68 | 20.75 |
|    conveyer belt    | 48.85 | 51.78 |
|        canopy       | 12.46 | 17.15 |
|        washer       | 78.82 | 86.05 |
|      plaything      | 15.72 | 27.15 |
|    swimming pool    | 66.68 | 88.81 |
|        stool        | 43.97 | 59.54 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 28.81 | 37.12 |
|      waterfall      | 27.18 | 31.82 |
|         tent        | 79.47 | 99.75 |
|         bag         |  1.73 |  1.84 |
|       minibike      | 56.37 | 66.52 |
|        cradle       | 77.92 |  95.9 |
|         oven        | 46.04 | 65.36 |
|         ball        | 25.29 |  29.4 |
|         food        | 44.32 | 49.22 |
|         step        | 10.16 | 12.77 |
|         tank        | 62.62 | 65.29 |
|      trade name     | 11.47 | 12.71 |
|      microwave      | 78.86 | 88.74 |
|         pot         | 31.52 | 34.77 |
|        animal       | 55.45 | 61.58 |
|       bicycle       | 41.59 | 67.74 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     | 51.23 | 60.65 |
|        screen       | 52.43 | 86.88 |
|       blanket       | 15.27 | 18.03 |
|      sculpture      | 49.81 | 57.57 |
|         hood        | 57.36 | 70.88 |
|        sconce       | 29.16 | 41.73 |
|         vase        | 30.17 | 41.15 |
|    traffic light    | 23.77 | 29.98 |
|         tray        |  6.31 |  9.53 |
|        ashcan       | 25.78 | 36.24 |
|         fan         | 43.92 | 69.72 |
|         pier        | 32.29 | 45.84 |
|      crt screen     |  3.54 | 14.46 |
|        plate        | 44.64 | 64.76 |
|       monitor       |  6.07 |  9.36 |
|    bulletin board   | 23.53 | 24.63 |
|        shower       |  1.03 |  9.6  |
|       radiator      | 50.67 | 59.47 |
|        glass        |  8.75 |  9.1  |
|        clock        | 10.21 | 10.98 |
|         flag        |  53.3 | 58.46 |
+---------------------+-------+-------+
11/10 22:52:26 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.7400  mIoU: 41.9300  mAcc: 53.7500  data_time: 0.0021  time: 1.0697
Finished processing corruption type: zoom_blur
Processing corruption type: snow
11/10 22:54:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2039602307
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2039602307
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 22:54:48 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/snow'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 22:55:28,116 - mmseg - INFO - using core type: DCNv3
2024-11-10 22:55:28,116 - mmseg - INFO - using activation layer: GELU
2024-11-10 22:55:28,116 - mmseg - INFO - using main norm layer: LN
2024-11-10 22:55:28,116 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 22:55:28,116 - mmseg - INFO - level2_post_norm: True
2024-11-10 22:55:28,116 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 22:55:28,116 - mmseg - INFO - res_post_norm: True
2024-11-10 22:55:28,116 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 22:55:52 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 22:55:52 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 22:55:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 22:56:03 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 22:58:05 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:19:17  time: 0.9358  data_time: 0.0015  memory: 25645  
11/10 22:58:52 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:53:26  time: 1.0526  data_time: 0.0015  memory: 24207  
11/10 22:59:28 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:42:06  time: 0.7128  data_time: 0.0015  memory: 13887  
11/10 23:00:12 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:37:14  time: 0.8087  data_time: 0.0015  memory: 24212  
11/10 23:00:55 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:34:04  time: 0.6525  data_time: 0.0014  memory: 24175  
11/10 23:01:34 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:31:11  time: 0.5423  data_time: 0.0015  memory: 24217  
11/10 23:02:14 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:29:07  time: 0.6594  data_time: 0.0015  memory: 24229  
11/10 23:02:51 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:27:11  time: 0.6984  data_time: 0.0014  memory: 24178  
11/10 23:03:19 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:25:00  time: 0.6030  data_time: 0.0014  memory: 13702  
11/10 23:03:48 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:23:13  time: 0.5145  data_time: 0.0014  memory: 12983  
11/10 23:04:19 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:21:46  time: 0.7123  data_time: 0.0015  memory: 14079  
11/10 23:04:48 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:20:24  time: 0.7033  data_time: 0.0015  memory: 13888  
11/10 23:05:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:19:18  time: 0.7296  data_time: 0.0014  memory: 14369  
11/10 23:05:58 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:18:24  time: 0.5546  data_time: 0.0027  memory: 24226  
11/10 23:06:35 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:17:32  time: 1.0322  data_time: 0.0014  memory: 14074  
11/10 23:07:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:16:26  time: 0.5289  data_time: 0.0015  memory: 13889  
11/10 23:07:28 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:15:25  time: 0.5311  data_time: 0.0015  memory: 4878  
11/10 23:07:56 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:14:30  time: 0.5814  data_time: 0.0014  memory: 13142  
11/10 23:08:31 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:13:46  time: 0.7877  data_time: 0.0015  memory: 15016  
11/10 23:09:01 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:12:57  time: 0.5036  data_time: 0.0028  memory: 15018  
11/10 23:09:35 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:12:14  time: 0.8982  data_time: 0.0014  memory: 14825  
11/10 23:10:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:11:30  time: 0.5115  data_time: 0.0016  memory: 14077  
11/10 23:10:36 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:10:44  time: 0.6576  data_time: 0.0014  memory: 12995  
11/10 23:11:02 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:09:59  time: 0.5125  data_time: 0.0015  memory: 6023  
11/10 23:11:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:09:18  time: 0.6404  data_time: 0.0015  memory: 24213  
11/10 23:12:02 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:08:36  time: 0.5292  data_time: 0.0016  memory: 4881  
11/10 23:12:29 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:07:54  time: 0.4939  data_time: 0.0031  memory: 11450  
11/10 23:13:05 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:07:17  time: 0.7514  data_time: 0.0014  memory: 14637  
11/10 23:13:32 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:06:37  time: 0.6899  data_time: 0.0014  memory: 13142  
11/10 23:13:58 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:05:58  time: 0.4825  data_time: 0.0015  memory: 4880  
11/10 23:14:27 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:05:20  time: 0.5409  data_time: 0.0015  memory: 14827  
11/10 23:14:52 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:04:42  time: 0.5130  data_time: 0.0016  memory: 4877  
11/10 23:15:23 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:04:06  time: 0.4799  data_time: 0.0014  memory: 24226  
11/10 23:15:54 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:30  time: 0.5230  data_time: 0.0016  memory: 13328  
11/10 23:16:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:54  time: 0.5145  data_time: 0.0014  memory: 14454  
11/10 23:16:50 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:18  time: 0.5312  data_time: 0.0016  memory: 11821  
11/10 23:17:17 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:43  time: 0.5263  data_time: 0.0017  memory: 4822  
11/10 23:17:44 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:08  time: 0.5123  data_time: 0.0015  memory: 9193  
11/10 23:18:14 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:34  time: 0.5071  data_time: 0.0014  memory: 13001  
11/10 23:18:43 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.4707  data_time: 0.0014  memory: 12765  
11/10 23:18:43 - mmengine - INFO - per class results:
11/10 23:18:43 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.88 | 86.82 |
|       building      | 82.79 | 94.16 |
|         sky         | 93.28 | 96.42 |
|        floor        | 81.57 | 92.11 |
|         tree        | 73.53 |  86.0 |
|       ceiling       | 80.44 | 95.54 |
|         road        |  81.9 | 88.37 |
|         bed         | 90.37 | 96.34 |
|      windowpane     | 64.12 |  79.2 |
|        grass        | 67.11 | 88.34 |
|       cabinet       | 61.05 | 70.99 |
|       sidewalk      | 59.63 | 86.09 |
|        person       | 81.28 | 90.73 |
|        earth        | 32.74 | 37.96 |
|         door        |  56.8 |  69.8 |
|        table        | 65.71 | 77.13 |
|       mountain      |  56.7 | 70.18 |
|        plant        |  52.7 | 62.12 |
|       curtain       | 67.09 | 81.83 |
|        chair        | 60.46 | 75.29 |
|         car         | 83.53 | 92.63 |
|        water        | 57.81 | 84.56 |
|       painting      | 75.02 | 82.46 |
|         sofa        |  75.3 | 88.93 |
|        shelf        | 46.29 | 69.04 |
|        house        | 48.43 | 59.57 |
|         sea         | 61.94 | 83.43 |
|        mirror       | 68.81 | 76.48 |
|         rug         | 60.24 | 62.59 |
|        field        | 36.71 | 60.83 |
|       armchair      | 55.25 | 70.13 |
|         seat        |  64.8 | 87.84 |
|        fence        | 40.64 | 48.83 |
|         desk        | 51.08 | 79.96 |
|         rock        | 51.41 | 70.63 |
|       wardrobe      | 55.81 | 75.32 |
|         lamp        | 67.32 | 79.75 |
|       bathtub       | 76.83 | 83.75 |
|       railing       | 31.94 | 45.22 |
|       cushion       | 58.08 | 65.36 |
|         base        | 27.81 | 40.07 |
|         box         | 33.96 | 43.03 |
|        column       | 52.29 | 62.62 |
|      signboard      | 32.97 |  38.3 |
|   chest of drawers  | 34.93 | 72.58 |
|       counter       | 39.04 | 47.69 |
|         sand        | 31.95 | 49.62 |
|         sink        |  71.8 | 80.24 |
|      skyscraper     | 20.26 | 20.74 |
|      fireplace      | 75.26 | 89.65 |
|     refrigerator    |  84.3 |  93.6 |
|      grandstand     | 52.14 | 87.01 |
|         path        | 13.39 | 17.28 |
|        stairs       | 38.23 | 49.59 |
|        runway       |  65.4 | 98.37 |
|         case        | 54.72 | 63.97 |
|      pool table     | 90.43 | 97.17 |
|        pillow       | 53.85 |  64.6 |
|     screen door     | 68.92 |  85.6 |
|       stairway      | 45.33 | 62.21 |
|        river        | 11.76 |  15.5 |
|        bridge       | 39.03 | 45.33 |
|       bookcase      | 43.67 | 54.78 |
|        blind        | 34.73 | 35.87 |
|     coffee table    | 64.59 | 78.49 |
|        toilet       | 85.46 | 91.54 |
|        flower       | 38.92 | 51.22 |
|         book        |  46.8 |  56.8 |
|         hill        |  5.97 |  9.21 |
|        bench        | 45.31 | 52.88 |
|      countertop     | 63.13 | 78.39 |
|        stove        | 81.88 | 89.83 |
|         palm        | 53.05 | 76.13 |
|    kitchen island   | 39.72 | 81.05 |
|       computer      | 76.46 | 87.68 |
|     swivel chair    | 46.86 | 72.23 |
|         boat        | 79.92 | 89.69 |
|         bar         | 58.33 | 75.78 |
|    arcade machine   | 57.17 | 63.61 |
|        hovel        | 19.98 | 22.74 |
|         bus         |  92.1 | 97.44 |
|        towel        | 62.88 | 68.63 |
|        light        | 41.85 | 46.16 |
|        truck        | 48.31 | 61.96 |
|        tower        | 20.46 | 35.13 |
|      chandelier     | 67.64 | 83.63 |
|        awning       | 31.91 |  37.9 |
|     streetlight     | 32.14 | 43.35 |
|        booth        | 43.99 | 49.49 |
| television receiver | 66.89 |  75.1 |
|       airplane      | 59.42 |  71.7 |
|      dirt track     |  6.34 |  7.71 |
|       apparel       | 42.23 | 59.03 |
|         pole        | 21.03 | 26.71 |
|         land        |  2.76 |  5.4  |
|      bannister      | 16.69 |  21.8 |
|      escalator      | 56.48 | 76.24 |
|       ottoman       | 56.04 | 67.58 |
|        bottle       | 40.34 | 65.05 |
|        buffet       | 54.19 | 62.56 |
|        poster       | 33.28 |  51.2 |
|        stage        | 13.01 | 27.15 |
|         van         | 48.92 | 72.59 |
|         ship        | 90.96 |  94.6 |
|       fountain      | 26.48 | 32.53 |
|    conveyer belt    | 68.72 | 77.57 |
|        canopy       |  13.4 | 19.27 |
|        washer       | 87.28 | 93.33 |
|      plaything      | 28.67 | 35.71 |
|    swimming pool    | 45.98 | 79.44 |
|        stool        | 48.64 | 59.96 |
|        barrel       | 19.74 | 22.96 |
|        basket       | 34.08 | 51.38 |
|      waterfall      | 40.49 |  46.6 |
|         tent        | 93.52 | 99.38 |
|         bag         | 13.52 | 14.85 |
|       minibike      | 71.53 | 87.53 |
|        cradle       | 84.58 | 96.56 |
|         oven        | 65.79 | 78.48 |
|         ball        | 48.68 | 65.33 |
|         food        |  54.4 | 61.28 |
|         step        |  10.6 | 11.35 |
|         tank        |  61.2 | 62.59 |
|      trade name     | 21.45 | 25.78 |
|      microwave      | 86.81 | 94.34 |
|         pot         | 56.06 | 62.55 |
|        animal       | 58.81 | 61.73 |
|       bicycle       | 59.35 | 75.44 |
|         lake        |  2.95 |  2.95 |
|      dishwasher     | 57.97 | 66.77 |
|        screen       |  67.7 | 90.36 |
|       blanket       | 13.51 |  14.1 |
|      sculpture      | 74.23 |  84.8 |
|         hood        | 65.46 | 73.12 |
|        sconce       | 47.41 | 54.91 |
|         vase        | 47.46 | 58.13 |
|    traffic light    |  38.0 | 55.68 |
|         tray        | 14.25 |  28.2 |
|        ashcan       | 42.83 | 53.82 |
|         fan         | 61.74 | 77.19 |
|         pier        | 31.49 | 52.71 |
|      crt screen     |  3.89 | 13.49 |
|        plate        | 57.68 |  73.7 |
|       monitor       | 12.45 | 13.94 |
|    bulletin board   | 38.99 | 41.32 |
|        shower       |  5.52 | 13.27 |
|       radiator      | 66.07 | 71.74 |
|        glass        | 18.23 | 19.98 |
|        clock        | 44.81 | 54.43 |
|         flag        |  65.0 | 70.67 |
+---------------------+-------+-------+
11/10 23:18:43 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.4000  mIoU: 51.0800  mAcc: 62.6300  data_time: 0.0030  time: 0.6795
Finished processing corruption type: snow
Processing corruption type: frost
11/10 23:20:11 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1643354298
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1643354298
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 23:20:12 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/frost'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 23:20:35,835 - mmseg - INFO - using core type: DCNv3
2024-11-10 23:20:35,835 - mmseg - INFO - using activation layer: GELU
2024-11-10 23:20:35,835 - mmseg - INFO - using main norm layer: LN
2024-11-10 23:20:35,835 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 23:20:35,835 - mmseg - INFO - level2_post_norm: True
2024-11-10 23:20:35,835 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 23:20:35,835 - mmseg - INFO - res_post_norm: True
2024-11-10 23:20:35,835 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 23:20:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 23:20:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 23:20:56 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 23:21:04 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 23:22:17 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:47:26  time: 0.7070  data_time: 0.0015  memory: 25645  
11/10 23:22:55 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:35:02  time: 0.9685  data_time: 0.0103  memory: 24207  
11/10 23:23:20 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:01  time: 0.5018  data_time: 0.0016  memory: 13887  
11/10 23:23:53 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:25:21  time: 0.6018  data_time: 0.0016  memory: 24212  
11/10 23:24:25 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:23:27  time: 0.4457  data_time: 0.0014  memory: 24175  
11/10 23:24:53 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:38  time: 0.3286  data_time: 0.0015  memory: 24217  
11/10 23:25:23 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:22  time: 0.4608  data_time: 0.0014  memory: 24229  
11/10 23:25:50 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:03  time: 0.4835  data_time: 0.0015  memory: 24178  
11/10 23:26:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:27  time: 0.4086  data_time: 0.0014  memory: 13702  
11/10 23:26:27 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:07  time: 0.3126  data_time: 0.0014  memory: 12983  
11/10 23:26:47 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:03  time: 0.4914  data_time: 0.0016  memory: 14079  
11/10 23:27:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:02  time: 0.4861  data_time: 0.0015  memory: 13888  
11/10 23:27:28 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:17  time: 0.5175  data_time: 0.0014  memory: 14369  
11/10 23:27:54 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:40  time: 0.3375  data_time: 0.0015  memory: 24226  
11/10 23:28:20 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:06  time: 0.8281  data_time: 0.0014  memory: 14074  
11/10 23:28:37 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:18  time: 0.3242  data_time: 0.0015  memory: 13889  
11/10 23:28:53 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:34  time: 0.3222  data_time: 0.0016  memory: 4878  
11/10 23:29:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:55  time: 0.3929  data_time: 0.0014  memory: 13142  
11/10 23:29:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:26  time: 0.5837  data_time: 0.0015  memory: 15016  
11/10 23:29:56 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:51  time: 0.3082  data_time: 0.0014  memory: 15018  
11/10 23:30:20 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:22  time: 0.6806  data_time: 0.0014  memory: 14825  
11/10 23:30:41 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:52  time: 0.3088  data_time: 0.0015  memory: 14077  
11/10 23:30:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:19  time: 0.4510  data_time: 0.0015  memory: 12995  
11/10 23:31:15 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:47  time: 0.3096  data_time: 0.0015  memory: 6023  
11/10 23:31:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:17  time: 0.4391  data_time: 0.0014  memory: 24213  
11/10 23:31:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:47  time: 0.3229  data_time: 0.0014  memory: 4881  
11/10 23:32:06 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:18  time: 0.2933  data_time: 0.0014  memory: 11450  
11/10 23:32:28 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:53  time: 0.5232  data_time: 0.0014  memory: 14637  
11/10 23:32:46 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:26  time: 0.4830  data_time: 0.0014  memory: 13142  
11/10 23:33:02 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:59  time: 0.2956  data_time: 0.0014  memory: 4880  
11/10 23:33:20 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:33  time: 0.3321  data_time: 0.0014  memory: 14827  
11/10 23:33:35 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:07  time: 0.3121  data_time: 0.0016  memory: 4877  
11/10 23:33:57 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:43  time: 0.2890  data_time: 0.0013  memory: 24226  
11/10 23:34:17 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:19  time: 0.3204  data_time: 0.0015  memory: 13328  
11/10 23:34:36 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:56  time: 0.3113  data_time: 0.0014  memory: 14454  
11/10 23:34:53 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:32  time: 0.3236  data_time: 0.0015  memory: 11821  
11/10 23:35:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:08  time: 0.3240  data_time: 0.0016  memory: 4822  
11/10 23:35:25 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:45  time: 0.3103  data_time: 0.0014  memory: 9193  
11/10 23:35:45 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:22  time: 0.3072  data_time: 0.0015  memory: 13001  
11/10 23:36:04 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2885  data_time: 0.0014  memory: 12765  
11/10 23:36:04 - mmengine - INFO - per class results:
11/10 23:36:04 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.53 | 88.24 |
|       building      |  83.1 | 91.62 |
|         sky         | 87.72 | 90.58 |
|        floor        | 81.91 | 91.71 |
|         tree        | 72.45 | 87.66 |
|       ceiling       | 79.93 | 90.06 |
|         road        | 82.42 | 88.12 |
|         bed         | 89.98 | 95.91 |
|      windowpane     |  62.8 | 77.77 |
|        grass        | 70.51 | 84.47 |
|       cabinet       | 65.39 | 74.72 |
|       sidewalk      | 64.06 | 77.82 |
|        person       | 81.28 | 90.02 |
|        earth        | 42.22 | 59.49 |
|         door        | 52.53 |  69.1 |
|        table        | 67.21 | 81.28 |
|       mountain      | 42.46 | 69.53 |
|        plant        | 47.27 |  56.8 |
|       curtain       | 67.44 | 78.67 |
|        chair        |  60.1 | 73.81 |
|         car         | 85.11 | 91.98 |
|        water        |  64.7 |  78.0 |
|       painting      | 74.36 | 85.48 |
|         sofa        | 81.12 | 90.67 |
|        shelf        | 46.35 | 64.53 |
|        house        | 48.16 | 76.66 |
|         sea         | 62.97 | 75.61 |
|        mirror       | 68.85 |  73.8 |
|         rug         |  59.6 | 63.78 |
|        field        |  35.1 | 48.72 |
|       armchair      | 60.59 | 77.84 |
|         seat        | 63.86 | 85.78 |
|        fence        | 46.42 | 56.79 |
|         desk        | 55.98 | 77.21 |
|         rock        | 50.89 | 73.87 |
|       wardrobe      | 58.16 | 73.55 |
|         lamp        | 67.73 |  78.3 |
|       bathtub       | 78.42 | 83.73 |
|       railing       | 38.29 | 56.52 |
|       cushion       | 67.44 | 77.41 |
|         base        | 36.56 | 46.81 |
|         box         | 35.83 | 45.91 |
|        column       | 49.77 | 59.42 |
|      signboard      | 34.84 | 42.37 |
|   chest of drawers  | 40.18 | 59.04 |
|       counter       | 54.91 | 64.22 |
|         sand        | 50.12 | 69.04 |
|         sink        | 78.86 | 85.79 |
|      skyscraper     | 49.52 | 55.48 |
|      fireplace      | 73.55 | 90.34 |
|     refrigerator    | 81.57 | 93.86 |
|      grandstand     | 48.88 | 86.26 |
|         path        | 26.81 | 42.92 |
|        stairs       | 49.89 | 60.41 |
|        runway       | 64.55 |  85.6 |
|         case        |  56.9 | 77.99 |
|      pool table     | 91.84 | 96.23 |
|        pillow       | 57.38 | 67.74 |
|     screen door     | 45.71 | 88.86 |
|       stairway      | 46.61 |  70.8 |
|        river        |  13.8 | 30.19 |
|        bridge       |  37.9 |  48.1 |
|       bookcase      | 48.99 | 63.42 |
|        blind        | 26.97 | 27.59 |
|     coffee table    | 67.27 | 75.43 |
|        toilet       | 85.98 | 92.29 |
|        flower       | 40.55 | 56.83 |
|         book        | 50.34 |  65.6 |
|         hill        |  4.93 | 12.22 |
|        bench        |  47.8 |  56.2 |
|      countertop     | 61.08 | 78.95 |
|        stove        | 84.58 | 89.42 |
|         palm        | 55.98 | 75.73 |
|    kitchen island   |  32.9 | 65.11 |
|       computer      | 78.59 | 90.58 |
|     swivel chair    | 44.38 | 68.01 |
|         boat        | 69.19 | 91.32 |
|         bar         | 67.62 | 76.43 |
|    arcade machine   | 79.81 | 84.56 |
|        hovel        | 35.83 | 42.38 |
|         bus         |  91.9 | 96.47 |
|        towel        | 63.26 | 74.33 |
|        light        | 50.05 | 56.64 |
|        truck        | 48.33 | 58.99 |
|        tower        | 12.54 | 22.56 |
|      chandelier     | 66.28 | 84.87 |
|        awning       | 43.76 | 52.33 |
|     streetlight     | 33.59 | 43.48 |
|        booth        | 48.73 | 76.61 |
| television receiver |  71.3 | 82.52 |
|       airplane      | 63.16 | 71.68 |
|      dirt track     |  4.37 | 32.14 |
|       apparel       | 37.16 | 51.24 |
|         pole        | 26.26 | 38.75 |
|         land        |  0.15 |  0.26 |
|      bannister      | 14.69 | 21.24 |
|      escalator      | 53.54 | 85.23 |
|       ottoman       | 52.71 | 68.84 |
|        bottle       |  41.6 |  67.4 |
|        buffet       | 45.13 | 53.77 |
|        poster       | 33.24 | 38.25 |
|        stage        | 17.83 | 28.01 |
|         van         | 51.48 | 75.56 |
|         ship        | 80.75 | 93.69 |
|       fountain      | 50.47 | 51.71 |
|    conveyer belt    |  81.5 | 86.96 |
|        canopy       | 39.07 | 77.35 |
|        washer       | 86.22 | 90.39 |
|      plaything      | 28.42 | 45.67 |
|    swimming pool    | 55.75 | 77.92 |
|        stool        | 47.02 | 61.38 |
|        barrel       | 53.62 |  62.6 |
|        basket       |  35.7 | 47.46 |
|      waterfall      | 45.91 |  51.4 |
|         tent        | 94.44 |  98.6 |
|         bag         |  21.2 |  24.0 |
|       minibike      | 73.52 |  88.0 |
|        cradle       | 79.74 | 94.97 |
|         oven        | 65.23 | 75.19 |
|         ball        | 51.14 | 66.16 |
|         food        | 53.91 | 62.94 |
|         step        | 15.09 | 16.77 |
|         tank        | 74.99 | 89.96 |
|      trade name     | 20.75 | 24.51 |
|      microwave      | 88.56 | 93.64 |
|         pot         | 55.58 | 62.11 |
|        animal       | 62.19 | 66.16 |
|       bicycle       | 57.48 | 74.85 |
|         lake        | 47.44 | 63.72 |
|      dishwasher     | 59.86 | 67.24 |
|        screen       | 52.03 | 81.52 |
|       blanket       | 16.34 | 17.02 |
|      sculpture      | 60.89 | 87.52 |
|         hood        | 63.99 |  71.3 |
|        sconce       | 48.64 | 58.18 |
|         vase        | 44.94 | 61.28 |
|    traffic light    | 41.43 | 51.93 |
|         tray        | 13.68 |  23.9 |
|        ashcan       |  40.0 | 47.34 |
|         fan         | 62.83 | 76.23 |
|         pier        | 39.58 | 46.47 |
|      crt screen     |  3.47 | 10.85 |
|        plate        | 61.44 | 76.87 |
|       monitor       | 13.24 | 14.21 |
|    bulletin board   | 37.38 | 41.31 |
|        shower       |  3.11 | 14.62 |
|       radiator      | 55.06 | 58.84 |
|        glass        | 21.08 |  23.4 |
|        clock        | 32.69 | 39.32 |
|         flag        | 64.62 | 74.33 |
+---------------------+-------+-------+
11/10 23:36:04 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.2100  mIoU: 53.1600  mAcc: 65.7300  data_time: 0.0017  time: 0.4501
Finished processing corruption type: frost
Processing corruption type: fog
11/10 23:36:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 413563349
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 413563349
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 23:36:25 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/fog'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 23:36:33,462 - mmseg - INFO - using core type: DCNv3
2024-11-10 23:36:33,462 - mmseg - INFO - using activation layer: GELU
2024-11-10 23:36:33,462 - mmseg - INFO - using main norm layer: LN
2024-11-10 23:36:33,462 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 23:36:33,462 - mmseg - INFO - level2_post_norm: True
2024-11-10 23:36:33,462 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 23:36:33,462 - mmseg - INFO - res_post_norm: True
2024-11-10 23:36:33,462 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 23:36:50 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 23:36:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 23:36:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 23:36:59 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 23:38:06 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:43:34  time: 0.8265  data_time: 0.0014  memory: 25645  
11/10 23:38:48 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:34:38  time: 0.9555  data_time: 0.0015  memory: 24207  
11/10 23:39:20 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:57  time: 0.6201  data_time: 0.0015  memory: 13887  
11/10 23:39:58 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:26:55  time: 0.7177  data_time: 0.0014  memory: 24212  
11/10 23:40:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:21  time: 0.5608  data_time: 0.0014  memory: 24175  
11/10 23:41:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:23:43  time: 0.4470  data_time: 0.0015  memory: 24217  
11/10 23:41:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:22:34  time: 0.5780  data_time: 0.0014  memory: 24229  
11/10 23:42:19 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:21:19  time: 0.6033  data_time: 0.0014  memory: 24178  
11/10 23:42:43 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:19:45  time: 0.5284  data_time: 0.0014  memory: 13702  
11/10 23:43:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:18:26  time: 0.4319  data_time: 0.0015  memory: 12983  
11/10 23:43:33 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:17:20  time: 0.6114  data_time: 0.0015  memory: 14079  
11/10 23:43:58 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:16:18  time: 0.6048  data_time: 0.0016  memory: 13888  
11/10 23:44:27 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:15:30  time: 0.6376  data_time: 0.0014  memory: 14369  
11/10 23:44:59 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:14:51  time: 0.4587  data_time: 0.0016  memory: 24226  
11/10 23:45:31 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:14:13  time: 0.9491  data_time: 0.0015  memory: 14074  
11/10 23:45:53 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:13:22  time: 0.4404  data_time: 0.0016  memory: 13889  
11/10 23:46:15 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:12:33  time: 0.4411  data_time: 0.0016  memory: 4878  
11/10 23:46:40 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:11:50  time: 0.5123  data_time: 0.0014  memory: 13142  
11/10 23:47:11 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:11:16  time: 0.7029  data_time: 0.0015  memory: 15016  
11/10 23:47:37 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:10:38  time: 0.4275  data_time: 0.0015  memory: 15018  
11/10 23:48:06 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:10:03  time: 0.7982  data_time: 0.0015  memory: 14825  
11/10 23:48:34 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:09:28  time: 0.4267  data_time: 0.0015  memory: 14077  
11/10 23:48:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:08:51  time: 0.5724  data_time: 0.0015  memory: 12995  
11/10 23:49:20 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:08:14  time: 0.4324  data_time: 0.0015  memory: 6023  
11/10 23:49:45 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:07:39  time: 0.5589  data_time: 0.0014  memory: 24213  
11/10 23:50:06 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:03  time: 0.4421  data_time: 0.0015  memory: 4881  
11/10 23:50:28 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:29  time: 0.4141  data_time: 0.0015  memory: 11450  
11/10 23:50:57 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:59  time: 0.6414  data_time: 0.0014  memory: 14637  
11/10 23:51:21 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:27  time: 0.6000  data_time: 0.0014  memory: 13142  
11/10 23:51:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:54  time: 0.4126  data_time: 0.0014  memory: 4880  
11/10 23:52:06 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:23  time: 0.4500  data_time: 0.0015  memory: 14827  
11/10 23:52:28 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:52  time: 0.4302  data_time: 0.0016  memory: 4877  
11/10 23:52:55 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:22  time: 0.4096  data_time: 0.0014  memory: 24226  
11/10 23:53:22 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:53  time: 0.4385  data_time: 0.0016  memory: 13328  
11/10 23:53:47 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:24  time: 0.4316  data_time: 0.0014  memory: 14454  
11/10 23:54:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:54  time: 0.4425  data_time: 0.0016  memory: 11821  
11/10 23:54:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:25  time: 0.4408  data_time: 0.0016  memory: 4822  
11/10 23:54:54 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:56  time: 0.4296  data_time: 0.0014  memory: 9193  
11/10 23:55:20 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:28  time: 0.4400  data_time: 0.0015  memory: 13001  
11/10 23:55:45 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.4060  data_time: 0.0013  memory: 12765  
11/10 23:55:45 - mmengine - INFO - per class results:
11/10 23:55:45 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 81.58 | 90.38 |
|       building      | 84.13 | 92.33 |
|         sky         | 94.67 | 97.66 |
|        floor        | 83.57 | 91.23 |
|         tree        | 76.47 |  89.5 |
|       ceiling       | 86.56 | 93.84 |
|         road        | 85.83 | 90.61 |
|         bed         | 91.83 | 96.25 |
|      windowpane     | 65.92 | 80.54 |
|        grass        |  71.7 | 83.59 |
|       cabinet       | 67.59 | 78.05 |
|       sidewalk      | 70.29 | 85.25 |
|        person       | 83.37 | 92.13 |
|        earth        | 41.49 | 57.98 |
|         door        | 59.12 | 71.93 |
|        table        | 69.91 |  81.5 |
|       mountain      | 62.43 | 72.41 |
|        plant        | 52.91 | 64.06 |
|       curtain       | 76.28 | 84.87 |
|        chair        | 65.32 | 79.54 |
|         car         | 86.99 | 93.42 |
|        water        | 61.87 | 76.82 |
|       painting      | 78.18 | 90.01 |
|         sofa        | 83.72 |  92.3 |
|        shelf        |  50.3 | 66.79 |
|        house        | 51.72 | 71.12 |
|         sea         | 70.74 |  83.6 |
|        mirror       | 74.33 |  81.6 |
|         rug         | 68.07 | 76.86 |
|        field        | 32.85 | 48.67 |
|       armchair      | 61.23 | 75.27 |
|         seat        | 71.39 | 85.75 |
|        fence        | 50.36 | 61.11 |
|         desk        | 58.58 | 76.44 |
|         rock        | 55.38 | 81.99 |
|       wardrobe      | 59.87 |  76.4 |
|         lamp        | 72.67 | 85.36 |
|       bathtub       | 82.49 | 86.07 |
|       railing       | 40.51 | 60.49 |
|       cushion       | 71.23 |  82.5 |
|         base        | 34.05 | 42.88 |
|         box         | 41.05 | 52.73 |
|        column       | 53.33 | 61.94 |
|      signboard      | 37.91 | 49.27 |
|   chest of drawers  | 42.56 | 62.72 |
|       counter       | 58.02 | 66.28 |
|         sand        | 50.49 | 75.96 |
|         sink        |  83.3 | 89.74 |
|      skyscraper     | 46.84 | 53.72 |
|      fireplace      | 74.43 | 92.71 |
|     refrigerator    | 85.12 | 93.75 |
|      grandstand     | 55.02 | 85.71 |
|         path        | 31.04 | 50.59 |
|        stairs       |  45.9 |  57.6 |
|        runway       | 72.97 | 96.92 |
|         case        | 63.48 | 79.12 |
|      pool table     | 92.44 | 96.99 |
|        pillow       | 68.04 |  79.3 |
|     screen door     | 73.41 | 76.38 |
|       stairway      | 40.74 | 55.56 |
|        river        | 11.96 | 27.89 |
|        bridge       |  42.7 | 50.41 |
|       bookcase      | 53.42 | 76.66 |
|        blind        | 47.34 | 54.02 |
|     coffee table    | 67.57 | 84.22 |
|        toilet       | 87.94 | 93.24 |
|        flower       | 41.44 | 57.28 |
|         book        | 53.53 | 73.58 |
|         hill        |  6.32 | 10.27 |
|        bench        |  71.2 | 81.86 |
|      countertop     | 64.08 | 79.26 |
|        stove        | 85.37 | 91.09 |
|         palm        |  58.4 | 76.37 |
|    kitchen island   | 44.86 | 78.46 |
|       computer      | 78.92 | 90.17 |
|     swivel chair    | 43.51 | 62.43 |
|         boat        | 76.91 | 91.33 |
|         bar         |  61.3 | 81.85 |
|    arcade machine   | 83.65 | 89.02 |
|        hovel        | 49.47 | 54.92 |
|         bus         | 92.98 | 97.42 |
|        towel        | 69.91 | 84.74 |
|        light        | 55.96 | 63.92 |
|        truck        | 54.28 | 67.43 |
|        tower        | 10.68 | 19.76 |
|      chandelier     | 72.19 | 84.12 |
|        awning       | 36.89 | 45.41 |
|     streetlight     | 36.03 | 49.69 |
|        booth        | 49.11 | 64.19 |
| television receiver | 79.13 | 86.47 |
|       airplane      | 80.77 | 94.61 |
|      dirt track     |  6.37 | 22.12 |
|       apparel       | 53.58 | 75.38 |
|         pole        | 26.03 | 35.12 |
|         land        |  3.69 |  7.3  |
|      bannister      | 16.32 | 24.08 |
|      escalator      | 60.56 | 82.88 |
|       ottoman       |  55.0 | 74.58 |
|        bottle       | 40.64 |  67.0 |
|        buffet       | 50.43 | 56.57 |
|        poster       | 36.46 |  49.9 |
|        stage        | 18.54 | 33.83 |
|         van         | 49.62 | 71.57 |
|         ship        | 74.54 | 91.55 |
|       fountain      | 30.26 | 30.89 |
|    conveyer belt    | 78.96 | 90.75 |
|        canopy       | 50.38 | 73.17 |
|        washer       | 86.13 | 91.32 |
|      plaything      | 41.43 | 57.11 |
|    swimming pool    | 59.63 | 76.56 |
|        stool        | 50.43 | 67.04 |
|        barrel       | 68.78 | 88.92 |
|        basket       | 42.61 | 60.55 |
|      waterfall      | 51.25 |  55.5 |
|         tent        | 89.86 | 98.82 |
|         bag         | 25.12 | 29.66 |
|       minibike      | 74.98 | 90.17 |
|        cradle       | 88.17 | 97.38 |
|         oven        | 67.68 |  80.4 |
|         ball        | 52.54 | 55.58 |
|         food        | 57.63 | 66.64 |
|         step        | 17.22 | 19.52 |
|         tank        |  69.8 | 75.65 |
|      trade name     | 23.47 | 28.61 |
|      microwave      | 89.63 | 96.52 |
|         pot         | 59.75 | 68.57 |
|        animal       | 60.94 |  63.5 |
|       bicycle       | 61.83 | 78.37 |
|         lake        |  46.2 | 64.25 |
|      dishwasher     | 72.58 | 79.71 |
|        screen       | 63.56 | 83.34 |
|       blanket       | 28.92 | 33.58 |
|      sculpture      | 77.47 | 87.97 |
|         hood        | 62.35 | 74.52 |
|        sconce       | 58.59 | 70.58 |
|         vase        | 48.82 | 66.16 |
|    traffic light    | 42.31 | 58.86 |
|         tray        | 17.15 | 28.38 |
|        ashcan       | 54.26 | 68.92 |
|         fan         | 67.19 |  81.0 |
|         pier        | 39.35 |  41.5 |
|      crt screen     |  4.45 | 15.41 |
|        plate        | 62.52 | 81.64 |
|       monitor       | 12.27 | 13.77 |
|    bulletin board   | 55.35 | 64.95 |
|        shower       |  2.32 | 14.03 |
|       radiator      | 65.21 |  78.4 |
|        glass        | 23.19 | 26.52 |
|        clock        | 50.58 | 60.67 |
|         flag        | 64.99 | 76.63 |
+---------------------+-------+-------+
11/10 23:55:45 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 85.8600  mIoU: 57.2100  mAcc: 69.4100  data_time: 0.0022  time: 0.5633
Finished processing corruption type: fog
Processing corruption type: brightness
11/10 23:56:17 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 187839255
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 187839255
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/10 23:56:18 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/brightness'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-10 23:56:30,955 - mmseg - INFO - using core type: DCNv3
2024-11-10 23:56:30,955 - mmseg - INFO - using activation layer: GELU
2024-11-10 23:56:30,956 - mmseg - INFO - using main norm layer: LN
2024-11-10 23:56:30,956 - mmseg - INFO - using dpr: linear, 0.5
2024-11-10 23:56:30,956 - mmseg - INFO - level2_post_norm: True
2024-11-10 23:56:30,956 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-10 23:56:30,956 - mmseg - INFO - res_post_norm: True
2024-11-10 23:56:30,956 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/10 23:56:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/10 23:56:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/10 23:56:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 23:56:54 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/10 23:58:21 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:56:23  time: 0.8517  data_time: 0.0015  memory: 25645  
11/10 23:59:04 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:41:03  time: 0.9737  data_time: 0.0015  memory: 24207  
11/10 23:59:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:33:17  time: 0.6410  data_time: 0.0015  memory: 13887  
11/11 00:00:22 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:31:11  time: 0.7396  data_time: 0.0046  memory: 24212  
11/11 00:01:01 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:28:44  time: 0.5710  data_time: 0.0015  memory: 24175  
11/11 00:01:35 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:26:31  time: 0.4682  data_time: 0.0016  memory: 24217  
11/11 00:02:12 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:24:56  time: 0.5842  data_time: 0.0015  memory: 24229  
11/11 00:02:45 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:23:22  time: 0.6206  data_time: 0.0015  memory: 24178  
11/11 00:03:09 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:21:31  time: 0.5297  data_time: 0.0014  memory: 13702  
11/11 00:03:34 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:19:59  time: 0.4393  data_time: 0.0015  memory: 12983  
11/11 00:04:01 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:18:45  time: 0.6281  data_time: 0.0015  memory: 14079  
11/11 00:04:26 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:17:34  time: 0.6224  data_time: 0.0016  memory: 13888  
11/11 00:04:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:16:38  time: 0.6494  data_time: 0.0014  memory: 14369  
11/11 00:05:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:15:54  time: 0.4755  data_time: 0.0016  memory: 24226  
11/11 00:06:01 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:15:11  time: 0.9559  data_time: 0.0014  memory: 14074  
11/11 00:06:24 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:14:14  time: 0.4536  data_time: 0.0016  memory: 13889  
11/11 00:06:47 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:13:21  time: 0.4574  data_time: 0.0016  memory: 4878  
11/11 00:07:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:12:33  time: 0.5084  data_time: 0.0014  memory: 13142  
11/11 00:07:43 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:11:56  time: 0.7108  data_time: 0.0015  memory: 15016  
11/11 00:08:09 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:11:14  time: 0.4304  data_time: 0.0014  memory: 15018  
11/11 00:08:39 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:10:37  time: 0.8169  data_time: 0.0015  memory: 14825  
11/11 00:09:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:10:00  time: 0.5361  data_time: 0.0169  memory: 14077  
11/11 00:09:33 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:09:20  time: 0.5808  data_time: 0.0015  memory: 12995  
11/11 00:09:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:08:40  time: 0.4370  data_time: 0.0015  memory: 6023  
11/11 00:10:21 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:08:03  time: 0.5637  data_time: 0.0015  memory: 24213  
11/11 00:10:42 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:25  time: 0.4533  data_time: 0.0015  memory: 4881  
11/11 00:11:05 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:49  time: 0.4141  data_time: 0.0015  memory: 11450  
11/11 00:11:34 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:06:16  time: 0.6591  data_time: 0.0014  memory: 14637  
11/11 00:11:58 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:42  time: 0.6139  data_time: 0.0014  memory: 13142  
11/11 00:12:20 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:05:08  time: 0.4133  data_time: 0.0015  memory: 4880  
11/11 00:12:45 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:35  time: 0.4644  data_time: 0.0015  memory: 14827  
11/11 00:13:06 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:04:02  time: 0.4399  data_time: 0.0016  memory: 4877  
11/11 00:13:34 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:31  time: 0.4070  data_time: 0.0015  memory: 24226  
11/11 00:14:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:01  time: 0.4492  data_time: 0.0016  memory: 13328  
11/11 00:14:27 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:30  time: 0.4402  data_time: 0.0014  memory: 14454  
11/11 00:14:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:59  time: 0.4559  data_time: 0.0016  memory: 11821  
11/11 00:15:12 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:28  time: 0.4541  data_time: 0.0016  memory: 4822  
11/11 00:15:34 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:58  time: 0.4352  data_time: 0.0015  memory: 9193  
11/11 00:16:01 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:29  time: 0.4318  data_time: 0.0014  memory: 13001  
11/11 00:16:26 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.4040  data_time: 0.0013  memory: 12765  
11/11 00:16:26 - mmengine - INFO - per class results:
11/11 00:16:26 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 81.73 | 90.31 |
|       building      | 84.16 | 92.38 |
|         sky         | 94.63 | 97.75 |
|        floor        | 83.99 |  91.9 |
|         tree        | 76.62 | 88.75 |
|       ceiling       | 86.33 | 93.54 |
|         road        | 85.49 | 90.88 |
|         bed         | 92.06 | 96.45 |
|      windowpane     | 66.31 | 80.84 |
|        grass        | 72.77 | 85.47 |
|       cabinet       | 67.58 | 77.69 |
|       sidewalk      | 68.86 | 83.28 |
|        person       | 83.37 | 92.21 |
|        earth        | 42.77 | 59.49 |
|         door        | 59.92 | 71.49 |
|        table        | 69.72 | 80.98 |
|       mountain      | 62.15 | 73.32 |
|        plant        | 53.35 | 62.46 |
|       curtain       | 76.81 | 85.11 |
|        chair        | 64.72 | 78.67 |
|         car         | 87.18 | 93.78 |
|        water        | 62.04 | 76.14 |
|       painting      | 76.94 | 89.44 |
|         sofa        | 82.11 | 90.72 |
|        shelf        | 52.16 | 70.63 |
|        house        | 53.46 |  72.8 |
|         sea         | 70.03 | 83.95 |
|        mirror       | 75.63 | 82.91 |
|         rug         | 69.83 | 79.18 |
|        field        | 35.45 | 50.08 |
|       armchair      | 59.75 | 76.66 |
|         seat        | 71.59 | 86.98 |
|        fence        | 50.93 |  62.9 |
|         desk        | 59.68 | 78.25 |
|         rock        | 54.95 | 80.46 |
|       wardrobe      | 65.68 | 84.15 |
|         lamp        |  72.3 |  84.4 |
|       bathtub       | 81.96 | 85.47 |
|       railing       | 40.54 | 59.76 |
|       cushion       | 72.12 | 83.41 |
|         base        | 36.53 | 48.15 |
|         box         | 42.16 | 53.96 |
|        column       | 53.38 | 62.48 |
|      signboard      | 37.66 | 48.78 |
|   chest of drawers  | 41.77 |  62.8 |
|       counter       | 56.85 | 67.59 |
|         sand        | 57.34 |  83.7 |
|         sink        | 83.35 |  89.6 |
|      skyscraper     | 46.82 | 54.85 |
|      fireplace      | 73.04 | 92.35 |
|     refrigerator    | 85.32 |  94.0 |
|      grandstand     | 54.38 | 85.53 |
|         path        | 30.69 | 48.83 |
|        stairs       | 44.24 | 55.08 |
|        runway       | 73.78 | 97.43 |
|         case        | 67.25 | 80.47 |
|      pool table     | 92.57 | 97.14 |
|        pillow       | 68.16 | 78.47 |
|     screen door     | 73.55 | 75.73 |
|       stairway      | 43.45 | 61.09 |
|        river        | 12.63 | 28.07 |
|        bridge       | 41.06 | 49.88 |
|       bookcase      |  55.8 | 77.18 |
|        blind        | 46.85 | 52.77 |
|     coffee table    | 67.55 | 85.75 |
|        toilet       | 86.85 | 93.02 |
|        flower       | 40.89 | 57.26 |
|         book        | 55.34 |  74.3 |
|         hill        |  7.49 | 10.66 |
|        bench        | 70.77 | 82.13 |
|      countertop     | 67.84 | 83.28 |
|        stove        | 84.82 | 91.27 |
|         palm        | 56.21 | 78.04 |
|    kitchen island   | 47.47 | 77.53 |
|       computer      | 79.08 | 90.51 |
|     swivel chair    | 43.23 | 60.25 |
|         boat        | 79.96 | 92.37 |
|         bar         | 60.01 | 77.31 |
|    arcade machine   | 88.77 | 94.43 |
|        hovel        | 33.51 | 36.67 |
|         bus         |  92.9 | 97.16 |
|        towel        | 71.96 | 88.11 |
|        light        | 57.14 | 65.99 |
|        truck        |  54.3 | 66.16 |
|        tower        | 13.59 |  27.3 |
|      chandelier     | 70.79 | 83.97 |
|        awning       | 37.96 | 45.55 |
|     streetlight     | 35.75 | 49.37 |
|        booth        | 52.58 | 72.14 |
| television receiver | 79.91 |  86.6 |
|       airplane      | 83.44 | 94.39 |
|      dirt track     |  6.63 | 21.39 |
|       apparel       | 54.94 | 72.53 |
|         pole        | 26.65 | 37.37 |
|         land        |  1.92 |  4.02 |
|      bannister      | 17.58 |  25.2 |
|      escalator      | 60.19 | 83.25 |
|       ottoman       | 54.71 | 72.23 |
|        bottle       |  43.3 | 69.48 |
|        buffet       |  51.0 |  57.7 |
|        poster       |  38.3 | 50.85 |
|        stage        | 16.92 | 32.38 |
|         van         | 50.49 |  72.8 |
|         ship        | 80.63 | 97.83 |
|       fountain      | 43.36 | 44.25 |
|    conveyer belt    | 79.64 | 91.26 |
|        canopy       | 51.92 | 75.28 |
|        washer       | 85.97 | 91.73 |
|      plaything      |  41.3 | 56.66 |
|    swimming pool    | 54.97 | 77.79 |
|        stool        | 49.78 | 68.63 |
|        barrel       |  63.8 | 86.86 |
|        basket       | 45.81 | 60.57 |
|      waterfall      | 51.34 | 56.76 |
|         tent        | 93.32 | 98.92 |
|         bag         | 30.13 |  33.1 |
|       minibike      | 77.14 | 89.78 |
|        cradle       | 88.19 | 97.59 |
|         oven        | 68.49 | 80.97 |
|         ball        | 53.22 | 56.34 |
|         food        | 57.58 | 66.26 |
|         step        | 16.59 | 18.18 |
|         tank        | 71.93 | 77.13 |
|      trade name     | 24.65 | 29.72 |
|      microwave      | 90.03 | 96.23 |
|         pot         | 59.21 | 69.04 |
|        animal       | 60.58 | 63.08 |
|       bicycle       | 61.92 | 78.53 |
|         lake        | 49.37 | 67.19 |
|      dishwasher     |  73.1 | 80.93 |
|        screen       | 58.55 | 82.79 |
|       blanket       | 30.55 | 35.99 |
|      sculpture      | 75.82 | 87.13 |
|         hood        | 62.67 | 74.85 |
|        sconce       | 57.54 | 69.75 |
|         vase        | 48.39 | 65.12 |
|    traffic light    | 43.48 | 59.67 |
|         tray        | 17.42 | 29.03 |
|        ashcan       | 52.98 |  68.0 |
|         fan         | 67.64 | 81.24 |
|         pier        | 40.55 |  43.9 |
|      crt screen     |  4.8  | 15.28 |
|        plate        | 61.39 | 80.96 |
|       monitor       | 12.31 | 13.77 |
|    bulletin board   | 58.28 | 68.44 |
|        shower       |  2.36 |  12.9 |
|       radiator      | 64.74 |  78.8 |
|        glass        |  22.6 | 25.68 |
|        clock        | 50.18 | 59.56 |
|         flag        | 65.86 | 76.57 |
+---------------------+-------+-------+
11/11 00:16:26 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 86.0300  mIoU: 57.6700  mAcc: 69.9400  data_time: 0.0021  time: 0.5856
Finished processing corruption type: brightness
Processing corruption type: contrast
11/11 00:17:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 166630360
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 166630360
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 00:17:26 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/contrast'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 00:17:48,067 - mmseg - INFO - using core type: DCNv3
2024-11-11 00:17:48,067 - mmseg - INFO - using activation layer: GELU
2024-11-11 00:17:48,068 - mmseg - INFO - using main norm layer: LN
2024-11-11 00:17:48,068 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 00:17:48,068 - mmseg - INFO - level2_post_norm: True
2024-11-11 00:17:48,068 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 00:17:48,068 - mmseg - INFO - res_post_norm: True
2024-11-11 00:17:48,068 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 00:18:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 00:18:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 00:18:07 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 00:18:14 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 00:19:33 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:51:39  time: 0.7069  data_time: 0.0014  memory: 25645  
11/11 00:20:09 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:36:37  time: 0.8333  data_time: 0.0015  memory: 24207  
11/11 00:20:35 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:29:00  time: 0.5001  data_time: 0.0014  memory: 13887  
11/11 00:21:07 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:26:03  time: 0.6004  data_time: 0.0014  memory: 24212  
11/11 00:21:39 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:23:58  time: 0.4407  data_time: 0.0014  memory: 24175  
11/11 00:22:07 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:03  time: 0.3268  data_time: 0.0015  memory: 24217  
11/11 00:22:37 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:42  time: 0.4571  data_time: 0.0014  memory: 24229  
11/11 00:23:04 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:20  time: 0.4827  data_time: 0.0014  memory: 24178  
11/11 00:23:22 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:41  time: 0.4071  data_time: 0.0014  memory: 13702  
11/11 00:23:40 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:19  time: 0.3092  data_time: 0.0014  memory: 12983  
11/11 00:24:00 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:13  time: 0.4903  data_time: 0.0016  memory: 14079  
11/11 00:24:23 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:22  time: 0.5619  data_time: 0.0072  memory: 13888  
11/11 00:24:46 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:34  time: 0.5149  data_time: 0.0013  memory: 14369  
11/11 00:25:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:56  time: 0.3348  data_time: 0.0015  memory: 24226  
11/11 00:25:38 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:20  time: 0.8287  data_time: 0.0014  memory: 14074  
11/11 00:25:55 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:31  time: 0.3194  data_time: 0.0016  memory: 13889  
11/11 00:26:11 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:45  time: 0.3228  data_time: 0.0016  memory: 4878  
11/11 00:26:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:05  time: 0.3903  data_time: 0.0014  memory: 13142  
11/11 00:26:54 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:35  time: 0.5808  data_time: 0.0015  memory: 15016  
11/11 00:27:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:59  time: 0.3027  data_time: 0.0015  memory: 15018  
11/11 00:27:37 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:29  time: 0.6770  data_time: 0.0014  memory: 14825  
11/11 00:27:58 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:58  time: 0.3063  data_time: 0.0015  memory: 14077  
11/11 00:28:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:25  time: 0.4496  data_time: 0.0014  memory: 12995  
11/11 00:28:33 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:52  time: 0.3089  data_time: 0.0014  memory: 6023  
11/11 00:28:51 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:22  time: 0.4373  data_time: 0.0014  memory: 24213  
11/11 00:29:06 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:51  time: 0.3215  data_time: 0.0014  memory: 4881  
11/11 00:29:23 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:22  time: 0.2940  data_time: 0.0014  memory: 11450  
11/11 00:29:45 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:56  time: 0.5233  data_time: 0.0014  memory: 14637  
11/11 00:30:03 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:29  time: 0.4790  data_time: 0.0014  memory: 13142  
11/11 00:30:18 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:01  time: 0.2880  data_time: 0.0014  memory: 4880  
11/11 00:30:36 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:35  time: 0.3281  data_time: 0.0014  memory: 14827  
11/11 00:30:52 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:09  time: 0.3102  data_time: 0.0015  memory: 4877  
11/11 00:31:13 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:45  time: 0.2852  data_time: 0.0014  memory: 24226  
11/11 00:31:33 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:21  time: 0.3189  data_time: 0.0016  memory: 13328  
11/11 00:31:52 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:56  time: 0.3103  data_time: 0.0014  memory: 14454  
11/11 00:32:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:32  time: 0.3214  data_time: 0.0015  memory: 11821  
11/11 00:32:25 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:08  time: 0.3188  data_time: 0.0015  memory: 4822  
11/11 00:32:41 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:45  time: 0.3088  data_time: 0.0015  memory: 9193  
11/11 00:33:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:22  time: 0.3056  data_time: 0.0014  memory: 13001  
11/11 00:33:19 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2850  data_time: 0.0013  memory: 12765  
11/11 00:33:20 - mmengine - INFO - per class results:
11/11 00:33:20 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 81.78 | 90.62 |
|       building      | 84.24 |  92.0 |
|         sky         | 94.62 | 97.58 |
|        floor        | 83.49 | 91.55 |
|         tree        | 76.36 | 90.01 |
|       ceiling       | 86.51 | 93.63 |
|         road        |  84.6 | 89.31 |
|         bed         | 91.78 | 96.43 |
|      windowpane     |  66.8 | 80.73 |
|        grass        | 66.27 |  79.0 |
|       cabinet       | 66.99 |  77.3 |
|       sidewalk      | 69.35 | 84.04 |
|        person       | 83.26 | 91.82 |
|        earth        | 43.13 | 59.38 |
|         door        | 59.13 | 71.63 |
|        table        | 69.43 | 81.12 |
|       mountain      | 61.32 | 70.03 |
|        plant        | 51.34 | 60.46 |
|       curtain       | 77.95 | 86.02 |
|        chair        | 64.88 |  79.2 |
|         car         | 86.79 |  93.1 |
|        water        | 59.39 | 73.54 |
|       painting      | 78.63 | 90.03 |
|         sofa        | 83.49 | 91.84 |
|        shelf        | 50.45 | 67.25 |
|        house        | 52.58 | 76.83 |
|         sea         | 68.84 | 83.72 |
|        mirror       | 74.55 | 82.18 |
|         rug         | 68.96 | 76.19 |
|        field        | 29.35 | 53.09 |
|       armchair      |  59.9 | 73.65 |
|         seat        |  71.6 | 86.06 |
|        fence        |  50.8 | 62.36 |
|         desk        | 59.18 | 76.55 |
|         rock        |  57.0 | 82.81 |
|       wardrobe      | 59.44 | 76.75 |
|         lamp        | 72.12 | 84.39 |
|       bathtub       |  82.2 | 85.68 |
|       railing       | 39.37 | 57.81 |
|       cushion       | 71.46 | 82.65 |
|         base        | 35.48 | 46.11 |
|         box         | 41.08 | 51.47 |
|        column       |  53.8 | 61.96 |
|      signboard      | 37.43 | 48.67 |
|   chest of drawers  | 41.72 | 62.05 |
|       counter       | 57.81 | 68.37 |
|         sand        | 51.65 | 75.56 |
|         sink        | 83.14 | 89.79 |
|      skyscraper     | 47.52 | 55.17 |
|      fireplace      | 73.33 | 93.05 |
|     refrigerator    | 84.14 | 91.42 |
|      grandstand     | 55.73 | 85.66 |
|         path        | 31.03 | 50.18 |
|        stairs       | 42.68 | 53.84 |
|        runway       | 73.03 | 97.36 |
|         case        | 64.58 | 84.76 |
|      pool table     | 92.49 | 96.91 |
|        pillow       | 67.12 | 76.89 |
|     screen door     | 72.37 | 75.57 |
|       stairway      | 40.12 | 55.92 |
|        river        | 13.11 | 31.49 |
|        bridge       | 39.47 | 50.79 |
|       bookcase      | 55.09 | 76.82 |
|        blind        | 48.82 | 56.07 |
|     coffee table    | 67.01 | 84.16 |
|        toilet       | 87.63 | 93.09 |
|        flower       | 40.98 | 56.61 |
|         book        | 54.35 | 75.22 |
|         hill        |  6.74 | 13.92 |
|        bench        | 71.15 | 82.03 |
|      countertop     | 66.33 | 81.22 |
|        stove        |  85.1 | 90.72 |
|         palm        |  58.0 | 74.18 |
|    kitchen island   | 45.94 | 73.33 |
|       computer      |  78.6 | 90.35 |
|     swivel chair    | 43.02 | 61.26 |
|         boat        | 77.26 | 91.72 |
|         bar         | 60.69 | 78.91 |
|    arcade machine   | 85.51 | 90.08 |
|        hovel        | 25.96 | 27.97 |
|         bus         | 93.06 | 97.51 |
|        towel        | 71.54 |  86.9 |
|        light        | 54.92 | 62.36 |
|        truck        | 53.08 | 66.05 |
|        tower        | 16.86 | 34.41 |
|      chandelier     | 70.59 | 83.49 |
|        awning       | 36.04 | 44.17 |
|     streetlight     | 35.23 | 49.32 |
|        booth        | 55.76 | 69.13 |
| television receiver | 79.33 | 86.08 |
|       airplane      | 84.58 | 94.66 |
|      dirt track     |  1.57 | 12.53 |
|       apparel       | 59.23 | 80.58 |
|         pole        | 25.93 | 34.67 |
|         land        |  2.34 |  4.16 |
|      bannister      | 16.95 | 24.84 |
|      escalator      | 60.79 | 83.17 |
|       ottoman       | 54.55 | 73.45 |
|        bottle       | 42.96 | 70.46 |
|        buffet       | 55.44 | 62.52 |
|        poster       | 37.84 | 50.61 |
|        stage        | 21.83 | 31.12 |
|         van         | 49.59 | 73.24 |
|         ship        | 77.84 | 95.79 |
|       fountain      | 41.98 | 42.81 |
|    conveyer belt    | 78.48 | 90.68 |
|        canopy       |  52.6 | 76.04 |
|        washer       | 85.59 | 90.67 |
|      plaything      | 43.08 | 58.64 |
|    swimming pool    | 58.61 | 77.07 |
|        stool        | 49.04 | 67.06 |
|        barrel       | 71.65 | 85.58 |
|        basket       | 44.66 | 60.93 |
|      waterfall      |  50.4 | 54.99 |
|         tent        | 93.26 | 98.68 |
|         bag         | 24.73 | 27.18 |
|       minibike      | 75.17 | 90.33 |
|        cradle       | 88.24 | 97.45 |
|         oven        | 67.42 | 80.57 |
|         ball        | 58.16 | 62.07 |
|         food        | 57.03 | 66.13 |
|         step        | 16.45 | 18.51 |
|         tank        |  74.1 | 87.63 |
|      trade name     | 23.02 | 28.06 |
|      microwave      | 89.26 | 96.24 |
|         pot         | 58.02 | 66.07 |
|        animal       | 61.43 | 63.96 |
|       bicycle       |  62.2 | 77.28 |
|         lake        | 46.36 | 63.72 |
|      dishwasher     | 72.39 |  78.2 |
|        screen       | 67.18 | 80.75 |
|       blanket       |  30.5 | 35.86 |
|      sculpture      | 76.84 | 87.65 |
|         hood        |  62.2 | 74.26 |
|        sconce       | 57.84 | 69.34 |
|         vase        | 48.65 | 65.37 |
|    traffic light    | 42.07 | 59.53 |
|         tray        | 17.49 | 21.85 |
|        ashcan       | 53.83 |  68.4 |
|         fan         | 67.79 | 82.04 |
|         pier        | 38.58 | 40.52 |
|      crt screen     |  6.03 | 20.94 |
|        plate        | 62.72 | 81.45 |
|       monitor       | 12.43 |  13.8 |
|    bulletin board   | 57.48 | 66.56 |
|        shower       |  2.05 | 11.93 |
|       radiator      | 63.57 | 77.81 |
|        glass        | 21.79 | 24.63 |
|        clock        |  50.0 | 59.65 |
|         flag        |  66.7 | 76.57 |
+---------------------+-------+-------+
11/11 00:33:20 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 85.6800  mIoU: 57.3600  mAcc: 69.4400  data_time: 0.0019  time: 0.4529
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
11/11 00:33:42 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1701118343
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1701118343
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 00:33:43 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 00:33:55,030 - mmseg - INFO - using core type: DCNv3
2024-11-11 00:33:55,030 - mmseg - INFO - using activation layer: GELU
2024-11-11 00:33:55,030 - mmseg - INFO - using main norm layer: LN
2024-11-11 00:33:55,030 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 00:33:55,030 - mmseg - INFO - level2_post_norm: True
2024-11-11 00:33:55,030 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 00:33:55,030 - mmseg - INFO - res_post_norm: True
2024-11-11 00:33:55,030 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 00:34:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 00:34:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 00:34:15 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 00:34:22 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 00:36:14 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:12:49  time: 1.6323  data_time: 0.0015  memory: 25645  
11/11 00:37:34 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:00:37  time: 1.7323  data_time: 0.0015  memory: 24207  
11/11 00:38:42 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:53:27  time: 1.3869  data_time: 0.0015  memory: 13887  
11/11 00:39:59 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:50:33  time: 1.4587  data_time: 0.0015  memory: 24212  
11/11 00:41:13 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:47:54  time: 1.2834  data_time: 0.0015  memory: 24175  
11/11 00:42:22 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:45:19  time: 1.1937  data_time: 0.0016  memory: 24217  
11/11 00:43:35 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:43:23  time: 1.2675  data_time: 0.0014  memory: 24229  
11/11 00:44:43 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:41:24  time: 1.3551  data_time: 0.0014  memory: 24178  
11/11 00:45:41 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:38:56  time: 1.2537  data_time: 0.0015  memory: 13702  
11/11 00:46:42 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:36:58  time: 1.1332  data_time: 0.0015  memory: 12983  
11/11 00:47:47 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:35:21  time: 1.3828  data_time: 0.0016  memory: 14079  
11/11 00:48:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:33:38  time: 1.3616  data_time: 0.0016  memory: 13888  
11/11 00:49:52 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:32:10  time: 1.3660  data_time: 0.0014  memory: 14369  
11/11 00:51:02 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:30:56  time: 1.2193  data_time: 0.0016  memory: 24226  
11/11 00:52:11 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:29:41  time: 1.6607  data_time: 0.0014  memory: 14074  
11/11 00:53:08 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:28:08  time: 1.1771  data_time: 0.0016  memory: 13889  
11/11 00:54:07 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:26:42  time: 1.1923  data_time: 0.0016  memory: 4878  
11/11 00:55:06 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:25:20  time: 1.1401  data_time: 0.0014  memory: 13142  
11/11 00:56:14 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:24:10  time: 1.4074  data_time: 0.0015  memory: 15016  
11/11 00:57:14 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:22:52  time: 1.1168  data_time: 0.0015  memory: 15018  
11/11 00:58:22 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:21:42  time: 1.5623  data_time: 0.0014  memory: 14825  
11/11 00:59:26 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:20:30  time: 1.1430  data_time: 0.0015  memory: 14077  
11/11 01:00:26 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:19:16  time: 1.2987  data_time: 0.0014  memory: 12995  
11/11 01:01:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:18:02  time: 1.1363  data_time: 0.0014  memory: 6023  
11/11 01:02:25 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:16:49  time: 1.2569  data_time: 0.0014  memory: 24213  
11/11 01:03:19 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:15:35  time: 1.1750  data_time: 0.0014  memory: 4881  
11/11 01:04:18 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:14:24  time: 1.0785  data_time: 0.0014  memory: 11450  
11/11 01:05:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:13:17  time: 1.4093  data_time: 0.0014  memory: 14637  
11/11 01:06:20 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:12:07  time: 1.3566  data_time: 0.0015  memory: 13142  
11/11 01:07:17 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:58  time: 1.0784  data_time: 0.0014  memory: 4880  
11/11 01:08:19 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:51  time: 1.1951  data_time: 0.0015  memory: 14827  
11/11 01:09:15 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:08:43  time: 1.1472  data_time: 0.0016  memory: 4877  
11/11 01:10:18 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:37  time: 1.0643  data_time: 0.0014  memory: 24226  
11/11 01:11:21 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:31  time: 1.1715  data_time: 0.0016  memory: 13328  
11/11 01:12:23 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:25  time: 1.1447  data_time: 0.0014  memory: 14454  
11/11 01:13:20 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:19  time: 1.1788  data_time: 0.0016  memory: 11821  
11/11 01:14:18 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:14  time: 1.1662  data_time: 0.0016  memory: 4822  
11/11 01:15:14 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:09  time: 1.1255  data_time: 0.0015  memory: 9193  
11/11 01:16:16 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:04  time: 1.1208  data_time: 0.0014  memory: 13001  
11/11 01:17:15 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0392  data_time: 0.0019  memory: 12765  
11/11 01:17:15 - mmengine - INFO - per class results:
11/11 01:17:15 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 67.08 |  80.3 |
|       building      | 76.38 | 87.59 |
|         sky         | 84.64 | 92.11 |
|        floor        | 70.28 | 84.58 |
|         tree        |  64.6 | 78.26 |
|       ceiling       | 70.82 | 84.74 |
|         road        | 75.83 | 85.82 |
|         bed         |  79.6 | 89.29 |
|      windowpane     | 51.51 | 70.26 |
|        grass        | 62.02 | 78.71 |
|       cabinet       | 56.87 | 69.15 |
|       sidewalk      | 52.42 |  69.7 |
|        person       | 62.52 | 76.82 |
|        earth        | 39.18 | 55.33 |
|         door        |  49.0 | 61.41 |
|        table        | 49.67 | 65.42 |
|       mountain      | 56.19 | 69.13 |
|        plant        | 44.28 | 55.68 |
|       curtain       | 55.89 |  69.6 |
|        chair        | 45.61 | 62.04 |
|         car         | 63.79 | 78.51 |
|        water        | 53.45 |  72.3 |
|       painting      | 50.62 | 67.77 |
|         sofa        | 65.85 | 80.82 |
|        shelf        | 43.12 | 62.21 |
|        house        | 53.12 | 70.74 |
|         sea         | 60.79 |  78.8 |
|        mirror       | 63.93 | 75.71 |
|         rug         | 51.52 | 59.54 |
|        field        | 32.91 | 53.78 |
|       armchair      | 46.89 | 66.37 |
|         seat        | 61.81 | 81.93 |
|        fence        | 41.52 | 54.86 |
|         desk        | 47.09 | 68.69 |
|         rock        | 51.34 | 74.42 |
|       wardrobe      | 54.44 | 72.91 |
|         lamp        |  35.6 | 53.45 |
|       bathtub       | 66.89 | 77.82 |
|       railing       |  32.7 | 49.35 |
|       cushion       | 49.16 |  63.7 |
|         base        | 33.01 | 46.89 |
|         box         | 30.09 |  40.2 |
|        column       | 32.44 | 46.04 |
|      signboard      | 24.24 | 34.97 |
|   chest of drawers  | 38.96 | 57.24 |
|       counter       | 46.32 | 61.15 |
|         sand        | 47.87 |  71.8 |
|         sink        | 57.66 | 71.22 |
|      skyscraper     | 42.64 | 52.78 |
|      fireplace      | 62.52 | 82.87 |
|     refrigerator    |  72.3 | 85.27 |
|      grandstand     | 46.43 | 78.05 |
|         path        | 25.08 |  39.3 |
|        stairs       | 33.97 | 43.08 |
|        runway       | 62.41 | 83.51 |
|         case        | 61.26 | 80.34 |
|      pool table     | 74.68 | 85.19 |
|        pillow       | 49.93 | 63.64 |
|     screen door     | 66.71 | 74.89 |
|       stairway      | 36.36 |  58.5 |
|        river        | 10.66 | 25.49 |
|        bridge       | 45.89 | 58.06 |
|       bookcase      | 41.34 | 65.75 |
|        blind        | 36.08 | 39.98 |
|     coffee table    |  49.9 |  69.4 |
|        toilet       |  63.8 | 78.24 |
|        flower       | 26.67 |  41.4 |
|         book        | 38.79 | 58.03 |
|         hill        |  6.7  |  9.63 |
|        bench        | 50.48 | 61.57 |
|      countertop     | 51.33 | 70.07 |
|        stove        | 68.81 | 79.17 |
|         palm        | 40.58 | 64.97 |
|    kitchen island   | 33.78 |  67.4 |
|       computer      | 64.36 | 78.45 |
|     swivel chair    | 32.05 | 45.71 |
|         boat        | 52.57 | 75.57 |
|         bar         |  54.4 | 71.19 |
|    arcade machine   | 75.37 |  88.7 |
|        hovel        | 51.55 | 62.57 |
|         bus         | 77.37 |  89.0 |
|        towel        | 47.76 | 64.81 |
|        light        | 17.43 | 27.02 |
|        truck        | 39.98 | 57.34 |
|        tower        | 14.47 | 27.32 |
|      chandelier     | 43.75 | 61.11 |
|        awning       | 24.68 | 32.48 |
|     streetlight     | 10.82 | 16.98 |
|        booth        |  47.2 | 70.99 |
| television receiver | 56.94 | 71.71 |
|       airplane      | 61.36 | 80.78 |
|      dirt track     |  4.67 | 19.04 |
|       apparel       | 37.57 | 61.56 |
|         pole        |  9.9  | 17.07 |
|         land        |  0.98 |  2.12 |
|      bannister      |  8.1  | 11.94 |
|      escalator      | 59.88 | 80.67 |
|       ottoman       | 45.48 | 64.76 |
|        bottle       | 29.93 |  50.3 |
|        buffet       | 43.23 | 49.93 |
|        poster       |  27.3 | 36.15 |
|        stage        | 16.52 | 30.85 |
|         van         | 34.56 | 54.33 |
|         ship        | 76.41 | 94.77 |
|       fountain      | 31.14 | 33.29 |
|    conveyer belt    | 70.96 |  80.2 |
|        canopy       |  37.0 | 61.42 |
|        washer       | 79.55 | 91.33 |
|      plaything      | 24.03 | 38.54 |
|    swimming pool    | 76.58 | 80.42 |
|        stool        | 32.26 | 47.89 |
|        barrel       | 38.16 | 60.67 |
|        basket       | 29.53 | 44.75 |
|      waterfall      |  48.3 | 56.52 |
|         tent        | 79.92 |  91.8 |
|         bag         | 17.08 | 21.28 |
|       minibike      | 51.17 | 71.34 |
|        cradle       | 73.91 | 88.15 |
|         oven        |  56.1 | 67.96 |
|         ball        | 39.25 | 46.14 |
|         food        | 45.61 | 54.53 |
|         step        | 15.84 | 18.79 |
|         tank        | 70.92 | 81.12 |
|      trade name     | 13.95 | 18.05 |
|      microwave      | 73.27 | 85.84 |
|         pot         | 32.12 | 43.77 |
|        animal       | 46.81 | 52.14 |
|       bicycle       | 41.34 | 60.17 |
|         lake        | 43.43 | 61.83 |
|      dishwasher     | 50.89 |  60.5 |
|        screen       | 50.63 | 75.53 |
|       blanket       | 25.83 | 30.14 |
|      sculpture      | 58.05 | 76.09 |
|         hood        | 44.57 | 60.03 |
|        sconce       | 24.01 | 37.04 |
|         vase        | 23.61 | 38.51 |
|    traffic light    | 19.25 | 33.64 |
|         tray        | 12.96 | 19.19 |
|        ashcan       | 31.95 | 49.75 |
|         fan         | 28.78 | 46.69 |
|         pier        | 29.82 | 37.64 |
|      crt screen     |  3.5  | 11.93 |
|        plate        | 38.07 | 55.08 |
|       monitor       |  9.85 |  11.2 |
|    bulletin board   | 45.81 | 57.01 |
|        shower       |  1.04 |  3.97 |
|       radiator      |  42.5 | 58.03 |
|        glass        | 12.74 | 15.01 |
|        clock        |  29.9 |  41.6 |
|         flag        | 49.38 | 63.54 |
+---------------------+-------+-------+
11/11 01:17:15 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.3600  mIoU: 44.7900  mAcc: 58.8700  data_time: 0.0019  time: 1.2861
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
11/11 01:18:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1338359345
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1338359345
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 01:18:09 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 01:18:43,635 - mmseg - INFO - using core type: DCNv3
2024-11-11 01:18:43,635 - mmseg - INFO - using activation layer: GELU
2024-11-11 01:18:43,635 - mmseg - INFO - using main norm layer: LN
2024-11-11 01:18:43,635 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 01:18:43,635 - mmseg - INFO - level2_post_norm: True
2024-11-11 01:18:43,635 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 01:18:43,635 - mmseg - INFO - res_post_norm: True
2024-11-11 01:18:43,635 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 01:19:02 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 01:19:02 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 01:19:03 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 01:19:11 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 01:20:08 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:37:13  time: 0.6937  data_time: 0.0014  memory: 25645  
11/11 01:20:44 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:29:22  time: 0.8206  data_time: 0.0014  memory: 24207  
11/11 01:21:09 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:10  time: 0.4881  data_time: 0.0014  memory: 13887  
11/11 01:21:41 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:26  time: 0.5860  data_time: 0.0014  memory: 24212  
11/11 01:22:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:05  time: 0.4285  data_time: 0.0014  memory: 24175  
11/11 01:22:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:39  time: 0.3158  data_time: 0.0015  memory: 24217  
11/11 01:23:09 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:39  time: 0.4451  data_time: 0.0014  memory: 24229  
11/11 01:23:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:33  time: 0.4707  data_time: 0.0013  memory: 24178  
11/11 01:23:52 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:08  time: 0.3955  data_time: 0.0013  memory: 13702  
11/11 01:24:10 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:57  time: 0.2997  data_time: 0.0014  memory: 12983  
11/11 01:24:29 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:59  time: 0.4773  data_time: 0.0014  memory: 14079  
11/11 01:24:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:04  time: 0.4718  data_time: 0.0015  memory: 13888  
11/11 01:25:09 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:23  time: 0.5027  data_time: 0.0013  memory: 14369  
11/11 01:25:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:52  time: 0.3234  data_time: 0.0016  memory: 24226  
11/11 01:26:00 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:21  time: 0.8171  data_time: 0.0014  memory: 14074  
11/11 01:26:16 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:37  time: 0.3072  data_time: 0.0015  memory: 13889  
11/11 01:26:31 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:55  time: 0.3089  data_time: 0.0015  memory: 4878  
11/11 01:26:49 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:19  time: 0.3805  data_time: 0.0013  memory: 13142  
11/11 01:27:14 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:53  time: 0.5686  data_time: 0.0014  memory: 15016  
11/11 01:27:33 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:21  time: 0.2924  data_time: 0.0014  memory: 15018  
11/11 01:27:55 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:54  time: 0.6654  data_time: 0.0014  memory: 14825  
11/11 01:28:16 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:26  time: 0.2939  data_time: 0.0014  memory: 14077  
11/11 01:28:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:56  time: 0.4375  data_time: 0.0014  memory: 12995  
11/11 01:28:49 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:25  time: 0.2971  data_time: 0.0014  memory: 6023  
11/11 01:29:07 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:57  time: 0.4268  data_time: 0.0022  memory: 24213  
11/11 01:29:22 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:28  time: 0.3074  data_time: 0.0014  memory: 4881  
11/11 01:29:38 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:01  time: 0.2811  data_time: 0.0014  memory: 11450  
11/11 01:30:00 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:37  time: 0.5089  data_time: 0.0014  memory: 14637  
11/11 01:30:17 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:12  time: 0.4668  data_time: 0.0014  memory: 13142  
11/11 01:30:31 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:46  time: 0.2785  data_time: 0.0013  memory: 4880  
11/11 01:30:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:22  time: 0.3160  data_time: 0.0014  memory: 14827  
11/11 01:31:04 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:58  time: 0.2976  data_time: 0.0015  memory: 4877  
11/11 01:31:24 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:35  time: 0.2758  data_time: 0.0013  memory: 24226  
11/11 01:31:44 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:12  time: 0.3047  data_time: 0.0015  memory: 13328  
11/11 01:32:02 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:50  time: 0.2985  data_time: 0.0014  memory: 14454  
11/11 01:32:18 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:27  time: 0.3092  data_time: 0.0015  memory: 11821  
11/11 01:32:34 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:05  time: 0.3084  data_time: 0.0015  memory: 4822  
11/11 01:32:49 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:43  time: 0.2973  data_time: 0.0023  memory: 9193  
11/11 01:33:08 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.2944  data_time: 0.0014  memory: 13001  
11/11 01:33:27 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2738  data_time: 0.0012  memory: 12765  
11/11 01:33:27 - mmengine - INFO - per class results:
11/11 01:33:27 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 81.23 | 89.58 |
|       building      | 84.24 | 93.98 |
|         sky         | 94.53 | 97.93 |
|        floor        | 83.46 | 92.52 |
|         tree        | 76.14 | 87.63 |
|       ceiling       |  86.4 | 94.95 |
|         road        | 86.08 |  91.9 |
|         bed         | 91.69 | 96.31 |
|      windowpane     |  64.6 | 80.37 |
|        grass        | 71.99 | 82.26 |
|       cabinet       | 66.07 | 74.83 |
|       sidewalk      | 71.16 | 85.12 |
|        person       | 82.65 | 91.44 |
|        earth        | 42.45 | 57.95 |
|         door        | 56.99 | 65.45 |
|        table        | 67.89 | 79.88 |
|       mountain      | 61.96 | 71.99 |
|        plant        | 53.89 | 63.16 |
|       curtain       | 75.24 | 84.35 |
|        chair        | 63.55 | 75.94 |
|         car         |  86.9 | 92.59 |
|        water        |  59.4 | 70.32 |
|       painting      | 78.67 | 88.91 |
|         sofa        | 82.14 | 92.96 |
|        shelf        | 48.64 | 72.26 |
|        house        | 57.27 | 75.34 |
|         sea         | 68.28 | 84.81 |
|        mirror       | 73.32 | 80.97 |
|         rug         | 63.61 | 67.65 |
|        field        | 38.12 |  72.7 |
|       armchair      | 61.01 | 76.53 |
|         seat        | 67.13 |  87.4 |
|        fence        | 49.47 | 61.29 |
|         desk        | 59.16 | 80.41 |
|         rock        | 57.47 | 76.93 |
|       wardrobe      | 64.81 |  85.0 |
|         lamp        | 70.73 | 81.75 |
|       bathtub       | 84.47 | 88.16 |
|       railing       | 43.17 | 60.43 |
|       cushion       | 70.11 | 80.03 |
|         base        |  42.9 | 64.68 |
|         box         | 36.28 | 44.47 |
|        column       | 51.86 | 62.46 |
|      signboard      | 37.35 | 46.92 |
|   chest of drawers  | 42.67 | 64.06 |
|       counter       | 55.12 | 68.08 |
|         sand        | 56.06 | 75.75 |
|         sink        |  81.4 | 87.46 |
|      skyscraper     | 46.66 | 50.93 |
|      fireplace      | 71.64 | 93.49 |
|     refrigerator    | 83.02 | 92.98 |
|      grandstand     | 47.19 | 86.53 |
|         path        | 29.98 | 46.49 |
|        stairs       |  34.9 | 40.72 |
|        runway       | 72.66 | 95.91 |
|         case        | 63.16 | 81.82 |
|      pool table     | 92.52 | 97.04 |
|        pillow       | 67.83 | 76.77 |
|     screen door     | 83.69 | 88.19 |
|       stairway      | 44.94 | 69.13 |
|        river        | 16.32 | 43.48 |
|        bridge       | 39.75 | 48.94 |
|       bookcase      | 51.49 | 76.43 |
|        blind        |  36.9 | 38.43 |
|     coffee table    | 67.71 | 82.39 |
|        toilet       | 87.83 | 92.66 |
|        flower       | 43.43 | 56.67 |
|         book        | 53.08 | 68.61 |
|         hill        |  8.7  |  12.2 |
|        bench        | 58.16 | 65.85 |
|      countertop     | 63.61 | 77.82 |
|        stove        | 85.51 | 91.17 |
|         palm        | 53.45 | 74.51 |
|    kitchen island   |  38.0 | 73.29 |
|       computer      | 79.83 | 89.56 |
|     swivel chair    | 46.98 | 68.27 |
|         boat        |  84.0 | 90.15 |
|         bar         | 56.46 | 71.01 |
|    arcade machine   | 88.05 | 94.76 |
|        hovel        | 22.16 | 24.06 |
|         bus         | 92.11 | 97.57 |
|        towel        | 71.07 | 84.53 |
|        light        |  52.5 | 58.89 |
|        truck        | 49.08 |  64.4 |
|        tower        |  6.29 | 10.84 |
|      chandelier     | 70.34 | 84.81 |
|        awning       | 38.01 |  44.3 |
|     streetlight     | 34.32 | 45.04 |
|        booth        | 44.71 | 67.51 |
| television receiver | 77.24 | 84.98 |
|       airplane      | 71.89 | 90.22 |
|      dirt track     |  7.77 | 22.26 |
|       apparel       | 56.99 | 72.68 |
|         pole        | 27.21 | 36.28 |
|         land        |  1.77 |  3.62 |
|      bannister      | 17.79 | 23.29 |
|      escalator      | 63.35 | 81.92 |
|       ottoman       |  55.5 | 66.75 |
|        bottle       | 38.85 | 60.17 |
|        buffet       | 61.65 |  70.2 |
|        poster       | 34.41 | 48.48 |
|        stage        | 21.96 | 32.03 |
|         van         | 47.23 | 75.46 |
|         ship        | 79.29 | 96.89 |
|       fountain      | 38.38 | 39.34 |
|    conveyer belt    |  82.2 | 91.85 |
|        canopy       | 41.71 | 60.74 |
|        washer       | 86.58 | 92.41 |
|      plaything      | 40.45 | 51.89 |
|    swimming pool    | 59.33 | 83.36 |
|        stool        | 51.11 | 70.92 |
|        barrel       | 77.23 | 88.86 |
|        basket       | 46.18 | 60.72 |
|      waterfall      | 75.96 | 87.59 |
|         tent        | 90.52 | 98.74 |
|         bag         |  24.6 | 26.86 |
|       minibike      | 73.69 | 87.75 |
|        cradle       | 87.46 | 98.04 |
|         oven        | 67.08 | 78.32 |
|         ball        | 56.95 | 63.42 |
|         food        |  53.2 | 57.19 |
|         step        |  9.21 | 10.36 |
|         tank        | 76.69 | 88.44 |
|      trade name     | 27.26 | 34.39 |
|      microwave      | 89.68 | 96.31 |
|         pot         | 63.81 | 72.55 |
|        animal       | 61.11 | 63.98 |
|       bicycle       | 58.96 |  73.7 |
|         lake        | 55.65 | 63.66 |
|      dishwasher     | 68.33 | 78.76 |
|        screen       | 61.66 | 88.44 |
|       blanket       | 28.47 | 32.03 |
|      sculpture      |  73.6 | 87.86 |
|         hood        | 69.03 | 84.37 |
|        sconce       | 55.69 |  67.4 |
|         vase        | 44.55 | 59.87 |
|    traffic light    | 40.54 | 58.77 |
|         tray        | 15.52 | 19.57 |
|        ashcan       | 52.42 | 63.86 |
|         fan         | 66.96 | 80.05 |
|         pier        | 38.49 | 39.82 |
|      crt screen     |  5.08 | 15.45 |
|        plate        | 60.62 | 75.93 |
|       monitor       | 13.12 |  14.4 |
|    bulletin board   | 55.74 | 65.81 |
|        shower       |  5.01 | 11.54 |
|       radiator      | 67.89 |  77.5 |
|        glass        | 19.47 | 21.31 |
|        clock        | 45.21 | 57.62 |
|         flag        | 66.29 | 74.35 |
+---------------------+-------+-------+
11/11 01:33:27 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 85.7300  mIoU: 56.9300  mAcc: 68.9800  data_time: 0.0016  time: 0.4278
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
11/11 01:33:49 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1261223634
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1261223634
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 01:33:50 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 01:33:53,948 - mmseg - INFO - using core type: DCNv3
2024-11-11 01:33:53,948 - mmseg - INFO - using activation layer: GELU
2024-11-11 01:33:53,948 - mmseg - INFO - using main norm layer: LN
2024-11-11 01:33:53,948 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 01:33:53,949 - mmseg - INFO - level2_post_norm: True
2024-11-11 01:33:53,949 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 01:33:53,949 - mmseg - INFO - res_post_norm: True
2024-11-11 01:33:53,949 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 01:34:10 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 01:34:10 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 01:34:11 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 01:34:15 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 01:35:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:35  time: 0.7003  data_time: 0.0020  memory: 25645  
11/11 01:35:46 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:28:42  time: 0.8297  data_time: 0.0015  memory: 24207  
11/11 01:36:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:49  time: 0.4948  data_time: 0.0015  memory: 13887  
11/11 01:36:43 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:14  time: 0.5938  data_time: 0.0014  memory: 24212  
11/11 01:37:15 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:58  time: 0.4360  data_time: 0.0013  memory: 24175  
11/11 01:37:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:35  time: 0.3206  data_time: 0.0014  memory: 24217  
11/11 01:38:12 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:38  time: 0.4507  data_time: 0.0014  memory: 24229  
11/11 01:38:42 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:48  time: 0.4764  data_time: 0.0014  memory: 24178  
11/11 01:39:00 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:21  time: 0.4015  data_time: 0.0014  memory: 13702  
11/11 01:39:18 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:09  time: 0.3189  data_time: 0.0072  memory: 12983  
11/11 01:39:38 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:11  time: 0.4847  data_time: 0.0015  memory: 14079  
11/11 01:39:56 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:16  time: 0.4792  data_time: 0.0015  memory: 13888  
11/11 01:40:19 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:34  time: 0.5097  data_time: 0.0013  memory: 14369  
11/11 01:40:44 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:02  time: 0.3302  data_time: 0.0015  memory: 24226  
11/11 01:41:10 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:31  time: 0.8227  data_time: 0.0014  memory: 14074  
11/11 01:41:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:46  time: 0.3128  data_time: 0.0015  memory: 13889  
11/11 01:41:42 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:04  time: 0.3155  data_time: 0.0016  memory: 4878  
11/11 01:42:00 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:28  time: 0.3862  data_time: 0.0014  memory: 13142  
11/11 01:42:25 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:01  time: 0.5773  data_time: 0.0015  memory: 15016  
11/11 01:42:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:28  time: 0.2972  data_time: 0.0014  memory: 15018  
11/11 01:43:07 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:01  time: 0.6732  data_time: 0.0014  memory: 14825  
11/11 01:43:28 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:32  time: 0.3004  data_time: 0.0015  memory: 14077  
11/11 01:43:46 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:02  time: 0.4427  data_time: 0.0015  memory: 12995  
11/11 01:44:02 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:31  time: 0.3039  data_time: 0.0014  memory: 6023  
11/11 01:44:20 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:03  time: 0.4321  data_time: 0.0014  memory: 24213  
11/11 01:44:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:33  time: 0.3146  data_time: 0.0015  memory: 4881  
11/11 01:44:51 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:06  time: 0.2853  data_time: 0.0014  memory: 11450  
11/11 01:45:13 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:42  time: 0.5137  data_time: 0.0014  memory: 14637  
11/11 01:45:31 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:16  time: 0.4725  data_time: 0.0014  memory: 13142  
11/11 01:45:46 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:50  time: 0.2849  data_time: 0.0013  memory: 4880  
11/11 01:46:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:25  time: 0.3223  data_time: 0.0014  memory: 14827  
11/11 01:46:19 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:00  time: 0.3039  data_time: 0.0017  memory: 4877  
11/11 01:46:39 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:37  time: 0.2799  data_time: 0.0013  memory: 24226  
11/11 01:46:59 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:14  time: 0.3106  data_time: 0.0015  memory: 13328  
11/11 01:47:18 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:51  time: 0.3053  data_time: 0.0013  memory: 14454  
11/11 01:47:34 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:28  time: 0.3151  data_time: 0.0015  memory: 11821  
11/11 01:47:50 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:06  time: 0.3145  data_time: 0.0015  memory: 4822  
11/11 01:48:06 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:43  time: 0.3009  data_time: 0.0014  memory: 9193  
11/11 01:48:25 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.3007  data_time: 0.0014  memory: 13001  
11/11 01:48:44 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2767  data_time: 0.0012  memory: 12765  
11/11 01:48:44 - mmengine - INFO - per class results:
11/11 01:48:44 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.41 | 90.19 |
|       building      | 83.15 | 93.88 |
|         sky         | 94.22 | 97.24 |
|        floor        | 82.26 | 92.25 |
|         tree        | 75.08 | 87.04 |
|       ceiling       |  84.2 | 92.09 |
|         road        | 85.14 | 90.11 |
|         bed         | 90.88 | 95.57 |
|      windowpane     | 63.08 | 79.22 |
|        grass        | 73.21 | 85.41 |
|       cabinet       | 61.22 | 71.79 |
|       sidewalk      | 67.04 |  82.2 |
|        person       | 81.51 | 89.06 |
|        earth        | 40.92 | 61.74 |
|         door        | 54.34 | 66.38 |
|        table        | 66.32 | 79.55 |
|       mountain      | 53.99 | 59.71 |
|        plant        | 52.01 | 61.04 |
|       curtain       | 74.33 | 83.44 |
|        chair        | 60.73 |  70.6 |
|         car         |  85.6 |  93.5 |
|        water        | 63.73 | 78.89 |
|       painting      | 75.81 | 86.79 |
|         sofa        |  76.5 | 91.05 |
|        shelf        | 45.39 | 64.18 |
|        house        | 49.92 | 62.23 |
|         sea         |  70.5 |  83.2 |
|        mirror       |  71.7 | 79.38 |
|         rug         | 61.94 | 73.58 |
|        field        | 40.33 | 57.34 |
|       armchair      | 57.09 | 71.96 |
|         seat        | 66.14 | 87.26 |
|        fence        | 46.11 | 53.02 |
|         desk        |  55.6 | 75.49 |
|         rock        | 55.95 | 86.96 |
|       wardrobe      | 54.09 | 84.04 |
|         lamp        | 68.94 | 79.15 |
|       bathtub       | 80.58 | 83.45 |
|       railing       | 38.21 | 52.23 |
|       cushion       | 63.95 | 80.45 |
|         base        | 37.51 | 47.75 |
|         box         | 33.51 |  41.3 |
|        column       | 52.08 | 63.62 |
|      signboard      | 33.86 | 41.08 |
|   chest of drawers  | 44.34 | 71.04 |
|       counter       |  49.5 | 60.54 |
|         sand        | 54.36 | 79.13 |
|         sink        | 76.44 |  81.7 |
|      skyscraper     | 43.04 | 52.06 |
|      fireplace      | 75.53 | 92.72 |
|     refrigerator    | 74.06 | 81.83 |
|      grandstand     | 52.72 | 87.84 |
|         path        | 25.76 | 44.38 |
|        stairs       | 33.21 | 36.69 |
|        runway       | 76.61 | 97.69 |
|         case        | 54.98 | 69.67 |
|      pool table     | 91.52 | 96.09 |
|        pillow       | 56.51 | 62.38 |
|     screen door     | 64.98 | 69.39 |
|       stairway      | 42.77 | 69.31 |
|        river        | 10.78 | 21.25 |
|        bridge       | 43.86 | 47.53 |
|       bookcase      | 44.13 | 59.97 |
|        blind        | 22.07 | 22.16 |
|     coffee table    | 65.59 | 83.92 |
|        toilet       | 86.59 | 91.35 |
|        flower       | 38.79 | 53.35 |
|         book        | 49.61 | 73.77 |
|         hill        |  6.29 | 11.46 |
|        bench        | 56.98 | 62.89 |
|      countertop     | 60.59 | 68.64 |
|        stove        | 82.16 |  89.6 |
|         palm        | 55.12 | 75.74 |
|    kitchen island   | 36.53 | 76.57 |
|       computer      | 75.61 | 89.18 |
|     swivel chair    | 47.87 | 66.59 |
|         boat        | 75.87 |  92.0 |
|         bar         | 63.15 | 76.98 |
|    arcade machine   |  76.0 | 78.99 |
|        hovel        | 33.09 | 37.66 |
|         bus         | 92.19 | 97.41 |
|        towel        | 64.42 | 77.41 |
|        light        | 48.48 | 54.37 |
|        truck        | 48.35 | 60.85 |
|        tower        | 32.11 | 68.36 |
|      chandelier     | 65.52 | 76.16 |
|        awning       | 40.84 |  46.9 |
|     streetlight     | 26.79 |  33.3 |
|        booth        | 47.75 | 65.09 |
| television receiver | 73.03 | 75.61 |
|       airplane      | 58.78 | 66.81 |
|      dirt track     | 18.43 | 19.72 |
|       apparel       | 51.15 | 67.27 |
|         pole        | 21.24 | 27.44 |
|         land        |  1.15 |  2.15 |
|      bannister      | 13.29 | 18.23 |
|      escalator      | 60.76 | 75.98 |
|       ottoman       |  54.7 | 68.52 |
|        bottle       | 35.87 | 56.05 |
|        buffet       | 50.89 | 55.11 |
|        poster       | 33.15 |  48.5 |
|        stage        | 17.13 | 27.86 |
|         van         | 48.64 | 67.28 |
|         ship        | 82.18 | 93.71 |
|       fountain      | 47.17 | 48.34 |
|    conveyer belt    | 85.58 | 92.89 |
|        canopy       | 43.19 | 63.48 |
|        washer       | 88.34 |  94.4 |
|      plaything      | 30.09 |  44.8 |
|    swimming pool    | 75.85 | 83.24 |
|        stool        | 47.59 | 65.37 |
|        barrel       |  62.0 | 70.75 |
|        basket       | 38.49 | 49.16 |
|      waterfall      | 45.62 |  52.9 |
|         tent        | 94.51 | 98.86 |
|         bag         | 14.66 |  15.9 |
|       minibike      | 73.68 | 84.28 |
|        cradle       | 83.25 | 97.11 |
|         oven        | 60.36 | 66.81 |
|         ball        | 47.25 | 55.57 |
|         food        |  52.8 | 61.54 |
|         step        | 15.91 | 16.82 |
|         tank        |  67.4 |  76.7 |
|      trade name     | 25.23 | 30.38 |
|      microwave      | 90.31 | 93.67 |
|         pot         | 53.01 | 65.55 |
|        animal       | 59.13 | 62.09 |
|       bicycle       | 56.35 | 66.82 |
|         lake        | 63.19 | 63.34 |
|      dishwasher     | 71.17 | 76.88 |
|        screen       | 46.96 | 64.14 |
|       blanket       | 18.26 | 19.25 |
|      sculpture      | 75.42 | 85.52 |
|         hood        | 65.88 | 71.54 |
|        sconce       | 48.51 | 54.74 |
|         vase        | 44.31 | 53.83 |
|    traffic light    | 31.44 | 37.63 |
|         tray        | 13.83 | 23.89 |
|        ashcan       | 46.42 | 55.05 |
|         fan         | 65.02 | 75.55 |
|         pier        | 38.43 | 45.28 |
|      crt screen     |  3.68 | 11.68 |
|        plate        | 58.43 | 70.06 |
|       monitor       | 12.54 | 13.05 |
|    bulletin board   | 46.87 | 53.41 |
|        shower       |  1.31 |  6.28 |
|       radiator      | 65.07 | 70.19 |
|        glass        | 16.71 | 17.97 |
|        clock        | 46.55 | 50.64 |
|         flag        | 62.06 | 70.41 |
+---------------------+-------+-------+
11/11 01:48:44 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.5900  mIoU: 54.2800  mAcc: 65.1800  data_time: 0.0016  time: 0.4344
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
11/11 01:49:05 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1631934463
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1631934463
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 01:49:07 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 01:49:15,976 - mmseg - INFO - using core type: DCNv3
2024-11-11 01:49:15,976 - mmseg - INFO - using activation layer: GELU
2024-11-11 01:49:15,976 - mmseg - INFO - using main norm layer: LN
2024-11-11 01:49:15,976 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 01:49:15,976 - mmseg - INFO - level2_post_norm: True
2024-11-11 01:49:15,976 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 01:49:15,976 - mmseg - INFO - res_post_norm: True
2024-11-11 01:49:15,976 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 01:49:35 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 01:49:35 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 01:49:36 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 01:49:41 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 01:51:30 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:11:14  time: 1.6289  data_time: 0.0015  memory: 25645  
11/11 01:52:50 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:59:50  time: 1.7327  data_time: 0.0015  memory: 24207  
11/11 01:53:58 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:52:56  time: 1.3846  data_time: 0.0015  memory: 13887  
11/11 01:55:15 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:50:06  time: 1.4595  data_time: 0.0015  memory: 24212  
11/11 01:56:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:47:32  time: 1.2834  data_time: 0.0014  memory: 24175  
11/11 01:57:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:45:01  time: 1.1957  data_time: 0.0015  memory: 24217  
11/11 01:58:50 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:43:08  time: 1.2690  data_time: 0.0014  memory: 24229  
11/11 01:59:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:41:11  time: 1.3534  data_time: 0.0014  memory: 24178  
11/11 02:00:55 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:38:42  time: 1.1781  data_time: 0.0014  memory: 13702  
11/11 02:01:55 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:36:43  time: 1.1226  data_time: 0.0015  memory: 12983  
11/11 02:03:00 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:35:06  time: 1.3708  data_time: 0.0015  memory: 14079  
11/11 02:04:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:33:24  time: 1.3505  data_time: 0.0016  memory: 13888  
11/11 02:05:03 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:31:56  time: 1.3502  data_time: 0.0014  memory: 14369  
11/11 02:06:13 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:30:43  time: 1.2159  data_time: 0.0015  memory: 24226  
11/11 02:07:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:29:29  time: 1.6558  data_time: 0.0014  memory: 14074  
11/11 02:08:19 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:27:57  time: 1.1762  data_time: 0.0016  memory: 13889  
11/11 02:09:18 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:26:32  time: 1.1892  data_time: 0.0016  memory: 4878  
11/11 02:10:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:25:08  time: 1.1417  data_time: 0.0015  memory: 13142  
11/11 02:11:23 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:23:59  time: 1.4073  data_time: 0.0015  memory: 15016  
11/11 02:12:24 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:22:42  time: 1.1191  data_time: 0.0015  memory: 15018  
11/11 02:13:30 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:21:33  time: 1.5603  data_time: 0.0014  memory: 14825  
11/11 02:14:34 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:20:21  time: 1.1410  data_time: 0.0015  memory: 14077  
11/11 02:15:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:19:08  time: 1.3000  data_time: 0.0015  memory: 12995  
11/11 02:16:33 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:17:54  time: 1.1348  data_time: 0.0015  memory: 6023  
11/11 02:17:32 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:16:42  time: 1.2564  data_time: 0.0014  memory: 24213  
11/11 02:18:26 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:15:29  time: 1.1725  data_time: 0.0014  memory: 4881  
11/11 02:19:25 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:14:18  time: 1.0774  data_time: 0.0015  memory: 11450  
11/11 02:20:29 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:13:12  time: 1.4056  data_time: 0.0014  memory: 14637  
11/11 02:21:27 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:12:03  time: 1.3545  data_time: 0.0014  memory: 13142  
11/11 02:22:24 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:54  time: 1.1399  data_time: 0.0195  memory: 4880  
11/11 02:23:26 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:48  time: 1.1953  data_time: 0.0014  memory: 14827  
11/11 02:24:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:08:40  time: 1.1520  data_time: 0.0015  memory: 4877  
11/11 02:25:25 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:34  time: 1.0622  data_time: 0.0014  memory: 24226  
11/11 02:26:28 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:29  time: 1.1704  data_time: 0.0016  memory: 13328  
11/11 02:27:31 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:24  time: 1.1491  data_time: 0.0013  memory: 14454  
11/11 02:28:27 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:18  time: 1.1743  data_time: 0.0015  memory: 11821  
11/11 02:29:25 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:13  time: 1.1605  data_time: 0.0015  memory: 4822  
11/11 02:30:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:08  time: 1.1211  data_time: 0.0015  memory: 9193  
11/11 02:31:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:04  time: 1.1153  data_time: 0.0014  memory: 13001  
11/11 02:32:21 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0368  data_time: 0.0013  memory: 12765  
11/11 02:32:21 - mmengine - INFO - per class results:
11/11 02:32:21 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 66.37 |  80.0 |
|       building      | 75.58 | 87.49 |
|         sky         | 84.28 | 91.81 |
|        floor        | 69.81 | 84.76 |
|         tree        | 64.22 | 78.51 |
|       ceiling       | 70.85 | 83.66 |
|         road        | 76.37 | 86.04 |
|         bed         | 78.25 | 87.72 |
|      windowpane     | 50.92 | 69.84 |
|        grass        | 63.91 | 78.12 |
|       cabinet       | 54.79 | 67.35 |
|       sidewalk      | 53.89 | 70.01 |
|        person       | 62.44 | 77.42 |
|        earth        | 38.64 | 55.99 |
|         door        | 46.46 | 58.57 |
|        table        | 49.93 |  66.0 |
|       mountain      | 54.07 | 68.67 |
|        plant        | 43.78 | 53.89 |
|       curtain       | 54.52 | 68.83 |
|        chair        | 44.48 | 61.08 |
|         car         | 64.82 | 79.08 |
|        water        | 55.01 |  73.5 |
|       painting      | 51.22 |  68.6 |
|         sofa        | 65.12 | 81.53 |
|        shelf        | 42.17 | 60.72 |
|        house        | 52.63 | 70.49 |
|         sea         | 61.56 | 77.38 |
|        mirror       | 56.43 |  70.8 |
|         rug         | 44.67 | 50.75 |
|        field        | 30.08 | 50.23 |
|       armchair      | 46.72 | 64.91 |
|         seat        |  61.7 | 81.92 |
|        fence        | 39.72 | 53.04 |
|         desk        | 45.25 | 66.92 |
|         rock        | 46.47 | 69.91 |
|       wardrobe      | 58.54 | 79.19 |
|         lamp        | 33.66 | 51.48 |
|       bathtub       |  66.6 | 75.22 |
|       railing       | 32.21 | 47.78 |
|       cushion       | 49.19 |  63.1 |
|         base        | 37.84 | 53.24 |
|         box         | 30.94 | 41.46 |
|        column       | 36.12 | 48.24 |
|      signboard      | 23.25 | 33.89 |
|   chest of drawers  | 34.77 | 52.34 |
|       counter       | 50.69 | 63.21 |
|         sand        | 49.22 | 72.53 |
|         sink        | 52.37 | 66.01 |
|      skyscraper     | 41.53 | 50.93 |
|      fireplace      | 59.56 | 82.22 |
|     refrigerator    | 69.56 | 80.53 |
|      grandstand     | 48.79 | 80.12 |
|         path        | 24.09 | 37.28 |
|        stairs       |  32.1 | 40.76 |
|        runway       | 61.15 | 82.59 |
|         case        | 65.69 | 80.02 |
|      pool table     | 79.28 | 89.38 |
|        pillow       | 44.65 | 58.54 |
|     screen door     | 62.07 | 71.91 |
|       stairway      | 32.14 | 52.78 |
|        river        | 10.25 | 26.32 |
|        bridge       | 32.95 | 45.81 |
|       bookcase      | 39.62 | 62.83 |
|        blind        | 34.96 | 39.88 |
|     coffee table    | 52.95 | 71.38 |
|        toilet       | 58.06 | 72.47 |
|        flower       | 28.59 | 42.69 |
|         book        | 37.53 | 57.45 |
|         hill        |  8.17 | 11.82 |
|        bench        | 56.47 |  67.3 |
|      countertop     | 44.42 | 64.16 |
|        stove        | 66.45 | 77.95 |
|         palm        | 41.76 | 66.02 |
|    kitchen island   | 37.69 |  68.2 |
|       computer      | 65.93 | 83.39 |
|     swivel chair    | 29.57 | 40.74 |
|         boat        | 53.82 | 78.71 |
|         bar         | 62.84 | 78.47 |
|    arcade machine   | 76.48 | 88.53 |
|        hovel        | 56.62 |  67.7 |
|         bus         | 76.67 | 84.74 |
|        towel        | 43.64 | 59.93 |
|        light        | 15.36 | 23.72 |
|        truck        | 37.01 | 53.63 |
|        tower        |  4.51 |  9.54 |
|      chandelier     | 45.28 | 63.49 |
|        awning       | 24.42 | 31.96 |
|     streetlight     |  9.93 | 15.62 |
|        booth        | 39.14 | 65.46 |
| television receiver | 51.67 | 69.81 |
|       airplane      |  58.0 | 77.37 |
|      dirt track     |  4.48 | 20.98 |
|       apparel       | 38.23 | 60.25 |
|         pole        | 10.98 | 18.78 |
|         land        |  1.43 |  3.99 |
|      bannister      |  7.55 | 10.71 |
|      escalator      | 55.91 | 73.55 |
|       ottoman       | 45.64 | 61.41 |
|        bottle       | 29.14 | 50.03 |
|        buffet       | 44.16 | 49.67 |
|        poster       | 31.28 | 42.32 |
|        stage        | 14.15 | 28.42 |
|         van         | 39.45 | 60.98 |
|         ship        | 75.23 | 92.73 |
|       fountain      | 40.38 | 41.86 |
|    conveyer belt    | 70.51 | 85.02 |
|        canopy       | 34.65 | 54.81 |
|        washer       | 76.58 | 88.34 |
|      plaything      | 22.25 | 34.12 |
|    swimming pool    | 64.63 | 80.26 |
|        stool        | 29.32 | 46.12 |
|        barrel       | 38.28 | 71.01 |
|        basket       | 30.87 | 45.83 |
|      waterfall      | 57.88 | 65.22 |
|         tent        | 76.67 | 88.49 |
|         bag         | 18.92 |  22.7 |
|       minibike      | 51.98 | 70.47 |
|        cradle       | 71.84 | 91.42 |
|         oven        | 54.72 | 65.16 |
|         ball        | 32.58 | 36.67 |
|         food        | 50.27 | 59.17 |
|         step        | 14.46 | 16.51 |
|         tank        | 73.33 | 86.76 |
|      trade name     | 15.54 | 19.78 |
|      microwave      | 71.92 | 83.09 |
|         pot         | 35.03 | 46.38 |
|        animal       | 47.42 |  53.0 |
|       bicycle       | 36.26 | 55.62 |
|         lake        | 51.38 | 60.98 |
|      dishwasher     | 56.86 | 68.83 |
|        screen       | 47.16 | 73.99 |
|       blanket       | 26.55 | 32.64 |
|      sculpture      | 58.59 | 75.63 |
|         hood        | 42.66 | 59.48 |
|        sconce       | 23.41 | 36.27 |
|         vase        | 23.22 |  37.6 |
|    traffic light    | 20.51 | 35.76 |
|         tray        |  9.71 | 16.64 |
|        ashcan       | 28.82 | 46.19 |
|         fan         |  30.5 | 46.58 |
|         pier        | 29.28 | 35.43 |
|      crt screen     |  3.78 | 11.78 |
|        plate        | 39.83 |  58.9 |
|       monitor       |  8.59 |  9.75 |
|    bulletin board   | 42.21 | 55.47 |
|        shower       |  0.88 |  5.51 |
|       radiator      | 40.68 | 55.12 |
|        glass        | 12.16 | 14.98 |
|        clock        | 27.91 | 39.42 |
|         flag        | 48.78 | 63.72 |
+---------------------+-------+-------+
11/11 02:32:21 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 76.9400  mIoU: 44.2100  mAcc: 58.2600  data_time: 0.0017  time: 1.2801
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
11/11 02:32:37 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 4273301
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 4273301
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 02:32:38 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 02:32:48,009 - mmseg - INFO - using core type: DCNv3
2024-11-11 02:32:48,009 - mmseg - INFO - using activation layer: GELU
2024-11-11 02:32:48,009 - mmseg - INFO - using main norm layer: LN
2024-11-11 02:32:48,009 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 02:32:48,009 - mmseg - INFO - level2_post_norm: True
2024-11-11 02:32:48,009 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 02:32:48,009 - mmseg - INFO - res_post_norm: True
2024-11-11 02:32:48,009 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 02:33:04 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 02:33:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 02:33:06 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 02:33:14 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 02:34:09 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:14  time: 0.6947  data_time: 0.0015  memory: 25645  
11/11 02:34:44 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:28:26  time: 0.8222  data_time: 0.0015  memory: 24207  
11/11 02:35:09 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:34  time: 0.4877  data_time: 0.0014  memory: 13887  
11/11 02:35:41 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:21:59  time: 0.5869  data_time: 0.0014  memory: 24212  
11/11 02:36:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:45  time: 0.4291  data_time: 0.0015  memory: 24175  
11/11 02:36:40 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:23  time: 0.3155  data_time: 0.0015  memory: 24217  
11/11 02:37:09 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:26  time: 0.4461  data_time: 0.0014  memory: 24229  
11/11 02:37:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:22  time: 0.4708  data_time: 0.0013  memory: 24178  
11/11 02:37:53 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:58  time: 0.3964  data_time: 0.0013  memory: 13702  
11/11 02:38:11 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:48  time: 0.2978  data_time: 0.0014  memory: 12983  
11/11 02:38:30 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:51  time: 0.4779  data_time: 0.0015  memory: 14079  
11/11 02:38:48 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:57  time: 0.4722  data_time: 0.0015  memory: 13888  
11/11 02:39:10 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:17  time: 0.5045  data_time: 0.0013  memory: 14369  
11/11 02:39:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:46  time: 0.3231  data_time: 0.0015  memory: 24226  
11/11 02:40:01 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:17  time: 0.8191  data_time: 0.0014  memory: 14074  
11/11 02:40:16 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:33  time: 0.3072  data_time: 0.0015  memory: 13889  
11/11 02:40:32 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:51  time: 0.3096  data_time: 0.0016  memory: 4878  
11/11 02:40:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:16  time: 0.3800  data_time: 0.0013  memory: 13142  
11/11 02:41:14 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:50  time: 0.5694  data_time: 0.0014  memory: 15016  
11/11 02:41:33 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:18  time: 0.2913  data_time: 0.0014  memory: 15018  
11/11 02:41:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:51  time: 0.6661  data_time: 0.0015  memory: 14825  
11/11 02:42:17 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:23  time: 0.2932  data_time: 0.0015  memory: 14077  
11/11 02:42:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:53  time: 0.4376  data_time: 0.0014  memory: 12995  
11/11 02:42:50 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:23  time: 0.2985  data_time: 0.0014  memory: 6023  
11/11 02:43:08 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:56  time: 0.4261  data_time: 0.0014  memory: 24213  
11/11 02:43:22 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:27  time: 0.3074  data_time: 0.0014  memory: 4881  
11/11 02:43:38 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:00  time: 0.2823  data_time: 0.0014  memory: 11450  
11/11 02:44:00 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:36  time: 0.5083  data_time: 0.0014  memory: 14637  
11/11 02:44:17 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:11  time: 0.4673  data_time: 0.0014  memory: 13142  
11/11 02:44:32 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:45  time: 0.2784  data_time: 0.0013  memory: 4880  
11/11 02:44:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:21  time: 0.3164  data_time: 0.0014  memory: 14827  
11/11 02:45:04 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:57  time: 0.2984  data_time: 0.0014  memory: 4877  
11/11 02:45:25 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:34  time: 0.2747  data_time: 0.0013  memory: 24226  
11/11 02:45:44 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:12  time: 0.3050  data_time: 0.0015  memory: 13328  
11/11 02:46:03 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:49  time: 0.2998  data_time: 0.0013  memory: 14454  
11/11 02:46:19 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:27  time: 0.3088  data_time: 0.0015  memory: 11821  
11/11 02:46:34 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:04  time: 0.3074  data_time: 0.0015  memory: 4822  
11/11 02:46:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:42  time: 0.2961  data_time: 0.0014  memory: 9193  
11/11 02:47:09 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.2925  data_time: 0.0014  memory: 13001  
11/11 02:47:27 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2730  data_time: 0.0012  memory: 12765  
11/11 02:47:27 - mmengine - INFO - per class results:
11/11 02:47:27 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 81.23 | 89.58 |
|       building      | 84.24 | 93.98 |
|         sky         | 94.53 | 97.93 |
|        floor        | 83.46 | 92.52 |
|         tree        | 76.14 | 87.63 |
|       ceiling       |  86.4 | 94.95 |
|         road        | 86.08 |  91.9 |
|         bed         | 91.69 | 96.31 |
|      windowpane     |  64.6 | 80.37 |
|        grass        | 71.99 | 82.26 |
|       cabinet       | 66.07 | 74.83 |
|       sidewalk      | 71.16 | 85.12 |
|        person       | 82.65 | 91.44 |
|        earth        | 42.45 | 57.95 |
|         door        | 56.99 | 65.45 |
|        table        | 67.89 | 79.88 |
|       mountain      | 61.96 | 71.99 |
|        plant        | 53.89 | 63.16 |
|       curtain       | 75.24 | 84.35 |
|        chair        | 63.55 | 75.94 |
|         car         |  86.9 | 92.59 |
|        water        |  59.4 | 70.32 |
|       painting      | 78.67 | 88.91 |
|         sofa        | 82.14 | 92.96 |
|        shelf        | 48.64 | 72.26 |
|        house        | 57.27 | 75.34 |
|         sea         | 68.28 | 84.81 |
|        mirror       | 73.32 | 80.97 |
|         rug         | 63.61 | 67.65 |
|        field        | 38.12 |  72.7 |
|       armchair      | 61.01 | 76.53 |
|         seat        | 67.13 |  87.4 |
|        fence        | 49.47 | 61.29 |
|         desk        | 59.16 | 80.41 |
|         rock        | 57.47 | 76.93 |
|       wardrobe      | 64.81 |  85.0 |
|         lamp        | 70.73 | 81.75 |
|       bathtub       | 84.47 | 88.16 |
|       railing       | 43.17 | 60.43 |
|       cushion       | 70.11 | 80.03 |
|         base        |  42.9 | 64.68 |
|         box         | 36.28 | 44.47 |
|        column       | 51.86 | 62.46 |
|      signboard      | 37.35 | 46.92 |
|   chest of drawers  | 42.67 | 64.06 |
|       counter       | 55.12 | 68.08 |
|         sand        | 56.06 | 75.75 |
|         sink        |  81.4 | 87.46 |
|      skyscraper     | 46.66 | 50.93 |
|      fireplace      | 71.64 | 93.49 |
|     refrigerator    | 83.02 | 92.98 |
|      grandstand     | 47.19 | 86.53 |
|         path        | 29.98 | 46.49 |
|        stairs       |  34.9 | 40.72 |
|        runway       | 72.66 | 95.91 |
|         case        | 63.16 | 81.82 |
|      pool table     | 92.52 | 97.04 |
|        pillow       | 67.83 | 76.77 |
|     screen door     | 83.69 | 88.19 |
|       stairway      | 44.94 | 69.13 |
|        river        | 16.32 | 43.48 |
|        bridge       | 39.75 | 48.94 |
|       bookcase      | 51.49 | 76.43 |
|        blind        |  36.9 | 38.43 |
|     coffee table    | 67.71 | 82.39 |
|        toilet       | 87.83 | 92.66 |
|        flower       | 43.43 | 56.67 |
|         book        | 53.08 | 68.61 |
|         hill        |  8.7  |  12.2 |
|        bench        | 58.16 | 65.85 |
|      countertop     | 63.61 | 77.82 |
|        stove        | 85.51 | 91.17 |
|         palm        | 53.45 | 74.51 |
|    kitchen island   |  38.0 | 73.29 |
|       computer      | 79.83 | 89.56 |
|     swivel chair    | 46.98 | 68.27 |
|         boat        |  84.0 | 90.15 |
|         bar         | 56.46 | 71.01 |
|    arcade machine   | 88.05 | 94.76 |
|        hovel        | 22.16 | 24.06 |
|         bus         | 92.11 | 97.57 |
|        towel        | 71.07 | 84.53 |
|        light        |  52.5 | 58.89 |
|        truck        | 49.08 |  64.4 |
|        tower        |  6.29 | 10.84 |
|      chandelier     | 70.34 | 84.81 |
|        awning       | 38.01 |  44.3 |
|     streetlight     | 34.32 | 45.04 |
|        booth        | 44.71 | 67.51 |
| television receiver | 77.24 | 84.98 |
|       airplane      | 71.89 | 90.22 |
|      dirt track     |  7.77 | 22.26 |
|       apparel       | 56.99 | 72.68 |
|         pole        | 27.21 | 36.28 |
|         land        |  1.77 |  3.62 |
|      bannister      | 17.79 | 23.29 |
|      escalator      | 63.35 | 81.92 |
|       ottoman       |  55.5 | 66.75 |
|        bottle       | 38.85 | 60.17 |
|        buffet       | 61.65 |  70.2 |
|        poster       | 34.41 | 48.48 |
|        stage        | 21.96 | 32.03 |
|         van         | 47.23 | 75.46 |
|         ship        | 79.29 | 96.89 |
|       fountain      | 38.38 | 39.34 |
|    conveyer belt    |  82.2 | 91.85 |
|        canopy       | 41.71 | 60.74 |
|        washer       | 86.58 | 92.41 |
|      plaything      | 40.45 | 51.89 |
|    swimming pool    | 59.33 | 83.36 |
|        stool        | 51.11 | 70.92 |
|        barrel       | 77.23 | 88.86 |
|        basket       | 46.18 | 60.72 |
|      waterfall      | 75.96 | 87.59 |
|         tent        | 90.52 | 98.74 |
|         bag         |  24.6 | 26.86 |
|       minibike      | 73.69 | 87.75 |
|        cradle       | 87.46 | 98.04 |
|         oven        | 67.08 | 78.32 |
|         ball        | 56.95 | 63.42 |
|         food        |  53.2 | 57.19 |
|         step        |  9.21 | 10.36 |
|         tank        | 76.69 | 88.44 |
|      trade name     | 27.26 | 34.39 |
|      microwave      | 89.68 | 96.31 |
|         pot         | 63.81 | 72.55 |
|        animal       | 61.11 | 63.98 |
|       bicycle       | 58.96 |  73.7 |
|         lake        | 55.65 | 63.66 |
|      dishwasher     | 68.33 | 78.76 |
|        screen       | 61.66 | 88.44 |
|       blanket       | 28.47 | 32.03 |
|      sculpture      |  73.6 | 87.86 |
|         hood        | 69.03 | 84.37 |
|        sconce       | 55.69 |  67.4 |
|         vase        | 44.55 | 59.87 |
|    traffic light    | 40.54 | 58.77 |
|         tray        | 15.52 | 19.57 |
|        ashcan       | 52.42 | 63.86 |
|         fan         | 66.96 | 80.05 |
|         pier        | 38.49 | 39.82 |
|      crt screen     |  5.08 | 15.45 |
|        plate        | 60.62 | 75.93 |
|       monitor       | 13.12 |  14.4 |
|    bulletin board   | 55.74 | 65.81 |
|        shower       |  5.01 | 11.54 |
|       radiator      | 67.89 |  77.5 |
|        glass        | 19.47 | 21.31 |
|        clock        | 45.21 | 57.62 |
|         flag        | 66.29 | 74.35 |
+---------------------+-------+-------+
11/11 02:47:27 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 85.7300  mIoU: 56.9300  mAcc: 68.9800  data_time: 0.0015  time: 0.4263
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
11/11 02:47:49 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1427614745
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1427614745
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

11/11 02:47:50 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    896,
    896,
)
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1280,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        center_feature_scale=True,
        channels=320,
        core_op='DCNv3',
        depths=[
            6,
            6,
            32,
            6,
        ],
        drop_path_rate=0.5,
        dw_kernel_size=5,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth',
            type='Pretrained'),
        layer_scale=None,
        level2_post_norm=True,
        level2_post_norm_block_ids=[
            5,
            11,
            17,
            23,
            29,
        ],
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=1.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=False,
        res_post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            320,
            640,
            1280,
            2560,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            6,
            6,
            32,
            6,
        ],
        layer_decay_rate=0.95,
        num_layers=50,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_h_jointto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_h_896_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/miniconda3/envs/py310/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
2024-11-11 02:47:57,260 - mmseg - INFO - using core type: DCNv3
2024-11-11 02:47:57,260 - mmseg - INFO - using activation layer: GELU
2024-11-11 02:47:57,260 - mmseg - INFO - using main norm layer: LN
2024-11-11 02:47:57,260 - mmseg - INFO - using dpr: linear, 0.5
2024-11-11 02:47:57,260 - mmseg - INFO - level2_post_norm: True
2024-11-11 02:47:57,261 - mmseg - INFO - level2_post_norm_block_ids: [5, 11, 17, 23, 29]
2024-11-11 02:47:57,261 - mmseg - INFO - res_post_norm: True
2024-11-11 02:47:57,261 - mmseg - INFO - use_dcn_v4_op: False
Number of parameters:  1120338396
11/11 02:48:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
11/11 02:48:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
11/11 02:48:14 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 02:48:18 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_h_896_160k_ade20k.pth
11/11 02:49:18 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:38:49  time: 0.7010  data_time: 0.0014  memory: 25645  
11/11 02:49:54 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:17  time: 0.8282  data_time: 0.0014  memory: 24207  
11/11 02:50:19 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:50  time: 0.4950  data_time: 0.0014  memory: 13887  
11/11 02:50:52 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:58  time: 0.5929  data_time: 0.0013  memory: 24212  
11/11 02:51:23 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:32  time: 0.4343  data_time: 0.0014  memory: 24175  
11/11 02:51:51 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:20:03  time: 0.3198  data_time: 0.0015  memory: 24217  
11/11 02:52:21 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:01  time: 0.4511  data_time: 0.0013  memory: 24229  
11/11 02:52:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:53  time: 0.4782  data_time: 0.0013  memory: 24178  
11/11 02:53:05 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:25  time: 0.4011  data_time: 0.0013  memory: 13702  
11/11 02:53:23 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:13  time: 0.3045  data_time: 0.0014  memory: 12983  
11/11 02:53:43 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:14  time: 0.4840  data_time: 0.0014  memory: 14079  
11/11 02:54:04 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:25  time: 0.5184  data_time: 0.0016  memory: 13888  
11/11 02:54:26 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:44  time: 0.5086  data_time: 0.0013  memory: 14369  
11/11 02:54:52 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:11  time: 0.3284  data_time: 0.0015  memory: 24226  
11/11 02:55:18 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:39  time: 0.8219  data_time: 0.0014  memory: 14074  
11/11 02:55:34 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:53  time: 0.3143  data_time: 0.0015  memory: 13889  
11/11 02:55:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:11  time: 0.3155  data_time: 0.0015  memory: 4878  
11/11 02:56:08 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:34  time: 0.3858  data_time: 0.0013  memory: 13142  
11/11 02:56:33 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:06  time: 0.5759  data_time: 0.0014  memory: 15016  
11/11 02:56:52 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:33  time: 0.2980  data_time: 0.0014  memory: 15018  
11/11 02:57:15 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:05  time: 0.6701  data_time: 0.0014  memory: 14825  
11/11 02:57:36 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:36  time: 0.2976  data_time: 0.0014  memory: 14077  
11/11 02:57:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:05  time: 0.4434  data_time: 0.0014  memory: 12995  
11/11 02:58:10 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:34  time: 0.3037  data_time: 0.0013  memory: 6023  
11/11 02:58:28 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:05  time: 0.4329  data_time: 0.0014  memory: 24213  
11/11 02:58:43 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:36  time: 0.3133  data_time: 0.0014  memory: 4881  
11/11 02:58:59 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:08  time: 0.2868  data_time: 0.0014  memory: 11450  
11/11 02:59:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:44  time: 0.5140  data_time: 0.0013  memory: 14637  
11/11 02:59:39 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:18  time: 0.4719  data_time: 0.0013  memory: 13142  
11/11 02:59:54 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:51  time: 0.2858  data_time: 0.0013  memory: 4880  
11/11 03:00:12 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:27  time: 0.3215  data_time: 0.0014  memory: 14827  
11/11 03:00:27 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:01  time: 0.3026  data_time: 0.0014  memory: 4877  
11/11 03:00:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:38  time: 0.2818  data_time: 0.0013  memory: 24226  
11/11 03:01:07 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:15  time: 0.3104  data_time: 0.0015  memory: 13328  
11/11 03:01:26 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:52  time: 0.3041  data_time: 0.0013  memory: 14454  
11/11 03:01:42 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:29  time: 0.3156  data_time: 0.0015  memory: 11821  
11/11 03:01:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:06  time: 0.3145  data_time: 0.0015  memory: 4822  
11/11 03:02:14 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:43  time: 0.3008  data_time: 0.0014  memory: 9193  
11/11 03:02:33 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.2978  data_time: 0.0014  memory: 13001  
11/11 03:02:52 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2779  data_time: 0.0012  memory: 12765  
11/11 03:02:52 - mmengine - INFO - per class results:
11/11 03:02:52 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 79.41 | 90.19 |
|       building      | 83.15 | 93.88 |
|         sky         | 94.22 | 97.24 |
|        floor        | 82.26 | 92.25 |
|         tree        | 75.08 | 87.04 |
|       ceiling       |  84.2 | 92.09 |
|         road        | 85.14 | 90.11 |
|         bed         | 90.88 | 95.57 |
|      windowpane     | 63.08 | 79.22 |
|        grass        | 73.21 | 85.41 |
|       cabinet       | 61.22 | 71.79 |
|       sidewalk      | 67.04 |  82.2 |
|        person       | 81.51 | 89.06 |
|        earth        | 40.92 | 61.74 |
|         door        | 54.34 | 66.38 |
|        table        | 66.32 | 79.55 |
|       mountain      | 53.99 | 59.71 |
|        plant        | 52.01 | 61.04 |
|       curtain       | 74.33 | 83.44 |
|        chair        | 60.73 |  70.6 |
|         car         |  85.6 |  93.5 |
|        water        | 63.73 | 78.89 |
|       painting      | 75.81 | 86.79 |
|         sofa        |  76.5 | 91.05 |
|        shelf        | 45.39 | 64.18 |
|        house        | 49.92 | 62.23 |
|         sea         |  70.5 |  83.2 |
|        mirror       |  71.7 | 79.38 |
|         rug         | 61.94 | 73.58 |
|        field        | 40.33 | 57.34 |
|       armchair      | 57.09 | 71.96 |
|         seat        | 66.14 | 87.26 |
|        fence        | 46.11 | 53.02 |
|         desk        |  55.6 | 75.49 |
|         rock        | 55.95 | 86.96 |
|       wardrobe      | 54.09 | 84.04 |
|         lamp        | 68.94 | 79.15 |
|       bathtub       | 80.58 | 83.45 |
|       railing       | 38.21 | 52.23 |
|       cushion       | 63.95 | 80.45 |
|         base        | 37.51 | 47.75 |
|         box         | 33.51 |  41.3 |
|        column       | 52.08 | 63.62 |
|      signboard      | 33.86 | 41.08 |
|   chest of drawers  | 44.34 | 71.04 |
|       counter       |  49.5 | 60.54 |
|         sand        | 54.36 | 79.13 |
|         sink        | 76.44 |  81.7 |
|      skyscraper     | 43.04 | 52.06 |
|      fireplace      | 75.53 | 92.72 |
|     refrigerator    | 74.06 | 81.83 |
|      grandstand     | 52.72 | 87.84 |
|         path        | 25.76 | 44.38 |
|        stairs       | 33.21 | 36.69 |
|        runway       | 76.61 | 97.69 |
|         case        | 54.98 | 69.67 |
|      pool table     | 91.52 | 96.09 |
|        pillow       | 56.51 | 62.38 |
|     screen door     | 64.98 | 69.39 |
|       stairway      | 42.77 | 69.31 |
|        river        | 10.78 | 21.25 |
|        bridge       | 43.86 | 47.53 |
|       bookcase      | 44.13 | 59.97 |
|        blind        | 22.07 | 22.16 |
|     coffee table    | 65.59 | 83.92 |
|        toilet       | 86.59 | 91.35 |
|        flower       | 38.79 | 53.35 |
|         book        | 49.61 | 73.77 |
|         hill        |  6.29 | 11.46 |
|        bench        | 56.98 | 62.89 |
|      countertop     | 60.59 | 68.64 |
|        stove        | 82.16 |  89.6 |
|         palm        | 55.12 | 75.74 |
|    kitchen island   | 36.53 | 76.57 |
|       computer      | 75.61 | 89.18 |
|     swivel chair    | 47.87 | 66.59 |
|         boat        | 75.87 |  92.0 |
|         bar         | 63.15 | 76.98 |
|    arcade machine   |  76.0 | 78.99 |
|        hovel        | 33.09 | 37.66 |
|         bus         | 92.19 | 97.41 |
|        towel        | 64.42 | 77.41 |
|        light        | 48.48 | 54.37 |
|        truck        | 48.35 | 60.85 |
|        tower        | 32.11 | 68.36 |
|      chandelier     | 65.52 | 76.16 |
|        awning       | 40.84 |  46.9 |
|     streetlight     | 26.79 |  33.3 |
|        booth        | 47.75 | 65.09 |
| television receiver | 73.03 | 75.61 |
|       airplane      | 58.78 | 66.81 |
|      dirt track     | 18.43 | 19.72 |
|       apparel       | 51.15 | 67.27 |
|         pole        | 21.24 | 27.44 |
|         land        |  1.15 |  2.15 |
|      bannister      | 13.29 | 18.23 |
|      escalator      | 60.76 | 75.98 |
|       ottoman       |  54.7 | 68.52 |
|        bottle       | 35.87 | 56.05 |
|        buffet       | 50.89 | 55.11 |
|        poster       | 33.15 |  48.5 |
|        stage        | 17.13 | 27.86 |
|         van         | 48.64 | 67.28 |
|         ship        | 82.18 | 93.71 |
|       fountain      | 47.17 | 48.34 |
|    conveyer belt    | 85.58 | 92.89 |
|        canopy       | 43.19 | 63.48 |
|        washer       | 88.34 |  94.4 |
|      plaything      | 30.09 |  44.8 |
|    swimming pool    | 75.85 | 83.24 |
|        stool        | 47.59 | 65.37 |
|        barrel       |  62.0 | 70.75 |
|        basket       | 38.49 | 49.16 |
|      waterfall      | 45.62 |  52.9 |
|         tent        | 94.51 | 98.86 |
|         bag         | 14.66 |  15.9 |
|       minibike      | 73.68 | 84.28 |
|        cradle       | 83.25 | 97.11 |
|         oven        | 60.36 | 66.81 |
|         ball        | 47.25 | 55.57 |
|         food        |  52.8 | 61.54 |
|         step        | 15.91 | 16.82 |
|         tank        |  67.4 |  76.7 |
|      trade name     | 25.23 | 30.38 |
|      microwave      | 90.31 | 93.67 |
|         pot         | 53.01 | 65.55 |
|        animal       | 59.13 | 62.09 |
|       bicycle       | 56.35 | 66.82 |
|         lake        | 63.19 | 63.34 |
|      dishwasher     | 71.17 | 76.88 |
|        screen       | 46.96 | 64.14 |
|       blanket       | 18.26 | 19.25 |
|      sculpture      | 75.42 | 85.52 |
|         hood        | 65.88 | 71.54 |
|        sconce       | 48.51 | 54.74 |
|         vase        | 44.31 | 53.83 |
|    traffic light    | 31.44 | 37.63 |
|         tray        | 13.83 | 23.89 |
|        ashcan       | 46.42 | 55.05 |
|         fan         | 65.02 | 75.55 |
|         pier        | 38.43 | 45.28 |
|      crt screen     |  3.68 | 11.68 |
|        plate        | 58.43 | 70.06 |
|       monitor       | 12.54 | 13.05 |
|    bulletin board   | 46.87 | 53.41 |
|        shower       |  1.31 |  6.28 |
|       radiator      | 65.07 | 70.19 |
|        glass        | 16.71 | 17.97 |
|        clock        | 46.55 | 50.64 |
|         flag        | 62.06 | 70.41 |
+---------------------+-------+-------+
11/11 03:02:52 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 84.5900  mIoU: 54.2800  mAcc: 65.1800  data_time: 0.0016  time: 0.4365
Finished processing corruption type: jpeg_compression
Runtime: 1731290580

============================= JOB FEEDBACK =============================

NodeName=uc2n485
Job ID: 24599667
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 08:38:48
CPU Efficiency: 5.19% of 6-22:30:08 core-walltime
Job Wall-clock time: 10:24:23
Memory Utilized: 4.80 GB
Memory Efficiency: 4.80% of 100.00 GB
