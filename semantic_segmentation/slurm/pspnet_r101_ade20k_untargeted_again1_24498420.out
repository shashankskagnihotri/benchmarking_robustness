Started at Sun Oct 20 08:51:34 CEST 2024
10/20 08:51:36 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2013032463
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2013032463
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/20 08:51:37 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/pspnet/pspnet_r101-d8_512x512_160k_ade20k_20200615_100650-967c316f.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=0.1, epsilon=64, iterations=20, name='segpgd', norm='l2'),
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=101,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='PSPHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=True,
    pretrained='open-mmlab://resnet101_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../aa_workdir/pspnet/pspnet_r101-d8_4xb4-160k_ade20k-512x512/attack_segpgd/norm_l2/iterations_20/epsilon_64/alpha_0.1/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/pspnet/pspnet_r101-d8_4xb4-160k_ade20k-512x512/attack_segpgd/norm_l2/iterations_20/epsilon_64/alpha_0.1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
10/20 08:51:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/20 08:51:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/20 08:51:41 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/pspnet/pspnet_r101-d8_512x512_160k_ade20k_20200615_100650-967c316f.pth
10/20 08:51:42 - mmengine - INFO - Load checkpoint from ../checkpoint_files/pspnet/pspnet_r101-d8_512x512_160k_ade20k_20200615_100650-967c316f.pth
10/20 09:00:12 - mmengine - INFO - Iter(test) [  50/2000]    eta: 5:30:27  time: 7.9831  data_time: 0.0018  memory: 21773  
10/20 09:07:04 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:51:39  time: 8.2054  data_time: 0.0020  memory: 21644  
10/20 09:13:50 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 4:32:17  time: 8.4786  data_time: 0.0017  memory: 21122  
10/20 09:21:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 4:27:52  time: 6.7791  data_time: 0.0017  memory: 28973  
10/20 09:28:10 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 4:15:13  time: 6.4948  data_time: 0.0016  memory: 29347  
10/20 09:34:41 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 4:03:31  time: 6.1673  data_time: 0.0017  memory: 21474  
10/20 09:41:33 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:54:56  time: 6.2576  data_time: 0.0016  memory: 21619  
10/20 09:47:33 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:43:19  time: 6.7668  data_time: 0.0015  memory: 21484  
10/20 09:52:06 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:28:03  time: 5.4784  data_time: 0.0015  memory: 20790  
10/20 09:57:15 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 3:16:34  time: 5.7296  data_time: 0.0063  memory: 20151  
10/20 10:02:45 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 3:07:16  time: 7.0072  data_time: 0.0015  memory: 21676  
10/20 10:08:19 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:58:44  time: 9.7458  data_time: 0.0123  memory: 21362  
10/20 10:14:04 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:51:01  time: 7.1632  data_time: 0.0102  memory: 21825  
10/20 10:19:59 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:43:53  time: 6.1851  data_time: 0.0046  memory: 21809  
10/20 10:25:46 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:36:44  time: 7.5334  data_time: 0.0103  memory: 22087  
10/20 10:30:41 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:28:25  time: 6.3146  data_time: 0.0157  memory: 21129  
10/20 10:36:00 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:21:03  time: 6.2919  data_time: 0.0098  memory: 10372  
10/20 10:40:35 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:13:03  time: 5.2644  data_time: 0.0014  memory: 20517  
10/20 10:47:21 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:07:47  time: 8.2888  data_time: 0.0067  memory: 21604  
10/20 10:52:27 - mmengine - INFO - Iter(test) [1000/2000]    eta: 2:00:43  time: 6.4193  data_time: 0.0143  memory: 21400  
10/20 10:58:10 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:54:23  time: 7.9629  data_time: 0.0079  memory: 21947  
10/20 11:03:29 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:47:47  time: 5.8014  data_time: 0.0016  memory: 20844  
10/20 11:08:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:41:21  time: 7.5019  data_time: 0.0323  memory: 20330  
10/20 11:14:16 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:35:00  time: 5.6510  data_time: 0.0015  memory: 12523  
10/20 11:19:20 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:28:33  time: 5.7363  data_time: 0.0015  memory: 21121  
10/20 11:24:10 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:22:04  time: 5.8624  data_time: 0.0015  memory: 10467  
10/20 11:29:26 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:15:55  time: 5.3902  data_time: 0.0015  memory: 19984  
10/20 11:35:43 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:10:16  time: 6.6704  data_time: 0.0015  memory: 21359  
10/20 11:41:26 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:04:22  time: 6.6512  data_time: 0.0015  memory: 20547  
10/20 11:46:09 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:58:08  time: 5.3184  data_time: 0.0015  memory: 10372  
10/20 11:52:22 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:52:26  time: 6.0108  data_time: 0.0015  memory: 21284  
10/20 11:57:55 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:46:32  time: 5.8374  data_time: 0.0016  memory: 10257  
10/20 12:02:46 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:40:31  time: 5.2328  data_time: 0.0014  memory: 28931  
10/20 12:07:48 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:34:36  time: 6.0166  data_time: 0.0016  memory: 20917  
10/20 12:12:53 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:28:43  time: 5.6213  data_time: 0.0014  memory: 21170  
10/20 12:17:40 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:22:52  time: 6.1816  data_time: 0.0016  memory: 20100  
10/20 12:22:47 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:17:06  time: 6.1260  data_time: 0.0016  memory: 9334  
10/20 12:27:24 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:11:21  time: 5.4939  data_time: 0.0016  memory: 21918  
10/20 12:32:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:39  time: 5.6512  data_time: 0.0015  memory: 29496  
10/20 12:37:09 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 5.2115  data_time: 0.0014  memory: 21673  
10/20 12:37:09 - mmengine - INFO - per class results:
10/20 12:37:09 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 60.55 | 77.77 |
|       building      |  69.3 | 87.11 |
|         sky         | 84.66 | 88.06 |
|        floor        |  69.2 | 82.77 |
|         tree        | 66.53 | 83.82 |
|       ceiling       | 65.66 | 78.11 |
|         road        | 65.62 | 78.46 |
|         bed         |  76.5 | 86.94 |
|      windowpane     | 44.69 | 63.21 |
|        grass        | 54.89 | 72.12 |
|       cabinet       | 39.76 | 57.67 |
|       sidewalk      | 41.35 | 59.46 |
|        person       | 70.34 |  86.4 |
|        earth        | 18.44 | 29.17 |
|         door        | 18.45 | 31.21 |
|        table        |  45.5 | 62.59 |
|       mountain      | 32.72 | 54.83 |
|        plant        | 42.58 | 54.37 |
|       curtain       | 49.58 | 65.08 |
|        chair        | 42.72 | 57.45 |
|         car         | 76.29 | 86.94 |
|        water        | 32.28 | 46.11 |
|       painting      | 55.82 | 73.09 |
|         sofa        | 49.51 | 69.69 |
|        shelf        | 28.97 |  47.4 |
|        house        | 10.91 | 15.43 |
|         sea         | 29.09 |  53.6 |
|        mirror       | 36.22 | 51.21 |
|         rug         | 37.76 |  48.1 |
|        field        |  9.36 | 18.83 |
|       armchair      | 20.39 | 31.09 |
|         seat        |  41.0 | 61.63 |
|        fence        | 22.92 | 32.89 |
|         desk        |  27.7 | 42.29 |
|         rock        | 18.48 | 30.31 |
|       wardrobe      | 23.94 | 41.04 |
|         lamp        | 54.17 | 68.72 |
|       bathtub       | 52.03 | 65.92 |
|       railing       | 22.29 | 35.64 |
|       cushion       | 43.96 | 60.29 |
|         base        |  7.59 |  9.8  |
|         box         | 13.38 | 19.69 |
|        column       | 31.58 | 43.65 |
|      signboard      | 27.97 | 42.78 |
|   chest of drawers  | 18.31 |  34.7 |
|       counter       |  5.39 |  8.83 |
|         sand        | 16.93 | 24.35 |
|         sink        | 50.57 | 68.61 |
|      skyscraper     | 13.96 | 17.14 |
|      fireplace      | 39.15 | 59.21 |
|     refrigerator    | 49.12 |  61.2 |
|      grandstand     | 32.25 | 57.22 |
|         path        | 10.44 | 14.81 |
|        stairs       |  26.7 | 34.52 |
|        runway       | 56.17 | 76.74 |
|         case        | 38.39 | 56.06 |
|      pool table     | 86.25 | 94.56 |
|        pillow       | 41.86 | 56.04 |
|     screen door     | 19.85 | 35.07 |
|       stairway      | 19.69 | 23.16 |
|        river        |  5.09 | 11.79 |
|        bridge       |  23.4 | 27.49 |
|       bookcase      | 29.28 | 37.35 |
|        blind        | 24.52 | 31.15 |
|     coffee table    | 51.06 | 67.68 |
|        toilet       | 75.64 | 85.64 |
|        flower       | 27.81 | 42.77 |
|         book        | 39.08 | 58.03 |
|         hill        |  2.21 |  3.54 |
|        bench        | 35.03 | 45.06 |
|      countertop     | 43.04 | 59.34 |
|        stove        | 60.22 | 67.85 |
|         palm        | 44.08 | 63.03 |
|    kitchen island   | 21.32 | 44.28 |
|       computer      | 48.48 | 61.08 |
|     swivel chair    |  30.9 |  42.9 |
|         boat        | 32.87 | 37.07 |
|         bar         | 10.38 | 11.81 |
|    arcade machine   | 12.13 | 12.37 |
|        hovel        |  3.15 |  4.81 |
|         bus         | 76.24 | 83.19 |
|        towel        | 41.06 | 51.13 |
|        light        |  44.8 |  52.4 |
|        truck        | 10.59 | 16.51 |
|        tower        |  4.17 |  7.72 |
|      chandelier     | 59.17 | 75.57 |
|        awning       | 12.33 | 14.34 |
|     streetlight     | 20.46 | 26.32 |
|        booth        | 32.13 | 36.57 |
| television receiver | 44.73 | 57.06 |
|       airplane      | 46.52 | 62.98 |
|      dirt track     |  2.26 |  12.5 |
|       apparel       | 24.88 | 40.77 |
|         pole        |  15.0 |  22.6 |
|         land        |  0.51 |  0.95 |
|      bannister      |  6.17 |  8.29 |
|      escalator      | 15.84 | 17.32 |
|       ottoman       | 26.59 |  38.8 |
|        bottle       | 13.48 | 24.77 |
|        buffet       | 20.64 | 24.69 |
|        poster       | 15.46 | 20.56 |
|        stage        |  2.63 |  4.77 |
|         van         | 24.45 | 32.13 |
|         ship        | 34.86 | 45.57 |
|       fountain      |  0.72 |  0.74 |
|    conveyer belt    |  22.9 | 65.92 |
|        canopy       |  8.38 |  9.48 |
|        washer       | 52.88 | 62.93 |
|      plaything      | 27.72 | 38.89 |
|    swimming pool    | 19.87 | 25.78 |
|        stool        | 20.55 | 32.88 |
|        barrel       |  14.6 | 61.84 |
|        basket       |  24.8 | 37.04 |
|      waterfall      | 37.49 | 51.23 |
|         tent        |  50.1 | 65.31 |
|         bag         |  5.65 |  7.82 |
|       minibike      | 46.47 | 56.42 |
|        cradle       | 67.83 | 91.08 |
|         oven        | 23.63 | 37.75 |
|         ball        | 38.85 | 65.01 |
|         food        | 40.96 | 49.11 |
|         step        |  4.0  |  6.37 |
|         tank        | 18.85 | 28.49 |
|      trade name     | 21.82 |  25.7 |
|      microwave      | 30.38 |  34.6 |
|         pot         | 35.01 | 41.93 |
|        animal       |  32.7 | 33.82 |
|       bicycle       |  46.6 | 67.47 |
|         lake        | 40.23 | 52.45 |
|      dishwasher     | 42.84 | 47.21 |
|        screen       | 30.73 | 49.27 |
|       blanket       |  3.99 |  4.98 |
|      sculpture      | 14.89 | 23.13 |
|         hood        | 35.06 | 53.12 |
|        sconce       | 25.17 | 33.43 |
|         vase        |  38.6 | 52.97 |
|    traffic light    |  22.6 | 30.95 |
|         tray        |  6.14 | 15.13 |
|        ashcan       | 29.06 | 40.66 |
|         fan         | 49.04 |  67.8 |
|         pier        | 27.02 | 31.51 |
|      crt screen     |  0.07 |  0.21 |
|        plate        | 42.36 | 56.69 |
|       monitor       | 38.36 | 46.57 |
|    bulletin board   |  20.8 |  28.3 |
|        shower       |  0.87 |  2.01 |
|       radiator      | 34.67 | 42.86 |
|        glass        | 12.12 | 13.62 |
|        clock        | 21.58 | 26.25 |
|         flag        | 22.07 | 24.73 |
+---------------------+-------+-------+
10/20 12:37:09 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 70.6900  mIoU: 32.1600  mAcc: 43.3900  data_time: 0.0216  time: 6.7624
Runtime: 13538

============================= JOB FEEDBACK =============================

NodeName=uc2n485
Job ID: 24498420
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 03:14:33
CPU Efficiency: 10.75% of 1-06:09:20 core-walltime
Job Wall-clock time: 03:46:10
Memory Utilized: 3.69 GB
Memory Efficiency: 12.29% of 30.00 GB
