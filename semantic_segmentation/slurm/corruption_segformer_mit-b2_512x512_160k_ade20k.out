Started at Sun Sep 15 13:33:00 CEST 2024
/var/spool/slurmd/job24235236/slurm_script: line 15: activate: No such file or directory
Processing corruption type: gaussian_noise
09/15 13:33:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 857831665
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 857831665
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:33:10 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/gaussian_noise'

09/15 13:33:16 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:33:16 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:33:17 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 13:33:17 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 13:34:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:34:27  time: 0.3027  data_time: 0.0036  memory: 19763  
09/15 13:34:36 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:25:02  time: 0.7523  data_time: 0.0019  memory: 19759  
09/15 13:34:51 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:16  time: 0.2677  data_time: 0.0019  memory: 19733  
09/15 13:35:13 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:21  time: 0.3588  data_time: 0.0020  memory: 19761  
09/15 13:35:33 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:51  time: 0.2503  data_time: 0.0020  memory: 19735  
09/15 13:35:53 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:40  time: 0.0875  data_time: 0.0020  memory: 19757  
09/15 13:36:15 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:59  time: 0.2856  data_time: 0.0018  memory: 19756  
09/15 13:36:32 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:57  time: 0.2732  data_time: 0.0017  memory: 19757  
09/15 13:36:39 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:35  time: 0.1690  data_time: 0.0017  memory: 19730  
09/15 13:36:46 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:26  time: 0.0763  data_time: 0.0017  memory: 19698  
09/15 13:36:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:31  time: 0.2356  data_time: 0.0018  memory: 19755  
09/15 13:37:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:42  time: 0.2518  data_time: 0.0019  memory: 19757  
09/15 13:37:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:10  time: 0.3581  data_time: 0.0017  memory: 19765  
09/15 13:37:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:45  time: 0.0822  data_time: 0.0019  memory: 19764  
09/15 13:37:44 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:24  time: 0.7236  data_time: 0.0018  memory: 19771  
09/15 13:37:50 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:48  time: 0.0755  data_time: 0.0018  memory: 19734  
09/15 13:37:54 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:13  time: 0.0800  data_time: 0.0019  memory: 556  
09/15 13:38:01 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:46  time: 0.2103  data_time: 0.0017  memory: 19722  
09/15 13:38:15 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:28  time: 0.3504  data_time: 0.0018  memory: 19753  
09/15 13:38:23 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:06  time: 0.0762  data_time: 0.0018  memory: 19754  
09/15 13:38:35 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:47  time: 0.4523  data_time: 0.0017  memory: 19772  
09/15 13:38:45 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:28  time: 0.0771  data_time: 0.0018  memory: 19736  
09/15 13:38:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:07  time: 0.1717  data_time: 0.0018  memory: 19711  
09/15 13:38:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:45  time: 0.0760  data_time: 0.0018  memory: 1752  
09/15 13:39:04 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:27  time: 0.1848  data_time: 0.0018  memory: 19739  
09/15 13:39:08 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:08  time: 0.0791  data_time: 0.0018  memory: 556  
09/15 13:39:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:51  time: 0.0816  data_time: 0.0018  memory: 19691  
09/15 13:39:24 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:37  time: 0.2670  data_time: 0.0018  memory: 19744  
09/15 13:39:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:21  time: 0.1995  data_time: 0.0017  memory: 19722  
09/15 13:39:34 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:05  time: 0.0720  data_time: 0.0016  memory: 556  
09/15 13:39:40 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:51  time: 0.0798  data_time: 0.0018  memory: 19749  
09/15 13:39:44 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:36  time: 0.0770  data_time: 0.0019  memory: 547  
09/15 13:39:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:23  time: 0.0756  data_time: 0.0016  memory: 19754  
09/15 13:40:00 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:11  time: 0.0775  data_time: 0.0020  memory: 19726  
09/15 13:40:07 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:58  time: 0.0807  data_time: 0.0017  memory: 19744  
09/15 13:40:12 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:46  time: 0.0786  data_time: 0.0019  memory: 19696  
09/15 13:40:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:33  time: 0.0766  data_time: 0.0018  memory: 505  
09/15 13:40:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:22  time: 0.0763  data_time: 0.0017  memory: 19765  
09/15 13:40:27 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:11  time: 0.0801  data_time: 0.0018  memory: 19705  
09/15 13:40:35 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0678  data_time: 0.0015  memory: 19767  
09/15 13:40:36 - mmengine - INFO - per class results:
09/15 13:40:36 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 68.47 | 86.78 |
|       building      |  77.9 | 88.39 |
|         sky         | 92.16 | 95.51 |
|        floor        | 73.78 |  87.6 |
|         tree        | 68.12 | 88.24 |
|       ceiling       | 77.85 | 89.75 |
|         road        | 74.55 | 85.41 |
|         bed         | 81.63 | 91.22 |
|      windowpane     | 54.98 | 69.03 |
|        grass        | 65.37 | 81.02 |
|       cabinet       |  50.7 | 63.21 |
|       sidewalk      | 51.62 | 62.15 |
|        person       | 71.92 | 88.89 |
|        earth        | 31.15 | 53.28 |
|         door        | 31.73 |  39.7 |
|        table        | 49.88 | 68.04 |
|       mountain      | 47.95 | 61.22 |
|        plant        | 42.06 |  53.0 |
|       curtain       | 57.51 | 69.51 |
|        chair        | 45.58 | 55.48 |
|         car         |  78.7 | 89.82 |
|        water        | 48.75 | 63.67 |
|       painting      | 64.39 | 76.63 |
|         sofa        | 57.36 | 76.27 |
|        shelf        |  36.3 | 52.09 |
|        house        | 39.87 | 60.03 |
|         sea         | 41.17 | 63.98 |
|        mirror       | 50.33 |  61.1 |
|         rug         | 45.04 | 52.51 |
|        field        | 27.03 | 39.02 |
|       armchair      | 38.22 |  57.2 |
|         seat        | 56.02 | 71.27 |
|        fence        | 29.25 | 43.71 |
|         desk        |  37.5 | 65.54 |
|         rock        | 41.19 |  63.0 |
|       wardrobe      | 36.44 |  49.7 |
|         lamp        |  52.2 | 60.24 |
|       bathtub       | 64.86 | 70.66 |
|       railing       | 28.03 | 36.35 |
|       cushion       | 42.01 | 51.57 |
|         base        |  7.99 | 10.27 |
|         box         |  16.5 | 20.04 |
|        column       | 35.82 |  54.6 |
|      signboard      | 32.16 | 44.01 |
|   chest of drawers  | 30.48 | 41.35 |
|       counter       | 22.04 | 26.97 |
|         sand        | 42.27 | 60.13 |
|         sink        | 60.83 | 72.83 |
|      skyscraper     |  55.5 | 73.31 |
|      fireplace      | 61.19 | 68.11 |
|     refrigerator    | 61.45 | 75.66 |
|      grandstand     | 32.32 | 73.49 |
|         path        | 14.59 | 25.16 |
|        stairs       | 22.91 | 27.28 |
|        runway       | 68.09 | 76.87 |
|         case        | 45.08 | 54.45 |
|      pool table     | 84.28 | 88.05 |
|        pillow       | 44.55 | 60.47 |
|     screen door     | 35.78 | 36.65 |
|       stairway      | 25.91 |  43.4 |
|        river        | 13.23 | 19.26 |
|        bridge       |  52.2 | 61.51 |
|       bookcase      | 30.62 | 38.08 |
|        blind        | 26.87 | 28.83 |
|     coffee table    | 53.08 | 67.37 |
|        toilet       |  74.8 | 82.39 |
|        flower       | 35.89 |  54.2 |
|         book        |  42.5 | 54.72 |
|         hill        | 10.63 | 23.07 |
|        bench        | 32.36 | 37.81 |
|      countertop     | 51.86 | 67.61 |
|        stove        |  54.3 | 59.94 |
|         palm        | 46.46 |  57.3 |
|    kitchen island   | 22.49 | 33.32 |
|       computer      | 52.87 | 59.36 |
|     swivel chair    |  38.2 | 58.41 |
|         boat        | 36.52 | 45.33 |
|         bar         | 28.78 | 35.79 |
|    arcade machine   | 53.85 | 56.53 |
|        hovel        | 41.22 | 52.09 |
|         bus         | 74.16 | 80.86 |
|        towel        | 43.57 | 57.15 |
|        light        | 33.91 | 36.12 |
|        truck        | 17.09 | 23.24 |
|        tower        |  9.43 | 17.15 |
|      chandelier     |  56.3 | 71.25 |
|        awning       | 22.24 | 23.58 |
|     streetlight     |  19.3 | 22.79 |
|        booth        | 39.44 | 42.39 |
| television receiver | 49.71 | 58.61 |
|       airplane      |  51.5 | 62.98 |
|      dirt track     |  4.41 |  29.0 |
|       apparel       | 23.74 | 35.31 |
|         pole        | 11.77 |  16.6 |
|         land        |  2.97 |  4.63 |
|      bannister      |  7.39 |  8.84 |
|      escalator      | 13.55 | 15.32 |
|       ottoman       | 40.36 | 52.49 |
|        bottle       | 25.16 | 31.76 |
|        buffet       | 31.41 | 34.53 |
|        poster       | 19.69 | 23.03 |
|        stage        | 12.67 | 16.64 |
|         van         | 33.38 | 47.84 |
|         ship        |  4.66 |  6.61 |
|       fountain      |  17.4 | 19.89 |
|    conveyer belt    | 78.07 | 83.34 |
|        canopy       | 12.79 |  13.5 |
|        washer       | 65.31 | 68.14 |
|      plaything      | 15.92 |  21.4 |
|    swimming pool    | 59.27 | 82.88 |
|        stool        | 28.34 | 34.42 |
|        barrel       | 17.95 | 41.31 |
|        basket       | 20.15 | 21.72 |
|      waterfall      | 58.84 | 73.01 |
|         tent        | 66.73 | 98.46 |
|         bag         |  4.7  |  5.86 |
|       minibike      | 52.84 | 60.74 |
|        cradle       | 67.18 | 90.39 |
|         oven        | 30.87 | 43.17 |
|         ball        | 38.61 |  47.8 |
|         food        | 44.28 | 47.31 |
|         step        |  2.7  |  2.85 |
|         tank        | 48.18 | 50.23 |
|      trade name     | 13.03 | 14.01 |
|      microwave      | 47.88 | 51.47 |
|         pot         | 37.03 | 40.41 |
|        animal       | 51.91 | 56.21 |
|       bicycle       | 49.04 | 73.76 |
|         lake        | 35.75 | 37.08 |
|      dishwasher     | 48.38 | 57.29 |
|        screen       |  61.7 | 84.18 |
|       blanket       | 11.62 | 14.16 |
|      sculpture      | 46.58 | 66.46 |
|         hood        | 36.83 | 39.03 |
|        sconce       |  25.6 | 29.55 |
|         vase        | 29.44 | 43.53 |
|    traffic light    | 23.37 | 30.96 |
|         tray        |  7.53 | 13.92 |
|        ashcan       | 27.02 | 31.23 |
|         fan         | 51.21 |  63.4 |
|         pier        | 15.13 | 16.08 |
|      crt screen     |  3.75 | 10.22 |
|        plate        | 36.24 | 45.31 |
|       monitor       | 10.03 | 11.37 |
|    bulletin board   | 21.34 | 25.27 |
|        shower       |  0.21 |  1.15 |
|       radiator      | 22.37 | 23.71 |
|        glass        |  8.65 |  9.08 |
|        clock        |  27.0 | 33.38 |
|         flag        | 29.13 | 32.06 |
+---------------------+-------+-------+
09/15 13:40:36 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.5700  mIoU: 39.2300  mAcc: 49.2500  data_time: 0.0020  time: 0.2188
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
09/15 13:42:23 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 29889132
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 29889132
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:42:23 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/shot_noise'

09/15 13:43:08 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:43:08 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:43:09 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 13:43:10 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 13:45:07 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:16:15  time: 0.3976  data_time: 0.0036  memory: 19763  
09/15 13:45:37 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:46:42  time: 0.8565  data_time: 0.0022  memory: 19759  
09/15 13:45:57 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:34:19  time: 0.3798  data_time: 0.0036  memory: 19733  
09/15 13:46:23 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:28:55  time: 0.4408  data_time: 0.0019  memory: 19761  
09/15 13:46:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:20  time: 0.3502  data_time: 0.0018  memory: 19735  
09/15 13:47:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:41  time: 0.1739  data_time: 0.0019  memory: 19757  
09/15 13:47:37 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:58  time: 0.3586  data_time: 0.0019  memory: 19756  
09/15 13:47:57 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:09  time: 0.3489  data_time: 0.0017  memory: 19757  
09/15 13:48:09 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:09  time: 0.2491  data_time: 0.0018  memory: 19730  
09/15 13:48:20 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:30  time: 0.1571  data_time: 0.0018  memory: 19698  
09/15 13:48:33 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:10  time: 0.3310  data_time: 0.0019  memory: 19755  
09/15 13:48:44 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:59  time: 0.3404  data_time: 0.0019  memory: 19757  
09/15 13:49:01 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:08  time: 0.4548  data_time: 0.0017  memory: 19765  
09/15 13:49:19 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:26  time: 0.1712  data_time: 0.0020  memory: 19764  
09/15 13:49:39 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:49  time: 0.7854  data_time: 0.0018  memory: 19771  
09/15 13:49:49 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:58  time: 0.1588  data_time: 0.0020  memory: 19734  
09/15 13:49:58 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:11  time: 0.1766  data_time: 0.0021  memory: 556  
09/15 13:50:09 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:32  time: 0.2874  data_time: 0.0017  memory: 19722  
09/15 13:50:27 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:03  time: 0.4323  data_time: 0.0019  memory: 19753  
09/15 13:50:40 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:29  time: 0.1498  data_time: 0.0018  memory: 19754  
09/15 13:50:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:01  time: 0.5379  data_time: 0.0018  memory: 19772  
09/15 13:51:10 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:32  time: 0.1554  data_time: 0.0018  memory: 19736  
09/15 13:51:21 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:02  time: 0.2589  data_time: 0.0018  memory: 19711  
09/15 13:51:29 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:32  time: 0.1668  data_time: 0.0025  memory: 1752  
09/15 13:51:41 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:06  time: 0.2527  data_time: 0.0017  memory: 19739  
09/15 13:51:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:39  time: 0.1628  data_time: 0.0018  memory: 556  
09/15 13:51:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:14  time: 0.1572  data_time: 0.0018  memory: 19691  
09/15 13:52:14 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:52  time: 0.3546  data_time: 0.0018  memory: 19744  
09/15 13:52:24 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:30  time: 0.2957  data_time: 0.0018  memory: 19722  
09/15 13:52:32 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:07  time: 0.1477  data_time: 0.0017  memory: 556  
09/15 13:52:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:46  time: 0.1657  data_time: 0.0018  memory: 19749  
09/15 13:52:50 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:24  time: 0.1536  data_time: 0.0019  memory: 547  
09/15 13:53:02 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:05  time: 0.1632  data_time: 0.0028  memory: 19754  
09/15 13:53:14 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:46  time: 0.1609  data_time: 0.0019  memory: 19726  
09/15 13:53:26 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:27  time: 0.1621  data_time: 0.0017  memory: 19744  
09/15 13:53:35 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:09  time: 0.1660  data_time: 0.0019  memory: 19696  
09/15 13:53:43 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:51  time: 0.1699  data_time: 0.0020  memory: 505  
09/15 13:53:53 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:33  time: 0.1640  data_time: 0.0019  memory: 19765  
09/15 13:54:03 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.1741  data_time: 0.0021  memory: 19705  
09/15 13:54:14 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1438  data_time: 0.0015  memory: 19767  
09/15 13:54:14 - mmengine - INFO - per class results:
09/15 13:54:14 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 67.94 | 86.87 |
|       building      | 78.33 | 88.92 |
|         sky         | 91.75 | 95.02 |
|        floor        | 74.55 | 88.02 |
|         tree        | 68.48 |  88.4 |
|       ceiling       | 77.18 | 89.93 |
|         road        | 74.53 | 86.14 |
|         bed         |  81.0 | 89.98 |
|      windowpane     | 53.28 | 67.37 |
|        grass        | 67.67 | 84.45 |
|       cabinet       | 50.73 | 62.83 |
|       sidewalk      | 50.06 | 60.05 |
|        person       | 72.37 | 89.29 |
|        earth        | 31.27 | 53.33 |
|         door        | 30.33 | 37.23 |
|        table        | 50.84 | 69.69 |
|       mountain      | 47.65 |  61.7 |
|        plant        | 42.23 | 52.32 |
|       curtain       | 56.68 | 68.61 |
|        chair        | 46.77 | 57.66 |
|         car         | 79.53 | 89.72 |
|        water        | 50.06 |  66.1 |
|       painting      | 65.17 | 76.73 |
|         sofa        | 55.61 | 74.48 |
|        shelf        | 35.76 | 51.15 |
|        house        | 38.13 | 55.88 |
|         sea         | 43.27 | 65.62 |
|        mirror       |  50.3 |  60.4 |
|         rug         | 45.54 | 52.38 |
|        field        | 26.57 |  38.8 |
|       armchair      | 38.11 | 59.03 |
|         seat        |  56.2 | 72.35 |
|        fence        |  28.6 | 43.05 |
|         desk        |  40.6 | 68.95 |
|         rock        | 39.81 | 60.94 |
|       wardrobe      | 35.44 | 47.12 |
|         lamp        | 50.22 | 58.02 |
|       bathtub       | 57.42 | 63.24 |
|       railing       | 28.61 | 36.39 |
|       cushion       | 42.71 | 52.41 |
|         base        | 11.97 | 15.21 |
|         box         | 14.53 | 18.07 |
|        column       | 38.51 | 56.63 |
|      signboard      | 32.17 | 43.47 |
|   chest of drawers  | 31.66 | 44.99 |
|       counter       | 23.45 | 27.34 |
|         sand        | 34.88 | 49.37 |
|         sink        |  58.4 | 69.57 |
|      skyscraper     | 57.18 | 74.84 |
|      fireplace      | 58.12 | 66.49 |
|     refrigerator    | 62.09 | 73.42 |
|      grandstand     | 32.38 | 73.45 |
|         path        | 13.09 | 22.79 |
|        stairs       |  22.0 | 26.08 |
|        runway       | 65.03 |  67.4 |
|         case        | 46.17 |  55.6 |
|      pool table     | 85.11 | 89.02 |
|        pillow       | 42.16 | 58.56 |
|     screen door     | 39.46 | 40.57 |
|       stairway      | 26.96 | 45.31 |
|        river        | 19.77 | 27.48 |
|        bridge       | 45.56 | 51.77 |
|       bookcase      | 29.01 | 36.65 |
|        blind        | 25.45 | 27.37 |
|     coffee table    | 54.54 | 69.71 |
|        toilet       | 71.27 | 80.88 |
|        flower       | 36.85 | 53.65 |
|         book        | 42.72 | 54.54 |
|         hill        | 12.41 | 23.66 |
|        bench        | 33.48 | 38.03 |
|      countertop     | 47.72 | 65.01 |
|        stove        | 49.07 | 54.74 |
|         palm        | 46.32 | 55.43 |
|    kitchen island   | 22.02 | 33.97 |
|       computer      | 51.06 | 57.19 |
|     swivel chair    | 37.63 | 56.86 |
|         boat        | 40.88 | 50.08 |
|         bar         | 30.27 |  41.4 |
|    arcade machine   | 36.69 | 38.65 |
|        hovel        | 43.38 | 55.19 |
|         bus         | 74.43 |  81.1 |
|        towel        | 40.83 | 50.65 |
|        light        | 30.88 | 32.59 |
|        truck        | 21.36 | 27.77 |
|        tower        |  9.68 | 17.29 |
|      chandelier     | 53.18 |  69.8 |
|        awning       | 21.55 | 22.64 |
|     streetlight     | 18.86 | 22.81 |
|        booth        | 43.84 |  44.8 |
| television receiver | 54.99 | 63.83 |
|       airplane      | 53.46 |  62.2 |
|      dirt track     |  4.41 | 26.83 |
|       apparel       | 22.38 | 36.09 |
|         pole        | 14.75 |  21.1 |
|         land        |  0.93 |  1.41 |
|      bannister      |  7.43 |  9.08 |
|      escalator      | 15.64 | 16.21 |
|       ottoman       | 37.01 | 48.18 |
|        bottle       | 24.69 | 31.62 |
|        buffet       | 32.78 | 36.08 |
|        poster       | 23.24 | 25.79 |
|        stage        | 12.54 | 16.02 |
|         van         | 33.01 | 46.97 |
|         ship        |  4.63 |  6.36 |
|       fountain      | 16.81 | 18.91 |
|    conveyer belt    | 81.41 | 85.12 |
|        canopy       |  9.08 |  9.51 |
|        washer       | 64.28 | 68.51 |
|      plaything      | 13.05 | 17.74 |
|    swimming pool    | 52.85 | 84.58 |
|        stool        | 29.67 | 38.08 |
|        barrel       | 27.64 | 59.44 |
|        basket       | 20.97 | 22.91 |
|      waterfall      | 59.86 | 68.63 |
|         tent        | 70.52 | 98.71 |
|         bag         |  4.91 |  6.0  |
|       minibike      | 52.01 |  59.0 |
|        cradle       | 66.49 | 90.56 |
|         oven        | 29.39 | 46.49 |
|         ball        | 38.25 | 47.71 |
|         food        | 39.43 |  41.6 |
|         step        |  2.72 |  2.93 |
|         tank        | 49.36 | 51.62 |
|      trade name     | 12.36 | 13.13 |
|      microwave      | 36.76 | 39.31 |
|         pot         | 34.26 | 38.27 |
|        animal       | 52.17 | 54.78 |
|       bicycle       | 46.22 | 74.28 |
|         lake        | 26.94 | 28.18 |
|      dishwasher     | 48.93 | 57.15 |
|        screen       | 63.78 |  84.2 |
|       blanket       | 10.83 | 12.24 |
|      sculpture      | 50.65 | 72.65 |
|         hood        | 37.97 | 40.39 |
|        sconce       | 17.24 | 19.79 |
|         vase        |  29.8 |  43.6 |
|    traffic light    | 23.75 | 30.38 |
|         tray        |  7.13 | 12.26 |
|        ashcan       | 29.47 | 34.71 |
|         fan         | 50.47 | 61.97 |
|         pier        |  13.9 |  15.0 |
|      crt screen     |  2.5  |  7.66 |
|        plate        | 34.67 | 43.04 |
|       monitor       |  6.64 |  7.59 |
|    bulletin board   | 28.01 | 32.52 |
|        shower       |  0.92 |  2.34 |
|       radiator      | 19.08 | 20.32 |
|        glass        |  9.15 |  9.65 |
|        clock        | 23.92 | 29.81 |
|         flag        | 28.77 | 31.88 |
+---------------------+-------+-------+
09/15 13:54:14 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.5100  mIoU: 38.8300  mAcc: 48.7600  data_time: 0.0024  time: 0.3321
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
09/15 13:54:29 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 427412490
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 427412490
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:54:29 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/impulse_noise'

09/15 13:54:39 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:54:40 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:54:40 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 13:54:41 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 13:55:32 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:20  time: 0.2777  data_time: 0.0018  memory: 19763  
09/15 13:55:57 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:24:08  time: 0.7367  data_time: 0.0019  memory: 19759  
09/15 13:56:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:32  time: 0.2485  data_time: 0.0018  memory: 19733  
09/15 13:56:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:44  time: 0.3481  data_time: 0.0026  memory: 19761  
09/15 13:56:52 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:17  time: 0.2374  data_time: 0.0018  memory: 19735  
09/15 13:57:11 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:09  time: 0.0672  data_time: 0.0019  memory: 19757  
09/15 13:57:33 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:29  time: 0.2785  data_time: 0.0019  memory: 19756  
09/15 13:57:48 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:28  time: 0.2600  data_time: 0.0018  memory: 19757  
09/15 13:57:55 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:07  time: 0.1530  data_time: 0.0016  memory: 19730  
09/15 13:58:01 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:00  time: 0.0593  data_time: 0.0018  memory: 19698  
09/15 13:58:08 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:05  time: 0.2247  data_time: 0.0020  memory: 19755  
09/15 13:58:14 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:18  time: 0.2412  data_time: 0.0022  memory: 19757  
09/15 13:58:26 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:47  time: 0.3413  data_time: 0.0017  memory: 19765  
09/15 13:58:39 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:22  time: 0.0662  data_time: 0.0019  memory: 19764  
09/15 13:58:55 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:02  time: 0.6931  data_time: 0.0017  memory: 19771  
09/15 13:59:00 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:27  time: 0.0600  data_time: 0.0019  memory: 19734  
09/15 13:59:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:54  time: 0.0673  data_time: 0.0021  memory: 556  
09/15 13:59:09 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:27  time: 0.1921  data_time: 0.0017  memory: 19722  
09/15 13:59:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:10  time: 0.3337  data_time: 0.0017  memory: 19753  
09/15 13:59:29 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:48  time: 0.0574  data_time: 0.0017  memory: 19754  
09/15 13:59:40 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:30  time: 0.4358  data_time: 0.0017  memory: 19772  
09/15 13:59:49 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:12  time: 0.0561  data_time: 0.0016  memory: 19736  
09/15 13:59:55 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:52  time: 0.1544  data_time: 0.0016  memory: 19711  
09/15 13:59:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:31  time: 0.0562  data_time: 0.0016  memory: 1752  
09/15 14:00:05 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:14  time: 0.1732  data_time: 0.0016  memory: 19739  
09/15 14:00:08 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:56  time: 0.0596  data_time: 0.0018  memory: 556  
09/15 14:00:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:39  time: 0.0640  data_time: 0.0019  memory: 19691  
09/15 14:00:23 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:26  time: 0.2457  data_time: 0.0017  memory: 19744  
09/15 14:00:28 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:11  time: 0.1890  data_time: 0.0017  memory: 19722  
09/15 14:00:31 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:56  time: 0.0547  data_time: 0.0016  memory: 556  
09/15 14:00:36 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:43  time: 0.0563  data_time: 0.0016  memory: 19749  
09/15 14:00:39 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:29  time: 0.0578  data_time: 0.0018  memory: 547  
09/15 14:00:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:17  time: 0.0556  data_time: 0.0016  memory: 19754  
09/15 14:00:54 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:05  time: 0.0602  data_time: 0.0019  memory: 19726  
09/15 14:01:00 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:54  time: 0.0595  data_time: 0.0016  memory: 19744  
09/15 14:01:04 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:42  time: 0.0593  data_time: 0.0018  memory: 19696  
09/15 14:01:07 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0636  data_time: 0.0019  memory: 505  
09/15 14:01:11 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0643  data_time: 0.0018  memory: 19765  
09/15 14:01:17 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0643  data_time: 0.0018  memory: 19705  
09/15 14:01:23 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0506  data_time: 0.0015  memory: 19767  
09/15 14:01:23 - mmengine - INFO - per class results:
09/15 14:01:23 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 64.26 | 86.81 |
|       building      | 76.65 | 86.83 |
|         sky         | 87.97 | 90.52 |
|        floor        | 69.66 | 84.13 |
|         tree        | 61.49 | 89.18 |
|       ceiling       | 74.96 | 88.52 |
|         road        | 72.34 | 81.79 |
|         bed         | 76.52 | 89.72 |
|      windowpane     | 52.44 | 65.24 |
|        grass        | 61.12 | 83.48 |
|       cabinet       | 45.26 |  54.0 |
|       sidewalk      | 49.38 | 59.54 |
|        person       | 68.56 | 87.09 |
|        earth        |  29.3 |  51.3 |
|         door        | 24.03 |  28.6 |
|        table        | 46.47 | 64.68 |
|       mountain      | 45.96 | 58.88 |
|        plant        | 39.21 | 48.72 |
|       curtain       | 51.65 | 68.38 |
|        chair        | 43.49 | 52.88 |
|         car         | 75.39 | 89.32 |
|        water        | 44.69 | 62.44 |
|       painting      | 59.85 |  73.7 |
|         sofa        |  51.6 | 72.33 |
|        shelf        | 31.86 | 45.44 |
|        house        | 39.44 | 58.27 |
|         sea         | 31.74 | 47.53 |
|        mirror       | 45.14 | 57.13 |
|         rug         |  39.5 | 43.31 |
|        field        | 19.21 | 26.92 |
|       armchair      | 33.75 |  52.6 |
|         seat        | 51.43 | 65.03 |
|        fence        | 30.07 | 51.72 |
|         desk        | 34.42 | 49.35 |
|         rock        | 43.64 | 69.68 |
|       wardrobe      | 23.85 | 30.97 |
|         lamp        | 46.02 | 52.71 |
|       bathtub       | 46.22 | 49.65 |
|       railing       | 24.26 | 30.37 |
|       cushion       | 37.92 | 46.32 |
|         base        |  9.59 | 12.13 |
|         box         | 12.85 | 17.72 |
|        column       | 30.66 | 50.83 |
|      signboard      | 28.93 | 45.66 |
|   chest of drawers  | 27.21 |  35.0 |
|       counter       | 17.34 | 20.42 |
|         sand        |  27.2 | 39.64 |
|         sink        | 50.32 | 70.35 |
|      skyscraper     | 50.04 | 66.54 |
|      fireplace      | 37.44 |  40.3 |
|     refrigerator    | 51.01 | 58.17 |
|      grandstand     |  35.3 | 81.35 |
|         path        | 15.02 | 24.19 |
|        stairs       | 22.87 | 33.73 |
|        runway       | 42.29 | 42.87 |
|         case        | 34.07 | 39.63 |
|      pool table     | 79.32 | 84.16 |
|        pillow       | 39.61 | 58.17 |
|     screen door     | 20.41 | 21.91 |
|       stairway      | 27.63 | 42.23 |
|        river        | 16.75 | 20.55 |
|        bridge       | 52.35 | 59.22 |
|       bookcase      | 15.28 | 16.52 |
|        blind        | 18.03 | 18.68 |
|     coffee table    | 50.57 | 62.67 |
|        toilet       | 64.85 | 71.23 |
|        flower       | 35.92 |  45.1 |
|         book        | 27.73 | 32.71 |
|         hill        | 12.46 |  24.0 |
|        bench        | 34.98 | 41.05 |
|      countertop     | 47.81 | 64.81 |
|        stove        | 47.91 | 53.95 |
|         palm        | 45.16 | 56.32 |
|    kitchen island   | 16.25 | 20.13 |
|       computer      | 51.62 | 56.86 |
|     swivel chair    | 33.85 | 47.85 |
|         boat        | 32.85 | 37.12 |
|         bar         | 17.15 | 21.21 |
|    arcade machine   | 28.44 | 29.88 |
|        hovel        | 29.85 | 51.68 |
|         bus         | 70.23 | 75.01 |
|        towel        | 36.21 |  42.8 |
|        light        | 28.94 | 31.05 |
|        truck        | 25.25 | 32.39 |
|        tower        |  7.63 | 13.66 |
|      chandelier     |  52.0 | 63.15 |
|        awning       | 19.02 | 19.49 |
|     streetlight     | 18.27 | 21.74 |
|        booth        |  38.6 | 39.48 |
| television receiver | 39.55 | 46.57 |
|       airplane      | 49.12 | 64.01 |
|      dirt track     |  3.17 | 22.13 |
|       apparel       | 22.34 | 32.92 |
|         pole        | 11.91 | 18.77 |
|         land        |  4.43 |  5.85 |
|      bannister      |  8.47 | 10.79 |
|      escalator      | 21.88 | 27.23 |
|       ottoman       |  34.6 | 41.76 |
|        bottle       | 17.65 | 20.31 |
|        buffet       | 28.69 | 31.64 |
|        poster       |  5.55 |  5.75 |
|        stage        |  7.64 |  8.98 |
|         van         | 31.53 | 46.56 |
|         ship        |  6.31 |  6.44 |
|       fountain      | 16.22 | 19.13 |
|    conveyer belt    | 73.81 | 77.77 |
|        canopy       |  7.26 |  7.77 |
|        washer       | 55.91 | 66.04 |
|      plaything      |  10.2 | 14.83 |
|    swimming pool    | 56.47 | 83.46 |
|        stool        | 30.27 | 38.02 |
|        barrel       |  1.56 |  6.08 |
|        basket       | 17.04 | 18.12 |
|      waterfall      | 54.21 | 66.21 |
|         tent        | 69.84 | 98.52 |
|         bag         |  2.71 |  3.5  |
|       minibike      | 35.08 | 41.19 |
|        cradle       | 61.73 | 74.91 |
|         oven        |  25.7 | 37.82 |
|         ball        | 29.41 | 39.47 |
|         food        | 45.24 | 49.06 |
|         step        |  0.69 |  0.75 |
|         tank        | 41.86 | 44.26 |
|      trade name     | 11.07 | 11.56 |
|      microwave      | 32.52 | 34.73 |
|         pot         | 25.15 | 27.06 |
|        animal       | 53.98 |  58.6 |
|       bicycle       | 43.17 | 74.05 |
|         lake        |  0.22 |  0.22 |
|      dishwasher     | 31.05 | 31.66 |
|        screen       | 65.39 |  76.9 |
|       blanket       |  7.27 |  7.52 |
|      sculpture      | 31.53 | 51.14 |
|         hood        | 34.57 | 36.71 |
|        sconce       | 21.31 | 25.37 |
|         vase        | 29.19 | 42.59 |
|    traffic light    | 24.26 | 29.18 |
|         tray        |  7.14 | 18.46 |
|        ashcan       | 22.66 | 24.84 |
|         fan         | 48.19 | 59.02 |
|         pier        | 12.59 | 13.35 |
|      crt screen     |  0.41 |  1.46 |
|        plate        | 36.13 | 44.47 |
|       monitor       |  5.55 |  6.42 |
|    bulletin board   | 24.63 | 27.82 |
|        shower       |  0.36 |  2.26 |
|       radiator      | 23.34 | 24.89 |
|        glass        |  8.22 |  8.54 |
|        clock        | 16.01 | 20.15 |
|         flag        |  27.9 | 29.96 |
+---------------------+-------+-------+
09/15 14:01:23 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 74.6400  mIoU: 34.3800  mAcc: 43.4400  data_time: 0.0020  time: 0.2012
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
09/15 14:01:32 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 493922018
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 493922018
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:01:32 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/defocus_blur'

09/15 14:01:39 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:01:39 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:01:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 14:01:40 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 14:02:31 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:24  time: 0.2787  data_time: 0.0018  memory: 19763  
09/15 14:02:57 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:24:22  time: 0.7486  data_time: 0.0021  memory: 19759  
09/15 14:03:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:47  time: 0.2599  data_time: 0.0019  memory: 19733  
09/15 14:03:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:59  time: 0.3434  data_time: 0.0039  memory: 19761  
09/15 14:03:53 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:32  time: 0.2415  data_time: 0.0018  memory: 19735  
09/15 14:04:12 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:22  time: 0.0725  data_time: 0.0019  memory: 19757  
09/15 14:04:34 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:40  time: 0.2781  data_time: 0.0017  memory: 19756  
09/15 14:04:49 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:39  time: 0.2672  data_time: 0.0018  memory: 19757  
09/15 14:04:57 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:18  time: 0.1671  data_time: 0.0018  memory: 19730  
09/15 14:05:04 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:12  time: 0.0662  data_time: 0.0017  memory: 19698  
09/15 14:05:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:16  time: 0.2339  data_time: 0.0019  memory: 19755  
09/15 14:05:18 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:28  time: 0.2493  data_time: 0.0021  memory: 19757  
09/15 14:05:30 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:57  time: 0.3539  data_time: 0.0017  memory: 19765  
09/15 14:05:44 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:33  time: 0.0775  data_time: 0.0020  memory: 19764  
09/15 14:05:59 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:12  time: 0.7013  data_time: 0.0017  memory: 19771  
09/15 14:06:05 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:37  time: 0.0627  data_time: 0.0018  memory: 19734  
09/15 14:06:08 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:03  time: 0.0661  data_time: 0.0018  memory: 556  
09/15 14:06:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:36  time: 0.1976  data_time: 0.0015  memory: 19722  
09/15 14:06:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:18  time: 0.3445  data_time: 0.0018  memory: 19753  
09/15 14:06:36 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:56  time: 0.0631  data_time: 0.0017  memory: 19754  
09/15 14:06:47 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:38  time: 0.4450  data_time: 0.0018  memory: 19772  
09/15 14:06:57 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:19  time: 0.0763  data_time: 0.0019  memory: 19736  
09/15 14:07:03 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:59  time: 0.1819  data_time: 0.0028  memory: 19711  
09/15 14:07:07 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:38  time: 0.0669  data_time: 0.0017  memory: 1752  
09/15 14:07:14 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:20  time: 0.1790  data_time: 0.0017  memory: 19739  
09/15 14:07:17 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:01  time: 0.0684  data_time: 0.0017  memory: 556  
09/15 14:07:22 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:44  time: 0.0624  data_time: 0.0015  memory: 19691  
09/15 14:07:32 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:31  time: 0.2522  data_time: 0.0026  memory: 19744  
09/15 14:07:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:16  time: 0.1972  data_time: 0.0017  memory: 19722  
09/15 14:07:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:00  time: 0.0629  data_time: 0.0016  memory: 556  
09/15 14:07:47 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:46  time: 0.0693  data_time: 0.0017  memory: 19749  
09/15 14:07:50 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:32  time: 0.0648  data_time: 0.0017  memory: 547  
09/15 14:07:58 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:20  time: 0.0644  data_time: 0.0016  memory: 19754  
09/15 14:08:05 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:08  time: 0.0716  data_time: 0.0020  memory: 19726  
09/15 14:08:12 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:56  time: 0.0651  data_time: 0.0015  memory: 19744  
09/15 14:08:16 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:44  time: 0.0639  data_time: 0.0018  memory: 19696  
09/15 14:08:20 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:32  time: 0.0666  data_time: 0.0018  memory: 505  
09/15 14:08:25 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:21  time: 0.0651  data_time: 0.0017  memory: 19765  
09/15 14:08:30 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0676  data_time: 0.0032  memory: 19705  
09/15 14:08:37 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0704  data_time: 0.0017  memory: 19767  
09/15 14:08:37 - mmengine - INFO - per class results:
09/15 14:08:37 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.09 | 87.12 |
|       building      | 79.65 | 92.33 |
|         sky         | 93.51 | 96.57 |
|        floor        | 77.97 | 89.24 |
|         tree        | 71.57 |  85.4 |
|       ceiling       | 81.12 | 89.13 |
|         road        | 80.51 |  89.5 |
|         bed         | 85.13 | 94.23 |
|      windowpane     | 56.82 | 74.49 |
|        grass        | 68.88 | 85.19 |
|       cabinet       | 55.72 | 69.83 |
|       sidewalk      | 59.43 | 74.96 |
|        person       | 73.24 | 87.69 |
|        earth        | 34.48 | 47.46 |
|         door        | 37.09 | 47.55 |
|        table        | 53.38 | 71.74 |
|       mountain      |  54.5 | 71.25 |
|        plant        | 46.11 | 59.96 |
|       curtain       | 68.05 | 81.82 |
|        chair        | 49.07 | 65.13 |
|         car         | 80.08 | 91.44 |
|        water        |  51.0 |  63.2 |
|       painting      | 64.21 | 82.03 |
|         sofa        | 61.12 | 78.95 |
|        shelf        | 38.97 | 57.75 |
|        house        | 33.23 | 45.84 |
|         sea         | 47.47 | 67.74 |
|        mirror       | 58.29 | 67.62 |
|         rug         | 59.66 | 71.99 |
|        field        | 23.47 | 36.84 |
|       armchair      | 39.56 | 53.45 |
|         seat        | 58.91 | 75.46 |
|        fence        | 32.82 | 45.73 |
|         desk        | 43.47 |  65.9 |
|         rock        | 37.08 | 61.48 |
|       wardrobe      | 47.01 |  61.5 |
|         lamp        | 54.85 | 69.71 |
|       bathtub       | 72.94 | 78.47 |
|       railing       | 34.72 | 47.36 |
|       cushion       |  47.6 | 58.14 |
|         base        | 20.98 |  31.9 |
|         box         | 16.61 |  20.0 |
|        column       | 39.84 | 54.27 |
|      signboard      | 28.77 | 38.79 |
|   chest of drawers  | 30.43 | 43.64 |
|       counter       | 20.71 | 23.94 |
|         sand        | 29.49 | 46.58 |
|         sink        | 60.35 |  72.2 |
|      skyscraper     | 52.21 | 60.86 |
|      fireplace      | 69.06 | 81.52 |
|     refrigerator    | 65.39 | 78.47 |
|      grandstand     | 31.56 | 58.76 |
|         path        | 20.15 | 30.03 |
|        stairs       | 15.38 |  18.2 |
|        runway       |  65.2 | 86.54 |
|         case        | 48.74 | 58.55 |
|      pool table     | 83.35 | 94.25 |
|        pillow       | 50.11 | 61.06 |
|     screen door     | 63.32 | 69.96 |
|       stairway      |  27.0 | 41.03 |
|        river        |  5.95 | 11.58 |
|        bridge       | 37.65 | 46.06 |
|       bookcase      |  36.9 | 58.57 |
|        blind        | 29.15 |  30.0 |
|     coffee table    | 53.38 | 75.92 |
|        toilet       | 78.14 | 87.41 |
|        flower       |  30.1 | 46.56 |
|         book        | 41.08 | 57.86 |
|         hill        |  9.22 | 13.27 |
|        bench        | 45.06 | 62.15 |
|      countertop     | 53.18 | 71.39 |
|        stove        | 65.74 | 75.72 |
|         palm        | 43.65 |  55.4 |
|    kitchen island   | 33.85 | 58.09 |
|       computer      | 54.54 | 63.02 |
|     swivel chair    | 38.91 |  58.0 |
|         boat        | 63.83 | 85.27 |
|         bar         | 23.76 | 32.12 |
|    arcade machine   | 81.42 | 94.79 |
|        hovel        | 14.91 | 16.56 |
|         bus         | 72.79 | 87.32 |
|        towel        | 56.16 | 68.94 |
|        light        | 46.72 | 54.79 |
|        truck        | 16.51 | 21.79 |
|        tower        |  5.18 |  8.06 |
|      chandelier     | 60.42 | 72.88 |
|        awning       |  24.1 | 28.71 |
|     streetlight     | 16.45 | 23.29 |
|        booth        | 45.05 | 54.36 |
| television receiver | 57.25 |  70.7 |
|       airplane      | 49.16 | 62.26 |
|      dirt track     | 24.56 | 40.85 |
|       apparel       | 27.38 | 45.07 |
|         pole        |  9.94 | 11.34 |
|         land        |  2.84 |  4.68 |
|      bannister      |  9.17 | 12.51 |
|      escalator      | 29.27 | 34.56 |
|       ottoman       | 34.73 | 50.59 |
|        bottle       | 27.19 | 40.52 |
|        buffet       | 43.38 | 49.01 |
|        poster       | 31.11 | 38.73 |
|        stage        |  9.75 | 16.83 |
|         van         | 33.25 | 40.44 |
|         ship        |  1.0  |  1.0  |
|       fountain      | 20.98 | 21.51 |
|    conveyer belt    | 82.39 | 87.13 |
|        canopy       | 19.69 | 22.56 |
|        washer       | 68.75 | 71.36 |
|      plaything      | 15.05 | 31.62 |
|    swimming pool    | 63.71 |  81.1 |
|        stool        | 28.95 | 35.12 |
|        barrel       | 38.05 | 64.74 |
|        basket       | 19.72 |  24.0 |
|      waterfall      | 55.95 |  84.2 |
|         tent        | 66.22 | 97.27 |
|         bag         |  6.5  |  8.17 |
|       minibike      | 54.36 | 68.15 |
|        cradle       | 64.87 | 95.19 |
|         oven        | 32.73 | 47.31 |
|         ball        | 45.51 | 50.56 |
|         food        | 41.03 | 45.44 |
|         step        |  8.2  |  8.73 |
|         tank        | 42.94 | 47.35 |
|      trade name     | 17.14 |  18.6 |
|      microwave      | 38.59 | 41.84 |
|         pot         | 34.11 | 39.19 |
|        animal       | 42.39 | 46.85 |
|       bicycle       | 46.73 | 59.01 |
|         lake        | 31.39 | 63.08 |
|      dishwasher     |  51.5 | 59.11 |
|        screen       | 66.15 | 86.34 |
|       blanket       |  3.96 |  4.86 |
|      sculpture      | 40.11 | 50.88 |
|         hood        | 52.61 | 60.79 |
|        sconce       |  37.0 | 45.86 |
|         vase        | 25.59 | 35.68 |
|    traffic light    | 24.38 | 38.56 |
|         tray        |  3.53 |  5.32 |
|        ashcan       | 36.39 | 42.35 |
|         fan         | 55.01 | 68.25 |
|         pier        | 29.66 | 54.31 |
|      crt screen     | 14.68 | 23.29 |
|        plate        | 29.04 | 39.79 |
|       monitor       | 42.77 | 52.76 |
|    bulletin board   | 26.76 | 40.54 |
|        shower       |  0.86 |  1.46 |
|       radiator      | 43.34 | 46.36 |
|        glass        |  4.66 |  4.89 |
|        clock        | 30.05 | 33.83 |
|         flag        | 28.85 | 32.51 |
+---------------------+-------+-------+
09/15 14:08:37 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.0700  mIoU: 42.2100  mAcc: 53.5900  data_time: 0.0021  time: 0.2088
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
09/15 14:08:44 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2102356194
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2102356194
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:08:44 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/glass_blur'

09/15 14:08:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:08:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:08:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 14:08:50 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 14:15:39 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:25:27  time: 7.7966  data_time: 0.0027  memory: 19763  
09/15 14:21:54 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:08:12  time: 7.9325  data_time: 0.0036  memory: 19759  
09/15 14:27:59 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:56:12  time: 7.4226  data_time: 0.0020  memory: 19733  
09/15 14:34:17 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:48:59  time: 7.3119  data_time: 0.0029  memory: 19761  
09/15 14:40:14 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:39:46  time: 7.0838  data_time: 0.0027  memory: 19735  
09/15 14:46:08 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:31:18  time: 7.1999  data_time: 0.0035  memory: 19757  
09/15 14:52:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:24:22  time: 6.7661  data_time: 0.0028  memory: 19756  
09/15 14:58:03 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:16:52  time: 6.9789  data_time: 0.0015  memory: 19757  
09/15 15:03:06 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:06:55  time: 6.1897  data_time: 0.0015  memory: 19730  
09/15 15:08:46 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:59:48  time: 6.6801  data_time: 0.0027  memory: 19698  
09/15 15:14:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:54:10  time: 7.4372  data_time: 0.0030  memory: 19755  
09/15 15:20:37 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:47:29  time: 7.1875  data_time: 0.0024  memory: 19757  
09/15 15:26:24 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:41:04  time: 7.1487  data_time: 0.0054  memory: 19765  
09/15 15:32:32 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:35:25  time: 7.0985  data_time: 0.0032  memory: 19764  
09/15 15:38:32 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:29:30  time: 7.3164  data_time: 0.0031  memory: 19771  
09/15 15:43:58 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:22:41  time: 6.9458  data_time: 0.0094  memory: 19734  
09/15 15:49:44 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:16:30  time: 7.2640  data_time: 0.0032  memory: 556  
09/15 15:55:07 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:09:53  time: 6.2451  data_time: 0.0035  memory: 19722  
09/15 16:01:04 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:04:02  time: 6.9849  data_time: 0.0024  memory: 19753  
09/15 16:06:36 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:57:46  time: 6.5530  data_time: 0.0030  memory: 19754  
09/15 16:12:34 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:51:56  time: 7.5138  data_time: 0.0064  memory: 19772  
09/15 16:18:24 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:46:00  time: 6.7166  data_time: 0.0041  memory: 19736  
09/15 16:24:04 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:39:56  time: 6.9111  data_time: 0.0025  memory: 19711  
09/15 16:29:51 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:34:00  time: 6.6733  data_time: 0.0030  memory: 1752  
09/15 16:35:27 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:27:58  time: 6.7614  data_time: 0.0030  memory: 19739  
09/15 16:40:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:21:49  time: 6.8624  data_time: 0.0023  memory: 556  
09/15 16:46:28 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:15:53  time: 6.3713  data_time: 0.0034  memory: 19691  
09/15 16:52:12 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:10:00  time: 6.9709  data_time: 0.0016  memory: 19744  
09/15 16:57:26 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:03:56  time: 6.9194  data_time: 0.0015  memory: 19722  
09/15 17:02:56 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:58:02  time: 6.3788  data_time: 0.0025  memory: 556  
09/15 17:08:54 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:52:16  time: 6.9938  data_time: 0.0037  memory: 19749  
09/15 17:14:25 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:46:23  time: 6.7284  data_time: 0.0030  memory: 547  
09/15 17:20:03 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:40:33  time: 6.2702  data_time: 0.0043  memory: 19754  
09/15 17:25:55 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:34:46  time: 6.8853  data_time: 0.0031  memory: 19726  
09/15 17:31:48 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:28:59  time: 6.8058  data_time: 0.0033  memory: 19744  
09/15 17:37:17 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:23:09  time: 6.9481  data_time: 0.0038  memory: 19696  
09/15 17:43:00 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:17:21  time: 6.8030  data_time: 0.0027  memory: 505  
09/15 17:48:29 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:11:33  time: 7.0585  data_time: 0.0044  memory: 19765  
09/15 17:54:17 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:46  time: 6.6649  data_time: 0.0025  memory: 19705  
09/15 17:59:50 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 6.2887  data_time: 0.0025  memory: 19767  
09/15 17:59:50 - mmengine - INFO - per class results:
09/15 17:59:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  72.5 | 87.72 |
|       building      |  79.4 |  90.9 |
|         sky         | 93.64 | 97.35 |
|        floor        | 78.17 | 89.18 |
|         tree        | 71.36 | 86.17 |
|       ceiling       | 81.04 | 89.81 |
|         road        | 79.98 | 88.16 |
|         bed         | 83.75 | 92.71 |
|      windowpane     | 56.36 | 72.48 |
|        grass        | 67.94 | 85.21 |
|       cabinet       | 52.59 | 63.24 |
|       sidewalk      | 59.09 |  72.4 |
|        person       | 74.49 | 89.13 |
|        earth        | 31.95 | 46.02 |
|         door        | 36.07 | 44.67 |
|        table        |  52.0 | 70.46 |
|       mountain      | 51.14 | 68.67 |
|        plant        | 46.47 | 59.68 |
|       curtain       | 65.54 | 83.16 |
|        chair        | 47.88 | 64.52 |
|         car         | 80.91 | 89.16 |
|        water        | 49.84 | 64.35 |
|       painting      | 67.88 | 80.37 |
|         sofa        | 62.83 | 80.86 |
|        shelf        | 40.58 | 63.91 |
|        house        | 45.99 | 65.56 |
|         sea         | 45.95 | 72.25 |
|        mirror       | 55.02 | 71.97 |
|         rug         | 63.26 | 75.65 |
|        field        | 26.43 | 42.64 |
|       armchair      | 40.42 | 53.54 |
|         seat        | 58.98 | 72.99 |
|        fence        | 34.12 | 50.74 |
|         desk        | 44.59 | 62.97 |
|         rock        | 32.42 | 50.09 |
|       wardrobe      | 40.01 | 52.74 |
|         lamp        | 55.29 | 66.38 |
|       bathtub       | 70.99 |  76.2 |
|       railing       | 30.92 | 40.23 |
|       cushion       | 48.52 | 61.72 |
|         base        |  14.5 | 22.16 |
|         box         | 18.25 |  24.7 |
|        column       | 42.23 | 60.26 |
|      signboard      | 28.12 | 35.43 |
|   chest of drawers  | 27.54 | 47.97 |
|       counter       | 12.11 | 12.84 |
|         sand        | 37.72 | 55.67 |
|         sink        | 59.27 | 67.37 |
|      skyscraper     | 57.92 | 71.77 |
|      fireplace      | 62.78 | 87.49 |
|     refrigerator    | 59.92 | 68.47 |
|      grandstand     |  29.5 | 65.72 |
|         path        | 19.26 | 28.15 |
|        stairs       | 16.83 | 21.65 |
|        runway       | 65.61 | 79.43 |
|         case        | 51.01 | 63.67 |
|      pool table     | 87.32 | 93.56 |
|        pillow       | 48.82 | 60.79 |
|     screen door     | 62.76 | 66.97 |
|       stairway      | 22.91 | 37.05 |
|        river        |  9.03 | 15.79 |
|        bridge       |  26.6 | 32.07 |
|       bookcase      | 39.03 | 51.52 |
|        blind        | 31.06 | 32.24 |
|     coffee table    | 54.25 | 74.84 |
|        toilet       | 78.16 | 85.33 |
|        flower       | 31.77 | 50.45 |
|         book        | 41.83 |  58.5 |
|         hill        | 13.25 | 21.89 |
|        bench        | 33.52 | 44.19 |
|      countertop     |  51.7 | 66.67 |
|        stove        | 56.48 | 64.46 |
|         palm        | 40.44 | 48.42 |
|    kitchen island   | 33.31 | 58.91 |
|       computer      | 49.96 | 56.17 |
|     swivel chair    | 36.28 | 56.12 |
|         boat        | 47.15 | 51.73 |
|         bar         |  31.8 | 41.98 |
|    arcade machine   |  80.3 | 93.55 |
|        hovel        |  21.7 | 27.84 |
|         bus         | 77.63 |  81.9 |
|        towel        | 49.54 | 65.22 |
|        light        |  44.7 | 50.22 |
|        truck        | 26.85 | 36.31 |
|        tower        |  7.08 | 12.29 |
|      chandelier     | 61.26 | 78.49 |
|        awning       | 23.06 | 26.48 |
|     streetlight     | 17.69 | 22.88 |
|        booth        | 32.59 | 33.85 |
| television receiver | 57.42 |  64.4 |
|       airplane      | 49.47 | 59.16 |
|      dirt track     | 17.42 |  39.9 |
|       apparel       | 29.97 | 53.99 |
|         pole        | 11.92 | 14.63 |
|         land        |  3.12 |  5.27 |
|      bannister      |  4.72 |  5.46 |
|      escalator      | 20.67 | 21.35 |
|       ottoman       | 35.39 | 55.79 |
|        bottle       | 27.69 | 40.49 |
|        buffet       | 41.39 | 48.24 |
|        poster       | 24.99 | 32.24 |
|        stage        |  9.85 | 17.23 |
|         van         |  35.2 |  46.8 |
|         ship        |  5.49 |  7.07 |
|       fountain      | 16.71 | 21.27 |
|    conveyer belt    | 81.69 |  87.0 |
|        canopy       | 23.96 |  28.3 |
|        washer       | 54.93 |  55.3 |
|      plaything      | 17.52 | 30.56 |
|    swimming pool    | 54.26 | 87.56 |
|        stool        | 37.35 | 45.92 |
|        barrel       | 47.16 | 65.01 |
|        basket       | 20.14 | 22.57 |
|      waterfall      | 45.65 | 69.64 |
|         tent        | 90.06 | 97.12 |
|         bag         |  3.59 |  4.02 |
|       minibike      | 57.22 |  67.5 |
|        cradle       | 73.98 |  93.7 |
|         oven        | 31.73 |  43.3 |
|         ball        | 44.66 | 49.09 |
|         food        | 45.75 | 52.15 |
|         step        |  4.65 |  4.99 |
|         tank        | 39.46 | 41.91 |
|      trade name     | 10.08 | 10.42 |
|      microwave      | 30.93 | 32.28 |
|         pot         | 31.27 | 35.15 |
|        animal       | 51.14 | 55.21 |
|       bicycle       | 45.96 |  60.5 |
|         lake        | 41.39 | 62.46 |
|      dishwasher     | 41.94 | 44.63 |
|        screen       | 62.49 | 81.94 |
|       blanket       |  5.56 |  6.58 |
|      sculpture      | 41.52 | 57.89 |
|         hood        | 44.46 | 46.36 |
|        sconce       |  38.5 | 46.79 |
|         vase        | 25.25 | 35.92 |
|    traffic light    | 26.65 | 37.83 |
|         tray        |  5.07 |  8.43 |
|        ashcan       | 32.12 | 37.76 |
|         fan         | 51.91 | 61.27 |
|         pier        | 32.77 | 44.74 |
|      crt screen     |  9.94 | 21.02 |
|        plate        | 23.81 | 27.67 |
|       monitor       | 29.24 | 39.83 |
|    bulletin board   | 24.72 | 33.55 |
|        shower       |  0.61 |  0.88 |
|       radiator      | 40.69 | 50.01 |
|        glass        |  4.24 |  4.34 |
|        clock        | 29.33 | 34.05 |
|         flag        | 28.86 | 30.37 |
+---------------------+-------+-------+
09/15 17:59:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.7300  mIoU: 41.5000  mAcc: 52.2300  data_time: 0.0037  time: 6.9298
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
09/15 18:00:11 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1920250600
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1920250600
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:00:11 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/motion_blur'

09/15 18:00:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:00:20 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:00:22 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 18:00:23 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 18:02:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:21:03  time: 1.1441  data_time: 0.0024  memory: 19763  
09/15 18:03:35 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:00:43  time: 1.5161  data_time: 0.0019  memory: 19728  
09/15 18:04:27 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:50:12  time: 1.0364  data_time: 0.0030  memory: 19733  
09/15 18:05:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:45:46  time: 1.2098  data_time: 0.0024  memory: 19760  
09/15 18:06:25 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:42:17  time: 1.0182  data_time: 0.0019  memory: 19756  
09/15 18:07:21 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:39:32  time: 0.8757  data_time: 0.0021  memory: 19757  
09/15 18:08:19 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:37:25  time: 0.9174  data_time: 0.0018  memory: 19756  
09/15 18:09:14 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:35:26  time: 1.0838  data_time: 0.0017  memory: 19757  
09/15 18:09:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:32:53  time: 0.8766  data_time: 0.0017  memory: 19730  
09/15 18:10:41 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:30:54  time: 0.7854  data_time: 0.0041  memory: 19697  
09/15 18:11:27 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:29:11  time: 1.0161  data_time: 0.0018  memory: 19755  
09/15 18:12:10 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:27:30  time: 0.9890  data_time: 0.0024  memory: 19757  
09/15 18:13:00 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:26:12  time: 1.1194  data_time: 0.0022  memory: 19765  
09/15 18:13:54 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:25:06  time: 0.8675  data_time: 0.0019  memory: 19764  
09/15 18:14:51 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:24:06  time: 1.4184  data_time: 0.0033  memory: 19771  
09/15 18:15:30 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:22:41  time: 0.7747  data_time: 0.0054  memory: 19734  
09/15 18:16:09 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:21:20  time: 0.7829  data_time: 0.0019  memory: 556  
09/15 18:16:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:20:08  time: 0.9272  data_time: 0.0020  memory: 19721  
09/15 18:17:47 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:19:13  time: 1.1477  data_time: 0.0029  memory: 19753  
09/15 18:18:31 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:18:08  time: 0.7955  data_time: 0.0019  memory: 19753  
09/15 18:19:22 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:17:10  time: 1.2675  data_time: 0.0022  memory: 19772  
09/15 18:20:09 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:16:10  time: 0.8205  data_time: 0.0029  memory: 19735  
09/15 18:20:53 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:15:09  time: 0.9272  data_time: 0.0018  memory: 19710  
09/15 18:21:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:14:08  time: 0.8185  data_time: 0.0018  memory: 1752  
09/15 18:22:20 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:13:10  time: 0.9112  data_time: 0.0018  memory: 19739  
09/15 18:22:59 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:12:10  time: 0.8006  data_time: 0.0018  memory: 556  
09/15 18:23:42 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:11:13  time: 0.7642  data_time: 0.0024  memory: 19691  
09/15 18:24:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:10:20  time: 1.0901  data_time: 0.0019  memory: 19745  
09/15 18:25:13 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:09:25  time: 0.9956  data_time: 0.0017  memory: 19722  
09/15 18:25:54 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:08:30  time: 0.7481  data_time: 0.0017  memory: 556  
09/15 18:26:38 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:07:37  time: 0.8580  data_time: 0.0021  memory: 19749  
09/15 18:27:16 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:43  time: 0.7570  data_time: 0.0018  memory: 547  
09/15 18:28:01 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:51  time: 0.7988  data_time: 0.0022  memory: 19754  
09/15 18:28:49 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:00  time: 0.8990  data_time: 0.0020  memory: 19726  
09/15 18:29:34 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:10  time: 0.8479  data_time: 0.0017  memory: 19744  
09/15 18:30:14 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:18  time: 0.8018  data_time: 0.0020  memory: 19696  
09/15 18:30:53 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:28  time: 0.7670  data_time: 0.0019  memory: 505  
09/15 18:31:35 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:38  time: 0.8823  data_time: 0.0019  memory: 19765  
09/15 18:32:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:49  time: 0.8646  data_time: 0.0019  memory: 19705  
09/15 18:33:05 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7199  data_time: 0.0016  memory: 19767  
09/15 18:33:05 - mmengine - INFO - per class results:
09/15 18:33:05 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.57 | 85.96 |
|       building      | 78.89 | 91.96 |
|         sky         | 93.08 | 96.08 |
|        floor        | 77.65 | 88.77 |
|         tree        | 71.14 | 83.92 |
|       ceiling       | 81.22 | 91.65 |
|         road        | 79.74 | 87.53 |
|         bed         | 83.57 | 94.17 |
|      windowpane     | 56.69 | 74.84 |
|        grass        | 67.56 | 85.46 |
|       cabinet       | 56.16 | 69.63 |
|       sidewalk      | 61.07 | 77.82 |
|        person       | 73.22 | 88.28 |
|        earth        | 33.15 | 44.27 |
|         door        |  35.9 | 45.36 |
|        table        | 53.49 | 70.55 |
|       mountain      | 52.48 |  74.2 |
|        plant        | 46.98 | 62.45 |
|       curtain       | 66.42 | 80.89 |
|        chair        |  49.1 | 65.89 |
|         car         | 79.91 | 91.74 |
|        water        | 55.93 | 74.13 |
|       painting      | 66.01 | 80.72 |
|         sofa        | 59.01 | 78.44 |
|        shelf        | 37.99 | 58.98 |
|        house        | 31.63 | 43.11 |
|         sea         | 51.97 | 69.06 |
|        mirror       | 59.31 | 70.31 |
|         rug         | 63.03 | 72.41 |
|        field        | 21.13 | 31.78 |
|       armchair      | 35.83 | 47.11 |
|         seat        | 56.91 | 76.82 |
|        fence        | 35.18 | 48.43 |
|         desk        | 44.79 | 65.12 |
|         rock        | 31.16 | 46.12 |
|       wardrobe      |  46.2 | 56.22 |
|         lamp        | 52.82 | 68.54 |
|       bathtub       | 72.09 | 77.85 |
|       railing       | 34.73 | 48.43 |
|       cushion       | 48.73 | 61.73 |
|         base        | 18.38 | 26.21 |
|         box         | 19.63 | 24.75 |
|        column       | 41.15 |  54.9 |
|      signboard      | 30.22 | 42.06 |
|   chest of drawers  | 30.33 | 48.51 |
|       counter       | 16.91 | 19.52 |
|         sand        | 47.42 | 61.78 |
|         sink        | 62.69 | 75.23 |
|      skyscraper     | 50.62 |  58.1 |
|      fireplace      | 65.38 | 81.56 |
|     refrigerator    | 65.54 | 79.33 |
|      grandstand     |  33.4 | 64.75 |
|         path        | 21.13 | 32.64 |
|        stairs       | 21.57 | 24.68 |
|        runway       | 66.52 | 87.47 |
|         case        | 44.27 | 55.56 |
|      pool table     | 87.26 |  93.7 |
|        pillow       | 52.65 | 66.37 |
|     screen door     | 67.15 | 78.32 |
|       stairway      | 26.33 | 33.67 |
|        river        |  7.82 |  14.3 |
|        bridge       | 43.61 |  49.2 |
|       bookcase      | 36.23 | 49.88 |
|        blind        | 43.28 | 50.72 |
|     coffee table    | 51.53 | 76.48 |
|        toilet       | 79.35 | 87.84 |
|        flower       | 33.47 | 44.74 |
|         book        | 42.17 |  63.4 |
|         hill        | 10.24 |  18.1 |
|        bench        | 44.06 | 60.74 |
|      countertop     | 53.24 | 74.22 |
|        stove        | 64.79 | 72.89 |
|         palm        | 42.79 | 58.31 |
|    kitchen island   | 36.12 | 62.09 |
|       computer      | 52.86 | 61.33 |
|     swivel chair    | 36.26 | 53.59 |
|         boat        | 72.24 | 85.18 |
|         bar         | 26.57 | 36.57 |
|    arcade machine   | 71.29 | 76.94 |
|        hovel        | 11.34 | 15.71 |
|         bus         | 79.06 | 90.69 |
|        towel        | 54.33 | 69.09 |
|        light        | 48.74 | 58.14 |
|        truck        | 16.14 | 20.44 |
|        tower        |  9.08 | 14.39 |
|      chandelier     | 58.79 | 68.57 |
|        awning       | 26.66 | 30.99 |
|     streetlight     | 17.05 | 23.87 |
|        booth        | 38.47 | 43.14 |
| television receiver | 57.09 | 69.19 |
|       airplane      | 52.34 | 64.09 |
|      dirt track     | 15.64 |  56.3 |
|       apparel       | 27.17 | 43.96 |
|         pole        | 13.08 | 16.44 |
|         land        |  2.76 |  4.6  |
|      bannister      |  10.0 | 13.16 |
|      escalator      | 28.22 | 33.16 |
|       ottoman       | 39.77 |  52.5 |
|        bottle       | 27.12 | 38.92 |
|        buffet       |  31.6 | 36.46 |
|        poster       | 28.79 | 36.82 |
|        stage        | 11.38 | 15.98 |
|         van         | 37.23 | 46.33 |
|         ship        | 24.39 | 25.03 |
|       fountain      | 18.67 | 19.06 |
|    conveyer belt    | 82.37 | 89.52 |
|        canopy       | 11.64 | 14.24 |
|        washer       | 72.99 | 74.92 |
|      plaything      | 17.35 | 28.37 |
|    swimming pool    | 64.49 | 82.07 |
|        stool        | 30.79 | 40.21 |
|        barrel       | 50.02 | 65.08 |
|        basket       | 22.23 | 32.41 |
|      waterfall      | 50.52 | 73.26 |
|         tent        |  93.4 | 96.59 |
|         bag         |  9.43 | 13.07 |
|       minibike      | 53.66 | 74.57 |
|        cradle       |  75.8 | 91.72 |
|         oven        | 39.03 | 63.81 |
|         ball        | 46.36 | 52.24 |
|         food        | 44.79 | 51.14 |
|         step        |  5.66 |  6.53 |
|         tank        | 42.69 | 47.02 |
|      trade name     | 21.14 | 24.25 |
|      microwave      | 33.81 | 36.92 |
|         pot         | 41.06 | 49.31 |
|        animal       | 49.87 | 55.38 |
|       bicycle       | 48.68 | 69.79 |
|         lake        | 34.28 | 38.79 |
|      dishwasher     | 48.17 | 63.58 |
|        screen       | 59.31 | 81.31 |
|       blanket       |  6.42 |  8.99 |
|      sculpture      | 32.59 | 41.89 |
|         hood        | 56.18 | 64.22 |
|        sconce       | 39.64 | 53.36 |
|         vase        | 27.88 | 38.16 |
|    traffic light    | 24.84 |  41.3 |
|         tray        |  6.75 | 11.85 |
|        ashcan       | 31.64 | 44.96 |
|         fan         | 53.99 | 72.81 |
|         pier        |  38.1 | 77.58 |
|      crt screen     | 10.03 | 17.46 |
|        plate        | 39.39 | 52.52 |
|       monitor       | 33.35 |  43.9 |
|    bulletin board   | 38.08 | 55.75 |
|        shower       |  0.67 |  0.78 |
|       radiator      |  51.9 | 57.27 |
|        glass        |  9.66 | 10.42 |
|        clock        | 29.69 | 34.69 |
|         flag        | 27.48 | 31.31 |
+---------------------+-------+-------+
09/15 18:33:05 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.9400  mIoU: 43.2200  mAcc: 54.7600  data_time: 0.0029  time: 0.9811
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
09/15 18:33:12 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 461514645
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 461514645
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:33:13 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/zoom_blur'

09/15 18:33:18 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:33:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:33:19 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 18:33:19 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 18:34:44 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:55:14  time: 1.0193  data_time: 0.0026  memory: 19763  
09/15 18:35:43 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:45:39  time: 1.4415  data_time: 0.0031  memory: 19759  
09/15 18:36:32 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:39:38  time: 0.9611  data_time: 0.0027  memory: 19733  
09/15 18:37:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:37:13  time: 1.0025  data_time: 0.0021  memory: 19761  
09/15 18:38:19 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:34:58  time: 0.9075  data_time: 0.0016  memory: 19735  
09/15 18:39:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:33:08  time: 0.7668  data_time: 0.0018  memory: 19757  
09/15 18:40:05 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:31:52  time: 0.8560  data_time: 0.0016  memory: 19756  
09/15 18:40:54 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:30:19  time: 0.9471  data_time: 0.0016  memory: 19757  
09/15 18:41:31 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:28:15  time: 0.7745  data_time: 0.0016  memory: 19730  
09/15 18:42:12 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:26:37  time: 0.7186  data_time: 0.0016  memory: 19698  
09/15 18:42:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:25:16  time: 0.9377  data_time: 0.0017  memory: 19755  
09/15 18:43:36 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:24:00  time: 1.0048  data_time: 0.0018  memory: 19757  
09/15 18:44:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:22:54  time: 0.9868  data_time: 0.0014  memory: 19765  
09/15 18:45:07 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:21:55  time: 0.7255  data_time: 0.0016  memory: 19764  
09/15 18:45:56 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:21:01  time: 1.3361  data_time: 0.0016  memory: 19771  
09/15 18:46:34 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:19:52  time: 0.7321  data_time: 0.0023  memory: 19734  
09/15 18:47:10 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:18:43  time: 0.7198  data_time: 0.0017  memory: 556  
09/15 18:47:47 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:17:40  time: 0.7887  data_time: 0.0015  memory: 19722  
09/15 18:48:33 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:16:49  time: 0.9817  data_time: 0.0016  memory: 19753  
09/15 18:49:12 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:15:52  time: 0.6795  data_time: 0.0015  memory: 19754  
09/15 18:49:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:15:01  time: 1.1065  data_time: 0.0016  memory: 19772  
09/15 18:50:37 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:14:09  time: 0.7062  data_time: 0.0016  memory: 19736  
09/15 18:51:14 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:13:14  time: 0.8027  data_time: 0.0016  memory: 19711  
09/15 18:51:50 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:12:20  time: 0.6913  data_time: 0.0016  memory: 1752  
09/15 18:52:29 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:11:29  time: 0.7878  data_time: 0.0016  memory: 19739  
09/15 18:53:02 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:10:36  time: 0.7091  data_time: 0.0015  memory: 556  
09/15 18:53:40 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:09:47  time: 0.6860  data_time: 0.0016  memory: 19691  
09/15 18:54:24 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:09:02  time: 0.9598  data_time: 0.0016  memory: 19744  
09/15 18:55:02 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:14  time: 0.8872  data_time: 0.0015  memory: 19722  
09/15 18:55:39 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:26  time: 0.6966  data_time: 0.0015  memory: 556  
09/15 18:56:19 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:40  time: 0.7605  data_time: 0.0016  memory: 19749  
09/15 18:56:56 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:05:54  time: 0.7622  data_time: 0.0027  memory: 547  
09/15 18:57:39 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:09  time: 0.7406  data_time: 0.0015  memory: 19754  
09/15 18:58:22 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:25  time: 0.7614  data_time: 0.0016  memory: 19726  
09/15 18:59:01 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:40  time: 0.7103  data_time: 0.0014  memory: 19744  
09/15 18:59:37 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:55  time: 0.7314  data_time: 0.0017  memory: 19696  
09/15 19:00:13 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:10  time: 0.7284  data_time: 0.0016  memory: 505  
09/15 19:00:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:26  time: 0.7835  data_time: 0.0017  memory: 19765  
09/15 19:01:31 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:43  time: 0.7072  data_time: 0.0024  memory: 19705  
09/15 19:02:09 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.6519  data_time: 0.0014  memory: 19767  
09/15 19:02:09 - mmengine - INFO - per class results:
09/15 19:02:09 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  51.6 | 83.37 |
|       building      | 62.85 | 77.91 |
|         sky         | 85.03 | 89.04 |
|        floor        | 50.36 | 82.85 |
|         tree        | 35.09 |  38.7 |
|       ceiling       |  57.0 | 89.46 |
|         road        | 54.98 |  62.4 |
|         bed         | 66.53 | 89.24 |
|      windowpane     | 41.58 | 55.45 |
|        grass        | 45.75 |  61.2 |
|       cabinet       | 39.24 | 49.16 |
|       sidewalk      | 30.69 | 44.86 |
|        person       | 53.64 | 69.42 |
|        earth        |  8.58 |  9.95 |
|         door        |  18.4 | 20.68 |
|        table        | 36.53 | 44.99 |
|       mountain      | 32.15 | 40.47 |
|        plant        | 24.56 | 50.81 |
|       curtain       |  40.4 | 61.12 |
|        chair        | 30.72 | 38.47 |
|         car         | 62.24 | 73.45 |
|        water        | 43.29 | 64.15 |
|       painting      | 44.13 |  71.7 |
|         sofa        | 39.79 | 56.63 |
|        shelf        | 25.15 | 37.21 |
|        house        | 13.68 | 14.79 |
|         sea         | 37.25 | 44.06 |
|        mirror       | 37.53 |  42.8 |
|         rug         | 23.22 | 24.55 |
|        field        | 20.32 | 33.95 |
|       armchair      | 17.95 |  21.7 |
|         seat        | 30.16 | 49.62 |
|        fence        |  8.85 | 13.15 |
|         desk        | 24.03 | 27.98 |
|         rock        | 19.57 | 26.56 |
|       wardrobe      | 22.51 |  29.1 |
|         lamp        | 34.73 | 46.94 |
|       bathtub       | 54.11 | 71.49 |
|       railing       | 10.55 | 13.41 |
|       cushion       | 23.01 | 29.59 |
|         base        |  7.88 |  8.66 |
|         box         |  0.9  |  0.95 |
|        column       | 14.01 | 15.74 |
|      signboard      | 16.27 | 19.08 |
|   chest of drawers  | 37.88 | 50.33 |
|       counter       |  8.16 | 11.04 |
|         sand        |  11.1 | 24.86 |
|         sink        | 44.29 | 57.91 |
|      skyscraper     | 24.05 | 32.93 |
|      fireplace      | 48.44 | 63.32 |
|     refrigerator    | 41.85 | 49.98 |
|      grandstand     | 27.35 | 35.58 |
|         path        |  7.24 |  8.58 |
|        stairs       |  0.73 |  0.85 |
|        runway       | 54.11 | 68.99 |
|         case        | 13.43 | 15.62 |
|      pool table     | 79.15 | 83.85 |
|        pillow       | 34.93 | 50.37 |
|     screen door     | 45.25 | 52.47 |
|       stairway      | 10.92 | 11.63 |
|        river        |  8.09 | 11.67 |
|        bridge       | 18.51 | 21.74 |
|       bookcase      | 19.93 | 25.35 |
|        blind        | 19.51 | 24.73 |
|     coffee table    |  35.3 | 45.67 |
|        toilet       | 62.59 | 72.45 |
|        flower       | 15.67 | 19.04 |
|         book        | 24.17 | 29.52 |
|         hill        |  4.61 |  5.53 |
|        bench        |  24.9 | 29.87 |
|      countertop     | 33.83 | 43.97 |
|        stove        | 41.39 | 46.88 |
|         palm        |  9.48 | 45.61 |
|    kitchen island   | 27.63 | 44.62 |
|       computer      | 35.12 | 37.93 |
|     swivel chair    | 14.46 |  18.4 |
|         boat        | 12.38 | 12.94 |
|         bar         |  8.13 |  8.68 |
|    arcade machine   | 10.57 | 10.84 |
|        hovel        |  4.16 |  4.4  |
|         bus         | 39.95 | 44.95 |
|        towel        | 22.41 | 34.27 |
|        light        |  16.6 | 20.79 |
|        truck        |  3.8  |  4.13 |
|        tower        |  3.96 |  4.1  |
|      chandelier     | 18.19 | 19.57 |
|        awning       |  7.09 |  8.23 |
|     streetlight     |  2.58 |  2.73 |
|        booth        |  1.92 |  1.96 |
| television receiver | 37.27 | 43.11 |
|       airplane      | 37.42 |  58.5 |
|      dirt track     |  2.25 |  8.07 |
|       apparel       |  3.89 |  5.16 |
|         pole        |  1.85 |  1.95 |
|         land        |  3.38 |  4.43 |
|      bannister      |  0.83 |  1.01 |
|      escalator      |  10.6 | 25.19 |
|       ottoman       | 21.57 | 25.74 |
|        bottle       |  1.21 |  1.25 |
|        buffet       |  3.05 |  3.11 |
|        poster       |  7.88 |  9.58 |
|        stage        |  7.81 | 10.31 |
|         van         |  21.5 | 25.99 |
|         ship        |  1.36 |  1.38 |
|       fountain      |  0.13 |  0.15 |
|    conveyer belt    |  40.4 | 55.74 |
|        canopy       |  2.58 |  2.58 |
|        washer       | 63.77 |  68.1 |
|      plaything      |  8.14 | 11.07 |
|    swimming pool    | 54.07 | 79.73 |
|        stool        | 21.17 | 26.03 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  7.37 |  8.63 |
|      waterfall      | 33.83 | 61.89 |
|         tent        | 74.74 |  80.4 |
|         bag         |  1.31 |  1.5  |
|       minibike      | 40.23 | 47.81 |
|        cradle       | 44.87 | 70.04 |
|         oven        |  17.9 | 27.29 |
|         ball        |  5.52 |  6.83 |
|         food        |  1.86 |  1.86 |
|         step        |  2.29 |  5.09 |
|         tank        | 20.27 | 23.73 |
|      trade name     | 10.69 | 11.88 |
|      microwave      | 21.64 | 25.69 |
|         pot         |  7.28 |  8.02 |
|        animal       | 30.76 |  32.5 |
|       bicycle       |  8.66 |  9.55 |
|         lake        |  0.18 |  0.21 |
|      dishwasher     | 27.28 | 36.09 |
|        screen       | 52.39 | 75.62 |
|       blanket       |  2.47 |  3.45 |
|      sculpture      |  4.58 |  6.0  |
|         hood        |  28.0 | 35.03 |
|        sconce       | 15.25 |  21.9 |
|         vase        | 11.45 | 17.33 |
|    traffic light    |  4.1  |  4.3  |
|         tray        |  0.73 |  0.95 |
|        ashcan       |  17.6 | 24.37 |
|         fan         | 27.35 | 36.63 |
|         pier        | 14.84 | 15.94 |
|      crt screen     | 15.84 | 20.46 |
|        plate        | 25.91 | 37.35 |
|       monitor       |  8.65 |  9.04 |
|    bulletin board   | 13.07 | 14.64 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 21.65 |  33.6 |
|        glass        |  1.36 |  1.51 |
|        clock        |  4.84 |  5.01 |
|         flag        | 13.69 | 14.58 |
+---------------------+-------+-------+
09/15 19:02:09 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 64.2100  mIoU: 23.5000  mAcc: 30.8000  data_time: 0.0020  time: 0.8648
Finished processing corruption type: zoom_blur
Processing corruption type: snow
09/15 19:03:12 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2119396727
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2119396727
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:03:12 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/snow'

09/15 19:03:47 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:03:47 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:03:48 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:03:49 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:05:17 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:57:27  time: 0.5136  data_time: 0.0019  memory: 19763  
09/15 19:05:54 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:28  time: 0.9730  data_time: 0.0020  memory: 19759  
09/15 19:06:19 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:55  time: 0.4931  data_time: 0.0019  memory: 19733  
09/15 19:06:51 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:21  time: 0.5403  data_time: 0.0018  memory: 19761  
09/15 19:07:21 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:24:45  time: 0.4567  data_time: 0.0017  memory: 19735  
09/15 19:07:50 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:46  time: 0.2965  data_time: 0.0019  memory: 19757  
09/15 19:08:22 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:27  time: 0.4484  data_time: 0.0036  memory: 19756  
09/15 19:08:49 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:59  time: 0.4869  data_time: 0.0017  memory: 19757  
09/15 19:09:06 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:18:10  time: 0.3627  data_time: 0.0017  memory: 19730  
09/15 19:09:23 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:43  time: 0.2820  data_time: 0.0017  memory: 19698  
09/15 19:09:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:30  time: 0.4504  data_time: 0.0018  memory: 19755  
09/15 19:10:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:24  time: 0.4638  data_time: 0.0018  memory: 19757  
09/15 19:10:22 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:36  time: 0.5609  data_time: 0.0016  memory: 19765  
09/15 19:10:47 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:56  time: 0.2963  data_time: 0.0019  memory: 19764  
09/15 19:11:13 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:20  time: 0.8926  data_time: 0.0018  memory: 19771  
09/15 19:11:29 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:29  time: 0.2862  data_time: 0.0019  memory: 19734  
09/15 19:11:44 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:42  time: 0.2982  data_time: 0.0019  memory: 556  
09/15 19:12:01 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:01  time: 0.4017  data_time: 0.0017  memory: 19722  
09/15 19:12:25 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:30  time: 0.5614  data_time: 0.0018  memory: 19753  
09/15 19:12:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:54  time: 0.2832  data_time: 0.0017  memory: 19754  
09/15 19:13:06 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:24  time: 0.6726  data_time: 0.0019  memory: 19772  
09/15 19:13:27 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:52  time: 0.2779  data_time: 0.0018  memory: 19736  
09/15 19:13:44 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:19  time: 0.3965  data_time: 0.0018  memory: 19711  
09/15 19:13:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:46  time: 0.2722  data_time: 0.0017  memory: 1752  
09/15 19:14:16 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:16  time: 0.3719  data_time: 0.0017  memory: 19739  
09/15 19:14:29 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:44  time: 0.2845  data_time: 0.0017  memory: 556  
09/15 19:14:45 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:15  time: 0.2705  data_time: 0.0017  memory: 19691  
09/15 19:15:07 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:50  time: 0.4903  data_time: 0.0017  memory: 19744  
09/15 19:15:23 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:23  time: 0.4122  data_time: 0.0026  memory: 19722  
09/15 19:15:37 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:55  time: 0.2665  data_time: 0.0017  memory: 556  
09/15 19:15:53 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:30  time: 0.2993  data_time: 0.0018  memory: 19749  
09/15 19:16:08 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:04  time: 0.2856  data_time: 0.0018  memory: 547  
09/15 19:16:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:40  time: 0.2663  data_time: 0.0016  memory: 19754  
09/15 19:16:45 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:16  time: 0.2900  data_time: 0.0018  memory: 19726  
09/15 19:17:03 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:53  time: 0.2878  data_time: 0.0017  memory: 19744  
09/15 19:17:18 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:29  time: 0.2923  data_time: 0.0019  memory: 19696  
09/15 19:17:32 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:06  time: 0.2923  data_time: 0.0019  memory: 505  
09/15 19:17:48 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:44  time: 0.2723  data_time: 0.0017  memory: 19765  
09/15 19:18:05 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.2989  data_time: 0.0028  memory: 19705  
09/15 19:18:22 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2554  data_time: 0.0024  memory: 19767  
09/15 19:18:22 - mmengine - INFO - per class results:
09/15 19:18:22 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 65.74 | 88.44 |
|       building      | 75.58 | 90.45 |
|         sky         | 89.49 | 93.03 |
|        floor        | 67.29 | 88.66 |
|         tree        | 68.87 | 84.83 |
|       ceiling       | 71.99 | 81.56 |
|         road        | 70.04 | 75.46 |
|         bed         | 77.11 | 87.82 |
|      windowpane     | 53.37 | 66.41 |
|        grass        | 60.79 | 86.84 |
|       cabinet       | 48.65 | 59.87 |
|       sidewalk      | 49.16 | 73.56 |
|        person       |  70.2 | 86.53 |
|        earth        | 29.75 | 38.87 |
|         door        | 16.35 | 18.18 |
|        table        | 45.01 | 59.98 |
|       mountain      | 47.37 | 65.63 |
|        plant        | 44.07 | 53.16 |
|       curtain       | 57.53 | 68.07 |
|        chair        | 45.41 | 61.54 |
|         car         | 76.79 |  89.3 |
|        water        | 45.55 |  69.9 |
|       painting      | 63.35 |  77.0 |
|         sofa        | 53.83 | 68.11 |
|        shelf        |  33.3 | 53.41 |
|        house        | 27.61 | 32.83 |
|         sea         |  41.7 | 56.14 |
|        mirror       | 50.54 | 64.83 |
|         rug         | 37.44 | 39.93 |
|        field        | 16.73 | 27.75 |
|       armchair      |  28.9 |  39.9 |
|         seat        | 52.14 | 70.02 |
|        fence        | 28.39 | 47.96 |
|         desk        | 35.58 | 43.61 |
|         rock        |  31.0 | 42.76 |
|       wardrobe      | 35.75 |  46.3 |
|         lamp        | 50.78 | 61.17 |
|       bathtub       | 60.56 |  76.7 |
|       railing       | 22.87 | 28.61 |
|       cushion       |  41.2 | 51.01 |
|         base        | 11.51 | 18.35 |
|         box         | 18.01 | 31.76 |
|        column       | 33.25 | 39.52 |
|      signboard      | 32.03 |  46.4 |
|   chest of drawers  | 33.28 | 55.26 |
|       counter       |  18.9 |  21.2 |
|         sand        | 23.32 | 28.19 |
|         sink        | 54.04 | 62.89 |
|      skyscraper     | 22.67 | 28.23 |
|      fireplace      | 54.42 | 65.39 |
|     refrigerator    | 53.07 | 58.91 |
|      grandstand     | 32.26 | 81.14 |
|         path        | 12.83 | 16.81 |
|        stairs       | 15.89 | 19.36 |
|        runway       |  16.5 | 16.88 |
|         case        | 44.78 | 52.91 |
|      pool table     | 81.43 |  87.2 |
|        pillow       | 37.58 |  45.7 |
|     screen door     | 36.77 | 45.56 |
|       stairway      | 17.83 | 30.06 |
|        river        | 14.01 | 17.99 |
|        bridge       | 59.67 | 67.31 |
|       bookcase      | 18.93 |  21.1 |
|        blind        |  20.0 | 20.93 |
|     coffee table    | 49.17 | 62.87 |
|        toilet       |  65.4 | 70.08 |
|        flower       | 30.59 | 44.55 |
|         book        | 36.23 | 44.12 |
|         hill        |  7.78 |  9.78 |
|        bench        | 22.45 | 24.53 |
|      countertop     | 44.66 |  63.5 |
|        stove        | 56.68 | 66.71 |
|         palm        | 42.24 |  56.8 |
|    kitchen island   | 15.68 | 22.66 |
|       computer      | 52.95 | 58.76 |
|     swivel chair    | 26.72 |  30.3 |
|         boat        | 37.24 |  46.0 |
|         bar         | 21.98 | 26.56 |
|    arcade machine   | 20.52 | 21.11 |
|        hovel        | 29.93 | 42.62 |
|         bus         | 74.56 | 92.01 |
|        towel        | 35.87 | 41.63 |
|        light        | 33.28 | 35.25 |
|        truck        | 10.05 | 13.27 |
|        tower        |  12.2 | 19.13 |
|      chandelier     | 55.44 | 68.91 |
|        awning       | 19.73 | 21.15 |
|     streetlight     | 19.19 | 24.12 |
|        booth        | 43.82 | 46.73 |
| television receiver | 37.23 | 42.33 |
|       airplane      | 49.89 | 54.54 |
|      dirt track     | 14.79 | 27.77 |
|       apparel       | 24.89 | 37.47 |
|         pole        |  10.4 | 13.18 |
|         land        |  2.57 |  3.17 |
|      bannister      |  2.5  |  3.05 |
|      escalator      | 18.02 | 21.32 |
|       ottoman       |  24.8 | 29.93 |
|        bottle       | 17.89 | 22.91 |
|        buffet       | 37.57 | 41.82 |
|        poster       | 14.56 | 22.83 |
|        stage        |  7.84 |  9.88 |
|         van         | 30.63 | 50.01 |
|         ship        |  4.36 |  8.13 |
|       fountain      | 17.48 | 19.29 |
|    conveyer belt    | 40.08 | 41.12 |
|        canopy       | 28.76 | 33.12 |
|        washer       | 65.34 | 66.68 |
|      plaything      | 13.34 | 17.34 |
|    swimming pool    | 45.66 | 85.03 |
|        stool        | 26.82 | 32.39 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 21.56 | 27.02 |
|      waterfall      | 35.95 | 44.96 |
|         tent        |  92.9 | 96.49 |
|         bag         |  3.06 |  4.04 |
|       minibike      | 49.73 | 65.46 |
|        cradle       | 53.52 | 82.19 |
|         oven        | 30.53 | 37.61 |
|         ball        | 34.58 | 44.31 |
|         food        | 48.67 | 54.32 |
|         step        |  4.25 |  4.58 |
|         tank        | 35.33 | 37.38 |
|      trade name     | 18.84 | 20.24 |
|      microwave      | 23.96 | 24.66 |
|         pot         |  29.4 | 32.33 |
|        animal       | 48.97 | 56.28 |
|       bicycle       | 44.68 | 72.19 |
|         lake        |  53.9 | 56.37 |
|      dishwasher     | 31.51 | 33.12 |
|        screen       | 49.82 | 64.22 |
|       blanket       |  1.25 |  1.27 |
|      sculpture      | 40.12 | 61.07 |
|         hood        | 19.33 | 20.06 |
|        sconce       | 31.77 | 38.63 |
|         vase        | 30.33 | 41.91 |
|    traffic light    | 24.04 | 35.73 |
|         tray        |  7.2  | 11.29 |
|        ashcan       | 27.05 | 32.64 |
|         fan         | 41.94 | 46.67 |
|         pier        | 41.62 | 58.63 |
|      crt screen     |  0.13 |  0.48 |
|        plate        | 45.58 | 55.71 |
|       monitor       | 10.05 | 12.74 |
|    bulletin board   | 19.78 | 22.28 |
|        shower       |  0.21 |  1.92 |
|       radiator      | 22.19 | 23.22 |
|        glass        | 10.71 | 11.82 |
|        clock        | 16.29 | 19.23 |
|         flag        | 27.88 |  32.4 |
+---------------------+-------+-------+
09/15 19:18:22 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 75.2600  mIoU: 35.1900  mAcc: 44.1100  data_time: 0.0023  time: 0.4365
Finished processing corruption type: snow
Processing corruption type: frost
09/15 19:18:58 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 863384225
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 863384225
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:18:59 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/frost'

09/15 19:19:10 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:19:10 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:19:11 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:19:12 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:20:22 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:45:54  time: 0.2650  data_time: 0.0016  memory: 19763  
09/15 19:20:47 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:07  time: 0.7283  data_time: 0.0017  memory: 19759  
09/15 19:21:01 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:22:22  time: 0.2467  data_time: 0.0015  memory: 19733  
09/15 19:21:21 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:19:27  time: 0.3298  data_time: 0.0017  memory: 19761  
09/15 19:21:41 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:23  time: 0.2291  data_time: 0.0015  memory: 19735  
09/15 19:21:59 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:49  time: 0.0558  data_time: 0.0016  memory: 19757  
09/15 19:22:21 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:50  time: 0.2666  data_time: 0.0015  memory: 19756  
09/15 19:22:36 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:35  time: 0.2481  data_time: 0.0014  memory: 19757  
09/15 19:22:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:04  time: 0.1463  data_time: 0.0014  memory: 19730  
09/15 19:22:48 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:49  time: 0.0534  data_time: 0.0015  memory: 19698  
09/15 19:22:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:47  time: 0.2168  data_time: 0.0017  memory: 19755  
09/15 19:23:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:54  time: 0.2280  data_time: 0.0017  memory: 19757  
09/15 19:23:12 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:18  time: 0.3335  data_time: 0.0015  memory: 19765  
09/15 19:23:25 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:50  time: 0.0553  data_time: 0.0016  memory: 19764  
09/15 19:23:39 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:26  time: 0.6974  data_time: 0.0017  memory: 19771  
09/15 19:23:44 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:48  time: 0.0529  data_time: 0.0016  memory: 19734  
09/15 19:23:47 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:12  time: 0.0510  data_time: 0.0016  memory: 556  
09/15 19:23:53 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:43  time: 0.1857  data_time: 0.0014  memory: 19722  
09/15 19:24:06 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:24  time: 0.3305  data_time: 0.0016  memory: 19753  
09/15 19:24:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:01  time: 0.0545  data_time: 0.0015  memory: 19754  
09/15 19:24:23 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:42  time: 0.4286  data_time: 0.0015  memory: 19772  
09/15 19:24:32 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:22  time: 0.0568  data_time: 0.0016  memory: 19736  
09/15 19:24:38 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:01  time: 0.1478  data_time: 0.0015  memory: 19711  
09/15 19:24:41 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:39  time: 0.0499  data_time: 0.0015  memory: 1752  
09/15 19:24:47 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:21  time: 0.1693  data_time: 0.0015  memory: 19739  
09/15 19:24:50 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:02  time: 0.0536  data_time: 0.0015  memory: 556  
09/15 19:24:54 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:44  time: 0.0510  data_time: 0.0014  memory: 19691  
09/15 19:25:04 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:30  time: 0.2379  data_time: 0.0015  memory: 19744  
09/15 19:25:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:15  time: 0.1749  data_time: 0.0015  memory: 19722  
09/15 19:25:11 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:59  time: 0.0498  data_time: 0.0014  memory: 556  
09/15 19:25:16 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:45  time: 0.0513  data_time: 0.0015  memory: 19749  
09/15 19:25:18 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:31  time: 0.0543  data_time: 0.0017  memory: 547  
09/15 19:25:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:19  time: 0.0528  data_time: 0.0014  memory: 19754  
09/15 19:25:33 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:07  time: 0.0585  data_time: 0.0017  memory: 19726  
09/15 19:25:38 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:55  time: 0.0740  data_time: 0.0026  memory: 19744  
09/15 19:25:42 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:43  time: 0.0555  data_time: 0.0017  memory: 19696  
09/15 19:25:45 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0548  data_time: 0.0017  memory: 505  
09/15 19:25:49 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0560  data_time: 0.0015  memory: 19765  
09/15 19:25:54 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0519  data_time: 0.0015  memory: 19705  
09/15 19:26:00 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0508  data_time: 0.0014  memory: 19767  
09/15 19:26:00 - mmengine - INFO - per class results:
09/15 19:26:00 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 65.89 | 87.54 |
|       building      | 78.09 | 90.02 |
|         sky         | 76.31 | 78.87 |
|        floor        | 72.61 | 87.83 |
|         tree        |  67.9 | 85.77 |
|       ceiling       |  70.8 | 80.48 |
|         road        | 72.22 | 78.98 |
|         bed         | 78.73 | 87.29 |
|      windowpane     | 53.03 | 68.16 |
|        grass        | 63.58 | 79.04 |
|       cabinet       | 50.82 | 61.53 |
|       sidewalk      | 54.07 | 68.09 |
|        person       | 71.17 | 87.45 |
|        earth        | 30.99 |  52.3 |
|         door        | 25.75 | 32.91 |
|        table        | 48.35 | 71.65 |
|       mountain      | 29.74 | 72.73 |
|        plant        | 44.55 | 55.88 |
|       curtain       | 55.56 |  66.0 |
|        chair        | 47.35 | 62.22 |
|         car         | 80.29 |  90.0 |
|        water        | 46.06 | 65.55 |
|       painting      |  61.1 | 79.48 |
|         sofa        |  55.5 | 74.59 |
|        shelf        | 34.32 | 48.18 |
|        house        | 38.98 | 54.51 |
|         sea         | 35.52 | 54.24 |
|        mirror       | 50.57 | 63.42 |
|         rug         | 47.72 | 51.06 |
|        field        | 22.06 | 33.32 |
|       armchair      | 34.24 | 50.13 |
|         seat        | 42.72 | 53.51 |
|        fence        |  28.8 | 41.88 |
|         desk        | 34.74 |  46.3 |
|         rock        | 27.81 | 43.49 |
|       wardrobe      |  37.2 | 44.35 |
|         lamp        |  51.9 |  62.9 |
|       bathtub       | 63.97 |  73.7 |
|       railing       | 28.41 | 38.42 |
|       cushion       | 43.98 | 56.19 |
|         base        |  8.56 | 10.98 |
|         box         | 16.81 | 20.75 |
|        column       | 32.83 | 41.08 |
|      signboard      | 30.74 |  42.9 |
|   chest of drawers  | 29.13 | 35.38 |
|       counter       | 19.95 | 25.68 |
|         sand        | 32.25 | 43.58 |
|         sink        | 53.58 | 61.16 |
|      skyscraper     | 43.49 | 50.01 |
|      fireplace      | 58.33 | 77.83 |
|     refrigerator    | 60.99 |  69.9 |
|      grandstand     | 38.06 | 65.43 |
|         path        | 18.59 | 26.97 |
|        stairs       | 28.09 | 37.97 |
|        runway       | 62.93 | 73.17 |
|         case        | 42.34 | 62.03 |
|      pool table     | 82.33 | 86.21 |
|        pillow       | 47.05 | 56.33 |
|     screen door     | 40.18 | 69.95 |
|       stairway      | 20.71 | 30.44 |
|        river        |  8.04 | 11.37 |
|        bridge       | 45.57 | 53.92 |
|       bookcase      | 33.68 | 44.67 |
|        blind        | 24.72 | 26.55 |
|     coffee table    | 50.33 | 69.74 |
|        toilet       |  69.9 | 75.04 |
|        flower       | 34.85 | 47.01 |
|         book        | 43.16 | 61.48 |
|         hill        |  13.4 | 20.62 |
|        bench        | 37.85 | 50.16 |
|      countertop     | 45.26 | 72.65 |
|        stove        | 51.86 | 54.76 |
|         palm        | 44.69 |  62.6 |
|    kitchen island   | 24.18 | 39.38 |
|       computer      | 51.72 | 56.18 |
|     swivel chair    | 39.27 | 46.06 |
|         boat        | 40.36 |  46.1 |
|         bar         | 17.23 | 20.65 |
|    arcade machine   | 31.83 |  33.3 |
|        hovel        | 27.63 | 44.23 |
|         bus         | 78.18 | 88.04 |
|        towel        | 40.16 | 59.86 |
|        light        | 38.23 | 41.29 |
|        truck        | 16.21 | 19.54 |
|        tower        |  9.99 | 16.38 |
|      chandelier     | 56.97 | 71.93 |
|        awning       | 18.09 | 19.97 |
|     streetlight     | 18.89 | 21.93 |
|        booth        | 40.78 | 42.91 |
| television receiver | 44.63 |  49.0 |
|       airplane      | 49.41 | 61.02 |
|      dirt track     |  7.76 |  39.3 |
|       apparel       | 25.15 |  36.9 |
|         pole        |  12.5 | 16.87 |
|         land        |  1.65 |  2.36 |
|      bannister      |  9.69 | 12.63 |
|      escalator      | 22.77 | 26.84 |
|       ottoman       | 34.02 | 45.17 |
|        bottle       |  26.1 | 32.29 |
|        buffet       | 38.21 | 42.98 |
|        poster       | 13.31 | 16.53 |
|        stage        | 13.21 | 15.28 |
|         van         | 33.69 | 45.41 |
|         ship        | 27.32 | 40.44 |
|       fountain      | 18.34 | 19.43 |
|    conveyer belt    | 74.66 | 82.78 |
|        canopy       |  2.75 |  3.38 |
|        washer       | 65.73 | 68.18 |
|      plaything      | 18.43 | 26.34 |
|    swimming pool    | 68.39 | 83.34 |
|        stool        | 32.39 |  39.9 |
|        barrel       | 14.43 | 38.67 |
|        basket       | 21.57 | 27.38 |
|      waterfall      | 34.72 | 47.96 |
|         tent        | 17.14 | 19.84 |
|         bag         |  7.38 |  8.49 |
|       minibike      | 52.18 | 62.58 |
|        cradle       | 82.01 | 93.12 |
|         oven        | 36.73 | 45.42 |
|         ball        | 45.01 | 54.18 |
|         food        | 45.01 | 53.11 |
|         step        |  6.41 |  7.92 |
|         tank        | 29.29 | 30.94 |
|      trade name     | 18.82 | 20.89 |
|      microwave      | 29.25 | 30.91 |
|         pot         | 29.31 | 33.36 |
|        animal       | 44.47 | 47.11 |
|       bicycle       | 47.31 |  71.1 |
|         lake        | 51.42 | 59.09 |
|      dishwasher     | 38.99 | 45.19 |
|        screen       | 73.12 | 78.37 |
|       blanket       | 12.93 |  15.1 |
|      sculpture      | 45.48 | 66.58 |
|         hood        | 40.16 | 46.42 |
|        sconce       | 30.01 | 36.84 |
|         vase        | 30.03 | 42.88 |
|    traffic light    | 26.99 | 34.69 |
|         tray        |  5.98 | 10.54 |
|        ashcan       | 26.16 | 28.81 |
|         fan         | 49.72 | 58.45 |
|         pier        | 29.54 | 49.67 |
|      crt screen     |  0.14 |  0.3  |
|        plate        | 38.42 | 47.63 |
|       monitor       |  6.82 |  8.0  |
|    bulletin board   | 31.57 | 43.71 |
|        shower       |  0.75 |  1.5  |
|       radiator      | 32.51 | 33.74 |
|        glass        | 10.66 | 11.39 |
|        clock        | 26.67 | 30.04 |
|         flag        | 33.63 | 36.47 |
+---------------------+-------+-------+
09/15 19:26:00 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 75.1200  mIoU: 37.9100  mAcc: 47.8100  data_time: 0.0018  time: 0.2041
Finished processing corruption type: frost
Processing corruption type: fog
09/15 19:26:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 165692983
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 165692983
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:26:07 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/fog'

09/15 19:26:12 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:26:12 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:26:12 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:26:13 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:27:09 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:36:48  time: 0.4002  data_time: 0.0019  memory: 19763  
09/15 19:27:40 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:27:46  time: 0.8572  data_time: 0.0019  memory: 19759  
09/15 19:28:00 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:22:05  time: 0.3660  data_time: 0.0017  memory: 19733  
09/15 19:28:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:04  time: 0.4436  data_time: 0.0017  memory: 19761  
09/15 19:28:52 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:32  time: 0.3530  data_time: 0.0017  memory: 19735  
09/15 19:29:16 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:17:18  time: 0.1916  data_time: 0.0018  memory: 19757  
09/15 19:29:44 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:34  time: 0.3691  data_time: 0.0017  memory: 19756  
09/15 19:30:08 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:40  time: 0.4669  data_time: 0.0017  memory: 19757  
09/15 19:30:23 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:20  time: 0.3449  data_time: 0.0017  memory: 19730  
09/15 19:30:37 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:13:13  time: 0.2499  data_time: 0.0016  memory: 19698  
09/15 19:30:52 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:16  time: 0.3617  data_time: 0.0030  memory: 19755  
09/15 19:31:07 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:26  time: 0.3845  data_time: 0.0018  memory: 19757  
09/15 19:31:27 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:52  time: 0.5328  data_time: 0.0016  memory: 19765  
09/15 19:31:49 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:24  time: 0.2511  data_time: 0.0018  memory: 19764  
09/15 19:32:12 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:59  time: 0.8582  data_time: 0.0018  memory: 19771  
09/15 19:32:25 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:17  time: 0.2114  data_time: 0.0019  memory: 19734  
09/15 19:32:34 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:36  time: 0.1927  data_time: 0.0028  memory: 556  
09/15 19:32:49 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:03  time: 0.3646  data_time: 0.0016  memory: 19722  
09/15 19:33:09 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:40  time: 0.5457  data_time: 0.0017  memory: 19753  
09/15 19:33:25 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:12  time: 0.2276  data_time: 0.0017  memory: 19754  
09/15 19:33:44 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:48  time: 0.6126  data_time: 0.0035  memory: 19772  
09/15 19:34:01 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:23  time: 0.2439  data_time: 0.0018  memory: 19736  
09/15 19:34:15 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:56  time: 0.3464  data_time: 0.0024  memory: 19711  
09/15 19:34:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:28  time: 0.2214  data_time: 0.0016  memory: 1752  
09/15 19:34:41 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:04  time: 0.2979  data_time: 0.0016  memory: 19739  
09/15 19:34:52 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:39  time: 0.2048  data_time: 0.0016  memory: 556  
09/15 19:35:04 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:15  time: 0.2266  data_time: 0.0017  memory: 19691  
09/15 19:35:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:54  time: 0.3655  data_time: 0.0016  memory: 19744  
09/15 19:35:34 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:32  time: 0.3063  data_time: 0.0016  memory: 19722  
09/15 19:35:43 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:10  time: 0.1924  data_time: 0.0016  memory: 556  
09/15 19:35:55 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:48  time: 0.2002  data_time: 0.0016  memory: 19749  
09/15 19:36:05 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:28  time: 0.1788  data_time: 0.0017  memory: 547  
09/15 19:36:20 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:08  time: 0.2055  data_time: 0.0016  memory: 19754  
09/15 19:36:34 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:49  time: 0.2665  data_time: 0.0018  memory: 19726  
09/15 19:36:47 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:30  time: 0.2107  data_time: 0.0016  memory: 19744  
09/15 19:36:59 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:11  time: 0.2086  data_time: 0.0019  memory: 19696  
09/15 19:37:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:53  time: 0.1798  data_time: 0.0018  memory: 505  
09/15 19:37:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:35  time: 0.2042  data_time: 0.0017  memory: 19765  
09/15 19:37:33 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.2101  data_time: 0.0017  memory: 19705  
09/15 19:37:46 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2112  data_time: 0.0014  memory: 19767  
09/15 19:37:46 - mmengine - INFO - per class results:
09/15 19:37:46 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.92 |  87.9 |
|       building      | 79.91 | 90.58 |
|         sky         | 93.57 | 96.58 |
|        floor        | 79.41 | 89.53 |
|         tree        | 72.17 | 87.11 |
|       ceiling       | 82.24 | 90.97 |
|         road        | 81.16 | 88.57 |
|         bed         | 85.01 | 94.09 |
|      windowpane     | 58.33 | 74.12 |
|        grass        | 67.53 | 83.68 |
|       cabinet       | 57.56 | 71.57 |
|       sidewalk      | 62.41 | 78.69 |
|        person       | 75.35 | 89.56 |
|        earth        | 36.75 | 52.18 |
|         door        | 39.33 |  52.4 |
|        table        | 54.06 | 72.82 |
|       mountain      | 52.35 | 70.09 |
|        plant        | 48.97 | 59.69 |
|       curtain       | 68.63 | 81.37 |
|        chair        | 51.85 | 69.12 |
|         car         | 82.03 |  90.8 |
|        water        | 53.51 | 73.38 |
|       painting      |  64.8 | 82.62 |
|         sofa        | 59.78 | 77.09 |
|        shelf        | 37.98 | 52.81 |
|        house        | 34.54 | 51.73 |
|         sea         | 48.94 | 68.46 |
|        mirror       | 58.54 | 68.51 |
|         rug         | 66.66 | 73.39 |
|        field        | 26.04 | 40.02 |
|       armchair      | 40.38 | 55.92 |
|         seat        | 62.53 |  79.1 |
|        fence        | 37.67 | 52.21 |
|         desk        | 44.65 | 60.18 |
|         rock        | 29.92 | 40.92 |
|       wardrobe      | 44.21 | 58.01 |
|         lamp        | 56.59 | 70.15 |
|       bathtub       | 74.91 | 82.97 |
|       railing       | 34.44 |  48.4 |
|       cushion       | 51.82 | 66.43 |
|         base        | 18.04 | 26.34 |
|         box         | 24.62 | 32.74 |
|        column       | 43.39 |  55.2 |
|      signboard      | 33.59 | 47.48 |
|   chest of drawers  | 33.43 | 50.62 |
|       counter       |  14.7 | 17.59 |
|         sand        | 37.48 | 52.54 |
|         sink        | 65.45 | 75.24 |
|      skyscraper     | 47.77 | 59.77 |
|      fireplace      | 67.38 | 84.14 |
|     refrigerator    | 72.28 | 86.52 |
|      grandstand     | 40.07 | 65.35 |
|         path        | 15.14 | 20.93 |
|        stairs       | 27.07 | 33.34 |
|        runway       | 68.39 | 90.39 |
|         case        | 47.95 | 64.19 |
|      pool table     |  88.1 | 91.92 |
|        pillow       | 54.32 | 67.26 |
|     screen door     | 65.86 | 75.01 |
|       stairway      | 26.39 | 39.09 |
|        river        |  9.35 | 15.13 |
|        bridge       | 51.53 | 58.99 |
|       bookcase      | 40.68 | 56.42 |
|        blind        |  46.7 | 54.01 |
|     coffee table    | 53.92 | 75.71 |
|        toilet       | 80.07 | 89.05 |
|        flower       | 36.33 | 46.96 |
|         book        | 43.43 | 62.96 |
|         hill        | 14.24 | 19.39 |
|        bench        | 43.55 | 57.52 |
|      countertop     | 54.99 | 73.28 |
|        stove        | 59.96 | 67.56 |
|         palm        | 48.48 | 69.25 |
|    kitchen island   |  30.9 | 50.15 |
|       computer      |  57.3 | 65.41 |
|     swivel chair    | 35.44 | 46.02 |
|         boat        | 68.86 |  81.9 |
|         bar         | 15.16 | 21.51 |
|    arcade machine   | 75.18 | 80.87 |
|        hovel        |  14.1 | 19.07 |
|         bus         | 80.58 | 92.03 |
|        towel        | 58.04 | 73.81 |
|        light        | 45.85 | 50.34 |
|        truck        | 23.91 | 29.42 |
|        tower        |  5.59 |  8.62 |
|      chandelier     | 63.85 |  77.2 |
|        awning       | 22.97 | 25.53 |
|     streetlight     | 20.19 | 27.06 |
|        booth        | 44.94 | 47.76 |
| television receiver | 62.69 | 72.95 |
|       airplane      |  53.3 | 64.21 |
|      dirt track     |  9.96 | 41.99 |
|       apparel       | 26.41 | 44.13 |
|         pole        | 16.23 |  21.7 |
|         land        |  2.8  |  4.53 |
|      bannister      |  9.43 | 11.76 |
|      escalator      | 29.83 | 35.04 |
|       ottoman       | 41.01 |  54.8 |
|        bottle       | 22.83 | 28.05 |
|        buffet       |  29.9 | 35.75 |
|        poster       | 32.98 | 42.57 |
|        stage        | 11.34 | 16.32 |
|         van         |  35.2 |  49.4 |
|         ship        | 74.26 | 81.34 |
|       fountain      | 19.95 | 20.35 |
|    conveyer belt    | 80.19 | 86.82 |
|        canopy       | 17.99 | 20.32 |
|        washer       | 81.69 | 83.15 |
|      plaything      | 17.06 | 28.16 |
|    swimming pool    | 70.08 | 83.49 |
|        stool        | 30.74 | 36.64 |
|        barrel       | 43.96 | 64.08 |
|        basket       |  24.7 | 34.66 |
|      waterfall      | 47.27 | 63.92 |
|         tent        | 91.03 | 98.25 |
|         bag         | 11.16 | 13.76 |
|       minibike      | 53.36 | 61.27 |
|        cradle       | 71.12 | 93.41 |
|         oven        | 34.21 | 55.51 |
|         ball        | 50.04 | 58.17 |
|         food        | 42.38 | 46.57 |
|         step        |  7.3  |  8.55 |
|         tank        |  42.1 | 47.17 |
|      trade name     | 21.21 | 23.29 |
|      microwave      | 37.79 | 42.47 |
|         pot         | 37.34 | 44.15 |
|        animal       | 51.58 | 54.75 |
|       bicycle       | 50.79 | 72.48 |
|         lake        | 54.02 | 62.68 |
|      dishwasher     | 55.91 |  68.4 |
|        screen       | 57.51 | 78.63 |
|       blanket       |  7.48 |  8.73 |
|      sculpture      | 49.92 | 72.36 |
|         hood        |  53.0 | 56.57 |
|        sconce       | 40.32 | 49.47 |
|         vase        | 32.06 | 44.37 |
|    traffic light    |  26.1 | 40.02 |
|         tray        |  4.38 |  7.32 |
|        ashcan       | 39.04 | 50.14 |
|         fan         | 54.67 | 70.06 |
|         pier        | 44.72 | 82.21 |
|      crt screen     |  4.1  | 11.02 |
|        plate        |  39.4 | 50.95 |
|       monitor       |  5.19 |  6.17 |
|    bulletin board   | 38.38 | 55.25 |
|        shower       |  0.65 |  1.34 |
|       radiator      | 53.39 |  58.1 |
|        glass        | 14.47 | 16.51 |
|        clock        | 28.76 |  33.5 |
|         flag        | 28.47 | 32.45 |
+---------------------+-------+-------+
09/15 19:37:46 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.8300  mIoU: 44.6200  mAcc: 55.7000  data_time: 0.0020  time: 0.3468
Finished processing corruption type: fog
Processing corruption type: brightness
09/15 19:38:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1902044287
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1902044287
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:38:20 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/brightness'

09/15 19:38:40 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:38:40 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:38:41 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:38:42 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:39:58 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:49:21  time: 0.4173  data_time: 0.0018  memory: 19763  
09/15 19:40:31 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:34:31  time: 0.9346  data_time: 0.0018  memory: 19759  
09/15 19:40:52 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:26:47  time: 0.4197  data_time: 0.0018  memory: 19733  
09/15 19:41:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:45  time: 0.4706  data_time: 0.0018  memory: 19761  
09/15 19:41:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:37  time: 0.3995  data_time: 0.0017  memory: 19735  
09/15 19:42:15 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:20:07  time: 0.2203  data_time: 0.0018  memory: 19757  
09/15 19:42:45 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:08  time: 0.4016  data_time: 0.0017  memory: 19756  
09/15 19:43:10 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:54  time: 0.4337  data_time: 0.0017  memory: 19757  
09/15 19:43:25 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:16:17  time: 0.2961  data_time: 0.0017  memory: 19730  
09/15 19:43:40 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:56  time: 0.2561  data_time: 0.0017  memory: 19698  
09/15 19:43:56 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:48  time: 0.4276  data_time: 0.0035  memory: 19755  
09/15 19:44:11 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:47  time: 0.4068  data_time: 0.0018  memory: 19757  
09/15 19:44:30 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:02  time: 0.5058  data_time: 0.0016  memory: 19765  
09/15 19:44:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:24  time: 0.2190  data_time: 0.0018  memory: 19764  
09/15 19:45:14 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:54  time: 0.8955  data_time: 0.0024  memory: 19771  
09/15 19:45:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:06  time: 0.2499  data_time: 0.0018  memory: 19734  
09/15 19:45:38 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:23  time: 0.2697  data_time: 0.0018  memory: 556  
09/15 19:45:53 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:46  time: 0.3794  data_time: 0.0016  memory: 19722  
09/15 19:46:14 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:20  time: 0.5249  data_time: 0.0018  memory: 19753  
09/15 19:46:30 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:48  time: 0.2143  data_time: 0.0017  memory: 19754  
09/15 19:46:50 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:22  time: 0.6730  data_time: 0.0017  memory: 19772  
09/15 19:47:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:53  time: 0.2068  data_time: 0.0017  memory: 19736  
09/15 19:47:21 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:23  time: 0.3134  data_time: 0.0017  memory: 19711  
09/15 19:47:32 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:53  time: 0.1859  data_time: 0.0017  memory: 1752  
09/15 19:47:46 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:26  time: 0.2785  data_time: 0.0016  memory: 19739  
09/15 19:47:55 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:58  time: 0.2529  data_time: 0.0017  memory: 556  
09/15 19:48:07 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:32  time: 0.1773  data_time: 0.0017  memory: 19691  
09/15 19:48:24 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:09  time: 0.4145  data_time: 0.0060  memory: 19744  
09/15 19:48:36 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:45  time: 0.3184  data_time: 0.0016  memory: 19722  
09/15 19:48:47 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:21  time: 0.1974  data_time: 0.0016  memory: 556  
09/15 19:48:59 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:59  time: 0.2425  data_time: 0.0016  memory: 19749  
09/15 19:49:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:36  time: 0.1990  data_time: 0.0018  memory: 547  
09/15 19:49:24 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:16  time: 0.2070  data_time: 0.0016  memory: 19754  
09/15 19:49:38 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:55  time: 0.2029  data_time: 0.0018  memory: 19726  
09/15 19:49:53 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:35  time: 0.2360  data_time: 0.0017  memory: 19744  
09/15 19:50:04 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:15  time: 0.2007  data_time: 0.0019  memory: 19696  
09/15 19:50:14 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:56  time: 0.2030  data_time: 0.0019  memory: 505  
09/15 19:50:25 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:37  time: 0.1965  data_time: 0.0017  memory: 19765  
09/15 19:50:38 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:18  time: 0.2043  data_time: 0.0017  memory: 19705  
09/15 19:50:52 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1725  data_time: 0.0015  memory: 19767  
09/15 19:50:52 - mmengine - INFO - per class results:
09/15 19:50:52 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.43 | 87.94 |
|       building      |  80.3 | 90.76 |
|         sky         | 93.67 | 97.14 |
|        floor        | 80.01 | 90.01 |
|         tree        | 72.93 | 86.77 |
|       ceiling       | 83.07 | 90.99 |
|         road        |  80.8 | 88.29 |
|         bed         | 85.88 | 94.26 |
|      windowpane     | 59.68 | 76.39 |
|        grass        | 67.16 | 84.68 |
|       cabinet       | 58.18 | 71.55 |
|       sidewalk      | 61.66 | 78.69 |
|        person       |  75.9 | 89.92 |
|        earth        | 35.76 | 49.84 |
|         door        | 39.61 | 53.22 |
|        table        | 55.25 | 73.49 |
|       mountain      | 52.08 | 69.77 |
|        plant        | 48.99 | 61.05 |
|       curtain       | 68.74 | 80.31 |
|        chair        |  52.7 | 67.87 |
|         car         | 82.56 | 91.67 |
|        water        | 51.06 | 67.85 |
|       painting      | 66.06 | 82.88 |
|         sofa        | 61.12 | 79.84 |
|        shelf        | 41.02 | 58.42 |
|        house        | 38.77 |  56.4 |
|         sea         | 45.33 | 68.79 |
|        mirror       | 58.15 | 68.66 |
|         rug         | 65.91 | 73.61 |
|        field        | 25.45 | 40.56 |
|       armchair      | 39.51 | 55.83 |
|         seat        | 63.39 | 81.35 |
|        fence        | 38.53 | 51.34 |
|         desk        | 45.63 | 65.89 |
|         rock        | 29.29 | 39.89 |
|       wardrobe      | 47.45 | 60.22 |
|         lamp        |  57.2 | 69.77 |
|       bathtub       | 78.17 |  86.4 |
|       railing       | 34.43 | 46.15 |
|       cushion       | 50.59 | 64.54 |
|         base        | 17.82 | 25.44 |
|         box         | 23.69 | 31.81 |
|        column       | 43.05 | 54.79 |
|      signboard      | 34.03 | 47.49 |
|   chest of drawers  | 30.91 | 49.29 |
|       counter       | 18.71 | 21.38 |
|         sand        |  41.8 | 61.32 |
|         sink        | 64.65 | 75.37 |
|      skyscraper     | 50.46 | 59.88 |
|      fireplace      | 69.59 | 84.31 |
|     refrigerator    | 71.59 | 85.42 |
|      grandstand     | 41.98 | 64.61 |
|         path        | 15.69 | 23.19 |
|        stairs       | 25.99 | 31.33 |
|        runway       | 68.01 | 87.77 |
|         case        | 44.91 | 56.97 |
|      pool table     | 89.17 | 93.78 |
|        pillow       | 53.16 | 64.22 |
|     screen door     | 62.23 | 69.47 |
|       stairway      | 25.71 | 37.17 |
|        river        | 10.45 | 19.39 |
|        bridge       | 34.02 | 38.71 |
|       bookcase      |  40.7 | 54.92 |
|        blind        | 44.06 | 49.38 |
|     coffee table    | 53.64 | 75.87 |
|        toilet       | 80.46 | 88.54 |
|        flower       | 36.25 | 52.09 |
|         book        | 45.28 | 65.83 |
|         hill        | 14.43 | 19.73 |
|        bench        | 44.55 |  61.4 |
|      countertop     | 54.39 | 73.95 |
|        stove        | 60.49 | 71.72 |
|         palm        | 47.21 | 68.29 |
|    kitchen island   | 29.21 | 49.77 |
|       computer      | 56.43 | 64.93 |
|     swivel chair    | 41.05 | 56.24 |
|         boat        |  66.1 | 80.08 |
|         bar         | 15.08 |  22.9 |
|    arcade machine   | 79.25 | 84.24 |
|        hovel        | 31.41 | 41.69 |
|         bus         | 78.54 | 91.96 |
|        towel        | 58.33 | 72.13 |
|        light        | 50.09 | 56.76 |
|        truck        | 17.94 |  22.3 |
|        tower        |  7.78 | 12.16 |
|      chandelier     | 64.89 | 78.67 |
|        awning       | 25.82 |  29.1 |
|     streetlight     | 20.85 | 27.22 |
|        booth        | 42.88 | 47.88 |
| television receiver | 61.95 | 71.11 |
|       airplane      | 53.11 | 64.37 |
|      dirt track     |  9.67 | 36.28 |
|       apparel       | 26.36 | 43.24 |
|         pole        | 16.91 | 23.07 |
|         land        |  2.79 |  4.32 |
|      bannister      |  9.4  | 11.98 |
|      escalator      | 28.35 | 34.19 |
|       ottoman       | 42.42 | 57.03 |
|        bottle       | 30.33 | 41.36 |
|        buffet       | 39.96 | 45.97 |
|        poster       | 29.38 | 35.04 |
|        stage        | 12.45 | 16.66 |
|         van         | 35.85 | 51.56 |
|         ship        | 78.86 | 87.92 |
|       fountain      | 21.15 | 21.75 |
|    conveyer belt    | 78.15 | 88.31 |
|        canopy       |  20.5 | 23.95 |
|        washer       | 79.99 | 82.91 |
|      plaything      | 19.23 | 30.78 |
|    swimming pool    | 75.54 | 83.82 |
|        stool        | 34.35 | 40.14 |
|        barrel       | 22.96 | 67.95 |
|        basket       | 27.39 |  37.9 |
|      waterfall      | 45.66 | 61.88 |
|         tent        |  95.6 | 97.09 |
|         bag         | 11.81 | 14.44 |
|       minibike      | 60.25 | 71.96 |
|        cradle       | 74.57 | 93.79 |
|         oven        | 27.24 | 58.32 |
|         ball        | 45.96 | 50.74 |
|         food        |  52.1 | 59.73 |
|         step        |  7.53 |  8.22 |
|         tank        | 40.66 | 43.58 |
|      trade name     | 23.48 | 26.38 |
|      microwave      | 40.22 | 43.85 |
|         pot         | 36.53 | 43.28 |
|        animal       | 52.67 | 56.14 |
|       bicycle       | 54.15 | 72.68 |
|         lake        | 53.08 | 62.43 |
|      dishwasher     | 59.27 |  72.5 |
|        screen       | 62.32 | 84.02 |
|       blanket       |  8.73 | 10.25 |
|      sculpture      | 54.71 |  76.4 |
|         hood        | 56.34 | 60.77 |
|        sconce       | 40.69 | 50.11 |
|         vase        | 33.34 | 46.74 |
|    traffic light    | 29.53 | 42.68 |
|         tray        |  7.64 | 13.91 |
|        ashcan       | 37.33 | 47.68 |
|         fan         | 54.91 | 70.16 |
|         pier        | 42.08 | 84.12 |
|      crt screen     |  5.22 | 13.36 |
|        plate        | 47.34 | 60.42 |
|       monitor       |  4.04 |  4.77 |
|    bulletin board   | 38.76 | 54.79 |
|        shower       |  0.43 |  1.08 |
|       radiator      | 54.67 | 60.88 |
|        glass        | 14.08 | 15.35 |
|        clock        | 28.96 | 34.06 |
|         flag        | 31.73 | 35.91 |
+---------------------+-------+-------+
09/15 19:50:52 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.0900  mIoU: 45.2100  mAcc: 56.6800  data_time: 0.0022  time: 0.3650
Finished processing corruption type: brightness
Processing corruption type: contrast
09/15 19:50:59 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 668699206
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 668699206
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:50:59 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/contrast'

09/15 19:51:04 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:51:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:51:05 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:51:05 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:52:00 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:29  time: 0.2642  data_time: 0.0017  memory: 19763  
09/15 19:52:25 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:25:08  time: 0.7279  data_time: 0.0018  memory: 19759  
09/15 19:52:38 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:08  time: 0.2404  data_time: 0.0017  memory: 19733  
09/15 19:53:00 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:13  time: 0.3554  data_time: 0.0019  memory: 19761  
09/15 19:53:20 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:46  time: 0.2243  data_time: 0.0017  memory: 19735  
09/15 19:53:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:31  time: 0.0548  data_time: 0.0018  memory: 19757  
09/15 19:54:00 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:46  time: 0.2822  data_time: 0.0017  memory: 19756  
09/15 19:54:15 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:40  time: 0.2481  data_time: 0.0016  memory: 19757  
09/15 19:54:22 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:16  time: 0.1447  data_time: 0.0016  memory: 19730  
09/15 19:54:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:07  time: 0.0488  data_time: 0.0016  memory: 19698  
09/15 19:54:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:09  time: 0.2230  data_time: 0.0017  memory: 19755  
09/15 19:54:40 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:21  time: 0.2463  data_time: 0.0018  memory: 19757  
09/15 19:54:52 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:50  time: 0.3764  data_time: 0.0016  memory: 19765  
09/15 19:55:05 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:26  time: 0.0680  data_time: 0.0018  memory: 19764  
09/15 19:55:20 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:05  time: 0.7155  data_time: 0.0017  memory: 19771  
09/15 19:55:25 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:29  time: 0.0500  data_time: 0.0018  memory: 19734  
09/15 19:55:27 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:54  time: 0.0506  data_time: 0.0018  memory: 556  
09/15 19:55:34 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:27  time: 0.1847  data_time: 0.0016  memory: 19722  
09/15 19:55:46 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:10  time: 0.3608  data_time: 0.0017  memory: 19753  
09/15 19:55:53 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:48  time: 0.0500  data_time: 0.0017  memory: 19754  
09/15 19:56:05 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:30  time: 0.4348  data_time: 0.0018  memory: 19772  
09/15 19:56:14 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:12  time: 0.0493  data_time: 0.0017  memory: 19736  
09/15 19:56:19 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:52  time: 0.1466  data_time: 0.0018  memory: 19711  
09/15 19:56:22 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:31  time: 0.0536  data_time: 0.0018  memory: 1752  
09/15 19:56:29 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:14  time: 0.1708  data_time: 0.0018  memory: 19739  
09/15 19:56:31 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:55  time: 0.0525  data_time: 0.0017  memory: 556  
09/15 19:56:35 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:38  time: 0.0543  data_time: 0.0018  memory: 19691  
09/15 19:56:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:26  time: 0.3276  data_time: 0.0017  memory: 19744  
09/15 19:56:52 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:11  time: 0.1985  data_time: 0.0016  memory: 19722  
09/15 19:56:56 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:57  time: 0.1194  data_time: 0.0016  memory: 556  
09/15 19:57:02 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:43  time: 0.0505  data_time: 0.0017  memory: 19749  
09/15 19:57:05 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:29  time: 0.0646  data_time: 0.0018  memory: 547  
09/15 19:57:14 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:18  time: 0.0837  data_time: 0.0016  memory: 19754  
09/15 19:57:22 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:06  time: 0.0497  data_time: 0.0018  memory: 19726  
09/15 19:57:29 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:54  time: 0.0485  data_time: 0.0016  memory: 19744  
09/15 19:57:34 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:43  time: 0.0913  data_time: 0.0019  memory: 19696  
09/15 19:57:38 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.1265  data_time: 0.0019  memory: 505  
09/15 19:57:43 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0835  data_time: 0.0019  memory: 19765  
09/15 19:57:48 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0479  data_time: 0.0017  memory: 19705  
09/15 19:57:57 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0440  data_time: 0.0014  memory: 19767  
09/15 19:57:57 - mmengine - INFO - per class results:
09/15 19:57:57 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.96 | 87.68 |
|       building      | 79.77 | 90.54 |
|         sky         |  93.7 | 96.79 |
|        floor        | 79.71 | 89.69 |
|         tree        | 72.19 | 87.46 |
|       ceiling       | 82.82 | 91.27 |
|         road        | 80.95 | 88.96 |
|         bed         | 85.28 | 94.32 |
|      windowpane     | 58.77 | 74.68 |
|        grass        | 66.02 | 84.18 |
|       cabinet       | 58.16 | 72.66 |
|       sidewalk      | 62.09 | 78.75 |
|        person       |  75.9 | 89.54 |
|        earth        | 34.87 | 48.58 |
|         door        | 38.81 | 51.71 |
|        table        | 54.98 | 73.55 |
|       mountain      | 51.92 |  69.5 |
|        plant        | 48.45 | 58.84 |
|       curtain       | 67.84 | 79.95 |
|        chair        |  51.7 | 68.14 |
|         car         | 82.41 | 91.32 |
|        water        | 53.71 | 72.67 |
|       painting      | 64.59 | 82.85 |
|         sofa        | 60.25 | 77.51 |
|        shelf        | 39.02 |  55.3 |
|        house        | 34.06 | 51.35 |
|         sea         | 50.84 | 70.33 |
|        mirror       | 58.59 | 67.52 |
|         rug         | 65.57 | 71.99 |
|        field        | 25.53 | 41.28 |
|       armchair      | 39.98 | 57.18 |
|         seat        | 64.05 | 80.46 |
|        fence        | 36.95 | 49.24 |
|         desk        | 46.06 | 63.52 |
|         rock        | 32.36 | 43.05 |
|       wardrobe      | 48.19 | 60.19 |
|         lamp        | 56.85 | 70.67 |
|       bathtub       | 77.23 | 84.84 |
|       railing       | 34.49 | 47.76 |
|       cushion       | 50.98 | 65.54 |
|         base        | 20.14 | 29.27 |
|         box         | 22.73 | 29.41 |
|        column       | 42.99 | 54.87 |
|      signboard      | 34.12 |  48.3 |
|   chest of drawers  | 31.57 |  49.6 |
|       counter       | 18.03 | 22.24 |
|         sand        |  34.1 | 49.69 |
|         sink        | 65.09 | 75.24 |
|      skyscraper     | 48.18 | 60.05 |
|      fireplace      |  67.3 | 82.93 |
|     refrigerator    | 72.13 | 86.62 |
|      grandstand     | 39.25 |  63.1 |
|         path        | 15.28 | 21.77 |
|        stairs       |  26.9 |  32.7 |
|        runway       | 68.14 |  91.0 |
|         case        | 41.84 | 61.87 |
|      pool table     | 88.25 | 92.47 |
|        pillow       | 53.17 | 65.37 |
|     screen door     | 67.43 | 75.74 |
|       stairway      | 24.43 | 35.86 |
|        river        |  8.23 | 15.09 |
|        bridge       | 40.93 | 47.09 |
|       bookcase      | 39.65 | 53.86 |
|        blind        | 45.69 | 51.78 |
|     coffee table    | 53.83 | 75.57 |
|        toilet       | 79.04 | 88.74 |
|        flower       |  32.8 | 44.11 |
|         book        | 44.48 | 64.67 |
|         hill        | 13.59 |  19.2 |
|        bench        | 41.44 | 56.77 |
|      countertop     | 53.39 | 74.27 |
|        stove        |  59.4 |  66.2 |
|         palm        | 45.77 | 64.51 |
|    kitchen island   | 28.28 | 47.54 |
|       computer      | 55.95 | 64.22 |
|     swivel chair    |  37.2 | 50.47 |
|         boat        | 66.09 | 80.05 |
|         bar         | 11.53 | 15.74 |
|    arcade machine   | 79.03 | 83.23 |
|        hovel        | 11.61 |  15.4 |
|         bus         | 81.04 | 93.06 |
|        towel        |  56.6 |  73.0 |
|        light        |  46.5 | 50.87 |
|        truck        | 17.72 | 22.25 |
|        tower        |  4.91 |  7.81 |
|      chandelier     | 64.41 | 76.95 |
|        awning       | 24.79 | 27.93 |
|     streetlight     | 20.36 | 26.86 |
|        booth        | 42.42 | 46.94 |
| television receiver | 61.89 | 69.58 |
|       airplane      | 55.18 | 64.37 |
|      dirt track     | 11.79 | 31.39 |
|       apparel       | 26.93 | 43.03 |
|         pole        | 16.56 | 21.93 |
|         land        |  4.4  |  7.16 |
|      bannister      | 10.38 | 13.01 |
|      escalator      | 30.66 | 37.16 |
|       ottoman       | 42.15 | 57.07 |
|        bottle       | 23.84 | 29.46 |
|        buffet       | 38.25 | 45.01 |
|        poster       | 33.02 |  39.6 |
|        stage        | 12.33 | 17.65 |
|         van         | 36.61 | 50.22 |
|         ship        | 74.19 | 80.86 |
|       fountain      |  19.0 | 19.55 |
|    conveyer belt    | 77.92 | 87.85 |
|        canopy       | 16.19 | 18.84 |
|        washer       | 80.69 | 83.96 |
|      plaything      | 19.08 | 28.24 |
|    swimming pool    | 72.12 | 82.72 |
|        stool        | 32.79 | 38.81 |
|        barrel       | 30.51 | 64.27 |
|        basket       | 23.59 | 32.75 |
|      waterfall      | 47.38 | 60.89 |
|         tent        | 95.52 | 97.63 |
|         bag         | 10.71 | 13.01 |
|       minibike      |  57.7 |  65.7 |
|        cradle       | 70.77 | 94.02 |
|         oven        | 26.68 |  54.2 |
|         ball        |  46.8 | 56.78 |
|         food        | 42.99 |  47.8 |
|         step        |  7.12 |  8.42 |
|         tank        | 39.05 | 43.51 |
|      trade name     | 22.69 | 25.36 |
|      microwave      | 38.45 | 42.89 |
|         pot         | 37.29 | 43.57 |
|        animal       | 50.33 | 55.72 |
|       bicycle       | 52.71 | 72.61 |
|         lake        | 52.02 | 62.63 |
|      dishwasher     | 56.34 | 69.12 |
|        screen       | 59.48 | 80.92 |
|       blanket       |  8.74 | 10.39 |
|      sculpture      | 53.31 | 74.32 |
|         hood        | 54.96 | 59.61 |
|        sconce       | 40.26 | 49.67 |
|         vase        | 31.87 | 45.32 |
|    traffic light    | 27.29 | 42.26 |
|         tray        |  5.17 |  8.32 |
|        ashcan       | 34.83 | 44.89 |
|         fan         | 55.36 |  70.2 |
|         pier        | 40.89 | 80.66 |
|      crt screen     |  1.24 |  3.32 |
|        plate        | 41.99 | 54.34 |
|       monitor       |  3.62 |  4.16 |
|    bulletin board   | 36.85 | 54.02 |
|        shower       |  1.4  |  2.51 |
|       radiator      | 56.65 | 62.49 |
|        glass        | 14.79 | 16.77 |
|        clock        | 30.31 | 35.22 |
|         flag        | 29.69 | 33.91 |
+---------------------+-------+-------+
09/15 19:57:57 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.8000  mIoU: 44.4000  mAcc: 55.5000  data_time: 0.0019  time: 0.2056
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
09/15 19:58:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 530314980
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 530314980
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:58:03 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/elastic_transform'

09/15 19:58:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:58:06 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:58:07 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:58:07 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 19:59:52 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:07:43  time: 1.4024  data_time: 0.0019  memory: 19763  
09/15 20:01:08 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:57:07  time: 1.8338  data_time: 0.0019  memory: 19759  
09/15 20:02:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:50:04  time: 1.2362  data_time: 0.0018  memory: 19733  
09/15 20:03:22 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:47:16  time: 1.3160  data_time: 0.0017  memory: 19761  
09/15 20:04:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:44:25  time: 1.1720  data_time: 0.0018  memory: 19735  
09/15 20:05:33 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:42:05  time: 1.0225  data_time: 0.0020  memory: 19757  
09/15 20:06:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:40:19  time: 1.1083  data_time: 0.0024  memory: 19756  
09/15 20:07:43 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:38:23  time: 1.2084  data_time: 0.0051  memory: 19757  
09/15 20:08:32 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:35:50  time: 1.0021  data_time: 0.0017  memory: 19730  
09/15 20:09:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:33:50  time: 0.9546  data_time: 0.0018  memory: 19698  
09/15 20:10:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:32:12  time: 1.1854  data_time: 0.0018  memory: 19755  
09/15 20:11:15 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:30:37  time: 1.2542  data_time: 0.0020  memory: 19757  
09/15 20:12:15 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:29:19  time: 1.3883  data_time: 0.0016  memory: 19765  
09/15 20:13:19 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:12  time: 1.0546  data_time: 0.0021  memory: 19764  
09/15 20:14:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:05  time: 1.5938  data_time: 0.0017  memory: 19771  
09/15 20:15:12 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:37  time: 1.0244  data_time: 0.0025  memory: 19734  
09/15 20:16:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:15  time: 1.0387  data_time: 0.0019  memory: 556  
09/15 20:16:53 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:55  time: 1.0393  data_time: 0.0016  memory: 19722  
09/15 20:17:54 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:51  time: 1.2919  data_time: 0.0018  memory: 19753  
09/15 20:18:47 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:39  time: 0.9468  data_time: 0.0017  memory: 19754  
09/15 20:19:47 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:35  time: 1.4419  data_time: 0.0018  memory: 19772  
09/15 20:20:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:29  time: 0.9871  data_time: 0.0019  memory: 19736  
09/15 20:21:36 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:20  time: 1.1511  data_time: 0.0022  memory: 19711  
09/15 20:22:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:12  time: 0.9580  data_time: 0.0018  memory: 1752  
09/15 20:23:19 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:15:06  time: 1.0563  data_time: 0.0016  memory: 19739  
09/15 20:24:06 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:59  time: 1.0045  data_time: 0.0017  memory: 556  
09/15 20:24:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:54  time: 0.9190  data_time: 0.0023  memory: 19691  
09/15 20:25:54 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:54  time: 1.2053  data_time: 0.0017  memory: 19744  
09/15 20:26:43 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:50  time: 1.1376  data_time: 0.0017  memory: 19722  
09/15 20:27:31 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:47  time: 0.9136  data_time: 0.0016  memory: 556  
09/15 20:28:24 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:47  time: 1.0042  data_time: 0.0018  memory: 19749  
09/15 20:29:12 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:46  time: 1.0112  data_time: 0.0033  memory: 547  
09/15 20:30:06 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:46  time: 0.9565  data_time: 0.0023  memory: 19754  
09/15 20:31:00 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:48  time: 0.9884  data_time: 0.0020  memory: 19726  
09/15 20:31:53 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:49  time: 0.9663  data_time: 0.0016  memory: 19744  
09/15 20:32:42 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:50  time: 1.0184  data_time: 0.0034  memory: 19696  
09/15 20:33:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:52  time: 0.9822  data_time: 0.0021  memory: 505  
09/15 20:34:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:54  time: 0.9536  data_time: 0.0024  memory: 19765  
09/15 20:35:12 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:57  time: 0.9406  data_time: 0.0017  memory: 19705  
09/15 20:36:03 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8778  data_time: 0.0015  memory: 19767  
09/15 20:36:03 - mmengine - INFO - per class results:
09/15 20:36:03 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 62.56 | 78.64 |
|       building      | 73.18 | 86.75 |
|         sky         | 84.12 | 91.35 |
|        floor        | 68.32 | 82.05 |
|         tree        |  62.4 |  78.6 |
|       ceiling       |  70.8 | 83.78 |
|         road        | 74.04 |  84.4 |
|         bed         | 74.57 | 87.71 |
|      windowpane     | 46.74 | 65.17 |
|        grass        | 59.95 | 79.43 |
|       cabinet       | 49.53 | 63.99 |
|       sidewalk      |  51.3 | 68.92 |
|        person       | 59.66 | 78.16 |
|        earth        | 32.74 | 45.63 |
|         door        | 31.26 | 43.38 |
|        table        |  41.3 | 62.19 |
|       mountain      | 44.34 | 61.06 |
|        plant        | 41.26 | 55.13 |
|       curtain       | 52.97 | 72.11 |
|        chair        | 37.65 | 55.07 |
|         car         |  61.0 |  77.1 |
|        water        | 49.24 | 67.62 |
|       painting      | 46.05 | 66.04 |
|         sofa        | 50.23 | 69.81 |
|        shelf        | 34.73 | 54.67 |
|        house        | 29.74 | 42.89 |
|         sea         |  44.7 | 66.85 |
|        mirror       | 50.06 | 62.87 |
|         rug         | 48.78 |  60.0 |
|        field        |  23.9 | 37.36 |
|       armchair      | 31.13 |  46.0 |
|         seat        | 57.49 | 76.76 |
|        fence        | 26.54 | 38.19 |
|         desk        | 38.01 | 56.11 |
|         rock        | 26.47 | 42.83 |
|       wardrobe      | 40.25 | 51.56 |
|         lamp        | 29.23 | 45.66 |
|       bathtub       |  60.2 | 70.62 |
|       railing       | 27.23 | 40.05 |
|       cushion       | 37.55 | 51.12 |
|         base        | 17.79 | 25.64 |
|         box         | 18.44 | 24.55 |
|        column       | 28.04 |  44.1 |
|      signboard      | 22.14 | 34.72 |
|   chest of drawers  | 29.24 | 45.59 |
|       counter       | 14.16 | 16.15 |
|         sand        | 39.72 | 55.85 |
|         sink        | 47.03 | 62.88 |
|      skyscraper     | 44.27 | 55.89 |
|      fireplace      | 61.59 | 81.37 |
|     refrigerator    | 58.75 |  73.1 |
|      grandstand     | 34.41 | 60.88 |
|         path        | 14.95 |  23.3 |
|        stairs       | 19.52 | 24.98 |
|        runway       | 60.12 | 77.87 |
|         case        | 42.47 | 53.63 |
|      pool table     | 75.95 | 86.82 |
|        pillow       | 40.36 |  55.5 |
|     screen door     | 58.33 | 67.17 |
|       stairway      | 20.07 | 29.64 |
|        river        |  11.7 | 19.92 |
|        bridge       |  44.6 | 54.43 |
|       bookcase      |  32.7 | 47.68 |
|        blind        | 26.19 | 29.76 |
|     coffee table    | 43.54 | 66.71 |
|        toilet       | 59.51 | 73.94 |
|        flower       | 28.03 | 41.97 |
|         book        | 30.81 | 48.59 |
|         hill        | 12.01 | 18.38 |
|        bench        | 38.56 | 54.44 |
|      countertop     | 44.69 | 65.86 |
|        stove        | 51.58 |  67.1 |
|         palm        | 33.02 | 52.54 |
|    kitchen island   | 23.76 | 42.28 |
|       computer      | 45.97 | 56.82 |
|     swivel chair    | 23.47 |  35.3 |
|         boat        |  59.9 | 79.12 |
|         bar         | 30.52 | 42.53 |
|    arcade machine   | 70.91 | 82.68 |
|        hovel        | 24.38 | 29.58 |
|         bus         | 69.94 | 86.87 |
|        towel        | 37.51 | 54.39 |
|        light        | 16.13 | 23.78 |
|        truck        |  9.68 | 13.64 |
|        tower        |  9.94 | 17.13 |
|      chandelier     | 39.41 | 56.32 |
|        awning       | 15.22 | 19.66 |
|     streetlight     |  7.66 | 12.31 |
|        booth        |  38.8 | 44.75 |
| television receiver | 43.47 | 58.45 |
|       airplane      | 37.58 | 51.72 |
|      dirt track     |  6.75 | 36.13 |
|       apparel       | 21.45 | 42.09 |
|         pole        |  7.27 | 10.51 |
|         land        |  2.03 |  3.06 |
|      bannister      |  7.03 |  9.69 |
|      escalator      | 22.77 | 25.01 |
|       ottoman       | 39.57 | 54.11 |
|        bottle       | 23.29 | 40.94 |
|        buffet       | 32.57 | 38.08 |
|        poster       | 22.92 | 30.36 |
|        stage        | 10.28 | 14.52 |
|         van         | 30.04 | 42.22 |
|         ship        | 69.43 |  74.8 |
|       fountain      | 19.09 | 20.13 |
|    conveyer belt    | 67.88 | 74.95 |
|        canopy       |  19.2 | 22.34 |
|        washer       | 61.83 | 68.76 |
|      plaything      | 12.64 |  22.9 |
|    swimming pool    |  74.6 | 81.43 |
|        stool        | 20.81 | 27.62 |
|        barrel       | 33.42 |  60.3 |
|        basket       | 19.51 |  26.7 |
|      waterfall      | 48.57 | 67.79 |
|         tent        | 85.58 | 91.54 |
|         bag         |  6.7  |  9.01 |
|       minibike      | 41.44 | 56.49 |
|        cradle       | 66.54 | 88.67 |
|         oven        | 28.99 |  49.1 |
|         ball        | 39.34 | 49.12 |
|         food        | 44.16 | 51.86 |
|         step        |  6.18 |  6.63 |
|         tank        | 36.52 | 42.22 |
|      trade name     | 13.41 |  16.3 |
|      microwave      | 27.29 | 31.16 |
|         pot         | 23.39 | 31.19 |
|        animal       | 42.37 | 49.12 |
|       bicycle       | 33.31 | 56.15 |
|         lake        | 53.07 |  61.0 |
|      dishwasher     |  45.1 | 58.14 |
|        screen       | 51.18 | 73.77 |
|       blanket       |  6.95 |  9.4  |
|      sculpture      | 44.69 | 63.37 |
|         hood        |  37.8 | 48.05 |
|        sconce       | 22.88 | 33.27 |
|         vase        | 17.72 | 31.18 |
|    traffic light    | 13.75 | 23.77 |
|         tray        |  5.87 |  9.82 |
|        ashcan       | 25.91 | 37.76 |
|         fan         |  28.8 | 44.66 |
|         pier        |  28.7 | 75.58 |
|      crt screen     |  2.59 |  6.83 |
|        plate        | 30.63 | 43.94 |
|       monitor       |  4.45 |  5.35 |
|    bulletin board   | 27.03 | 38.87 |
|        shower       |  0.13 |  0.35 |
|       radiator      | 41.04 | 52.75 |
|        glass        |  7.13 |  8.57 |
|        clock        | 11.52 | 14.81 |
|         flag        | 19.06 | 24.48 |
+---------------------+-------+-------+
09/15 20:36:03 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 73.5700  mIoU: 36.2300  mAcc: 48.5600  data_time: 0.0022  time: 1.1377
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/15 20:36:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 712729605
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 712729605
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:36:40 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/pixelate'

09/15 20:36:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:36:55 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:36:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 20:36:56 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 20:37:56 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:39:18  time: 0.2496  data_time: 0.0015  memory: 19763  
09/15 20:38:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:41  time: 0.7097  data_time: 0.0016  memory: 19759  
09/15 20:38:33 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:56  time: 0.2282  data_time: 0.0016  memory: 19733  
09/15 20:38:53 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:37  time: 0.3121  data_time: 0.0021  memory: 19761  
09/15 20:39:13 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:56  time: 0.2113  data_time: 0.0015  memory: 19735  
09/15 20:39:31 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:36  time: 0.0392  data_time: 0.0017  memory: 19757  
09/15 20:39:52 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:48  time: 0.2544  data_time: 0.0014  memory: 19756  
09/15 20:40:06 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:40  time: 0.2490  data_time: 0.0020  memory: 19757  
09/15 20:40:12 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:14  time: 0.1311  data_time: 0.0014  memory: 19730  
09/15 20:40:17 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:02  time: 0.0355  data_time: 0.0015  memory: 19698  
09/15 20:40:22 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:04  time: 0.2036  data_time: 0.0015  memory: 19755  
09/15 20:40:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:13  time: 0.2080  data_time: 0.0016  memory: 19757  
09/15 20:40:38 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:40  time: 0.3150  data_time: 0.0014  memory: 19765  
09/15 20:40:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:14  time: 0.0397  data_time: 0.0016  memory: 19764  
09/15 20:41:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:53  time: 0.6758  data_time: 0.0016  memory: 19771  
09/15 20:41:08 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:17  time: 0.0370  data_time: 0.0017  memory: 19734  
09/15 20:41:10 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:43  time: 0.0379  data_time: 0.0017  memory: 556  
09/15 20:41:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:16  time: 0.1715  data_time: 0.0015  memory: 19722  
09/15 20:41:27 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:59  time: 0.3120  data_time: 0.0015  memory: 19753  
09/15 20:41:33 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:37  time: 0.0371  data_time: 0.0015  memory: 19754  
09/15 20:41:44 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:20  time: 0.4163  data_time: 0.0015  memory: 19772  
09/15 20:41:52 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:02  time: 0.0374  data_time: 0.0016  memory: 19736  
09/15 20:41:57 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:42  time: 0.1314  data_time: 0.0015  memory: 19711  
09/15 20:41:59 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:21  time: 0.0340  data_time: 0.0014  memory: 1752  
09/15 20:42:05 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:05  time: 0.1609  data_time: 0.0014  memory: 19739  
09/15 20:42:07 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:47  time: 0.0349  data_time: 0.0015  memory: 556  
09/15 20:42:10 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:30  time: 0.0365  data_time: 0.0015  memory: 19691  
09/15 20:42:19 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:18  time: 0.2207  data_time: 0.0014  memory: 19744  
09/15 20:42:23 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:04  time: 0.1580  data_time: 0.0016  memory: 19722  
09/15 20:42:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:49  time: 0.0350  data_time: 0.0014  memory: 556  
09/15 20:42:28 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:36  time: 0.0349  data_time: 0.0014  memory: 19749  
09/15 20:42:30 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:23  time: 0.0356  data_time: 0.0028  memory: 547  
09/15 20:42:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:12  time: 0.0331  data_time: 0.0013  memory: 19754  
09/15 20:42:43 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:01  time: 0.0406  data_time: 0.0017  memory: 19726  
09/15 20:42:48 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:50  time: 0.0540  data_time: 0.0013  memory: 19744  
09/15 20:42:51 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:39  time: 0.0354  data_time: 0.0016  memory: 19696  
09/15 20:42:53 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:28  time: 0.0347  data_time: 0.0016  memory: 505  
09/15 20:42:57 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0356  data_time: 0.0015  memory: 19765  
09/15 20:43:01 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0340  data_time: 0.0015  memory: 19705  
09/15 20:43:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0307  data_time: 0.0012  memory: 19767  
09/15 20:43:06 - mmengine - INFO - per class results:
09/15 20:43:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.15 | 87.83 |
|       building      | 78.68 | 91.75 |
|         sky         | 93.92 | 96.94 |
|        floor        | 78.56 | 90.25 |
|         tree        | 71.23 | 85.96 |
|       ceiling       | 82.13 | 91.12 |
|         road        | 80.45 | 87.63 |
|         bed         | 84.87 | 93.35 |
|      windowpane     | 57.72 | 75.56 |
|        grass        | 66.41 | 82.79 |
|       cabinet       | 56.86 | 70.43 |
|       sidewalk      | 61.73 |  79.8 |
|        person       | 74.45 | 85.51 |
|        earth        | 33.04 | 47.23 |
|         door        | 38.04 | 50.56 |
|        table        | 52.86 | 73.63 |
|       mountain      | 51.52 | 66.28 |
|        plant        | 47.39 | 58.89 |
|       curtain       | 69.33 | 82.11 |
|        chair        |  51.3 | 65.64 |
|         car         | 78.87 | 86.98 |
|        water        | 45.34 | 63.43 |
|       painting      | 66.39 | 82.03 |
|         sofa        |  58.7 |  80.5 |
|        shelf        | 40.52 | 58.74 |
|        house        | 38.32 | 55.28 |
|         sea         | 39.02 | 57.95 |
|        mirror       | 57.63 | 68.58 |
|         rug         | 61.44 | 68.14 |
|        field        | 28.91 | 43.46 |
|       armchair      |  33.8 | 44.97 |
|         seat        | 62.99 | 80.05 |
|        fence        | 38.85 | 50.79 |
|         desk        | 45.69 | 60.73 |
|         rock        | 22.57 | 27.79 |
|       wardrobe      | 44.36 | 54.37 |
|         lamp        | 56.64 | 67.54 |
|       bathtub       | 71.61 | 78.25 |
|       railing       | 32.27 | 41.43 |
|       cushion       |  48.0 | 58.09 |
|         base        | 13.57 | 18.94 |
|         box         | 23.25 | 33.57 |
|        column       | 40.34 | 52.22 |
|      signboard      | 34.29 |  45.0 |
|   chest of drawers  | 31.22 | 51.26 |
|       counter       | 16.08 | 20.32 |
|         sand        | 37.66 | 52.83 |
|         sink        | 63.62 | 72.59 |
|      skyscraper     | 46.01 | 51.58 |
|      fireplace      | 68.58 | 80.48 |
|     refrigerator    | 69.46 | 82.57 |
|      grandstand     | 37.54 | 67.04 |
|         path        | 19.17 | 28.01 |
|        stairs       | 25.32 | 33.82 |
|        runway       |  67.5 | 88.45 |
|         case        | 46.19 | 64.12 |
|      pool table     | 89.26 | 93.27 |
|        pillow       | 52.46 | 65.15 |
|     screen door     | 64.59 | 70.33 |
|       stairway      | 27.59 | 39.84 |
|        river        |  8.22 | 19.17 |
|        bridge       | 58.67 | 69.21 |
|       bookcase      | 34.47 | 46.95 |
|        blind        | 41.03 | 46.61 |
|     coffee table    |  55.2 |  75.7 |
|        toilet       |  81.2 | 87.29 |
|        flower       | 30.43 | 38.65 |
|         book        | 43.67 | 66.58 |
|         hill        |  6.98 | 11.88 |
|        bench        | 40.64 | 57.31 |
|      countertop     | 52.87 | 67.61 |
|        stove        | 62.73 | 70.23 |
|         palm        | 42.21 | 56.44 |
|    kitchen island   |  31.7 | 51.14 |
|       computer      | 55.86 | 63.19 |
|     swivel chair    | 35.29 | 47.77 |
|         boat        | 39.98 | 43.58 |
|         bar         | 25.29 | 37.22 |
|    arcade machine   | 63.92 | 70.22 |
|        hovel        |  5.21 |  5.75 |
|         bus         | 76.04 | 92.46 |
|        towel        | 53.71 |  64.2 |
|        light        | 49.66 | 55.81 |
|        truck        | 19.33 | 31.48 |
|        tower        |  7.69 | 12.31 |
|      chandelier     | 59.86 | 76.78 |
|        awning       | 23.04 | 25.13 |
|     streetlight     | 20.59 | 25.19 |
|        booth        | 37.68 | 40.54 |
| television receiver | 61.78 | 71.69 |
|       airplane      | 52.17 | 56.13 |
|      dirt track     |  8.03 | 27.59 |
|       apparel       |  25.2 | 40.14 |
|         pole        | 16.56 | 22.84 |
|         land        |  4.13 |  5.7  |
|      bannister      |  9.89 | 11.76 |
|      escalator      | 21.46 | 23.36 |
|       ottoman       | 39.78 | 47.63 |
|        bottle       | 18.42 | 23.13 |
|        buffet       | 36.29 |  43.9 |
|        poster       |  24.3 | 28.16 |
|        stage        | 12.02 | 15.52 |
|         van         | 34.35 | 53.03 |
|         ship        | 16.63 | 24.84 |
|       fountain      | 20.09 | 21.21 |
|    conveyer belt    | 76.53 | 86.08 |
|        canopy       | 15.78 | 16.65 |
|        washer       | 65.01 |  65.9 |
|      plaything      | 18.39 | 28.17 |
|    swimming pool    |  60.8 |  87.6 |
|        stool        | 37.28 | 46.47 |
|        barrel       | 16.91 | 64.06 |
|        basket       | 24.46 | 31.48 |
|      waterfall      | 32.69 |  41.3 |
|         tent        | 95.79 | 96.62 |
|         bag         |  6.71 |  7.25 |
|       minibike      | 44.19 | 48.37 |
|        cradle       | 76.91 |  93.3 |
|         oven        | 27.42 | 53.53 |
|         ball        |  46.0 | 53.59 |
|         food        | 30.13 | 31.54 |
|         step        |  7.96 |  9.4  |
|         tank        | 38.72 | 41.66 |
|      trade name     | 24.03 | 27.26 |
|      microwave      | 38.97 | 43.47 |
|         pot         | 37.24 | 42.73 |
|        animal       | 46.49 | 53.16 |
|       bicycle       |  49.7 | 65.35 |
|         lake        | 53.96 | 62.91 |
|      dishwasher     | 53.09 | 65.51 |
|        screen       | 63.17 | 85.59 |
|       blanket       | 10.77 | 12.25 |
|      sculpture      | 58.28 | 70.77 |
|         hood        | 54.85 | 58.87 |
|        sconce       | 40.47 | 51.11 |
|         vase        |  29.1 | 40.31 |
|    traffic light    | 25.04 | 34.15 |
|         tray        |  5.37 |  9.33 |
|        ashcan       | 37.33 | 48.67 |
|         fan         | 56.74 | 67.63 |
|         pier        | 36.64 | 65.99 |
|      crt screen     |  7.47 | 20.14 |
|        plate        | 35.39 | 44.83 |
|       monitor       |  3.84 |  4.68 |
|    bulletin board   | 33.19 | 48.52 |
|        shower       |  0.86 |  1.68 |
|       radiator      | 50.55 |  56.4 |
|        glass        |  11.6 | 12.37 |
|        clock        | 29.08 | 34.77 |
|         flag        | 29.78 | 32.79 |
+---------------------+-------+-------+
09/15 20:43:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.1200  mIoU: 42.3900  mAcc: 52.9400  data_time: 0.0017  time: 0.1850
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/15 20:43:42 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 175923038
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 175923038
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:43:42 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/jpeg_compression'

09/15 20:44:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:44:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:44:14 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 20:44:15 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 20:45:35 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:51:56  time: 0.2542  data_time: 0.0014  memory: 19763  
09/15 20:45:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:33:00  time: 0.7453  data_time: 0.0015  memory: 19759  
09/15 20:46:12 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:06  time: 0.2305  data_time: 0.0015  memory: 19733  
09/15 20:46:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:39  time: 0.3162  data_time: 0.0013  memory: 19761  
09/15 20:46:52 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:16  time: 0.2144  data_time: 0.0013  memory: 19735  
09/15 20:47:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:16:33  time: 0.0465  data_time: 0.0025  memory: 19757  
09/15 20:47:32 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:15:30  time: 0.2583  data_time: 0.0013  memory: 19756  
09/15 20:47:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:14:08  time: 0.2379  data_time: 0.0012  memory: 19757  
09/15 20:47:53 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:30  time: 0.1380  data_time: 0.0013  memory: 19730  
09/15 20:47:58 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:11:09  time: 0.0390  data_time: 0.0013  memory: 19698  
09/15 20:48:04 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:02  time: 0.2055  data_time: 0.0014  memory: 19755  
09/15 20:48:09 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:07  time: 0.2453  data_time: 0.0047  memory: 19757  
09/15 20:48:20 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:28  time: 0.3192  data_time: 0.0012  memory: 19765  
09/15 20:48:33 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:58  time: 0.0552  data_time: 0.0016  memory: 19764  
09/15 20:48:47 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:33  time: 0.6807  data_time: 0.0014  memory: 19771  
09/15 20:48:51 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:54  time: 0.0438  data_time: 0.0015  memory: 19734  
09/15 20:48:53 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:16  time: 0.0447  data_time: 0.0016  memory: 556  
09/15 20:48:59 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:47  time: 0.1786  data_time: 0.0013  memory: 19722  
09/15 20:49:11 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:27  time: 0.3185  data_time: 0.0014  memory: 19753  
09/15 20:49:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:02  time: 0.0431  data_time: 0.0014  memory: 19754  
09/15 20:49:28 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:43  time: 0.4221  data_time: 0.0015  memory: 19772  
09/15 20:49:36 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:23  time: 0.0506  data_time: 0.0017  memory: 19736  
09/15 20:49:41 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:01  time: 0.1359  data_time: 0.0014  memory: 19711  
09/15 20:49:44 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:39  time: 0.0418  data_time: 0.0015  memory: 1752  
09/15 20:49:50 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:21  time: 0.1652  data_time: 0.0013  memory: 19739  
09/15 20:49:52 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:01  time: 0.0459  data_time: 0.0014  memory: 556  
09/15 20:49:55 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:43  time: 0.0442  data_time: 0.0014  memory: 19691  
09/15 20:50:06 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:30  time: 0.2455  data_time: 0.0031  memory: 19744  
09/15 20:50:11 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:14  time: 0.1648  data_time: 0.0014  memory: 19722  
09/15 20:50:13 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:59  time: 0.0450  data_time: 0.0014  memory: 556  
09/15 20:50:17 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:45  time: 0.0430  data_time: 0.0014  memory: 19749  
09/15 20:50:19 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:31  time: 0.0421  data_time: 0.0015  memory: 547  
09/15 20:50:27 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:18  time: 0.1140  data_time: 0.0013  memory: 19754  
09/15 20:50:34 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:06  time: 0.0433  data_time: 0.0015  memory: 19726  
09/15 20:50:39 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:54  time: 0.0440  data_time: 0.0013  memory: 19744  
09/15 20:50:42 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:43  time: 0.0519  data_time: 0.0017  memory: 19696  
09/15 20:50:45 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0442  data_time: 0.0016  memory: 505  
09/15 20:50:48 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0438  data_time: 0.0014  memory: 19765  
09/15 20:50:53 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0436  data_time: 0.0014  memory: 19705  
09/15 20:50:58 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0381  data_time: 0.0012  memory: 19767  
09/15 20:50:59 - mmengine - INFO - per class results:
09/15 20:50:59 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.76 | 88.03 |
|       building      | 79.17 | 91.45 |
|         sky         | 93.63 | 97.11 |
|        floor        | 77.35 | 90.52 |
|         tree        |  71.6 | 85.06 |
|       ceiling       | 80.36 | 88.62 |
|         road        | 79.59 | 88.71 |
|         bed         | 82.95 | 92.13 |
|      windowpane     | 58.27 | 74.94 |
|        grass        | 68.42 | 85.95 |
|       cabinet       | 53.03 | 67.19 |
|       sidewalk      | 59.68 | 77.39 |
|        person       | 75.07 | 88.45 |
|        earth        | 35.65 | 49.62 |
|         door        | 35.99 | 48.14 |
|        table        | 52.83 | 73.29 |
|       mountain      | 51.67 | 68.77 |
|        plant        | 47.19 |  56.4 |
|       curtain       | 69.55 | 81.36 |
|        chair        | 49.11 |  61.1 |
|         car         | 81.44 |  90.6 |
|        water        | 51.01 | 67.01 |
|       painting      | 66.92 | 79.89 |
|         sofa        | 59.66 |  79.3 |
|        shelf        | 38.45 | 56.14 |
|        house        | 36.85 | 50.56 |
|         sea         | 48.35 | 72.56 |
|        mirror       | 58.09 | 67.04 |
|         rug         | 54.17 | 59.52 |
|        field        | 28.32 | 41.06 |
|       armchair      | 35.69 |  49.3 |
|         seat        | 60.72 | 78.65 |
|        fence        | 37.05 | 49.06 |
|         desk        | 44.24 | 64.76 |
|         rock        | 39.83 | 55.51 |
|       wardrobe      | 40.92 | 55.97 |
|         lamp        | 55.85 | 65.65 |
|       bathtub       | 74.21 | 83.81 |
|       railing       | 33.39 | 44.18 |
|       cushion       | 47.56 | 59.57 |
|         base        | 16.58 | 21.85 |
|         box         | 20.29 | 29.21 |
|        column       | 42.46 | 55.42 |
|      signboard      | 32.75 | 42.81 |
|   chest of drawers  | 32.98 | 50.46 |
|       counter       | 16.64 | 19.79 |
|         sand        | 47.46 |  61.9 |
|         sink        | 63.61 | 74.32 |
|      skyscraper     | 48.98 | 59.92 |
|      fireplace      | 69.72 | 81.04 |
|     refrigerator    | 67.69 | 88.14 |
|      grandstand     | 35.39 | 59.07 |
|         path        | 17.95 | 27.25 |
|        stairs       | 19.31 | 23.71 |
|        runway       | 65.33 | 86.84 |
|         case        | 42.33 | 51.89 |
|      pool table     | 85.94 | 90.25 |
|        pillow       | 48.14 | 55.79 |
|     screen door     | 60.05 | 64.24 |
|       stairway      | 25.25 | 40.53 |
|        river        | 12.81 | 22.44 |
|        bridge       | 54.96 |  64.9 |
|       bookcase      | 30.47 | 44.68 |
|        blind        |  25.1 | 26.57 |
|     coffee table    |  55.6 | 72.86 |
|        toilet       | 79.79 | 88.25 |
|        flower       | 33.17 | 46.16 |
|         book        | 43.58 | 59.76 |
|         hill        | 16.45 | 21.11 |
|        bench        | 45.07 | 59.41 |
|      countertop     | 52.82 | 67.09 |
|        stove        | 62.81 | 74.57 |
|         palm        | 45.91 | 60.57 |
|    kitchen island   | 25.11 | 39.79 |
|       computer      |  54.4 | 60.43 |
|     swivel chair    | 36.09 | 47.51 |
|         boat        | 44.07 | 52.51 |
|         bar         |  20.2 | 28.69 |
|    arcade machine   | 81.38 | 87.01 |
|        hovel        | 17.42 | 19.32 |
|         bus         |  78.9 | 89.81 |
|        towel        | 54.19 |  62.3 |
|        light        | 46.31 | 51.45 |
|        truck        | 21.72 | 29.01 |
|        tower        | 10.36 | 16.77 |
|      chandelier     | 62.11 | 75.71 |
|        awning       | 24.31 | 26.09 |
|     streetlight     | 19.46 | 24.03 |
|        booth        | 49.06 | 54.85 |
| television receiver | 57.47 | 68.35 |
|       airplane      | 54.39 | 61.09 |
|      dirt track     |  9.26 | 38.89 |
|       apparel       | 22.61 | 36.06 |
|         pole        | 14.08 | 18.66 |
|         land        |  3.26 |  4.89 |
|      bannister      |  5.28 |  6.7  |
|      escalator      | 24.21 | 28.32 |
|       ottoman       | 42.47 | 51.61 |
|        bottle       | 30.95 | 41.84 |
|        buffet       | 41.38 | 45.93 |
|        poster       | 24.99 | 28.49 |
|        stage        | 12.08 | 14.92 |
|         van         | 37.69 | 58.03 |
|         ship        | 55.12 | 78.43 |
|       fountain      | 19.69 | 20.66 |
|    conveyer belt    | 68.92 |  88.1 |
|        canopy       |  14.3 | 16.39 |
|        washer       | 75.23 | 76.91 |
|      plaything      | 17.18 | 25.18 |
|    swimming pool    | 66.88 | 83.17 |
|        stool        | 33.15 | 39.21 |
|        barrel       | 26.75 | 44.95 |
|        basket       | 23.23 | 30.21 |
|      waterfall      | 51.61 | 68.93 |
|         tent        | 92.09 | 97.82 |
|         bag         |  6.62 |  7.47 |
|       minibike      | 54.15 | 63.41 |
|        cradle       | 70.72 | 92.85 |
|         oven        | 30.78 |  47.6 |
|         ball        | 40.41 | 45.72 |
|         food        | 48.04 | 53.56 |
|         step        |  7.28 |  8.11 |
|         tank        | 41.26 | 42.63 |
|      trade name     | 20.54 | 22.32 |
|      microwave      | 45.83 | 50.65 |
|         pot         | 36.24 | 42.36 |
|        animal       | 49.51 | 54.77 |
|       bicycle       | 51.87 | 69.05 |
|         lake        | 52.76 | 61.35 |
|      dishwasher     | 53.46 |  66.1 |
|        screen       | 63.28 |  82.2 |
|       blanket       |  5.43 |  5.89 |
|      sculpture      | 50.31 | 72.98 |
|         hood        | 55.73 | 59.82 |
|        sconce       | 36.97 | 43.29 |
|         vase        | 32.33 |  42.2 |
|    traffic light    | 24.06 | 33.14 |
|         tray        |  7.67 | 13.09 |
|        ashcan       | 33.12 | 39.85 |
|         fan         | 54.81 | 66.43 |
|         pier        | 36.71 | 72.29 |
|      crt screen     |  6.8  | 19.25 |
|        plate        | 43.89 | 57.31 |
|       monitor       |  4.52 |  5.52 |
|    bulletin board   | 30.11 | 41.42 |
|        shower       |  0.66 |  2.77 |
|       radiator      | 53.74 | 57.83 |
|        glass        | 10.04 |  10.6 |
|        clock        | 25.33 | 29.22 |
|         flag        | 28.84 | 31.52 |
+---------------------+-------+-------+
09/15 20:50:59 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.1100  mIoU: 43.2500  mAcc: 53.8100  data_time: 0.0018  time: 0.2018
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
09/15 20:51:18 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2057332735
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2057332735
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:51:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/elastic_transform'

09/15 20:51:42 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:51:42 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:51:44 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 20:51:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 20:53:52 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:22:55  time: 1.2810  data_time: 0.0030  memory: 19763  
09/15 20:55:04 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:03:23  time: 1.7388  data_time: 0.0016  memory: 19759  
09/15 20:56:05 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:53:44  time: 1.2153  data_time: 0.0016  memory: 19733  
09/15 20:57:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:49:27  time: 1.2548  data_time: 0.0027  memory: 19761  
09/15 20:58:18 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:45:57  time: 1.1572  data_time: 0.0017  memory: 19735  
09/15 20:59:21 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:43:09  time: 1.0073  data_time: 0.0016  memory: 19757  
09/15 21:00:28 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:41:11  time: 1.1007  data_time: 0.0015  memory: 19756  
09/15 21:01:30 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:39:04  time: 1.1981  data_time: 0.0014  memory: 19757  
09/15 21:02:18 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:36:25  time: 0.9960  data_time: 0.0015  memory: 19730  
09/15 21:03:11 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:34:21  time: 0.9617  data_time: 0.0017  memory: 19698  
09/15 21:04:07 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:32:39  time: 1.1839  data_time: 0.0016  memory: 19755  
09/15 21:04:59 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:30:54  time: 1.1798  data_time: 0.0016  memory: 19757  
09/15 21:05:56 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:29:28  time: 1.2571  data_time: 0.0014  memory: 19765  
09/15 21:06:57 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:16  time: 1.0300  data_time: 0.0018  memory: 19764  
09/15 21:08:00 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:05  time: 1.5944  data_time: 0.0014  memory: 19771  
09/15 21:08:49 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:36  time: 0.9930  data_time: 0.0016  memory: 19734  
09/15 21:09:39 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:14  time: 1.0133  data_time: 0.0018  memory: 556  
09/15 21:10:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:54  time: 1.0154  data_time: 0.0014  memory: 19722  
09/15 21:11:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:48  time: 1.2381  data_time: 0.0016  memory: 19753  
09/15 21:12:20 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:36  time: 0.9524  data_time: 0.0015  memory: 19754  
09/15 21:13:20 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:32  time: 1.4557  data_time: 0.0015  memory: 19772  
09/15 21:14:16 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:25  time: 0.9891  data_time: 0.0017  memory: 19736  
09/15 21:15:07 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:16  time: 1.1026  data_time: 0.0017  memory: 19711  
09/15 21:15:57 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:08  time: 0.9653  data_time: 0.0015  memory: 1752  
09/15 21:16:48 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:15:02  time: 1.0444  data_time: 0.0015  memory: 19739  
09/15 21:17:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:54  time: 0.9906  data_time: 0.0015  memory: 556  
09/15 21:18:25 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:50  time: 0.9347  data_time: 0.0057  memory: 19691  
09/15 21:19:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:50  time: 1.2259  data_time: 0.0026  memory: 19744  
09/15 21:20:10 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:47  time: 1.1589  data_time: 0.0017  memory: 19722  
09/15 21:20:58 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:44  time: 0.9020  data_time: 0.0015  memory: 556  
09/15 21:21:51 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:44  time: 0.9950  data_time: 0.0016  memory: 19749  
09/15 21:22:38 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:43  time: 0.9662  data_time: 0.0017  memory: 547  
09/15 21:23:30 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:44  time: 0.8911  data_time: 0.0014  memory: 19754  
09/15 21:24:24 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:45  time: 0.9858  data_time: 0.0029  memory: 19726  
09/15 21:25:16 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:47  time: 0.9692  data_time: 0.0014  memory: 19744  
09/15 21:26:05 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:48  time: 1.0019  data_time: 0.0022  memory: 19696  
09/15 21:26:54 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:51  time: 0.9914  data_time: 0.0018  memory: 505  
09/15 21:27:41 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:53  time: 0.9621  data_time: 0.0040  memory: 19765  
09/15 21:28:33 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:56  time: 0.9456  data_time: 0.0015  memory: 19705  
09/15 21:29:23 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8846  data_time: 0.0013  memory: 19767  
09/15 21:29:24 - mmengine - INFO - per class results:
09/15 21:29:24 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 62.68 | 78.93 |
|       building      | 73.16 | 86.79 |
|         sky         | 84.08 | 91.13 |
|        floor        | 68.14 | 81.37 |
|         tree        | 62.49 | 78.91 |
|       ceiling       | 70.39 |  83.5 |
|         road        | 74.83 | 84.87 |
|         bed         | 73.81 |  86.7 |
|      windowpane     | 47.21 | 65.17 |
|        grass        | 59.14 | 78.53 |
|       cabinet       | 48.95 | 63.64 |
|       sidewalk      | 51.79 | 68.68 |
|        person       | 59.74 | 78.42 |
|        earth        | 33.56 | 45.76 |
|         door        | 31.69 | 42.93 |
|        table        | 42.58 | 63.16 |
|       mountain      | 46.38 | 63.36 |
|        plant        | 41.59 | 55.54 |
|       curtain       | 51.26 | 69.36 |
|        chair        | 38.34 | 54.86 |
|         car         |  63.0 | 79.12 |
|        water        | 49.64 | 66.81 |
|       painting      | 45.86 | 66.49 |
|         sofa        | 48.75 | 69.28 |
|        shelf        | 34.83 | 53.84 |
|        house        | 32.52 | 47.65 |
|         sea         | 41.63 | 61.45 |
|        mirror       | 50.94 | 64.92 |
|         rug         | 53.48 | 66.47 |
|        field        | 22.55 | 37.52 |
|       armchair      |  28.5 | 42.94 |
|         seat        | 59.11 | 78.88 |
|        fence        | 25.36 | 37.93 |
|         desk        | 38.75 | 58.79 |
|         rock        | 27.46 | 44.12 |
|       wardrobe      | 38.33 | 50.24 |
|         lamp        | 29.99 | 47.62 |
|       bathtub       | 58.36 | 68.04 |
|       railing       | 26.91 | 40.59 |
|       cushion       | 35.93 | 50.31 |
|         base        | 15.45 |  23.4 |
|         box         | 20.58 | 27.94 |
|        column       | 29.09 | 44.79 |
|      signboard      | 22.09 |  34.7 |
|   chest of drawers  | 26.52 | 41.25 |
|       counter       | 12.63 | 14.14 |
|         sand        | 39.89 | 54.59 |
|         sink        | 45.99 |  60.5 |
|      skyscraper     | 47.85 | 58.95 |
|      fireplace      | 59.36 |  78.7 |
|     refrigerator    | 60.32 | 73.73 |
|      grandstand     | 29.33 | 54.26 |
|         path        | 16.79 | 26.38 |
|        stairs       | 17.23 | 21.35 |
|        runway       | 63.64 | 84.19 |
|         case        | 44.08 | 57.83 |
|      pool table     | 75.39 | 85.78 |
|        pillow       | 38.61 | 52.92 |
|     screen door     | 60.67 | 70.45 |
|       stairway      | 17.68 | 28.54 |
|        river        |  9.47 | 17.76 |
|        bridge       | 36.69 | 44.42 |
|       bookcase      | 32.73 | 45.63 |
|        blind        |  36.8 | 43.12 |
|     coffee table    | 42.01 | 63.45 |
|        toilet       | 55.04 | 71.47 |
|        flower       |  26.8 | 41.36 |
|         book        | 32.33 | 52.14 |
|         hill        | 11.57 | 16.92 |
|        bench        | 36.09 | 51.35 |
|      countertop     | 38.46 | 59.79 |
|        stove        |  58.7 | 70.03 |
|         palm        | 32.66 | 52.27 |
|    kitchen island   | 24.37 | 41.71 |
|       computer      | 45.94 | 56.99 |
|     swivel chair    | 30.21 |  45.1 |
|         boat        | 60.25 | 79.39 |
|         bar         | 22.36 | 32.59 |
|    arcade machine   | 75.77 | 84.24 |
|        hovel        | 22.91 | 32.67 |
|         bus         | 70.48 | 88.42 |
|        towel        |  32.8 | 48.67 |
|        light        | 11.75 | 18.15 |
|        truck        |  8.42 | 13.12 |
|        tower        |  4.14 |  6.81 |
|      chandelier     | 38.06 | 54.61 |
|        awning       | 19.36 | 24.19 |
|     streetlight     |  7.27 | 11.54 |
|        booth        | 39.46 | 46.02 |
| television receiver | 44.04 | 56.55 |
|       airplane      | 36.19 | 51.49 |
|      dirt track     | 13.82 | 52.67 |
|       apparel       | 20.88 | 42.18 |
|         pole        |  7.71 | 11.32 |
|         land        |  2.21 |  3.23 |
|      bannister      |  6.43 |  8.69 |
|      escalator      | 22.87 | 25.85 |
|       ottoman       | 34.92 | 47.89 |
|        bottle       | 21.55 | 33.66 |
|        buffet       | 33.41 | 41.04 |
|        poster       | 26.06 | 33.59 |
|        stage        | 10.83 |  15.8 |
|         van         | 30.35 | 39.58 |
|         ship        | 68.36 | 73.12 |
|       fountain      | 18.48 | 20.15 |
|    conveyer belt    | 69.45 | 79.23 |
|        canopy       | 11.03 | 13.19 |
|        washer       | 65.32 | 71.89 |
|      plaything      | 12.67 | 23.24 |
|    swimming pool    | 68.88 | 83.06 |
|        stool        | 21.67 | 28.96 |
|        barrel       | 44.62 | 62.49 |
|        basket       | 21.63 | 31.25 |
|      waterfall      | 41.85 | 58.24 |
|         tent        | 72.54 | 81.52 |
|         bag         |  6.89 |  9.11 |
|       minibike      | 47.09 | 62.04 |
|        cradle       | 64.57 |  85.6 |
|         oven        | 26.13 | 51.29 |
|         ball        | 33.44 | 40.26 |
|         food        |  40.3 | 49.41 |
|         step        |  7.54 |  8.33 |
|         tank        | 34.97 | 41.79 |
|      trade name     | 15.74 | 18.41 |
|      microwave      | 38.29 | 45.39 |
|         pot         | 23.68 | 32.19 |
|        animal       | 39.99 | 45.25 |
|       bicycle       | 30.62 | 47.48 |
|         lake        | 53.58 | 61.57 |
|      dishwasher     | 47.44 | 60.07 |
|        screen       | 52.66 | 74.74 |
|       blanket       |  8.29 |  9.93 |
|      sculpture      | 41.01 | 62.26 |
|         hood        | 39.23 | 50.62 |
|        sconce       | 19.36 | 29.19 |
|         vase        | 17.75 | 29.31 |
|    traffic light    |  15.7 | 27.48 |
|         tray        |  6.18 | 10.64 |
|        ashcan       | 24.57 |  37.2 |
|         fan         | 25.71 | 40.69 |
|         pier        | 26.48 | 70.38 |
|      crt screen     |  3.86 | 10.36 |
|        plate        | 28.96 | 41.45 |
|       monitor       |  4.7  |  5.64 |
|    bulletin board   | 32.52 | 46.15 |
|        shower       |  0.29 |  0.65 |
|       radiator      | 34.21 | 43.56 |
|        glass        |  8.31 |  9.87 |
|        clock        |  18.4 |  24.2 |
|         flag        | 19.15 | 24.28 |
+---------------------+-------+-------+
09/15 21:29:24 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 73.5900  mIoU: 36.0300  mAcc: 48.4000  data_time: 0.0024  time: 1.1295
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/15 21:30:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 950141655
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 950141655
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:30:46 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/pixelate'

09/15 21:31:25 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:31:25 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:31:27 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 21:31:27 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 21:33:08 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:05:30  time: 0.2523  data_time: 0.0018  memory: 19763  
09/15 21:33:32 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:30  time: 0.7147  data_time: 0.0018  memory: 19759  
09/15 21:33:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:18  time: 0.2288  data_time: 0.0017  memory: 19733  
09/15 21:34:05 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:42  time: 0.3131  data_time: 0.0023  memory: 19761  
09/15 21:34:24 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:39  time: 0.2168  data_time: 0.0018  memory: 19735  
09/15 21:34:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:26  time: 0.0504  data_time: 0.0019  memory: 19757  
09/15 21:35:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:00  time: 0.2563  data_time: 0.0016  memory: 19756  
09/15 21:35:18 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:24  time: 0.2360  data_time: 0.0016  memory: 19757  
09/15 21:35:24 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:35  time: 0.1371  data_time: 0.0017  memory: 19730  
09/15 21:35:29 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:06  time: 0.0381  data_time: 0.0016  memory: 19698  
09/15 21:35:35 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:52  time: 0.2029  data_time: 0.0016  memory: 19755  
09/15 21:35:40 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:50  time: 0.2129  data_time: 0.0017  memory: 19757  
09/15 21:35:51 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:06  time: 0.3178  data_time: 0.0014  memory: 19765  
09/15 21:36:03 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:32  time: 0.0429  data_time: 0.0018  memory: 19764  
09/15 21:36:17 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:02  time: 0.6795  data_time: 0.0016  memory: 19771  
09/15 21:36:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:20  time: 0.0387  data_time: 0.0018  memory: 19734  
09/15 21:36:23 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:40  time: 0.0389  data_time: 0.0017  memory: 556  
09/15 21:36:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:08  time: 0.1729  data_time: 0.0015  memory: 19722  
09/15 21:36:40 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:46  time: 0.3139  data_time: 0.0016  memory: 19753  
09/15 21:36:47 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:19  time: 0.0387  data_time: 0.0015  memory: 19754  
09/15 21:36:57 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:58  time: 0.4183  data_time: 0.0016  memory: 19772  
09/15 21:37:05 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:36  time: 0.0370  data_time: 0.0016  memory: 19736  
09/15 21:37:10 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:13  time: 0.1311  data_time: 0.0016  memory: 19711  
09/15 21:37:12 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:49  time: 0.0364  data_time: 0.0015  memory: 1752  
09/15 21:37:18 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:30  time: 0.1623  data_time: 0.0015  memory: 19739  
09/15 21:37:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:09  time: 0.0378  data_time: 0.0015  memory: 556  
09/15 21:37:23 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:51  time: 0.0386  data_time: 0.0015  memory: 19691  
09/15 21:37:33 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:36  time: 0.2235  data_time: 0.0015  memory: 19744  
09/15 21:37:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:20  time: 0.1599  data_time: 0.0015  memory: 19722  
09/15 21:37:40 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:04  time: 0.0378  data_time: 0.0015  memory: 556  
09/15 21:37:43 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:49  time: 0.0380  data_time: 0.0015  memory: 19749  
09/15 21:37:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:34  time: 0.0360  data_time: 0.0016  memory: 547  
09/15 21:37:53 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:21  time: 0.0397  data_time: 0.0015  memory: 19754  
09/15 21:37:59 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:09  time: 0.0370  data_time: 0.0016  memory: 19726  
09/15 21:38:04 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:56  time: 0.0390  data_time: 0.0014  memory: 19744  
09/15 21:38:07 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:44  time: 0.0386  data_time: 0.0017  memory: 19696  
09/15 21:38:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:32  time: 0.0380  data_time: 0.0019  memory: 505  
09/15 21:38:12 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:21  time: 0.0435  data_time: 0.0016  memory: 19765  
09/15 21:38:16 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0359  data_time: 0.0016  memory: 19705  
09/15 21:38:22 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0324  data_time: 0.0013  memory: 19767  
09/15 21:38:22 - mmengine - INFO - per class results:
09/15 21:38:22 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.15 | 87.83 |
|       building      | 78.68 | 91.75 |
|         sky         | 93.92 | 96.94 |
|        floor        | 78.56 | 90.25 |
|         tree        | 71.23 | 85.96 |
|       ceiling       | 82.13 | 91.12 |
|         road        | 80.45 | 87.63 |
|         bed         | 84.87 | 93.35 |
|      windowpane     | 57.72 | 75.56 |
|        grass        | 66.41 | 82.79 |
|       cabinet       | 56.86 | 70.43 |
|       sidewalk      | 61.73 |  79.8 |
|        person       | 74.45 | 85.51 |
|        earth        | 33.04 | 47.23 |
|         door        | 38.04 | 50.56 |
|        table        | 52.86 | 73.63 |
|       mountain      | 51.52 | 66.28 |
|        plant        | 47.39 | 58.89 |
|       curtain       | 69.33 | 82.11 |
|        chair        |  51.3 | 65.64 |
|         car         | 78.87 | 86.98 |
|        water        | 45.34 | 63.43 |
|       painting      | 66.39 | 82.03 |
|         sofa        |  58.7 |  80.5 |
|        shelf        | 40.52 | 58.74 |
|        house        | 38.32 | 55.28 |
|         sea         | 39.02 | 57.95 |
|        mirror       | 57.63 | 68.58 |
|         rug         | 61.44 | 68.14 |
|        field        | 28.91 | 43.46 |
|       armchair      |  33.8 | 44.97 |
|         seat        | 62.99 | 80.05 |
|        fence        | 38.85 | 50.79 |
|         desk        | 45.69 | 60.73 |
|         rock        | 22.57 | 27.79 |
|       wardrobe      | 44.36 | 54.37 |
|         lamp        | 56.64 | 67.54 |
|       bathtub       | 71.61 | 78.25 |
|       railing       | 32.27 | 41.43 |
|       cushion       |  48.0 | 58.09 |
|         base        | 13.57 | 18.94 |
|         box         | 23.25 | 33.57 |
|        column       | 40.34 | 52.22 |
|      signboard      | 34.29 |  45.0 |
|   chest of drawers  | 31.22 | 51.26 |
|       counter       | 16.08 | 20.32 |
|         sand        | 37.66 | 52.83 |
|         sink        | 63.62 | 72.59 |
|      skyscraper     | 46.01 | 51.58 |
|      fireplace      | 68.58 | 80.48 |
|     refrigerator    | 69.46 | 82.57 |
|      grandstand     | 37.54 | 67.04 |
|         path        | 19.17 | 28.01 |
|        stairs       | 25.32 | 33.82 |
|        runway       |  67.5 | 88.45 |
|         case        | 46.19 | 64.12 |
|      pool table     | 89.26 | 93.27 |
|        pillow       | 52.46 | 65.15 |
|     screen door     | 64.59 | 70.33 |
|       stairway      | 27.59 | 39.84 |
|        river        |  8.22 | 19.17 |
|        bridge       | 58.67 | 69.21 |
|       bookcase      | 34.47 | 46.95 |
|        blind        | 41.03 | 46.61 |
|     coffee table    |  55.2 |  75.7 |
|        toilet       |  81.2 | 87.29 |
|        flower       | 30.43 | 38.65 |
|         book        | 43.67 | 66.58 |
|         hill        |  6.98 | 11.88 |
|        bench        | 40.64 | 57.31 |
|      countertop     | 52.87 | 67.61 |
|        stove        | 62.73 | 70.23 |
|         palm        | 42.21 | 56.44 |
|    kitchen island   |  31.7 | 51.14 |
|       computer      | 55.86 | 63.19 |
|     swivel chair    | 35.29 | 47.77 |
|         boat        | 39.98 | 43.58 |
|         bar         | 25.29 | 37.22 |
|    arcade machine   | 63.92 | 70.22 |
|        hovel        |  5.21 |  5.75 |
|         bus         | 76.04 | 92.46 |
|        towel        | 53.71 |  64.2 |
|        light        | 49.66 | 55.81 |
|        truck        | 19.33 | 31.48 |
|        tower        |  7.69 | 12.31 |
|      chandelier     | 59.86 | 76.78 |
|        awning       | 23.04 | 25.13 |
|     streetlight     | 20.59 | 25.19 |
|        booth        | 37.68 | 40.54 |
| television receiver | 61.78 | 71.69 |
|       airplane      | 52.17 | 56.13 |
|      dirt track     |  8.03 | 27.59 |
|       apparel       |  25.2 | 40.14 |
|         pole        | 16.56 | 22.84 |
|         land        |  4.13 |  5.7  |
|      bannister      |  9.89 | 11.76 |
|      escalator      | 21.46 | 23.36 |
|       ottoman       | 39.78 | 47.63 |
|        bottle       | 18.42 | 23.13 |
|        buffet       | 36.29 |  43.9 |
|        poster       |  24.3 | 28.16 |
|        stage        | 12.02 | 15.52 |
|         van         | 34.35 | 53.03 |
|         ship        | 16.63 | 24.84 |
|       fountain      | 20.09 | 21.21 |
|    conveyer belt    | 76.53 | 86.08 |
|        canopy       | 15.78 | 16.65 |
|        washer       | 65.01 |  65.9 |
|      plaything      | 18.39 | 28.17 |
|    swimming pool    |  60.8 |  87.6 |
|        stool        | 37.28 | 46.47 |
|        barrel       | 16.91 | 64.06 |
|        basket       | 24.46 | 31.48 |
|      waterfall      | 32.69 |  41.3 |
|         tent        | 95.79 | 96.62 |
|         bag         |  6.71 |  7.25 |
|       minibike      | 44.19 | 48.37 |
|        cradle       | 76.91 |  93.3 |
|         oven        | 27.42 | 53.53 |
|         ball        |  46.0 | 53.59 |
|         food        | 30.13 | 31.54 |
|         step        |  7.96 |  9.4  |
|         tank        | 38.72 | 41.66 |
|      trade name     | 24.03 | 27.26 |
|      microwave      | 38.97 | 43.47 |
|         pot         | 37.24 | 42.73 |
|        animal       | 46.49 | 53.16 |
|       bicycle       |  49.7 | 65.35 |
|         lake        | 53.96 | 62.91 |
|      dishwasher     | 53.09 | 65.51 |
|        screen       | 63.17 | 85.59 |
|       blanket       | 10.77 | 12.25 |
|      sculpture      | 58.28 | 70.77 |
|         hood        | 54.85 | 58.87 |
|        sconce       | 40.47 | 51.11 |
|         vase        |  29.1 | 40.31 |
|    traffic light    | 25.04 | 34.15 |
|         tray        |  5.37 |  9.33 |
|        ashcan       | 37.33 | 48.67 |
|         fan         | 56.74 | 67.63 |
|         pier        | 36.64 | 65.99 |
|      crt screen     |  7.47 | 20.14 |
|        plate        | 35.39 | 44.83 |
|       monitor       |  3.84 |  4.68 |
|    bulletin board   | 33.19 | 48.52 |
|        shower       |  0.86 |  1.68 |
|       radiator      | 50.55 |  56.4 |
|        glass        |  11.6 | 12.37 |
|        clock        | 29.08 | 34.77 |
|         flag        | 29.78 | 32.79 |
+---------------------+-------+-------+
09/15 21:38:22 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.1200  mIoU: 42.3900  mAcc: 52.9400  data_time: 0.0021  time: 0.2072
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/15 21:39:43 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1709821254
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1709821254
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:39:44 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_512x512/jpeg_compression'

09/15 21:40:22 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:40:22 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:40:23 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 21:40:24 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
09/15 21:42:04 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:05:11  time: 0.2739  data_time: 0.0019  memory: 19763  
09/15 21:42:28 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:25  time: 0.7171  data_time: 0.0018  memory: 19759  
09/15 21:42:42 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:20  time: 0.2319  data_time: 0.0017  memory: 19733  
09/15 21:43:02 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:46  time: 0.3285  data_time: 0.0017  memory: 19761  
09/15 21:43:23 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:50  time: 0.2210  data_time: 0.0016  memory: 19735  
09/15 21:43:41 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:36  time: 0.0480  data_time: 0.0017  memory: 19757  
09/15 21:44:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:08  time: 0.2606  data_time: 0.0016  memory: 19756  
09/15 21:44:17 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:31  time: 0.2483  data_time: 0.0016  memory: 19757  
09/15 21:44:23 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:43  time: 0.1407  data_time: 0.0017  memory: 19730  
09/15 21:44:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:13  time: 0.0444  data_time: 0.0017  memory: 19698  
09/15 21:44:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:00  time: 0.2099  data_time: 0.0016  memory: 19755  
09/15 21:44:40 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:57  time: 0.2182  data_time: 0.0018  memory: 19757  
09/15 21:44:51 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:14  time: 0.3246  data_time: 0.0015  memory: 19765  
09/15 21:45:04 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:40  time: 0.0476  data_time: 0.0018  memory: 19764  
09/15 21:45:19 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:11  time: 0.6829  data_time: 0.0015  memory: 19771  
09/15 21:45:23 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:28  time: 0.0468  data_time: 0.0018  memory: 19734  
09/15 21:45:25 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:48  time: 0.0471  data_time: 0.0018  memory: 556  
09/15 21:45:31 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:15  time: 0.1791  data_time: 0.0015  memory: 19722  
09/15 21:45:43 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:53  time: 0.3202  data_time: 0.0017  memory: 19753  
09/15 21:45:50 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:26  time: 0.0455  data_time: 0.0024  memory: 19754  
09/15 21:46:00 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:04  time: 0.4216  data_time: 0.0015  memory: 19772  
09/15 21:46:09 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:42  time: 0.0435  data_time: 0.0017  memory: 19736  
09/15 21:46:14 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:18  time: 0.1382  data_time: 0.0017  memory: 19711  
09/15 21:46:16 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:54  time: 0.0427  data_time: 0.0015  memory: 1752  
09/15 21:46:23 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:35  time: 0.1685  data_time: 0.0016  memory: 19739  
09/15 21:46:25 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:14  time: 0.0440  data_time: 0.0016  memory: 556  
09/15 21:46:28 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:55  time: 0.0479  data_time: 0.0016  memory: 19691  
09/15 21:46:38 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:40  time: 0.2306  data_time: 0.0016  memory: 19744  
09/15 21:46:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:23  time: 0.1663  data_time: 0.0015  memory: 19722  
09/15 21:46:45 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:06  time: 0.0446  data_time: 0.0015  memory: 556  
09/15 21:46:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:51  time: 0.0445  data_time: 0.0015  memory: 19749  
09/15 21:46:51 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:36  time: 0.0427  data_time: 0.0018  memory: 547  
09/15 21:46:58 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:23  time: 0.0407  data_time: 0.0014  memory: 19754  
09/15 21:47:04 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:10  time: 0.0453  data_time: 0.0017  memory: 19726  
09/15 21:47:09 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:57  time: 0.0446  data_time: 0.0015  memory: 19744  
09/15 21:47:13 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:45  time: 0.0510  data_time: 0.0018  memory: 19696  
09/15 21:47:15 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:33  time: 0.0457  data_time: 0.0017  memory: 505  
09/15 21:47:19 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:21  time: 0.0476  data_time: 0.0017  memory: 19765  
09/15 21:47:23 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0424  data_time: 0.0015  memory: 19705  
09/15 21:47:29 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0381  data_time: 0.0012  memory: 19767  
09/15 21:47:29 - mmengine - INFO - per class results:
09/15 21:47:29 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.76 | 88.03 |
|       building      | 79.17 | 91.45 |
|         sky         | 93.63 | 97.11 |
|        floor        | 77.35 | 90.52 |
|         tree        |  71.6 | 85.06 |
|       ceiling       | 80.36 | 88.62 |
|         road        | 79.59 | 88.71 |
|         bed         | 82.95 | 92.13 |
|      windowpane     | 58.27 | 74.94 |
|        grass        | 68.42 | 85.95 |
|       cabinet       | 53.03 | 67.19 |
|       sidewalk      | 59.68 | 77.39 |
|        person       | 75.07 | 88.45 |
|        earth        | 35.65 | 49.62 |
|         door        | 35.99 | 48.14 |
|        table        | 52.83 | 73.29 |
|       mountain      | 51.67 | 68.77 |
|        plant        | 47.19 |  56.4 |
|       curtain       | 69.55 | 81.36 |
|        chair        | 49.11 |  61.1 |
|         car         | 81.44 |  90.6 |
|        water        | 51.01 | 67.01 |
|       painting      | 66.92 | 79.89 |
|         sofa        | 59.66 |  79.3 |
|        shelf        | 38.45 | 56.14 |
|        house        | 36.85 | 50.56 |
|         sea         | 48.35 | 72.56 |
|        mirror       | 58.09 | 67.04 |
|         rug         | 54.17 | 59.52 |
|        field        | 28.32 | 41.06 |
|       armchair      | 35.69 |  49.3 |
|         seat        | 60.72 | 78.65 |
|        fence        | 37.05 | 49.06 |
|         desk        | 44.24 | 64.76 |
|         rock        | 39.83 | 55.51 |
|       wardrobe      | 40.92 | 55.97 |
|         lamp        | 55.85 | 65.65 |
|       bathtub       | 74.21 | 83.81 |
|       railing       | 33.39 | 44.18 |
|       cushion       | 47.56 | 59.57 |
|         base        | 16.58 | 21.85 |
|         box         | 20.29 | 29.21 |
|        column       | 42.46 | 55.42 |
|      signboard      | 32.75 | 42.81 |
|   chest of drawers  | 32.98 | 50.46 |
|       counter       | 16.64 | 19.79 |
|         sand        | 47.46 |  61.9 |
|         sink        | 63.61 | 74.32 |
|      skyscraper     | 48.98 | 59.92 |
|      fireplace      | 69.72 | 81.04 |
|     refrigerator    | 67.69 | 88.14 |
|      grandstand     | 35.39 | 59.07 |
|         path        | 17.95 | 27.25 |
|        stairs       | 19.31 | 23.71 |
|        runway       | 65.33 | 86.84 |
|         case        | 42.33 | 51.89 |
|      pool table     | 85.94 | 90.25 |
|        pillow       | 48.14 | 55.79 |
|     screen door     | 60.05 | 64.24 |
|       stairway      | 25.25 | 40.53 |
|        river        | 12.81 | 22.44 |
|        bridge       | 54.96 |  64.9 |
|       bookcase      | 30.47 | 44.68 |
|        blind        |  25.1 | 26.57 |
|     coffee table    |  55.6 | 72.86 |
|        toilet       | 79.79 | 88.25 |
|        flower       | 33.17 | 46.16 |
|         book        | 43.58 | 59.76 |
|         hill        | 16.45 | 21.11 |
|        bench        | 45.07 | 59.41 |
|      countertop     | 52.82 | 67.09 |
|        stove        | 62.81 | 74.57 |
|         palm        | 45.91 | 60.57 |
|    kitchen island   | 25.11 | 39.79 |
|       computer      |  54.4 | 60.43 |
|     swivel chair    | 36.09 | 47.51 |
|         boat        | 44.07 | 52.51 |
|         bar         |  20.2 | 28.69 |
|    arcade machine   | 81.38 | 87.01 |
|        hovel        | 17.42 | 19.32 |
|         bus         |  78.9 | 89.81 |
|        towel        | 54.19 |  62.3 |
|        light        | 46.31 | 51.45 |
|        truck        | 21.72 | 29.01 |
|        tower        | 10.36 | 16.77 |
|      chandelier     | 62.11 | 75.71 |
|        awning       | 24.31 | 26.09 |
|     streetlight     | 19.46 | 24.03 |
|        booth        | 49.06 | 54.85 |
| television receiver | 57.47 | 68.35 |
|       airplane      | 54.39 | 61.09 |
|      dirt track     |  9.26 | 38.89 |
|       apparel       | 22.61 | 36.06 |
|         pole        | 14.08 | 18.66 |
|         land        |  3.26 |  4.89 |
|      bannister      |  5.28 |  6.7  |
|      escalator      | 24.21 | 28.32 |
|       ottoman       | 42.47 | 51.61 |
|        bottle       | 30.95 | 41.84 |
|        buffet       | 41.38 | 45.93 |
|        poster       | 24.99 | 28.49 |
|        stage        | 12.08 | 14.92 |
|         van         | 37.69 | 58.03 |
|         ship        | 55.12 | 78.43 |
|       fountain      | 19.69 | 20.66 |
|    conveyer belt    | 68.92 |  88.1 |
|        canopy       |  14.3 | 16.39 |
|        washer       | 75.23 | 76.91 |
|      plaything      | 17.18 | 25.18 |
|    swimming pool    | 66.88 | 83.17 |
|        stool        | 33.15 | 39.21 |
|        barrel       | 26.75 | 44.95 |
|        basket       | 23.23 | 30.21 |
|      waterfall      | 51.61 | 68.93 |
|         tent        | 92.09 | 97.82 |
|         bag         |  6.62 |  7.47 |
|       minibike      | 54.15 | 63.41 |
|        cradle       | 70.72 | 92.85 |
|         oven        | 30.78 |  47.6 |
|         ball        | 40.41 | 45.72 |
|         food        | 48.04 | 53.56 |
|         step        |  7.28 |  8.11 |
|         tank        | 41.26 | 42.63 |
|      trade name     | 20.54 | 22.32 |
|      microwave      | 45.83 | 50.65 |
|         pot         | 36.24 | 42.36 |
|        animal       | 49.51 | 54.77 |
|       bicycle       | 51.87 | 69.05 |
|         lake        | 52.76 | 61.35 |
|      dishwasher     | 53.46 |  66.1 |
|        screen       | 63.28 |  82.2 |
|       blanket       |  5.43 |  5.89 |
|      sculpture      | 50.31 | 72.98 |
|         hood        | 55.73 | 59.82 |
|        sconce       | 36.97 | 43.29 |
|         vase        | 32.33 |  42.2 |
|    traffic light    | 24.06 | 33.14 |
|         tray        |  7.67 | 13.09 |
|        ashcan       | 33.12 | 39.85 |
|         fan         | 54.81 | 66.43 |
|         pier        | 36.71 | 72.29 |
|      crt screen     |  6.8  | 19.25 |
|        plate        | 43.89 | 57.31 |
|       monitor       |  4.52 |  5.52 |
|    bulletin board   | 30.11 | 41.42 |
|        shower       |  0.66 |  2.77 |
|       radiator      | 53.74 | 57.83 |
|        glass        | 10.04 |  10.6 |
|        clock        | 25.33 | 29.22 |
|         flag        | 28.84 | 31.52 |
+---------------------+-------+-------+
09/15 21:47:29 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.1100  mIoU: 43.2500  mAcc: 53.8100  data_time: 0.0020  time: 0.2126
Finished processing corruption type: jpeg_compression
Runtime: 1726429651

============================= JOB FEEDBACK =============================

NodeName=uc2n513
Job ID: 24235236
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 07:15:39
CPU Efficiency: 5.50% of 5-12:01:04 core-walltime
Job Wall-clock time: 08:15:04
Memory Utilized: 3.35 GB
Memory Efficiency: 3.35% of 100.00 GB
