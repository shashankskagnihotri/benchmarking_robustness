Started at Sat Jul 13 15:48:53 CEST 2024
07/13 15:50:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1407529984
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1407529984
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 15:50:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 15:51:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 15:51:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 15:51:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 15:51:02 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 15:55:28 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:52:43  time: 3.2930  data_time: 0.0019  memory: 23492  
07/13 15:58:07 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:14:41  time: 3.5965  data_time: 0.0019  memory: 23394  
07/13 16:00:06 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:51:44  time: 2.4136  data_time: 0.0017  memory: 22859  
07/13 16:02:29 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:42:59  time: 2.8611  data_time: 0.0016  memory: 23553  
07/13 16:04:41 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:35:32  time: 2.1887  data_time: 0.0016  memory: 23335  
07/13 16:06:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:29:25  time: 1.9088  data_time: 0.0017  memory: 23439  
07/13 16:09:01 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:24:44  time: 2.0699  data_time: 0.0016  memory: 23343  
07/13 16:10:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:19:46  time: 2.2040  data_time: 0.0015  memory: 23302  
07/13 16:12:32 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:14:02  time: 1.9770  data_time: 0.0015  memory: 22735  
07/13 16:14:12 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:09:29  time: 1.7712  data_time: 0.0015  memory: 21970  
07/13 16:15:58 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:05:43  time: 2.2902  data_time: 0.0016  memory: 23409  
07/13 16:17:35 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:01:56  time: 2.1801  data_time: 0.0017  memory: 23345  
07/13 16:19:22 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:58:51  time: 2.4803  data_time: 0.0015  memory: 23560  
07/13 16:21:20 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:56:15  time: 1.9269  data_time: 0.0018  memory: 23545  
07/13 16:23:16 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:53:43  time: 3.1939  data_time: 0.0015  memory: 23807  
07/13 16:24:47 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:50:37  time: 1.8694  data_time: 0.0023  memory: 22871  
07/13 16:26:22 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:47:47  time: 1.9196  data_time: 0.0018  memory: 5331  
07/13 16:27:53 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:45:01  time: 1.8569  data_time: 0.0015  memory: 22486  
07/13 16:29:45 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:42:47  time: 2.2533  data_time: 0.0017  memory: 23335  
07/13 16:31:23 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:40:20  time: 1.7482  data_time: 0.0016  memory: 23358  
07/13 16:33:13 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:38:10  time: 2.6855  data_time: 0.0015  memory: 23816  
07/13 16:34:59 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:35:56  time: 1.8691  data_time: 0.0016  memory: 22809  
07/13 16:36:36 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:33:40  time: 2.0349  data_time: 0.0016  memory: 22317  
07/13 16:38:12 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:31:26  time: 1.7449  data_time: 0.0016  memory: 7877  
07/13 16:39:47 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:29:14  time: 1.9926  data_time: 0.0016  memory: 22858  
07/13 16:41:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:27:01  time: 1.8174  data_time: 0.0016  memory: 5386  
07/13 16:42:46 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:24:54  time: 1.7230  data_time: 0.0016  memory: 21812  
07/13 16:44:40 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:22:58  time: 2.3723  data_time: 0.0016  memory: 23088  
07/13 16:46:16 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:20:56  time: 2.2861  data_time: 0.0016  memory: 22518  
07/13 16:47:46 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:18:54  time: 1.6996  data_time: 0.0016  memory: 5330  
07/13 16:49:24 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:16:56  time: 1.8410  data_time: 0.0017  memory: 23258  
07/13 16:50:55 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:14:58  time: 1.8127  data_time: 0.0018  memory: 5249  
07/13 16:52:35 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:13:03  time: 1.6732  data_time: 0.0016  memory: 23378  
07/13 16:54:16 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:11:09  time: 1.8652  data_time: 0.0018  memory: 22664  
07/13 16:55:56 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:09:16  time: 1.8529  data_time: 0.0016  memory: 23119  
07/13 16:57:28 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:07:22  time: 1.9351  data_time: 0.0018  memory: 21917  
07/13 16:59:02 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:05:30  time: 1.8838  data_time: 0.0018  memory: 4714  
07/13 17:00:32 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:39  time: 1.7105  data_time: 0.0016  memory: 23652  
07/13 17:02:10 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:49  time: 1.7617  data_time: 0.0016  memory: 22204  
07/13 17:03:46 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.6463  data_time: 0.0014  memory: 23652  
07/13 17:03:46 - mmengine - INFO - per class results:
07/13 17:03:46 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  4.77 |  5.21 |
|       building      | 21.01 |  33.8 |
|         sky         | 26.71 | 83.08 |
|        floor        |  2.46 |  2.56 |
|         tree        |  8.95 | 85.46 |
|       ceiling       |  5.07 |  5.37 |
|         road        |  0.7  |  0.71 |
|         bed         |  1.68 |  1.74 |
|      windowpane     |  3.86 |  4.5  |
|        grass        |  1.5  |  1.66 |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       | 18.69 | 25.93 |
|        earth        |  4.94 | 14.56 |
|         door        |  0.1  |  0.1  |
|        table        |  0.08 |  0.08 |
|       mountain      |  7.31 | 15.06 |
|        plant        |  1.17 |  1.2  |
|       curtain       |  2.66 |  2.95 |
|        chair        |  0.21 |  0.22 |
|         car         | 20.53 | 25.24 |
|        water        |  1.5  |  5.51 |
|       painting      |  4.93 |  5.13 |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  3.83 |  5.96 |
|         sea         |  0.01 |  0.01 |
|        mirror       |  0.03 |  0.03 |
|         rug         |  0.58 |  0.59 |
|        field        |  0.17 |  0.19 |
|       armchair      |  0.01 |  0.01 |
|         seat        |  0.0  |  0.0  |
|        fence        |  1.82 |  2.01 |
|         desk        |  0.0  |  0.0  |
|         rock        |  6.16 | 33.81 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.38 |  0.38 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  1.0  |  1.04 |
|       cushion       |  0.19 |  0.19 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.01 |  0.01 |
|      signboard      |  4.89 |  7.64 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  2.36 |  2.79 |
|         sink        |  0.05 |  0.05 |
|      skyscraper     |  3.73 |  3.99 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  1.05 |  1.45 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.31 |  0.31 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.1  |  0.1  |
|        river        |  0.0  |  0.0  |
|        bridge       |  5.17 |  8.29 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.03 |  0.05 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  2.76 |  2.82 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  1.69 | 24.62 |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.49 |  0.5  |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.01 |  0.01 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  3.78 |  3.79 |
|         pole        |  2.03 |  2.53 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.26 |  0.29 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 13.55 | 13.55 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.16 |  0.16 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.0  |  0.01 |
|         tent        |  0.39 |  0.41 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.01 |  0.01 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.06 |  0.06 |
|       bicycle       |  2.17 |  3.33 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 19.23 | 20.25 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  1.68 |  1.69 |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  1.37 |  1.55 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  5.46 |  7.47 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.21 |  0.66 |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/13 17:03:46 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 18.4200  mIoU: 1.5100  mAcc: 3.1500  data_time: 0.0030  time: 2.1817
07/13 17:03:52 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1481013668
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1481013668
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 17:03:52 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 17:03:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 17:03:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 17:03:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 17:03:58 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 17:07:37 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:22:13  time: 3.2236  data_time: 0.0018  memory: 23492  
07/13 17:10:12 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:58:21  time: 3.4956  data_time: 0.0019  memory: 23394  
07/13 17:12:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:41:15  time: 2.3192  data_time: 0.0017  memory: 22859  
07/13 17:14:30 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:34:46  time: 2.6881  data_time: 0.0016  memory: 23553  
07/13 17:16:38 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:28:42  time: 2.1261  data_time: 0.0016  memory: 23335  
07/13 17:18:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:23:33  time: 1.9063  data_time: 0.0018  memory: 23439  
07/13 17:20:55 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:19:55  time: 2.1074  data_time: 0.0015  memory: 23343  
07/13 17:22:53 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:15:39  time: 2.2107  data_time: 0.0015  memory: 23302  
07/13 17:24:26 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:10:28  time: 1.9772  data_time: 0.0015  memory: 22735  
07/13 17:26:05 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:06:21  time: 1.7642  data_time: 0.0016  memory: 21970  
07/13 17:27:49 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:02:52  time: 2.3216  data_time: 0.0017  memory: 23409  
07/13 17:29:26 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:59:25  time: 2.1891  data_time: 0.0017  memory: 23345  
07/13 17:31:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:56:37  time: 2.4648  data_time: 0.0015  memory: 23560  
07/13 17:33:14 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:54:21  time: 1.9279  data_time: 0.0017  memory: 23545  
07/13 17:35:15 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:52:07  time: 3.3584  data_time: 0.0016  memory: 23807  
07/13 17:36:47 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:49:14  time: 1.9554  data_time: 0.0018  memory: 22871  
07/13 17:38:24 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:46:34  time: 1.9062  data_time: 0.0018  memory: 5331  
07/13 17:39:58 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:43:59  time: 2.0133  data_time: 0.0015  memory: 22486  
07/13 17:41:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:41:54  time: 2.3207  data_time: 0.0017  memory: 23335  
07/13 17:43:32 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:39:34  time: 1.7544  data_time: 0.0015  memory: 23358  
07/13 17:45:25 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:37:30  time: 2.7605  data_time: 0.0017  memory: 23816  
07/13 17:47:10 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:35:20  time: 1.8158  data_time: 0.0017  memory: 22809  
07/13 17:48:47 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:33:07  time: 2.0313  data_time: 0.0017  memory: 22317  
07/13 17:50:23 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:30:56  time: 1.7779  data_time: 0.0016  memory: 7877  
07/13 17:51:59 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:28:48  time: 1.9943  data_time: 0.0015  memory: 22858  
07/13 17:53:25 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:26:37  time: 1.8117  data_time: 0.0016  memory: 5386  
07/13 17:54:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:24:33  time: 1.7129  data_time: 0.0016  memory: 21812  
07/13 17:56:45 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:22:36  time: 2.2226  data_time: 0.0016  memory: 23088  
07/13 17:58:17 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:20:35  time: 2.1562  data_time: 0.0016  memory: 22518  
07/13 17:59:45 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:18:35  time: 1.6804  data_time: 0.0016  memory: 5330  
07/13 18:01:22 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:16:39  time: 1.8259  data_time: 0.0015  memory: 23258  
07/13 18:02:53 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:14:43  time: 1.8707  data_time: 0.0018  memory: 5249  
07/13 18:04:31 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:12:50  time: 1.6698  data_time: 0.0015  memory: 23378  
07/13 18:06:10 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:10:58  time: 1.8993  data_time: 0.0017  memory: 22664  
07/13 18:07:49 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:09:07  time: 1.7952  data_time: 0.0015  memory: 23119  
07/13 18:09:21 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:07:15  time: 1.9096  data_time: 0.0018  memory: 21917  
07/13 18:10:56 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:05:25  time: 1.8900  data_time: 0.0018  memory: 4714  
07/13 18:12:26 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:36  time: 1.7095  data_time: 0.0016  memory: 23652  
07/13 18:14:03 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:47  time: 1.7694  data_time: 0.0016  memory: 22204  
07/13 18:15:40 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.6641  data_time: 0.0014  memory: 23652  
07/13 18:15:40 - mmengine - INFO - per class results:
07/13 18:15:40 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.0  |  0.0  |
|       building      | 0.0  |  0.0  |
|         sky         | 9.39 | 99.28 |
|        floor        | 0.0  |  0.0  |
|         tree        | 5.99 |  13.0 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.07 |  0.07 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.0  |  0.0  |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 18:15:40 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 9.4300  mIoU: 0.1000  mAcc: 0.7500  data_time: 0.0025  time: 2.1507
07/13 18:15:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2071109151
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2071109151
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 18:15:46 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='pgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 18:15:50 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 18:15:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 18:15:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 18:15:52 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 18:19:30 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:21:56  time: 3.2386  data_time: 0.0018  memory: 23492  
07/13 18:22:05 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:58:03  time: 3.5055  data_time: 0.0018  memory: 23394  
07/13 18:24:07 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:41:53  time: 2.4903  data_time: 0.0017  memory: 22859  
07/13 18:26:34 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:36:17  time: 2.7894  data_time: 0.0016  memory: 23553  
07/13 18:28:49 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:30:37  time: 2.1887  data_time: 0.0016  memory: 23335  
07/13 18:30:55 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:25:18  time: 1.9967  data_time: 0.0017  memory: 23439  
07/13 18:33:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:21:39  time: 2.1724  data_time: 0.0015  memory: 23343  
07/13 18:35:14 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:17:29  time: 2.3111  data_time: 0.0016  memory: 23302  
07/13 18:36:49 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:12:09  time: 2.0028  data_time: 0.0016  memory: 22735  
07/13 18:38:33 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:08:03  time: 1.8990  data_time: 0.0016  memory: 21970  
07/13 18:40:18 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:04:24  time: 2.3165  data_time: 0.0017  memory: 23409  
07/13 18:41:56 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:00:50  time: 2.2094  data_time: 0.0018  memory: 23345  
07/13 18:43:45 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:57:55  time: 2.5189  data_time: 0.0015  memory: 23560  
07/13 18:45:44 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:55:28  time: 1.9986  data_time: 0.0017  memory: 23545  
07/13 18:47:43 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:53:04  time: 3.3279  data_time: 0.0016  memory: 23807  
07/13 18:49:16 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:50:06  time: 1.8871  data_time: 0.0018  memory: 22871  
07/13 18:50:52 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:47:20  time: 1.9045  data_time: 0.0018  memory: 5328  
07/13 18:52:23 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:44:38  time: 1.8647  data_time: 0.0016  memory: 22486  
07/13 18:54:18 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:42:29  time: 2.3370  data_time: 0.0017  memory: 23335  
07/13 18:55:57 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:40:05  time: 1.7696  data_time: 0.0016  memory: 23358  
07/13 18:57:51 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:37:58  time: 2.7104  data_time: 0.0016  memory: 23816  
07/13 18:59:37 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:35:48  time: 1.8767  data_time: 0.0017  memory: 22809  
07/13 19:01:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:33:33  time: 2.0503  data_time: 0.0016  memory: 22317  
07/13 19:02:52 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:31:20  time: 1.7732  data_time: 0.0016  memory: 7877  
07/13 19:04:30 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:29:10  time: 2.0060  data_time: 0.0016  memory: 22858  
07/13 19:05:56 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:26:57  time: 1.8153  data_time: 0.0016  memory: 5385  
07/13 19:07:30 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:24:51  time: 1.7150  data_time: 0.0016  memory: 21812  
07/13 19:09:17 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:22:53  time: 2.2353  data_time: 0.0016  memory: 23088  
07/13 19:10:50 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:20:50  time: 2.1762  data_time: 0.0016  memory: 22518  
07/13 19:12:19 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:18:48  time: 1.6879  data_time: 0.0016  memory: 5327  
07/13 19:13:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:16:51  time: 1.8819  data_time: 0.0017  memory: 23258  
07/13 19:15:28 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:14:53  time: 1.8407  data_time: 0.0018  memory: 5251  
07/13 19:17:07 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:12:59  time: 1.6852  data_time: 0.0016  memory: 23378  
07/13 19:18:46 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:11:05  time: 1.8898  data_time: 0.0018  memory: 22664  
07/13 19:20:26 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:09:13  time: 1.7929  data_time: 0.0016  memory: 23119  
07/13 19:21:58 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:07:20  time: 1.9410  data_time: 0.0018  memory: 21917  
07/13 19:23:36 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:05:29  time: 1.9342  data_time: 0.0018  memory: 4712  
07/13 19:25:10 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:38  time: 1.7967  data_time: 0.0016  memory: 23652  
07/13 19:26:52 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:49  time: 1.7893  data_time: 0.0016  memory: 22204  
07/13 19:28:31 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.7046  data_time: 0.0014  memory: 23652  
07/13 19:28:31 - mmengine - INFO - per class results:
07/13 19:28:31 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 48.31 | 88.53 |
|       building      | 66.32 |  79.6 |
|         sky         | 90.88 | 95.44 |
|        floor        | 48.49 | 60.37 |
|         tree        | 51.37 |  66.9 |
|       ceiling       | 68.49 | 76.62 |
|         road        | 59.31 | 66.79 |
|         bed         | 68.94 | 79.55 |
|      windowpane     | 49.52 | 63.59 |
|        grass        |  41.4 | 48.74 |
|       cabinet       | 38.43 | 47.87 |
|       sidewalk      | 48.13 | 59.26 |
|        person       | 54.77 | 66.68 |
|        earth        |  26.6 | 44.44 |
|         door        | 27.77 |  36.1 |
|        table        | 33.51 | 52.04 |
|       mountain      | 40.05 | 58.58 |
|        plant        | 29.51 | 34.66 |
|       curtain       | 53.65 | 63.72 |
|        chair        | 33.59 | 43.99 |
|         car         | 65.26 | 78.01 |
|        water        | 31.93 | 40.59 |
|       painting      | 55.17 | 73.38 |
|         sofa        | 41.99 | 55.82 |
|        shelf        | 27.57 | 37.55 |
|        house        | 36.65 |  50.1 |
|         sea         | 31.75 | 53.21 |
|        mirror       | 45.25 | 53.45 |
|         rug         | 34.73 | 39.17 |
|        field        | 19.91 | 33.04 |
|       armchair      | 22.98 | 29.33 |
|         seat        | 38.38 |  48.3 |
|        fence        | 21.97 | 28.25 |
|         desk        | 29.22 | 41.02 |
|         rock        | 25.61 | 34.71 |
|       wardrobe      | 32.78 | 40.81 |
|         lamp        | 51.13 | 60.51 |
|       bathtub       | 62.87 | 71.23 |
|       railing       | 24.34 | 33.87 |
|       cushion       | 33.37 | 40.75 |
|         base        |  3.74 |  4.54 |
|         box         | 14.74 | 18.12 |
|        column       | 27.32 | 32.73 |
|      signboard      |  24.8 | 35.88 |
|   chest of drawers  | 19.91 | 26.02 |
|       counter       |  9.21 |  11.8 |
|         sand        |  28.3 | 41.84 |
|         sink        | 53.16 | 64.71 |
|      skyscraper     | 23.94 | 29.56 |
|      fireplace      | 40.82 | 43.74 |
|     refrigerator    | 44.58 | 47.92 |
|      grandstand     | 30.22 |  60.6 |
|         path        | 19.97 | 25.15 |
|        stairs       | 16.07 | 18.21 |
|        runway       | 42.39 | 54.94 |
|         case        | 27.08 | 40.07 |
|      pool table     | 47.81 | 50.43 |
|        pillow       | 42.58 | 52.56 |
|     screen door     | 38.25 | 41.61 |
|       stairway      | 11.93 |  16.7 |
|        river        | 10.56 | 18.79 |
|        bridge       | 12.08 | 14.15 |
|       bookcase      | 32.23 | 39.12 |
|        blind        | 23.31 | 25.93 |
|     coffee table    | 33.84 | 39.14 |
|        toilet       | 65.19 | 70.04 |
|        flower       | 30.26 | 37.04 |
|         book        | 37.75 | 49.78 |
|         hill        |  4.26 |  5.28 |
|        bench        | 25.81 | 33.43 |
|      countertop     | 35.25 | 45.68 |
|        stove        | 33.79 | 36.52 |
|         palm        | 31.48 | 41.45 |
|    kitchen island   | 12.85 |  14.8 |
|       computer      | 49.77 | 56.44 |
|     swivel chair    |  4.48 |  4.55 |
|         boat        | 25.62 | 32.22 |
|         bar         | 10.02 | 12.07 |
|    arcade machine   | 12.05 | 13.37 |
|        hovel        | 28.22 | 30.14 |
|         bus         |  66.6 | 81.17 |
|        towel        | 51.28 | 62.27 |
|        light        | 38.57 |  41.5 |
|        truck        |  5.12 |  6.46 |
|        tower        | 13.59 | 19.57 |
|      chandelier     | 61.49 | 69.52 |
|        awning       |  4.23 |  4.54 |
|     streetlight     | 13.04 | 14.14 |
|        booth        | 24.35 | 24.72 |
| television receiver | 15.41 | 16.63 |
|       airplane      | 32.14 | 55.13 |
|      dirt track     |  0.2  |  0.36 |
|       apparel       | 30.86 | 40.87 |
|         pole        | 10.12 | 12.41 |
|         land        |  2.03 |  3.97 |
|      bannister      |  7.61 | 10.09 |
|      escalator      |  2.05 |  2.13 |
|       ottoman       |  34.8 | 41.86 |
|        bottle       | 13.82 | 15.77 |
|        buffet       |  1.79 |  1.91 |
|        poster       | 28.76 | 34.89 |
|        stage        |  8.31 | 10.97 |
|         van         | 32.76 |  41.0 |
|         ship        | 17.75 | 18.31 |
|       fountain      | 17.74 | 17.85 |
|    conveyer belt    | 68.82 | 75.15 |
|        canopy       |  10.1 | 11.87 |
|        washer       | 39.14 | 40.79 |
|      plaything      | 16.93 |  19.4 |
|    swimming pool    | 26.63 | 28.63 |
|        stool        | 13.88 | 15.13 |
|        barrel       | 23.98 | 24.19 |
|        basket       | 11.93 | 16.32 |
|      waterfall      | 47.14 |  72.1 |
|         tent        | 75.26 | 96.37 |
|         bag         |  2.93 |  3.05 |
|       minibike      | 34.74 | 39.27 |
|        cradle       | 67.53 | 77.52 |
|         oven        |  3.96 |  4.26 |
|         ball        | 33.42 | 38.88 |
|         food        | 25.79 | 27.16 |
|         step        |  3.93 |  4.32 |
|         tank        | 41.14 | 42.05 |
|      trade name     | 15.96 |  17.2 |
|      microwave      |  20.9 | 22.59 |
|         pot         |  9.79 | 10.38 |
|        animal       | 18.67 | 19.58 |
|       bicycle       | 31.62 | 47.86 |
|         lake        | 44.98 | 47.25 |
|      dishwasher     | 30.04 | 31.73 |
|        screen       | 41.19 | 56.58 |
|       blanket       |  7.45 |  7.81 |
|      sculpture      | 17.38 |  20.8 |
|         hood        | 32.84 | 34.06 |
|        sconce       | 33.73 |  43.2 |
|         vase        | 24.71 | 31.54 |
|    traffic light    | 19.46 | 25.71 |
|         tray        |  4.27 |  7.07 |
|        ashcan       | 12.76 | 13.52 |
|         fan         | 46.69 | 57.38 |
|         pier        |  6.58 |  8.48 |
|      crt screen     |  5.19 | 12.23 |
|        plate        | 44.85 | 56.12 |
|       monitor       | 14.04 | 16.39 |
|    bulletin board   | 25.65 | 30.68 |
|        shower       |  2.64 |  3.37 |
|       radiator      | 45.22 | 47.12 |
|        glass        |  8.07 |  8.6  |
|        clock        | 19.58 | 22.26 |
|         flag        | 17.76 | 18.71 |
+---------------------+-------+-------+
07/13 19:28:31 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 67.0400  mIoU: 29.8800  mAcc: 36.7800  data_time: 0.0024  time: 2.1793
07/13 19:28:35 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 418088423
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 418088423
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 19:28:35 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 19:28:39 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 19:28:39 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 19:28:40 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 19:28:40 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 19:33:05 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:51:58  time: 4.2426  data_time: 0.0018  memory: 23495  
07/13 19:36:14 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:23:54  time: 4.3400  data_time: 0.0018  memory: 23396  
07/13 19:38:41 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:03:35  time: 2.9200  data_time: 0.0017  memory: 22864  
07/13 19:41:24 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:54:31  time: 3.0820  data_time: 0.0015  memory: 23557  
07/13 19:43:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:45:47  time: 2.3935  data_time: 0.0016  memory: 23339  
07/13 19:46:16 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:39:41  time: 2.4150  data_time: 0.0017  memory: 23441  
07/13 19:48:55 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:35:25  time: 2.4971  data_time: 0.0015  memory: 23345  
07/13 19:51:15 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:30:17  time: 2.4515  data_time: 0.0015  memory: 23301  
07/13 19:52:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:23:40  time: 2.1720  data_time: 0.0015  memory: 22738  
07/13 19:54:57 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:18:51  time: 2.2909  data_time: 0.0016  memory: 21971  
07/13 19:57:01 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:14:44  time: 2.7807  data_time: 0.0017  memory: 23413  
07/13 19:58:59 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:10:44  time: 2.7048  data_time: 0.0017  memory: 23346  
07/13 20:01:04 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:07:17  time: 2.6721  data_time: 0.0015  memory: 23561  
07/13 20:03:15 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:04:13  time: 2.1331  data_time: 0.0017  memory: 23547  
07/13 20:05:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:01:17  time: 3.5640  data_time: 0.0015  memory: 23810  
07/13 20:07:15 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:57:52  time: 2.3597  data_time: 0.0017  memory: 22874  
07/13 20:09:07 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:54:43  time: 2.3127  data_time: 0.0018  memory: 5332  
07/13 20:10:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:51:31  time: 2.0588  data_time: 0.0015  memory: 22488  
07/13 20:12:56 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:48:54  time: 2.6775  data_time: 0.0016  memory: 23339  
07/13 20:14:51 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:46:10  time: 2.1091  data_time: 0.0016  memory: 23362  
07/13 20:16:59 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:43:42  time: 3.0743  data_time: 0.0016  memory: 23820  
07/13 20:18:57 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:41:07  time: 2.0821  data_time: 0.0017  memory: 22808  
07/13 20:20:50 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:38:33  time: 2.4904  data_time: 0.0016  memory: 22318  
07/13 20:22:43 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:36:02  time: 2.1174  data_time: 0.0018  memory: 15260  
07/13 20:25:03 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:33:49  time: 2.6216  data_time: 0.0016  memory: 22858  
07/13 20:27:04 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:31:26  time: 2.5861  data_time: 0.0016  memory: 5385  
07/13 20:29:04 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:29:04  time: 1.8734  data_time: 0.0016  memory: 21814  
07/13 20:31:11 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:26:47  time: 2.5870  data_time: 0.0023  memory: 23089  
07/13 20:33:10 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:24:27  time: 2.5633  data_time: 0.0016  memory: 22519  
07/13 20:35:03 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:22:07  time: 2.2337  data_time: 0.0016  memory: 5331  
07/13 20:37:10 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:19:53  time: 2.4312  data_time: 0.0015  memory: 23262  
07/13 20:39:02 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:17:35  time: 2.1178  data_time: 0.0018  memory: 5253  
07/13 20:40:57 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:15:19  time: 2.0902  data_time: 0.0015  memory: 23383  
07/13 20:42:47 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:13:04  time: 2.1860  data_time: 0.0018  memory: 22667  
07/13 20:44:41 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:10:51  time: 2.1886  data_time: 0.0015  memory: 23123  
07/13 20:46:34 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:08:39  time: 2.6154  data_time: 0.0018  memory: 21918  
07/13 20:48:29 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:06:28  time: 2.1580  data_time: 0.0018  memory: 4716  
07/13 20:50:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:04:17  time: 1.8246  data_time: 0.0016  memory: 23657  
07/13 20:52:03 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:08  time: 1.9513  data_time: 0.0016  memory: 22206  
07/13 20:53:57 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.8977  data_time: 0.0013  memory: 23655  
07/13 20:53:57 - mmengine - INFO - per class results:
07/13 20:53:57 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  4.5  |  4.9  |
|       building      | 21.01 | 33.26 |
|         sky         | 26.49 | 82.56 |
|        floor        |  2.73 |  2.89 |
|         tree        |  9.02 | 85.91 |
|       ceiling       |  5.33 |  5.77 |
|         road        |  0.62 |  0.63 |
|         bed         |  1.28 |  1.35 |
|      windowpane     |  4.01 |  4.8  |
|        grass        |  1.63 |  1.83 |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       | 19.22 | 27.39 |
|        earth        |  4.21 | 12.64 |
|         door        |  0.05 |  0.05 |
|        table        |  0.42 |  0.43 |
|       mountain      |  7.17 | 14.26 |
|        plant        |  1.55 |  1.6  |
|       curtain       |  1.53 |  1.67 |
|        chair        |  0.18 |  0.19 |
|         car         | 20.75 | 26.78 |
|        water        |  2.33 |  8.71 |
|       painting      |  5.13 |  5.42 |
|         sofa        |  0.01 |  0.01 |
|        shelf        |  0.0  |  0.0  |
|        house        |  4.36 |  7.23 |
|         sea         |  0.06 |  0.06 |
|        mirror       |  0.05 |  0.05 |
|         rug         |  0.0  |  0.0  |
|        field        |  0.22 |  0.23 |
|       armchair      |  0.53 |  0.53 |
|         seat        |  0.0  |  0.0  |
|        fence        |  2.6  |  3.09 |
|         desk        |  0.0  |  0.0  |
|         rock        |  4.63 |  26.7 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.16 |  0.16 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  1.24 |  1.31 |
|       cushion       |  0.17 |  0.17 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.1  |  0.1  |
|      signboard      |  5.42 |  8.71 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  3.07 |  3.52 |
|         sink        |  0.0  |  0.0  |
|      skyscraper     |  1.91 |  1.97 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  0.83 |  1.25 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.18 |  0.18 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.19 |  0.2  |
|        river        |  0.0  |  0.0  |
|        bridge       |  4.15 |  6.15 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.01 |  0.01 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  3.23 |  3.39 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  1.84 |  25.1 |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.77 |  0.8  |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  1.0  |  1.01 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.41 |  0.41 |
|         pole        |  1.59 |  2.02 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.22 |  0.25 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 10.42 | 10.42 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.08 |  0.1  |
|         tent        |  2.55 |  2.58 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.27 |  0.27 |
|       bicycle       |  0.05 |  0.07 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 17.85 | 17.88 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  1.08 |  1.08 |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  7.34 |  8.85 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  4.65 |  6.87 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.37 |  1.12 |
|         flag        |  0.01 |  0.01 |
+---------------------+-------+-------+
07/13 20:53:57 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 18.3200  mIoU: 1.4900  mAcc: 3.1100  data_time: 0.0024  time: 2.5582
07/13 20:54:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1109892508
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1109892508
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 20:54:02 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 20:54:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 20:54:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 20:54:06 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 20:54:06 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 20:58:15 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:41:31  time: 3.8026  data_time: 0.0019  memory: 23495  
07/13 21:01:12 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:14:44  time: 4.0014  data_time: 0.0019  memory: 23396  
07/13 21:03:24 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:54:42  time: 2.8181  data_time: 0.0017  memory: 22864  
07/13 21:06:00 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:46:59  time: 3.1182  data_time: 0.0017  memory: 23557  
07/13 21:08:24 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:40:04  time: 2.3918  data_time: 0.0016  memory: 23339  
07/13 21:10:47 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:34:28  time: 2.2549  data_time: 0.0017  memory: 23441  
07/13 21:13:12 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:30:02  time: 2.3242  data_time: 0.0016  memory: 23345  
07/13 21:15:31 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:25:38  time: 2.5592  data_time: 0.0015  memory: 23301  
07/13 21:17:16 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:19:46  time: 2.1682  data_time: 0.0015  memory: 22738  
07/13 21:19:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:15:02  time: 1.9624  data_time: 0.0016  memory: 21971  
07/13 21:21:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:11:10  time: 2.6191  data_time: 0.0017  memory: 23413  
07/13 21:23:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:07:27  time: 2.6624  data_time: 0.0017  memory: 23346  
07/13 21:25:18 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:04:46  time: 3.0669  data_time: 0.0015  memory: 23561  
07/13 21:27:58 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:02:53  time: 2.6969  data_time: 0.0017  memory: 23547  
07/13 21:30:17 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:00:17  time: 3.7091  data_time: 0.0016  memory: 23810  
07/13 21:32:11 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:57:07  time: 2.6090  data_time: 0.0018  memory: 22874  
07/13 21:34:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:54:17  time: 2.5721  data_time: 0.0018  memory: 5332  
07/13 21:36:03 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:51:15  time: 2.1655  data_time: 0.0024  memory: 22488  
07/13 21:38:19 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:48:51  time: 2.7706  data_time: 0.0017  memory: 23339  
07/13 21:40:10 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:46:03  time: 2.1152  data_time: 0.0017  memory: 23362  
07/13 21:42:16 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:43:34  time: 3.0270  data_time: 0.0016  memory: 23820  
07/13 21:44:16 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:41:02  time: 2.0536  data_time: 0.0016  memory: 22808  
07/13 21:46:13 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:38:30  time: 2.3179  data_time: 0.0016  memory: 22318  
07/13 21:48:05 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:35:58  time: 1.9118  data_time: 0.0016  memory: 15260  
07/13 21:49:48 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:33:24  time: 2.2077  data_time: 0.0016  memory: 22858  
07/13 21:51:27 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:30:52  time: 2.0688  data_time: 0.0016  memory: 5385  
07/13 21:53:14 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:28:27  time: 2.0915  data_time: 0.0016  memory: 21814  
07/13 21:55:15 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:26:12  time: 2.5836  data_time: 0.0016  memory: 23089  
07/13 21:56:57 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:23:50  time: 2.3575  data_time: 0.0015  memory: 22519  
07/13 21:58:37 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:21:29  time: 1.8615  data_time: 0.0016  memory: 5331  
07/13 22:00:24 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:19:14  time: 2.0314  data_time: 0.0016  memory: 23262  
07/13 22:02:08 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:17:00  time: 2.0312  data_time: 0.0017  memory: 5253  
07/13 22:03:56 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:14:48  time: 1.8605  data_time: 0.0015  memory: 23383  
07/13 22:05:44 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:12:38  time: 2.0994  data_time: 0.0018  memory: 22667  
07/13 22:07:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:10:29  time: 1.9797  data_time: 0.0015  memory: 23123  
07/13 22:09:20 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:08:21  time: 2.1715  data_time: 0.0017  memory: 21918  
07/13 22:11:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:06:14  time: 2.1453  data_time: 0.0018  memory: 4716  
07/13 22:12:47 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:04:08  time: 1.8728  data_time: 0.0015  memory: 23657  
07/13 22:14:35 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:03  time: 1.9722  data_time: 0.0016  memory: 22206  
07/13 22:16:47 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.3033  data_time: 0.0013  memory: 23655  
07/13 22:16:47 - mmengine - INFO - per class results:
07/13 22:16:47 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.0  |  0.0  |
|       building      | 0.0  |  0.0  |
|         sky         | 9.44 | 99.15 |
|        floor        | 0.0  |  0.0  |
|         tree        | 5.93 | 13.69 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.2  |  0.2  |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.0  |  0.0  |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 22:16:47 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 9.4500  mIoU: 0.1000  mAcc: 0.7500  data_time: 0.0024  time: 2.4801
07/13 22:16:51 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2067269822
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2067269822
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 22:16:51 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='cospgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 22:16:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 22:16:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 22:16:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 22:16:55 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 22:21:26 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:56:10  time: 3.7400  data_time: 0.0024  memory: 23495  
07/13 22:24:33 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:24:47  time: 4.3247  data_time: 0.0025  memory: 23396  
07/13 22:26:56 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:03:27  time: 2.7513  data_time: 0.0022  memory: 22864  
07/13 22:29:44 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:55:17  time: 3.1371  data_time: 0.0022  memory: 23557  
07/13 22:32:07 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:46:20  time: 2.3440  data_time: 0.0020  memory: 23339  
07/13 22:34:32 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:39:45  time: 2.4370  data_time: 0.0021  memory: 23441  
07/13 22:37:06 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:35:06  time: 2.3083  data_time: 0.0021  memory: 23345  
07/13 22:39:21 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:29:43  time: 2.4072  data_time: 0.0020  memory: 23301  
07/13 22:41:03 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:23:06  time: 2.1428  data_time: 0.0016  memory: 22738  
07/13 22:42:59 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:18:10  time: 2.0124  data_time: 0.0017  memory: 21971  
07/13 22:45:03 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:14:09  time: 2.8213  data_time: 0.0019  memory: 23413  
07/13 22:46:59 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:10:07  time: 2.4823  data_time: 0.0019  memory: 23346  
07/13 22:48:57 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:06:30  time: 2.7717  data_time: 0.0016  memory: 23561  
07/13 22:51:09 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:03:32  time: 2.2272  data_time: 0.0018  memory: 23547  
07/13 22:53:19 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:00:38  time: 3.5830  data_time: 0.0018  memory: 23810  
07/13 22:55:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:57:07  time: 2.1287  data_time: 0.0020  memory: 22874  
07/13 22:56:49 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:53:58  time: 2.2728  data_time: 0.0020  memory: 5332  
07/13 22:58:33 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:50:52  time: 2.1121  data_time: 0.0016  memory: 22488  
07/13 23:00:39 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:48:19  time: 2.5584  data_time: 0.0019  memory: 23339  
07/13 23:02:27 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:45:30  time: 1.9204  data_time: 0.0018  memory: 23362  
07/13 23:04:34 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:43:05  time: 2.9720  data_time: 0.0018  memory: 23820  
07/13 23:06:55 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:40:54  time: 2.7706  data_time: 0.0018  memory: 22808  
07/13 23:09:03 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:38:31  time: 2.6184  data_time: 0.0018  memory: 22318  
07/13 23:11:03 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:36:04  time: 2.0779  data_time: 0.0017  memory: 15258  
07/13 23:12:58 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:33:37  time: 2.5313  data_time: 0.0017  memory: 22858  
07/13 23:14:42 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:31:06  time: 2.2798  data_time: 0.0017  memory: 5390  
07/13 23:16:35 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:28:43  time: 2.0657  data_time: 0.0017  memory: 21814  
07/13 23:18:42 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:26:28  time: 2.4677  data_time: 0.0017  memory: 23089  
07/13 23:20:27 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:24:05  time: 2.4045  data_time: 0.0016  memory: 22519  
07/13 23:22:05 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:21:43  time: 1.7911  data_time: 0.0017  memory: 5331  
07/13 23:23:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:19:27  time: 2.1641  data_time: 0.0018  memory: 23262  
07/13 23:25:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:17:12  time: 2.3434  data_time: 0.0018  memory: 5255  
07/13 23:27:37 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:14:59  time: 2.2369  data_time: 0.0016  memory: 23383  
07/13 23:29:26 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:12:47  time: 2.0978  data_time: 0.0019  memory: 22667  
07/13 23:31:17 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:10:37  time: 2.0384  data_time: 0.0017  memory: 23123  
07/13 23:33:01 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:08:27  time: 2.2737  data_time: 0.0019  memory: 21918  
07/13 23:34:53 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:06:19  time: 2.2069  data_time: 0.0019  memory: 4719  
07/13 23:36:35 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:04:11  time: 1.8153  data_time: 0.0018  memory: 23657  
07/13 23:38:20 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:05  time: 1.9328  data_time: 0.0017  memory: 22206  
07/13 23:40:07 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.7646  data_time: 0.0014  memory: 23655  
07/13 23:40:07 - mmengine - INFO - per class results:
07/13 23:40:07 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 48.31 | 88.53 |
|       building      | 66.32 |  79.6 |
|         sky         | 90.88 | 95.44 |
|        floor        | 48.49 | 60.37 |
|         tree        | 51.37 |  66.9 |
|       ceiling       | 68.49 | 76.62 |
|         road        | 59.31 | 66.79 |
|         bed         | 68.94 | 79.55 |
|      windowpane     | 49.53 | 63.59 |
|        grass        |  41.4 | 48.74 |
|       cabinet       | 38.43 | 47.88 |
|       sidewalk      | 48.13 | 59.26 |
|        person       | 54.77 | 66.68 |
|        earth        |  26.6 | 44.44 |
|         door        | 27.77 |  36.1 |
|        table        | 33.51 | 52.04 |
|       mountain      | 40.05 | 58.58 |
|        plant        | 29.51 | 34.66 |
|       curtain       | 53.66 | 63.72 |
|        chair        | 33.59 | 43.99 |
|         car         | 65.26 | 78.01 |
|        water        | 31.93 | 40.59 |
|       painting      | 55.17 | 73.37 |
|         sofa        | 41.99 | 55.82 |
|        shelf        | 27.57 | 37.55 |
|        house        | 36.65 |  50.1 |
|         sea         | 31.75 | 53.21 |
|        mirror       | 45.25 | 53.45 |
|         rug         | 34.73 | 39.17 |
|        field        |  19.9 | 33.04 |
|       armchair      | 22.98 | 29.33 |
|         seat        | 38.38 |  48.3 |
|        fence        | 21.97 | 28.25 |
|         desk        | 29.22 | 41.02 |
|         rock        | 25.61 | 34.71 |
|       wardrobe      |  32.8 | 40.82 |
|         lamp        | 51.13 | 60.51 |
|       bathtub       | 62.87 | 71.23 |
|       railing       | 24.34 | 33.87 |
|       cushion       | 33.37 | 40.75 |
|         base        |  3.74 |  4.54 |
|         box         | 14.74 | 18.12 |
|        column       | 27.32 | 32.73 |
|      signboard      |  24.8 | 35.88 |
|   chest of drawers  | 19.91 | 26.02 |
|       counter       |  9.21 |  11.8 |
|         sand        |  28.3 | 41.84 |
|         sink        | 53.16 | 64.71 |
|      skyscraper     | 23.94 | 29.56 |
|      fireplace      | 40.82 | 43.74 |
|     refrigerator    | 44.58 | 47.92 |
|      grandstand     | 30.22 |  60.6 |
|         path        | 19.97 | 25.15 |
|        stairs       | 16.07 | 18.21 |
|        runway       | 42.37 | 54.92 |
|         case        | 27.08 | 40.07 |
|      pool table     | 47.81 | 50.43 |
|        pillow       | 42.58 | 52.57 |
|     screen door     | 38.25 | 41.61 |
|       stairway      | 11.93 |  16.7 |
|        river        | 10.56 | 18.79 |
|        bridge       | 12.08 | 14.15 |
|       bookcase      | 32.23 | 39.12 |
|        blind        | 23.31 | 25.93 |
|     coffee table    | 33.84 | 39.14 |
|        toilet       | 65.19 | 70.04 |
|        flower       | 30.26 | 37.04 |
|         book        | 37.75 | 49.78 |
|         hill        |  4.26 |  5.28 |
|        bench        | 25.81 | 33.43 |
|      countertop     | 35.25 | 45.68 |
|        stove        | 33.79 | 36.52 |
|         palm        | 31.48 | 41.45 |
|    kitchen island   | 12.85 |  14.8 |
|       computer      | 49.77 | 56.44 |
|     swivel chair    |  4.48 |  4.55 |
|         boat        | 25.62 | 32.22 |
|         bar         | 10.02 | 12.07 |
|    arcade machine   | 12.05 | 13.37 |
|        hovel        | 28.22 | 30.14 |
|         bus         |  66.6 | 81.17 |
|        towel        | 51.28 | 62.27 |
|        light        | 38.57 |  41.5 |
|        truck        |  5.12 |  6.46 |
|        tower        | 13.59 | 19.57 |
|      chandelier     | 61.49 | 69.52 |
|        awning       |  4.23 |  4.54 |
|     streetlight     | 13.04 | 14.14 |
|        booth        | 24.35 | 24.72 |
| television receiver | 15.41 | 16.63 |
|       airplane      | 32.14 | 55.13 |
|      dirt track     |  0.2  |  0.36 |
|       apparel       | 30.86 | 40.87 |
|         pole        | 10.12 | 12.41 |
|         land        |  2.03 |  3.97 |
|      bannister      |  7.61 | 10.09 |
|      escalator      |  2.05 |  2.13 |
|       ottoman       |  34.8 | 41.86 |
|        bottle       | 13.82 | 15.77 |
|        buffet       |  1.79 |  1.91 |
|        poster       | 28.76 | 34.89 |
|        stage        |  8.31 | 10.97 |
|         van         | 32.76 |  41.0 |
|         ship        | 17.75 | 18.31 |
|       fountain      | 17.74 | 17.85 |
|    conveyer belt    | 68.82 | 75.15 |
|        canopy       |  10.1 | 11.87 |
|        washer       | 39.14 | 40.79 |
|      plaything      | 16.93 |  19.4 |
|    swimming pool    | 26.63 | 28.63 |
|        stool        | 13.88 | 15.13 |
|        barrel       | 23.98 | 24.19 |
|        basket       | 11.93 | 16.32 |
|      waterfall      | 47.14 |  72.1 |
|         tent        | 75.26 | 96.37 |
|         bag         |  2.93 |  3.05 |
|       minibike      | 34.74 | 39.27 |
|        cradle       | 67.53 | 77.52 |
|         oven        |  3.96 |  4.26 |
|         ball        | 33.42 | 38.88 |
|         food        | 25.79 | 27.16 |
|         step        |  3.93 |  4.32 |
|         tank        | 41.14 | 42.05 |
|      trade name     | 15.96 |  17.2 |
|      microwave      |  20.9 | 22.59 |
|         pot         |  9.79 | 10.38 |
|        animal       | 18.67 | 19.58 |
|       bicycle       | 31.62 | 47.86 |
|         lake        | 44.98 | 47.25 |
|      dishwasher     | 30.04 | 31.73 |
|        screen       | 41.19 | 56.58 |
|       blanket       |  7.45 |  7.81 |
|      sculpture      | 17.38 |  20.8 |
|         hood        | 32.84 | 34.06 |
|        sconce       | 33.73 |  43.2 |
|         vase        | 24.71 | 31.54 |
|    traffic light    | 19.46 | 25.71 |
|         tray        |  4.27 |  7.07 |
|        ashcan       | 12.76 | 13.52 |
|         fan         | 46.69 | 57.38 |
|         pier        |  6.58 |  8.48 |
|      crt screen     |  5.19 | 12.23 |
|        plate        | 44.85 | 56.12 |
|       monitor       | 14.03 | 16.39 |
|    bulletin board   | 25.65 | 30.68 |
|        shower       |  2.64 |  3.37 |
|       radiator      | 45.22 | 47.12 |
|        glass        |  8.07 |  8.6  |
|        clock        | 19.58 | 22.26 |
|         flag        | 17.76 | 18.71 |
+---------------------+-------+-------+
07/13 23:40:07 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 67.0400  mIoU: 29.8800  mAcc: 36.7800  data_time: 0.0027  time: 2.4957
07/13 23:40:15 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 274732715
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 274732715
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 23:40:15 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 23:40:22 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 23:40:22 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 23:40:23 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 23:40:24 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/13 23:40:35 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1627813126
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1627813126
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 23:40:35 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 23:40:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 23:40:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 23:40:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 23:40:39 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/13 23:40:49 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1857181069
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1857181069
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 23:40:50 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='apgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 23:40:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 23:40:53 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 23:40:54 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 23:40:55 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/13 23:41:05 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1741004121
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1741004121
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 23:41:06 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 23:41:09 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 23:41:09 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 23:41:10 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 23:41:10 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/13 23:44:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:21:34  time: 3.2753  data_time: 0.0025  memory: 23492  
07/13 23:47:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:57:15  time: 3.5219  data_time: 0.0024  memory: 23394  
07/13 23:49:17 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:40:03  time: 2.3270  data_time: 0.0024  memory: 22859  
07/13 23:51:34 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:33:39  time: 2.7001  data_time: 0.0021  memory: 23553  
07/13 23:53:42 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:27:40  time: 2.1790  data_time: 0.0021  memory: 23335  
07/13 23:55:48 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:22:56  time: 1.9593  data_time: 0.0020  memory: 23439  
07/13 23:58:00 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:19:19  time: 2.1755  data_time: 0.0018  memory: 23343  
07/13 23:59:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:15:15  time: 2.1959  data_time: 0.0016  memory: 23302  
07/14 00:01:31 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:10:04  time: 1.9521  data_time: 0.0018  memory: 22735  
07/14 00:03:10 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:05:58  time: 1.7663  data_time: 0.0018  memory: 21970  
07/14 00:04:54 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:02:32  time: 2.2891  data_time: 0.0018  memory: 23409  
07/14 00:06:30 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:59:07  time: 2.1882  data_time: 0.0020  memory: 23345  
07/14 00:08:17 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:56:19  time: 2.4681  data_time: 0.0017  memory: 23560  
07/14 00:10:14 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:53:58  time: 1.9334  data_time: 0.0018  memory: 23545  
07/14 00:12:09 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:51:38  time: 3.1751  data_time: 0.0018  memory: 23807  
07/14 00:13:40 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:48:43  time: 1.8729  data_time: 0.0021  memory: 22871  
07/14 00:15:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:46:04  time: 1.8970  data_time: 0.0020  memory: 5331  
07/14 00:16:44 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:43:27  time: 1.8435  data_time: 0.0017  memory: 22486  
07/14 00:18:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:41:21  time: 2.2659  data_time: 0.0018  memory: 23335  
07/14 00:20:12 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:39:01  time: 1.7289  data_time: 0.0017  memory: 23358  
07/14 00:22:02 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:36:58  time: 2.6683  data_time: 0.0018  memory: 23816  
07/14 00:23:46 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:34:51  time: 1.8001  data_time: 0.0018  memory: 22809  
07/14 00:25:23 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:32:40  time: 2.0265  data_time: 0.0017  memory: 22317  
07/14 00:26:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:30:31  time: 1.7335  data_time: 0.0017  memory: 7877  
07/14 00:28:32 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:28:25  time: 1.9738  data_time: 0.0017  memory: 22858  
07/14 00:29:57 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:26:15  time: 1.7857  data_time: 0.0017  memory: 5386  
07/14 00:31:28 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:24:12  time: 1.6706  data_time: 0.0017  memory: 21812  
07/14 00:33:13 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:22:18  time: 2.2078  data_time: 0.0017  memory: 23088  
07/14 00:34:43 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:20:18  time: 2.1373  data_time: 0.0017  memory: 22518  
07/14 00:36:11 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:18:20  time: 1.6449  data_time: 0.0017  memory: 5330  
07/14 00:37:47 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:16:26  time: 1.8089  data_time: 0.0016  memory: 23258  
07/14 00:39:15 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:14:31  time: 1.7963  data_time: 0.0018  memory: 5249  
07/14 00:40:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:12:39  time: 1.6398  data_time: 0.0015  memory: 23378  
07/14 00:42:30 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:10:49  time: 1.8463  data_time: 0.0019  memory: 22664  
07/14 00:44:07 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:08:59  time: 1.7484  data_time: 0.0015  memory: 23119  
07/14 00:45:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:07:09  time: 1.9602  data_time: 0.0019  memory: 21917  
07/14 00:47:13 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:05:21  time: 1.8787  data_time: 0.0018  memory: 4714  
07/14 00:48:41 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:33  time: 1.6793  data_time: 0.0017  memory: 23652  
07/14 00:50:16 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:46  time: 1.7417  data_time: 0.0016  memory: 22204  
07/14 00:51:50 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.6250  data_time: 0.0015  memory: 23652  
07/14 00:51:50 - mmengine - INFO - per class results:
07/14 00:51:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  4.61 |  5.01 |
|       building      |  21.9 | 35.15 |
|         sky         | 26.24 | 82.28 |
|        floor        |  3.69 |  3.89 |
|         tree        |  9.02 | 85.36 |
|       ceiling       |  4.99 |  5.3  |
|         road        |  1.14 |  1.17 |
|         bed         |  3.18 |  3.34 |
|      windowpane     |  3.93 |  4.62 |
|        grass        |  1.52 |  1.71 |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       | 18.46 | 25.81 |
|        earth        |  4.66 | 13.53 |
|         door        |  0.13 |  0.13 |
|        table        |  0.6  |  0.61 |
|       mountain      |  6.28 | 12.22 |
|        plant        |  0.6  |  0.62 |
|       curtain       |  2.03 |  2.21 |
|        chair        |  0.27 |  0.28 |
|         car         | 18.89 | 24.57 |
|        water        |  2.73 |  9.78 |
|       painting      |  4.82 |  5.06 |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  5.51 |  7.86 |
|         sea         |  0.28 |  0.28 |
|        mirror       |  0.02 |  0.02 |
|         rug         |  0.08 |  0.08 |
|        field        |  0.18 |  0.2  |
|       armchair      |  0.0  |  0.0  |
|         seat        |  0.0  |  0.0  |
|        fence        |  2.06 |  2.39 |
|         desk        |  0.0  |  0.0  |
|         rock        |  4.71 | 28.19 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.25 |  0.25 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  1.21 |  1.28 |
|       cushion       |  0.46 |  0.46 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.1  |  0.1  |
|      signboard      |  5.11 |  8.19 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  2.93 |  3.26 |
|         sink        |  0.18 |  0.18 |
|      skyscraper     |  0.8  |  0.84 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.01 |
|         path        |  0.0  |  0.0  |
|        stairs       |  1.45 |  2.04 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.27 |  0.27 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.18 |  0.18 |
|        river        |  0.0  |  0.0  |
|        bridge       |  5.22 |  8.1  |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.01 |  0.01 |
|         book        |  0.0  |  0.0  |
|         hill        |  0.01 |  0.02 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  7.81 |  8.47 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  2.06 |  2.2  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  1.95 | 26.85 |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.64 |  0.66 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  2.1  |  2.13 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  3.77 |  3.79 |
|         pole        |  0.72 |  0.86 |
|         land        |  0.03 |  0.04 |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 15.95 | 15.95 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.04 |  0.04 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.0  |  0.0  |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.07 |  0.07 |
|       bicycle       |  0.75 |  1.35 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 19.47 | 20.19 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  1.22 |  1.23 |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  4.74 |  7.77 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  5.38 |  6.97 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.47 |  1.3  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/14 00:51:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 18.5900  mIoU: 1.5900  mAcc: 3.2400  data_time: 0.0029  time: 2.1198
07/14 00:52:00 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 778611149
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 778611149
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 00:52:00 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 00:52:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 00:52:06 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 00:52:07 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/14 00:52:07 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/14 00:55:50 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:24:53  time: 3.2145  data_time: 0.0017  memory: 23492  
07/14 00:58:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:58:20  time: 3.4532  data_time: 0.0019  memory: 23394  
07/14 01:00:16 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:40:27  time: 2.2897  data_time: 0.0030  memory: 22859  
07/14 01:02:33 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:33:46  time: 2.6826  data_time: 0.0015  memory: 23553  
07/14 01:04:39 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:27:42  time: 2.1252  data_time: 0.0016  memory: 23335  
07/14 01:06:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:22:40  time: 1.8923  data_time: 0.0016  memory: 23439  
07/14 01:08:52 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:18:56  time: 2.0698  data_time: 0.0015  memory: 23343  
07/14 01:10:49 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:14:46  time: 2.1971  data_time: 0.0014  memory: 23302  
07/14 01:12:21 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:09:40  time: 1.9595  data_time: 0.0015  memory: 22735  
07/14 01:13:59 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:05:35  time: 1.7499  data_time: 0.0015  memory: 21970  
07/14 01:15:43 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:02:10  time: 2.2758  data_time: 0.0016  memory: 23409  
07/14 01:17:19 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:58:46  time: 2.1709  data_time: 0.0017  memory: 23345  
07/14 01:19:06 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:56:00  time: 2.4538  data_time: 0.0016  memory: 23560  
07/14 01:21:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:53:40  time: 1.8733  data_time: 0.0016  memory: 23545  
07/14 01:22:56 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:51:20  time: 3.1691  data_time: 0.0014  memory: 23807  
07/14 01:24:27 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:48:28  time: 1.8729  data_time: 0.0017  memory: 22871  
07/14 01:26:00 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:45:49  time: 1.8814  data_time: 0.0016  memory: 5331  
07/14 01:27:31 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:43:14  time: 1.8458  data_time: 0.0014  memory: 22486  
07/14 01:29:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:41:08  time: 2.2474  data_time: 0.0016  memory: 23335  
07/14 01:30:58 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:38:50  time: 1.7322  data_time: 0.0015  memory: 23358  
07/14 01:32:48 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:36:47  time: 2.6501  data_time: 0.0016  memory: 23816  
07/14 01:34:31 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:34:40  time: 1.7941  data_time: 0.0016  memory: 22809  
07/14 01:36:07 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:32:30  time: 2.0142  data_time: 0.0015  memory: 22317  
07/14 01:37:45 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:30:24  time: 1.8893  data_time: 0.0017  memory: 7877  
07/14 01:39:21 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:28:19  time: 1.9754  data_time: 0.0015  memory: 22858  
07/14 01:40:45 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:26:10  time: 1.7770  data_time: 0.0016  memory: 5386  
07/14 01:42:17 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:24:08  time: 1.6723  data_time: 0.0015  memory: 21812  
07/14 01:44:01 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:22:14  time: 2.2005  data_time: 0.0015  memory: 23088  
07/14 01:45:32 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:20:15  time: 2.1421  data_time: 0.0015  memory: 22518  
07/14 01:46:59 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:18:17  time: 1.6525  data_time: 0.0015  memory: 5330  
07/14 01:48:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:16:23  time: 1.8084  data_time: 0.0015  memory: 23258  
07/14 01:50:03 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:14:28  time: 1.7947  data_time: 0.0016  memory: 5249  
07/14 01:51:40 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:12:37  time: 1.6418  data_time: 0.0015  memory: 23378  
07/14 01:53:18 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:10:47  time: 1.8411  data_time: 0.0017  memory: 22664  
07/14 01:54:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:08:58  time: 1.7374  data_time: 0.0015  memory: 23119  
07/14 01:56:24 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:07:08  time: 1.8810  data_time: 0.0017  memory: 21917  
07/14 01:57:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:05:20  time: 1.8691  data_time: 0.0017  memory: 4714  
07/14 01:59:27 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:32  time: 1.6898  data_time: 0.0015  memory: 23652  
07/14 02:01:02 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:46  time: 1.7436  data_time: 0.0015  memory: 22204  
07/14 02:02:36 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.6248  data_time: 0.0013  memory: 23652  
07/14 02:02:36 - mmengine - INFO - per class results:
07/14 02:02:36 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.0  |  0.0  |
|       building      | 0.0  |  0.0  |
|         sky         | 9.39 | 99.32 |
|        floor        | 0.0  |  0.0  |
|         tree        | 6.15 | 13.24 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.01 |  0.01 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.0  |  0.0  |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/14 02:02:36 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 9.4400  mIoU: 0.1000  mAcc: 0.7500  data_time: 0.0024  time: 2.1141
07/14 02:03:32 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1676148738
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1676148738
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 02:03:32 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='segpgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b2_20220624-66e8bf70.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            6,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B2'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 02:03:55 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 02:03:55 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 02:03:56 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/14 02:03:56 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B2/segformer_mit-b2_512x512_160k_ade20k_20210726_112103-cbd414ac.pth
07/14 02:08:03 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:40:33  time: 3.2380  data_time: 0.0018  memory: 23492  
07/14 02:10:35 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:06:16  time: 3.4723  data_time: 0.0019  memory: 23394  
07/14 02:12:31 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:45:48  time: 2.3085  data_time: 0.0016  memory: 22859  
07/14 02:14:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:37:49  time: 2.6951  data_time: 0.0015  memory: 23553  
07/14 02:16:56 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:30:54  time: 2.1346  data_time: 0.0015  memory: 23335  
07/14 02:19:01 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:25:23  time: 1.9294  data_time: 0.0017  memory: 23439  
07/14 02:21:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:21:18  time: 2.1025  data_time: 0.0016  memory: 23343  
07/14 02:23:09 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:16:52  time: 2.2169  data_time: 0.0015  memory: 23302  
07/14 02:24:45 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:11:39  time: 2.1921  data_time: 0.0015  memory: 22735  
07/14 02:26:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:07:27  time: 1.7694  data_time: 0.0015  memory: 21970  
07/14 02:28:10 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:03:50  time: 2.3011  data_time: 0.0016  memory: 23409  
07/14 02:29:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:00:17  time: 2.1985  data_time: 0.0017  memory: 23345  
07/14 02:31:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:57:23  time: 2.4561  data_time: 0.0015  memory: 23560  
07/14 02:33:31 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:54:55  time: 1.8912  data_time: 0.0017  memory: 23545  
07/14 02:35:26 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:52:29  time: 3.1762  data_time: 0.0016  memory: 23807  
07/14 02:36:57 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:49:31  time: 1.8724  data_time: 0.0017  memory: 22871  
07/14 02:38:35 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:46:52  time: 2.1402  data_time: 0.0018  memory: 5328  
07/14 02:40:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:44:22  time: 2.0363  data_time: 0.0016  memory: 22486  
07/14 02:42:16 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:42:21  time: 2.4488  data_time: 0.0017  memory: 23335  
07/14 02:43:59 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:40:02  time: 1.8849  data_time: 0.0016  memory: 23358  
07/14 02:45:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:37:59  time: 2.7742  data_time: 0.0016  memory: 23816  
07/14 02:47:46 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:35:51  time: 1.9201  data_time: 0.0016  memory: 22809  
07/14 02:49:28 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:33:38  time: 2.1294  data_time: 0.0016  memory: 22317  
07/14 02:51:08 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:31:27  time: 1.8635  data_time: 0.0016  memory: 7877  
07/14 02:52:48 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:29:18  time: 2.0875  data_time: 0.0016  memory: 22858  
07/14 02:54:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:27:06  time: 1.8934  data_time: 0.0016  memory: 5385  
07/14 02:55:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:25:01  time: 1.7994  data_time: 0.0016  memory: 21812  
07/14 02:57:47 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:23:04  time: 2.3138  data_time: 0.0016  memory: 23088  
07/14 02:59:23 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:21:01  time: 2.2634  data_time: 0.0016  memory: 22518  
07/14 03:00:57 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:19:00  time: 1.7758  data_time: 0.0015  memory: 5327  
07/14 03:02:38 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:17:02  time: 1.9265  data_time: 0.0016  memory: 23258  
07/14 03:04:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:15:04  time: 1.9344  data_time: 0.0017  memory: 5251  
07/14 03:05:56 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:13:08  time: 1.7841  data_time: 0.0015  memory: 23378  
07/14 03:07:40 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:11:14  time: 1.9811  data_time: 0.0017  memory: 22664  
07/14 03:09:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:09:20  time: 1.8890  data_time: 0.0017  memory: 23119  
07/14 03:11:01 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:07:27  time: 2.0125  data_time: 0.0018  memory: 21917  
07/14 03:12:41 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:05:34  time: 1.9977  data_time: 0.0017  memory: 4712  
07/14 03:14:15 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:42  time: 1.8075  data_time: 0.0016  memory: 23652  
07/14 03:15:57 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:50  time: 1.8796  data_time: 0.0016  memory: 22204  
07/14 03:17:37 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.7688  data_time: 0.0014  memory: 23652  
07/14 03:17:38 - mmengine - INFO - per class results:
07/14 03:17:38 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 48.31 | 88.53 |
|       building      | 66.32 |  79.6 |
|         sky         | 90.88 | 95.44 |
|        floor        | 48.49 | 60.37 |
|         tree        | 51.37 |  66.9 |
|       ceiling       | 68.49 | 76.62 |
|         road        | 59.31 | 66.79 |
|         bed         | 68.94 | 79.55 |
|      windowpane     | 49.53 | 63.59 |
|        grass        |  41.4 | 48.74 |
|       cabinet       | 38.43 | 47.87 |
|       sidewalk      | 48.13 | 59.26 |
|        person       | 54.77 | 66.68 |
|        earth        |  26.6 | 44.44 |
|         door        | 27.77 |  36.1 |
|        table        | 33.51 | 52.04 |
|       mountain      | 40.05 | 58.58 |
|        plant        | 29.51 | 34.66 |
|       curtain       | 53.65 | 63.72 |
|        chair        | 33.59 | 43.99 |
|         car         | 65.26 | 78.01 |
|        water        | 31.93 | 40.59 |
|       painting      | 55.17 | 73.38 |
|         sofa        | 41.99 | 55.82 |
|        shelf        | 27.57 | 37.55 |
|        house        | 36.65 |  50.1 |
|         sea         | 31.75 | 53.21 |
|        mirror       | 45.25 | 53.45 |
|         rug         | 34.73 | 39.17 |
|        field        |  19.9 | 33.03 |
|       armchair      | 22.98 | 29.33 |
|         seat        | 38.38 |  48.3 |
|        fence        | 21.97 | 28.25 |
|         desk        | 29.22 | 41.02 |
|         rock        | 25.61 | 34.71 |
|       wardrobe      | 32.79 | 40.81 |
|         lamp        | 51.13 | 60.51 |
|       bathtub       | 62.87 | 71.23 |
|       railing       | 24.34 | 33.87 |
|       cushion       | 33.37 | 40.75 |
|         base        |  3.74 |  4.54 |
|         box         | 14.74 | 18.12 |
|        column       | 27.32 | 32.73 |
|      signboard      |  24.8 | 35.88 |
|   chest of drawers  | 19.91 | 26.02 |
|       counter       |  9.21 |  11.8 |
|         sand        |  28.3 | 41.84 |
|         sink        | 53.16 | 64.71 |
|      skyscraper     | 23.94 | 29.56 |
|      fireplace      | 40.82 | 43.74 |
|     refrigerator    | 44.58 | 47.92 |
|      grandstand     | 30.22 |  60.6 |
|         path        | 19.97 | 25.15 |
|        stairs       | 16.07 | 18.21 |
|        runway       | 42.35 | 54.88 |
|         case        | 27.08 | 40.07 |
|      pool table     | 47.81 | 50.43 |
|        pillow       | 42.58 | 52.57 |
|     screen door     | 38.25 | 41.61 |
|       stairway      | 11.93 |  16.7 |
|        river        | 10.56 | 18.79 |
|        bridge       | 12.08 | 14.15 |
|       bookcase      | 32.23 | 39.12 |
|        blind        | 23.31 | 25.93 |
|     coffee table    | 33.84 | 39.14 |
|        toilet       | 65.19 | 70.04 |
|        flower       | 30.26 | 37.04 |
|         book        | 37.75 | 49.78 |
|         hill        |  4.26 |  5.28 |
|        bench        | 25.81 | 33.43 |
|      countertop     | 35.25 | 45.68 |
|        stove        | 33.79 | 36.52 |
|         palm        | 31.48 | 41.45 |
|    kitchen island   | 12.85 |  14.8 |
|       computer      | 49.77 | 56.44 |
|     swivel chair    |  4.48 |  4.55 |
|         boat        | 25.62 | 32.22 |
|         bar         | 10.02 | 12.07 |
|    arcade machine   | 12.05 | 13.37 |
|        hovel        | 28.22 | 30.14 |
|         bus         |  66.6 | 81.17 |
|        towel        | 51.28 | 62.27 |
|        light        | 38.57 |  41.5 |
|        truck        |  5.12 |  6.46 |
|        tower        | 13.59 | 19.57 |
|      chandelier     | 61.49 | 69.52 |
|        awning       |  4.23 |  4.54 |
|     streetlight     | 13.04 | 14.14 |
|        booth        | 24.35 | 24.72 |
| television receiver | 15.41 | 16.63 |
|       airplane      | 32.14 | 55.13 |
|      dirt track     |  0.2  |  0.36 |
|       apparel       | 30.86 | 40.87 |
|         pole        | 10.12 | 12.41 |
|         land        |  2.03 |  3.97 |
|      bannister      |  7.61 | 10.09 |
|      escalator      |  2.05 |  2.13 |
|       ottoman       |  34.8 | 41.86 |
|        bottle       | 13.82 | 15.77 |
|        buffet       |  1.79 |  1.91 |
|        poster       | 28.76 | 34.89 |
|        stage        |  8.31 | 10.97 |
|         van         | 32.76 |  41.0 |
|         ship        | 17.75 | 18.31 |
|       fountain      | 17.74 | 17.85 |
|    conveyer belt    | 68.82 | 75.15 |
|        canopy       |  10.1 | 11.87 |
|        washer       | 39.14 | 40.79 |
|      plaything      | 16.93 |  19.4 |
|    swimming pool    | 26.63 | 28.63 |
|        stool        | 13.88 | 15.13 |
|        barrel       | 23.98 | 24.19 |
|        basket       | 11.93 | 16.32 |
|      waterfall      | 47.14 |  72.1 |
|         tent        | 75.26 | 96.37 |
|         bag         |  2.93 |  3.05 |
|       minibike      | 34.74 | 39.27 |
|        cradle       | 67.53 | 77.52 |
|         oven        |  3.96 |  4.26 |
|         ball        | 33.42 | 38.88 |
|         food        | 25.79 | 27.16 |
|         step        |  3.93 |  4.32 |
|         tank        | 41.14 | 42.05 |
|      trade name     | 15.96 |  17.2 |
|      microwave      |  20.9 | 22.59 |
|         pot         |  9.79 | 10.38 |
|        animal       | 18.67 | 19.58 |
|       bicycle       | 31.62 | 47.86 |
|         lake        | 44.98 | 47.25 |
|      dishwasher     | 30.04 | 31.73 |
|        screen       | 41.19 | 56.58 |
|       blanket       |  7.45 |  7.81 |
|      sculpture      | 17.38 |  20.8 |
|         hood        | 32.84 | 34.06 |
|        sconce       | 33.73 |  43.2 |
|         vase        | 24.71 | 31.54 |
|    traffic light    | 19.46 | 25.71 |
|         tray        |  4.27 |  7.07 |
|        ashcan       | 12.76 | 13.52 |
|         fan         | 46.69 | 57.38 |
|         pier        |  6.58 |  8.48 |
|      crt screen     |  5.19 | 12.23 |
|        plate        | 44.85 | 56.12 |
|       monitor       | 14.04 | 16.39 |
|    bulletin board   | 25.65 | 30.68 |
|        shower       |  2.64 |  3.37 |
|       radiator      | 45.22 | 47.12 |
|        glass        |  8.07 |  8.6  |
|        clock        | 19.58 | 22.26 |
|         flag        | 17.76 | 18.71 |
+---------------------+-------+-------+
07/14 03:17:38 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 67.0400  mIoU: 29.8700  mAcc: 36.7800  data_time: 0.0025  time: 2.2101
Runtime: 41326

============================= JOB FEEDBACK =============================

NodeName=uc2n485
Job ID: 23861455
Array Job ID: 23860916_3
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 09:47:25
CPU Efficiency: 5.33% of 7-15:48:32 core-walltime
Job Wall-clock time: 11:29:17
Memory Utilized: 3.69 GB
Memory Efficiency: 3.69% of 100.00 GB
