Started at Sun Sep 15 14:26:27 CEST 2024
/var/spool/slurmd/job24235245/slurm_script: line 15: activate: No such file or directory
Processing corruption type: gaussian_noise
09/15 14:26:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 576418897
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 576418897
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:26:30 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/gaussian_noise'

09/15 14:26:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:26:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:26:34 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:26:36 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:27:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:13  time: 0.4885  data_time: 0.0016  memory: 19905  
09/15 14:27:51 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:49  time: 0.6497  data_time: 0.0016  memory: 19901  
09/15 14:28:05 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:21  time: 0.2668  data_time: 0.0016  memory: 19874  
09/15 14:28:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:24  time: 0.3957  data_time: 0.0015  memory: 19902  
09/15 14:28:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:47  time: 0.2031  data_time: 0.0015  memory: 19898  
09/15 14:28:59 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:13:30  time: 0.1018  data_time: 0.0016  memory: 19898  
09/15 14:29:17 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:38  time: 0.1917  data_time: 0.0015  memory: 19898  
09/15 14:29:32 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:44  time: 0.2726  data_time: 0.0014  memory: 19899  
09/15 14:29:40 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:33  time: 0.1710  data_time: 0.0015  memory: 19872  
09/15 14:29:47 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:33  time: 0.0940  data_time: 0.0015  memory: 19838  
09/15 14:29:55 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:45  time: 0.2397  data_time: 0.0015  memory: 19896  
09/15 14:30:03 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:02  time: 0.2431  data_time: 0.0016  memory: 19898  
09/15 14:30:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:33  time: 0.3263  data_time: 0.0014  memory: 19907  
09/15 14:30:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:10  time: 0.0982  data_time: 0.0016  memory: 19906  
09/15 14:30:42 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:49  time: 0.5464  data_time: 0.0014  memory: 19913  
09/15 14:30:48 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:18  time: 0.0979  data_time: 0.0016  memory: 19876  
09/15 14:30:53 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:48  time: 0.0961  data_time: 0.0016  memory: 697  
09/15 14:31:01 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:23  time: 0.1953  data_time: 0.0014  memory: 19864  
09/15 14:31:13 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:06  time: 0.3013  data_time: 0.0016  memory: 19894  
09/15 14:31:22 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:46  time: 0.1173  data_time: 0.0015  memory: 19895  
09/15 14:31:37 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:32  time: 0.4770  data_time: 0.0015  memory: 19913  
09/15 14:31:48 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:15  time: 0.1003  data_time: 0.0015  memory: 19878  
09/15 14:31:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:58  time: 0.1654  data_time: 0.0015  memory: 19852  
09/15 14:32:04 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:38  time: 0.1249  data_time: 0.0015  memory: 1894  
09/15 14:32:14 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:22  time: 0.2430  data_time: 0.0015  memory: 19881  
09/15 14:32:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:05  time: 0.0936  data_time: 0.0015  memory: 698  
09/15 14:32:27 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:48  time: 0.1182  data_time: 0.0015  memory: 19833  
09/15 14:32:41 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:36  time: 0.3098  data_time: 0.0015  memory: 19886  
09/15 14:32:47 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:20  time: 0.1981  data_time: 0.0014  memory: 19864  
09/15 14:32:52 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:05  time: 0.0899  data_time: 0.0014  memory: 697  
09/15 14:32:58 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:51  time: 0.0934  data_time: 0.0014  memory: 19890  
09/15 14:33:03 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:36  time: 0.0915  data_time: 0.0016  memory: 688  
09/15 14:33:12 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:23  time: 0.0866  data_time: 0.0014  memory: 19895  
09/15 14:33:20 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:11  time: 0.0916  data_time: 0.0016  memory: 19868  
09/15 14:33:27 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:58  time: 0.0918  data_time: 0.0014  memory: 19886  
09/15 14:33:32 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:46  time: 0.0963  data_time: 0.0016  memory: 19838  
09/15 14:33:37 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:34  time: 0.0925  data_time: 0.0016  memory: 646  
09/15 14:33:43 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:22  time: 0.0948  data_time: 0.0015  memory: 19907  
09/15 14:33:50 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:11  time: 0.0909  data_time: 0.0014  memory: 19848  
09/15 14:33:57 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0859  data_time: 0.0013  memory: 19909  
09/15 14:33:57 - mmengine - INFO - per class results:
09/15 14:33:57 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.17 | 88.66 |
|       building      | 79.47 | 90.91 |
|         sky         | 92.76 | 96.42 |
|        floor        | 76.16 | 90.48 |
|         tree        | 68.86 | 89.35 |
|       ceiling       | 80.43 | 89.79 |
|         road        |  77.4 | 93.33 |
|         bed         | 84.98 | 92.94 |
|      windowpane     | 58.34 | 74.75 |
|        grass        |  64.0 | 76.15 |
|       cabinet       | 54.34 |  65.0 |
|       sidewalk      | 48.25 | 54.18 |
|        person       | 75.57 | 89.27 |
|        earth        | 31.69 | 48.74 |
|         door        | 38.38 | 45.64 |
|        table        | 55.57 | 71.23 |
|       mountain      | 53.43 | 67.09 |
|        plant        | 46.68 |  56.4 |
|       curtain       | 62.68 | 72.75 |
|        chair        | 50.64 |  61.9 |
|         car         | 81.25 | 90.63 |
|        water        | 53.14 | 69.52 |
|       painting      | 67.94 |  80.6 |
|         sofa        | 64.65 | 82.52 |
|        shelf        | 38.64 | 52.89 |
|        house        | 40.22 | 47.24 |
|         sea         | 48.94 | 64.72 |
|        mirror       | 58.56 | 65.23 |
|         rug         | 39.32 | 44.56 |
|        field        | 31.16 | 49.84 |
|       armchair      | 41.45 | 58.89 |
|         seat        |  57.7 | 79.82 |
|        fence        | 36.74 | 53.11 |
|         desk        | 45.27 | 66.01 |
|         rock        | 46.76 | 75.38 |
|       wardrobe      |  43.6 | 61.73 |
|         lamp        | 57.48 | 67.66 |
|       bathtub       | 69.96 | 76.83 |
|       railing       | 26.25 | 32.81 |
|       cushion       | 51.56 | 62.83 |
|         base        | 20.22 | 25.28 |
|         box         |  21.3 | 25.43 |
|        column       | 41.33 | 54.52 |
|      signboard      |  34.6 | 44.93 |
|   chest of drawers  |  38.1 | 54.67 |
|       counter       | 26.54 | 39.05 |
|         sand        | 40.33 | 58.12 |
|         sink        | 65.63 | 75.72 |
|      skyscraper     | 53.42 | 70.36 |
|      fireplace      | 68.11 | 80.11 |
|     refrigerator    | 71.85 | 79.34 |
|      grandstand     | 46.68 |  76.8 |
|         path        | 17.98 | 27.51 |
|        stairs       | 25.01 |  31.9 |
|        runway       | 82.17 | 88.18 |
|         case        | 46.71 | 54.31 |
|      pool table     | 86.55 | 89.28 |
|        pillow       | 52.97 |  64.6 |
|     screen door     | 63.26 | 65.94 |
|       stairway      | 31.97 | 44.88 |
|        river        |  9.65 | 19.69 |
|        bridge       | 37.53 |  41.8 |
|       bookcase      |  37.1 | 51.89 |
|        blind        | 33.77 |  35.8 |
|     coffee table    | 53.47 | 64.95 |
|        toilet       | 78.18 | 83.64 |
|        flower       | 32.57 |  53.2 |
|         book        | 42.77 | 55.69 |
|         hill        | 12.32 | 23.07 |
|        bench        | 32.34 | 38.81 |
|      countertop     |  49.0 | 62.03 |
|        stove        | 67.33 | 74.97 |
|         palm        | 44.38 | 57.43 |
|    kitchen island   | 30.06 | 47.85 |
|       computer      | 53.68 | 58.93 |
|     swivel chair    | 31.51 | 38.52 |
|         boat        | 36.73 | 42.87 |
|         bar         | 32.67 | 39.33 |
|    arcade machine   | 32.11 | 33.32 |
|        hovel        | 27.67 | 32.97 |
|         bus         | 81.71 | 90.22 |
|        towel        | 53.85 | 63.49 |
|        light        | 39.57 | 42.85 |
|        truck        | 29.59 | 36.65 |
|        tower        |  5.58 |  7.36 |
|      chandelier     | 62.41 | 78.17 |
|        awning       | 20.34 | 21.71 |
|     streetlight     |  21.7 | 28.64 |
|        booth        | 50.74 | 54.04 |
| television receiver |  61.3 | 71.78 |
|       airplane      | 52.41 | 66.23 |
|      dirt track     | 10.79 | 19.88 |
|       apparel       | 36.44 |  46.3 |
|         pole        | 20.03 | 30.23 |
|         land        |  0.62 |  0.95 |
|      bannister      |  10.9 | 14.82 |
|      escalator      | 21.34 | 27.45 |
|       ottoman       | 33.47 | 43.34 |
|        bottle       | 34.16 | 58.52 |
|        buffet       | 41.81 | 49.44 |
|        poster       | 22.69 | 25.87 |
|        stage        | 13.61 | 19.79 |
|         van         | 47.92 | 61.19 |
|         ship        |  7.27 | 10.39 |
|       fountain      | 18.68 | 20.54 |
|    conveyer belt    | 76.13 |  88.4 |
|        canopy       | 11.63 | 12.86 |
|        washer       | 63.81 | 64.99 |
|      plaything      | 14.71 | 18.11 |
|    swimming pool    | 48.09 |  62.6 |
|        stool        | 36.36 | 46.72 |
|        barrel       |  21.1 | 42.06 |
|        basket       | 24.91 | 29.02 |
|      waterfall      | 68.23 | 74.19 |
|         tent        | 92.56 | 97.67 |
|         bag         |  8.48 |  9.71 |
|       minibike      | 64.28 |  71.4 |
|        cradle       | 75.03 | 93.32 |
|         oven        | 24.42 |  40.0 |
|         ball        | 46.35 | 65.17 |
|         food        | 44.31 | 52.95 |
|         step        |  4.42 |  4.65 |
|         tank        | 48.41 | 55.59 |
|      trade name     | 22.79 | 27.19 |
|      microwave      | 69.88 | 75.49 |
|         pot         | 33.88 | 36.25 |
|        animal       | 52.39 | 57.79 |
|       bicycle       | 50.88 |  71.6 |
|         lake        |  59.1 | 62.12 |
|      dishwasher     | 56.65 | 65.66 |
|        screen       | 70.87 | 80.64 |
|       blanket       | 12.59 | 13.42 |
|      sculpture      | 42.34 | 49.18 |
|         hood        | 49.62 | 54.56 |
|        sconce       | 36.16 | 45.45 |
|         vase        | 29.96 | 45.93 |
|    traffic light    | 30.38 | 43.36 |
|         tray        | 11.78 | 17.67 |
|        ashcan       | 27.73 | 33.79 |
|         fan         | 52.04 | 62.95 |
|         pier        | 32.88 | 48.09 |
|      crt screen     |  6.03 | 16.32 |
|        plate        | 46.16 |  56.5 |
|       monitor       |  3.53 |  3.89 |
|    bulletin board   | 36.07 | 39.89 |
|        shower       |  0.84 |  1.92 |
|       radiator      | 33.37 | 36.53 |
|        glass        | 13.54 | 14.64 |
|        clock        | 33.91 | 38.54 |
|         flag        | 59.99 | 66.03 |
+---------------------+-------+-------+
09/15 14:33:57 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.8400  mIoU: 43.5300  mAcc: 53.2700  data_time: 0.0017  time: 0.2206
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
09/15 14:34:00 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 186492922
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 186492922
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:34:01 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/shot_noise'

09/15 14:34:04 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:34:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:34:04 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:34:05 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:34:59 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:17  time: 0.5793  data_time: 0.0016  memory: 19905  
09/15 14:35:27 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:00  time: 0.7260  data_time: 0.0016  memory: 19901  
09/15 14:35:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:20:34  time: 0.3431  data_time: 0.0016  memory: 19874  
09/15 14:36:09 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:18:34  time: 0.4780  data_time: 0.0016  memory: 19902  
09/15 14:36:30 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:16:53  time: 0.2782  data_time: 0.0015  memory: 19898  
09/15 14:36:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:32  time: 0.1763  data_time: 0.0016  memory: 19898  
09/15 14:37:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:36  time: 0.2633  data_time: 0.0015  memory: 19898  
09/15 14:37:30 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:40  time: 0.3455  data_time: 0.0015  memory: 19899  
09/15 14:37:41 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:24  time: 0.2389  data_time: 0.0015  memory: 19872  
09/15 14:37:52 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:11:20  time: 0.1647  data_time: 0.0015  memory: 19838  
09/15 14:38:04 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:30  time: 0.3171  data_time: 0.0016  memory: 19896  
09/15 14:38:15 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:44  time: 0.3248  data_time: 0.0016  memory: 19898  
09/15 14:38:31 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:12  time: 0.4042  data_time: 0.0015  memory: 19907  
09/15 14:38:48 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:45  time: 0.1775  data_time: 0.0017  memory: 19906  
09/15 14:39:06 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:21  time: 0.6234  data_time: 0.0015  memory: 19913  
09/15 14:39:16 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:46  time: 0.1695  data_time: 0.0017  memory: 19876  
09/15 14:39:24 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:12  time: 0.1753  data_time: 0.0017  memory: 697  
09/15 14:39:36 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:45  time: 0.3213  data_time: 0.0014  memory: 19864  
09/15 14:39:56 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:28  time: 0.4396  data_time: 0.0016  memory: 19894  
09/15 14:40:11 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:06  time: 0.2026  data_time: 0.0015  memory: 19895  
09/15 14:40:31 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:49  time: 0.6328  data_time: 0.0016  memory: 19913  
09/15 14:40:46 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:28  time: 0.1676  data_time: 0.0016  memory: 19878  
09/15 14:40:57 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:04  time: 0.2437  data_time: 0.0016  memory: 19852  
09/15 14:41:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:40  time: 0.1657  data_time: 0.0015  memory: 1894  
09/15 14:41:17 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:19  time: 0.2459  data_time: 0.0016  memory: 19881  
09/15 14:41:25 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:57  time: 0.1677  data_time: 0.0015  memory: 698  
09/15 14:41:35 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:36  time: 0.1634  data_time: 0.0015  memory: 19833  
09/15 14:41:49 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:18  time: 0.3527  data_time: 0.0015  memory: 19886  
09/15 14:41:59 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:59  time: 0.2777  data_time: 0.0015  memory: 19864  
09/15 14:42:07 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:40  time: 0.1579  data_time: 0.0015  memory: 697  
09/15 14:42:18 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:23  time: 0.1745  data_time: 0.0016  memory: 19890  
09/15 14:42:26 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:05  time: 0.1663  data_time: 0.0017  memory: 688  
09/15 14:42:39 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:48  time: 0.1598  data_time: 0.0034  memory: 19895  
09/15 14:42:51 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:32  time: 0.1745  data_time: 0.0017  memory: 19868  
09/15 14:43:02 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:16  time: 0.1720  data_time: 0.0015  memory: 19886  
09/15 14:43:11 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:00  time: 0.1718  data_time: 0.0017  memory: 19838  
09/15 14:43:20 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:44  time: 0.1712  data_time: 0.0017  memory: 646  
09/15 14:43:29 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:29  time: 0.1668  data_time: 0.0015  memory: 19907  
09/15 14:43:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.1715  data_time: 0.0015  memory: 19848  
09/15 14:43:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1576  data_time: 0.0014  memory: 19909  
09/15 14:43:51 - mmengine - INFO - per class results:
09/15 14:43:51 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.18 | 88.37 |
|       building      | 79.05 | 90.99 |
|         sky         | 92.45 | 95.96 |
|        floor        | 76.51 | 90.34 |
|         tree        |  69.8 | 89.58 |
|       ceiling       | 79.95 | 89.17 |
|         road        | 76.82 | 93.87 |
|         bed         | 85.19 | 93.13 |
|      windowpane     | 57.45 | 74.72 |
|        grass        | 63.92 | 76.67 |
|       cabinet       | 54.49 | 65.24 |
|       sidewalk      | 46.34 | 51.63 |
|        person       |  76.2 |  90.5 |
|        earth        | 31.06 |  48.2 |
|         door        | 37.29 | 44.56 |
|        table        | 56.16 | 71.79 |
|       mountain      | 53.19 | 67.48 |
|        plant        | 47.31 | 56.75 |
|       curtain       | 62.45 | 74.16 |
|        chair        | 51.92 | 63.64 |
|         car         | 81.89 | 90.93 |
|        water        | 53.11 | 70.26 |
|       painting      | 69.51 | 81.59 |
|         sofa        | 63.83 | 81.51 |
|        shelf        | 38.18 |  52.3 |
|        house        | 36.12 | 44.77 |
|         sea         | 48.72 | 63.77 |
|        mirror       | 55.93 | 61.76 |
|         rug         | 39.46 | 44.66 |
|        field        | 32.63 | 50.37 |
|       armchair      | 42.28 | 61.57 |
|         seat        | 59.49 | 80.22 |
|        fence        | 39.25 | 57.01 |
|         desk        | 45.59 | 66.51 |
|         rock        | 42.46 | 71.41 |
|       wardrobe      | 44.44 | 62.31 |
|         lamp        | 56.85 | 67.57 |
|       bathtub       | 66.36 | 73.32 |
|       railing       | 26.41 | 33.38 |
|       cushion       | 49.68 | 60.31 |
|         base        | 20.18 | 25.28 |
|         box         | 21.92 | 26.14 |
|        column       | 41.47 | 54.83 |
|      signboard      | 34.31 | 44.95 |
|   chest of drawers  | 38.78 | 55.42 |
|       counter       | 26.02 | 38.93 |
|         sand        |  31.6 | 44.85 |
|         sink        | 63.85 | 74.74 |
|      skyscraper     | 51.63 | 66.59 |
|      fireplace      | 67.14 | 77.09 |
|     refrigerator    | 70.32 | 79.29 |
|      grandstand     |  45.5 | 71.87 |
|         path        | 19.08 | 29.48 |
|        stairs       | 28.15 | 36.74 |
|        runway       | 80.63 | 82.56 |
|         case        | 46.06 | 57.13 |
|      pool table     | 88.03 | 90.94 |
|        pillow       | 48.83 | 59.62 |
|     screen door     | 66.35 | 68.73 |
|       stairway      | 31.61 | 43.69 |
|        river        |  9.63 |  19.8 |
|        bridge       | 35.46 | 39.84 |
|       bookcase      | 34.16 | 49.44 |
|        blind        |  25.0 | 26.46 |
|     coffee table    | 55.93 | 70.64 |
|        toilet       | 77.84 |  83.4 |
|        flower       | 34.63 |  54.8 |
|         book        | 44.32 |  58.2 |
|         hill        | 10.27 | 20.69 |
|        bench        | 30.52 | 36.91 |
|      countertop     | 52.61 | 66.61 |
|        stove        | 70.53 | 78.17 |
|         palm        | 46.29 | 62.03 |
|    kitchen island   | 29.29 | 46.74 |
|       computer      | 53.68 | 59.28 |
|     swivel chair    | 33.82 | 44.21 |
|         boat        | 55.99 | 63.57 |
|         bar         | 32.38 | 38.48 |
|    arcade machine   |  31.9 | 32.91 |
|        hovel        |  29.8 | 33.53 |
|         bus         | 84.58 | 93.63 |
|        towel        | 51.58 | 61.67 |
|        light        | 37.19 | 39.91 |
|        truck        |  34.7 | 42.75 |
|        tower        |  4.99 |  6.82 |
|      chandelier     | 60.43 | 78.23 |
|        awning       | 16.75 | 17.95 |
|     streetlight     | 22.46 | 30.11 |
|        booth        | 51.81 | 53.95 |
| television receiver | 63.18 |  73.9 |
|       airplane      | 54.35 | 65.99 |
|      dirt track     |  9.21 | 20.02 |
|       apparel       | 35.96 | 45.74 |
|         pole        | 19.53 | 30.34 |
|         land        |  0.87 |  1.37 |
|      bannister      | 10.37 | 13.52 |
|      escalator      | 25.76 | 30.96 |
|       ottoman       | 32.71 | 42.66 |
|        bottle       | 34.86 | 59.68 |
|        buffet       | 43.95 | 52.85 |
|        poster       | 29.29 | 31.99 |
|        stage        | 14.29 | 18.93 |
|         van         | 49.35 | 62.53 |
|         ship        |  8.42 |  9.94 |
|       fountain      |  18.6 | 20.33 |
|    conveyer belt    | 75.19 | 88.59 |
|        canopy       |  8.79 |  9.87 |
|        washer       |  61.0 | 62.65 |
|      plaything      | 14.58 | 17.89 |
|    swimming pool    | 41.63 | 55.59 |
|        stool        |  36.1 | 47.71 |
|        barrel       | 37.24 | 70.65 |
|        basket       | 26.29 | 31.05 |
|      waterfall      | 56.64 |  60.3 |
|         tent        | 94.83 | 97.72 |
|         bag         |  7.99 |  9.25 |
|       minibike      | 60.64 |  68.5 |
|        cradle       | 71.01 | 87.33 |
|         oven        | 30.12 | 56.69 |
|         ball        | 47.23 | 65.44 |
|         food        | 42.05 | 50.41 |
|         step        |  7.04 |  7.7  |
|         tank        | 43.72 | 50.56 |
|      trade name     | 23.12 | 28.75 |
|      microwave      | 63.22 | 68.74 |
|         pot         |  35.0 |  37.5 |
|        animal       | 54.57 | 56.51 |
|       bicycle       | 52.52 | 73.45 |
|         lake        | 57.29 | 59.82 |
|      dishwasher     | 60.36 | 65.73 |
|        screen       | 67.41 | 76.48 |
|       blanket       | 13.63 | 14.66 |
|      sculpture      | 46.15 | 55.46 |
|         hood        | 48.22 | 53.88 |
|        sconce       |  31.9 | 38.13 |
|         vase        |  28.4 | 45.59 |
|    traffic light    | 29.63 | 42.51 |
|         tray        |  9.94 | 14.84 |
|        ashcan       | 32.08 | 39.39 |
|         fan         | 53.39 |  64.5 |
|         pier        | 40.03 | 75.97 |
|      crt screen     |  7.34 | 21.69 |
|        plate        | 43.37 | 52.43 |
|       monitor       |  3.39 |  3.79 |
|    bulletin board   |  32.7 | 36.36 |
|        shower       |  0.18 |  0.31 |
|       radiator      | 26.22 | 28.62 |
|        glass        | 13.16 |  14.2 |
|        clock        | 36.84 | 42.07 |
|         flag        | 58.36 | 64.05 |
+---------------------+-------+-------+
09/15 14:43:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.7000  mIoU: 43.4900  mAcc: 53.5100  data_time: 0.0017  time: 0.2930
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
09/15 14:43:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1007901911
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1007901911
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:43:55 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/impulse_noise'

09/15 14:43:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:43:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:43:58 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:43:59 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:44:51 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:34:05  time: 0.5457  data_time: 0.0016  memory: 19905  
09/15 14:45:18 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:25:10  time: 0.7133  data_time: 0.0016  memory: 19901  
09/15 14:45:35 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:50  time: 0.4054  data_time: 0.0015  memory: 19874  
09/15 14:45:56 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:39  time: 0.3776  data_time: 0.0015  memory: 19902  
09/15 14:46:13 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:39  time: 0.1851  data_time: 0.0015  memory: 19898  
09/15 14:46:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:07  time: 0.0810  data_time: 0.0016  memory: 19898  
09/15 14:46:45 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:04  time: 0.1754  data_time: 0.0015  memory: 19898  
09/15 14:47:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:03  time: 0.2564  data_time: 0.0014  memory: 19899  
09/15 14:47:06 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:46  time: 0.1495  data_time: 0.0014  memory: 19872  
09/15 14:47:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:42  time: 0.0770  data_time: 0.0014  memory: 19838  
09/15 14:47:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:50  time: 0.2246  data_time: 0.0016  memory: 19896  
09/15 14:47:27 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:05  time: 0.2260  data_time: 0.0016  memory: 19898  
09/15 14:47:37 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:34  time: 0.3028  data_time: 0.0014  memory: 19907  
09/15 14:47:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:09  time: 0.0838  data_time: 0.0016  memory: 19906  
09/15 14:48:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:47  time: 0.5277  data_time: 0.0014  memory: 19913  
09/15 14:48:09 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:15  time: 0.0775  data_time: 0.0016  memory: 19876  
09/15 14:48:13 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:43  time: 0.0769  data_time: 0.0016  memory: 697  
09/15 14:48:19 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:18  time: 0.1806  data_time: 0.0014  memory: 19864  
09/15 14:48:31 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:01  time: 0.2884  data_time: 0.0015  memory: 19894  
09/15 14:48:39 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:40  time: 0.0746  data_time: 0.0015  memory: 19895  
09/15 14:48:50 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:23  time: 0.3981  data_time: 0.0015  memory: 19913  
09/15 14:48:59 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:05  time: 0.0790  data_time: 0.0015  memory: 19878  
09/15 14:49:05 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:46  time: 0.1516  data_time: 0.0015  memory: 19852  
09/15 14:49:09 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:26  time: 0.0776  data_time: 0.0015  memory: 1894  
09/15 14:49:16 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:10  time: 0.1587  data_time: 0.0014  memory: 19881  
09/15 14:49:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:52  time: 0.0774  data_time: 0.0015  memory: 698  
09/15 14:49:24 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:36  time: 0.0775  data_time: 0.0015  memory: 19833  
09/15 14:49:34 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:23  time: 0.2482  data_time: 0.0014  memory: 19886  
09/15 14:49:40 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:09  time: 0.1819  data_time: 0.0014  memory: 19864  
09/15 14:49:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:55  time: 0.0824  data_time: 0.0014  memory: 697  
09/15 14:49:50 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:41  time: 0.0804  data_time: 0.0015  memory: 19890  
09/15 14:49:53 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:28  time: 0.0740  data_time: 0.0016  memory: 688  
09/15 14:50:02 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:17  time: 0.0725  data_time: 0.0014  memory: 19895  
09/15 14:50:10 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:05  time: 0.0757  data_time: 0.0016  memory: 19868  
09/15 14:50:16 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:53  time: 0.0786  data_time: 0.0014  memory: 19886  
09/15 14:50:21 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:42  time: 0.0758  data_time: 0.0016  memory: 19838  
09/15 14:50:25 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0743  data_time: 0.0016  memory: 646  
09/15 14:50:30 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0783  data_time: 0.0015  memory: 19907  
09/15 14:50:36 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0758  data_time: 0.0014  memory: 19848  
09/15 14:50:43 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0996  data_time: 0.0014  memory: 19909  
09/15 14:50:43 - mmengine - INFO - per class results:
09/15 14:50:43 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 69.13 | 89.92 |
|       building      | 78.53 | 90.58 |
|         sky         | 91.39 | 94.77 |
|        floor        | 75.43 | 89.72 |
|         tree        | 67.94 | 88.59 |
|       ceiling       | 76.85 | 84.82 |
|         road        | 76.48 | 92.23 |
|         bed         | 82.77 | 91.67 |
|      windowpane     |  56.6 | 71.18 |
|        grass        | 62.71 | 75.22 |
|       cabinet       | 50.34 | 59.47 |
|       sidewalk      | 45.69 | 51.07 |
|        person       | 74.96 | 88.87 |
|        earth        | 32.76 | 51.61 |
|         door        | 33.97 | 39.89 |
|        table        | 53.61 | 69.32 |
|       mountain      | 52.65 | 71.05 |
|        plant        | 45.77 | 54.68 |
|       curtain       | 59.42 | 70.82 |
|        chair        | 48.46 | 58.87 |
|         car         | 80.86 | 90.52 |
|        water        |  53.6 | 72.77 |
|       painting      | 63.95 | 75.91 |
|         sofa        | 60.94 | 78.57 |
|        shelf        | 36.21 |  49.9 |
|        house        | 37.34 | 43.21 |
|         sea         | 49.25 | 62.15 |
|        mirror       | 53.02 | 60.09 |
|         rug         | 43.66 | 48.96 |
|        field        | 26.04 | 39.26 |
|       armchair      |  39.4 | 57.69 |
|         seat        | 55.11 | 75.06 |
|        fence        | 34.67 | 52.02 |
|         desk        | 43.91 | 61.36 |
|         rock        | 41.24 | 68.21 |
|       wardrobe      | 45.57 | 60.76 |
|         lamp        | 54.23 | 62.79 |
|       bathtub       | 65.13 | 71.27 |
|       railing       | 26.63 | 32.73 |
|       cushion       | 44.08 | 50.88 |
|         base        | 12.37 | 15.53 |
|         box         | 19.68 | 25.38 |
|        column       |  36.2 | 50.37 |
|      signboard      | 34.66 | 45.87 |
|   chest of drawers  | 39.11 |  54.4 |
|       counter       | 24.53 | 35.88 |
|         sand        | 32.19 | 44.48 |
|         sink        | 63.61 | 73.87 |
|      skyscraper     | 41.13 | 51.32 |
|      fireplace      |  56.6 | 62.33 |
|     refrigerator    | 66.87 | 77.34 |
|      grandstand     | 47.65 | 76.99 |
|         path        | 19.74 | 30.88 |
|        stairs       | 30.29 | 42.43 |
|        runway       | 63.67 | 68.58 |
|         case        | 46.13 | 53.98 |
|      pool table     | 85.53 | 87.89 |
|        pillow       | 51.43 | 68.01 |
|     screen door     | 59.54 | 66.06 |
|       stairway      | 31.64 | 39.41 |
|        river        |  9.54 | 20.81 |
|        bridge       | 32.52 | 36.55 |
|       bookcase      | 42.24 | 51.67 |
|        blind        |  9.05 |  9.49 |
|     coffee table    | 51.14 | 58.89 |
|        toilet       | 74.36 | 78.85 |
|        flower       | 33.36 | 48.03 |
|         book        | 41.88 | 51.29 |
|         hill        | 11.29 | 23.25 |
|        bench        |  25.2 | 31.13 |
|      countertop     | 44.63 | 60.74 |
|        stove        | 65.66 | 73.29 |
|         palm        | 44.53 | 58.71 |
|    kitchen island   | 21.04 | 33.21 |
|       computer      | 53.22 | 57.15 |
|     swivel chair    | 29.23 | 33.04 |
|         boat        | 40.04 | 42.36 |
|         bar         | 27.77 | 34.45 |
|    arcade machine   | 32.16 | 33.06 |
|        hovel        | 30.99 | 35.97 |
|         bus         | 81.41 | 91.67 |
|        towel        | 46.57 | 54.62 |
|        light        |  36.3 | 38.74 |
|        truck        | 32.68 | 40.33 |
|        tower        | 17.12 | 25.59 |
|      chandelier     | 60.78 | 73.03 |
|        awning       | 10.53 | 10.88 |
|     streetlight     | 19.87 | 25.21 |
|        booth        | 50.27 | 52.13 |
| television receiver |  51.2 | 56.05 |
|       airplane      |  53.9 | 65.02 |
|      dirt track     | 11.46 | 20.62 |
|       apparel       | 32.11 |  41.0 |
|         pole        | 19.86 | 29.39 |
|         land        |  0.3  |  0.54 |
|      bannister      |  9.79 |  13.4 |
|      escalator      | 29.96 | 37.72 |
|       ottoman       | 34.13 | 40.51 |
|        bottle       | 33.89 | 54.79 |
|        buffet       |  41.6 | 49.69 |
|        poster       | 21.32 | 24.29 |
|        stage        | 13.76 | 17.79 |
|         van         | 46.48 | 59.26 |
|         ship        |  7.66 | 10.86 |
|       fountain      | 16.93 | 19.87 |
|    conveyer belt    | 80.82 | 87.14 |
|        canopy       |  1.68 |  1.71 |
|        washer       |  57.7 | 60.95 |
|      plaything      | 16.47 | 19.14 |
|    swimming pool    | 22.83 |  30.2 |
|        stool        | 30.63 |  38.9 |
|        barrel       | 15.66 | 41.56 |
|        basket       | 22.74 | 25.02 |
|      waterfall      | 67.33 | 74.81 |
|         tent        | 92.15 |  98.6 |
|         bag         |  2.62 |  2.89 |
|       minibike      | 61.82 | 68.85 |
|        cradle       | 64.31 | 80.43 |
|         oven        | 15.73 | 39.69 |
|         ball        | 44.79 | 63.85 |
|         food        |  42.4 | 49.53 |
|         step        |  9.33 | 10.56 |
|         tank        | 38.47 | 44.45 |
|      trade name     | 23.93 | 28.55 |
|      microwave      | 39.95 | 42.54 |
|         pot         | 30.02 | 31.91 |
|        animal       | 53.33 |  58.4 |
|       bicycle       | 49.92 | 69.58 |
|         lake        | 36.45 |  38.2 |
|      dishwasher     | 50.13 | 51.62 |
|        screen       | 60.12 |  66.1 |
|       blanket       | 12.29 | 12.87 |
|      sculpture      | 41.71 | 51.24 |
|         hood        | 42.67 | 45.15 |
|        sconce       | 30.78 | 35.44 |
|         vase        | 32.76 | 45.55 |
|    traffic light    | 29.22 | 38.56 |
|         tray        | 12.75 | 18.46 |
|        ashcan       | 28.49 | 36.74 |
|         fan         | 51.18 | 59.25 |
|         pier        | 28.81 | 37.88 |
|      crt screen     |  8.39 | 27.62 |
|        plate        | 48.66 | 56.73 |
|       monitor       |  9.9  |  11.0 |
|    bulletin board   | 22.76 | 24.21 |
|        shower       |  0.14 |  0.22 |
|       radiator      | 32.18 | 35.23 |
|        glass        | 10.85 | 11.47 |
|        clock        | 33.36 | 38.94 |
|         flag        | 42.88 | 45.37 |
+---------------------+-------+-------+
09/15 14:50:43 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.3800  mIoU: 40.6900  mAcc: 49.6800  data_time: 0.0017  time: 0.2021
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
09/15 14:50:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 779753518
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 779753518
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:50:46 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/defocus_blur'

09/15 14:50:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:50:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:50:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:50:50 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:51:41 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:06  time: 0.4792  data_time: 0.0015  memory: 19905  
09/15 14:52:06 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:50  time: 0.7149  data_time: 0.0016  memory: 19901  
09/15 14:52:19 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:15  time: 0.2521  data_time: 0.0015  memory: 19874  
09/15 14:52:39 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:16  time: 0.4073  data_time: 0.0015  memory: 19902  
09/15 14:52:57 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:46  time: 0.1888  data_time: 0.0014  memory: 19898  
09/15 14:53:13 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:13:25  time: 0.0834  data_time: 0.0015  memory: 19898  
09/15 14:53:30 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:33  time: 0.1765  data_time: 0.0014  memory: 19898  
09/15 14:53:45 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:40  time: 0.2563  data_time: 0.0014  memory: 19899  
09/15 14:53:53 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:27  time: 0.1557  data_time: 0.0014  memory: 19872  
09/15 14:53:59 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:25  time: 0.0797  data_time: 0.0014  memory: 19838  
09/15 14:54:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:36  time: 0.2267  data_time: 0.0015  memory: 19896  
09/15 14:54:13 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:53  time: 0.2313  data_time: 0.0016  memory: 19898  
09/15 14:54:24 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:23  time: 0.3083  data_time: 0.0014  memory: 19907  
09/15 14:54:37 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:01  time: 0.0870  data_time: 0.0015  memory: 19906  
09/15 14:54:51 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:41  time: 0.5319  data_time: 0.0014  memory: 19913  
09/15 14:54:57 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:09  time: 0.0801  data_time: 0.0016  memory: 19876  
09/15 14:55:01 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:38  time: 0.0803  data_time: 0.0016  memory: 697  
09/15 14:55:08 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:14  time: 0.1837  data_time: 0.0014  memory: 19864  
09/15 14:55:20 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:58  time: 0.2900  data_time: 0.0015  memory: 19894  
09/15 14:55:28 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:37  time: 0.0792  data_time: 0.0015  memory: 19895  
09/15 14:55:39 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:21  time: 0.3991  data_time: 0.0015  memory: 19913  
09/15 14:55:48 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:03  time: 0.0794  data_time: 0.0015  memory: 19878  
09/15 14:55:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:44  time: 0.1532  data_time: 0.0014  memory: 19852  
09/15 14:55:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:25  time: 0.0801  data_time: 0.0015  memory: 1894  
09/15 14:56:06 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:09  time: 0.1600  data_time: 0.0015  memory: 19881  
09/15 14:56:10 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:51  time: 0.0805  data_time: 0.0015  memory: 698  
09/15 14:56:15 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:36  time: 0.0806  data_time: 0.0015  memory: 19833  
09/15 14:56:25 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:23  time: 0.2514  data_time: 0.0014  memory: 19886  
09/15 14:56:31 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:09  time: 0.1837  data_time: 0.0014  memory: 19864  
09/15 14:56:35 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:54  time: 0.0780  data_time: 0.0014  memory: 697  
09/15 14:56:41 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:41  time: 0.0819  data_time: 0.0015  memory: 19890  
09/15 14:56:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:28  time: 0.0797  data_time: 0.0016  memory: 688  
09/15 14:56:54 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:17  time: 0.0785  data_time: 0.0014  memory: 19895  
09/15 14:57:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:05  time: 0.0810  data_time: 0.0016  memory: 19868  
09/15 14:57:09 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:54  time: 0.0830  data_time: 0.0014  memory: 19886  
09/15 14:57:14 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:42  time: 0.0821  data_time: 0.0016  memory: 19838  
09/15 14:57:18 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0833  data_time: 0.0016  memory: 646  
09/15 14:57:23 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0839  data_time: 0.0014  memory: 19907  
09/15 14:57:29 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0789  data_time: 0.0014  memory: 19848  
09/15 14:57:37 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0757  data_time: 0.0014  memory: 19909  
09/15 14:57:37 - mmengine - INFO - per class results:
09/15 14:57:37 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.67 |  88.6 |
|       building      | 80.26 | 92.41 |
|         sky         | 93.41 | 96.65 |
|        floor        | 79.51 | 90.07 |
|         tree        | 71.54 | 87.08 |
|       ceiling       | 83.51 | 91.48 |
|         road        | 83.22 | 91.98 |
|         bed         | 87.61 | 95.03 |
|      windowpane     | 58.57 | 77.24 |
|        grass        | 66.21 | 82.58 |
|       cabinet       | 57.32 | 69.98 |
|       sidewalk      | 62.08 | 73.78 |
|        person       | 76.21 | 89.35 |
|        earth        | 33.75 | 48.59 |
|         door        | 42.98 | 53.15 |
|        table        | 56.73 |  72.8 |
|       mountain      | 56.72 | 66.83 |
|        plant        | 49.91 | 59.87 |
|       curtain       | 70.64 | 79.94 |
|        chair        | 53.12 | 68.06 |
|         car         | 81.11 | 91.63 |
|        water        | 56.41 | 73.44 |
|       painting      | 70.63 | 83.36 |
|         sofa        | 65.06 | 84.33 |
|        shelf        | 40.42 | 58.53 |
|        house        | 36.39 | 43.71 |
|         sea         | 48.68 | 59.76 |
|        mirror       | 59.78 | 68.44 |
|         rug         | 57.01 | 68.17 |
|        field        |  30.4 | 41.31 |
|       armchair      | 41.45 | 55.83 |
|         seat        | 58.57 | 77.33 |
|        fence        | 39.13 | 52.58 |
|         desk        | 48.03 | 68.08 |
|         rock        | 43.68 |  71.5 |
|       wardrobe      | 48.32 | 69.42 |
|         lamp        | 57.75 | 71.93 |
|       bathtub       | 76.75 | 83.23 |
|       railing       | 28.82 | 44.04 |
|       cushion       |  52.5 |  62.2 |
|         base        | 29.94 | 43.73 |
|         box         | 21.71 | 27.92 |
|        column       | 43.22 | 51.15 |
|      signboard      | 33.17 | 42.86 |
|   chest of drawers  | 36.76 | 51.26 |
|       counter       |  22.6 | 31.82 |
|         sand        | 45.25 | 71.96 |
|         sink        | 64.47 | 75.64 |
|      skyscraper     | 45.02 | 53.49 |
|      fireplace      | 72.97 | 83.74 |
|     refrigerator    | 72.67 | 78.29 |
|      grandstand     | 43.64 | 74.07 |
|         path        | 25.28 | 38.79 |
|        stairs       | 29.16 | 34.86 |
|        runway       | 72.08 | 93.98 |
|         case        | 52.87 | 66.48 |
|      pool table     | 83.61 | 94.73 |
|        pillow       | 52.69 | 63.13 |
|     screen door     | 71.11 | 74.84 |
|       stairway      | 31.65 | 42.01 |
|        river        |  5.95 | 11.63 |
|        bridge       | 30.96 | 37.47 |
|       bookcase      | 37.63 | 57.53 |
|        blind        | 31.37 | 32.78 |
|     coffee table    | 55.16 | 80.65 |
|        toilet       | 80.86 | 89.08 |
|        flower       | 31.94 | 49.69 |
|         book        | 44.48 | 57.09 |
|         hill        | 11.36 | 21.17 |
|        bench        | 38.01 | 44.68 |
|      countertop     | 49.98 | 62.22 |
|        stove        | 71.71 | 79.52 |
|         palm        | 46.07 | 57.17 |
|    kitchen island   | 37.72 | 61.27 |
|       computer      | 55.72 | 65.46 |
|     swivel chair    | 37.68 | 54.06 |
|         boat        | 60.54 | 84.54 |
|         bar         | 40.97 | 55.62 |
|    arcade machine   | 76.05 | 80.89 |
|        hovel        | 49.74 | 56.24 |
|         bus         | 80.93 | 93.22 |
|        towel        |  63.9 | 77.88 |
|        light        | 49.02 | 59.93 |
|        truck        |  36.6 | 45.12 |
|        tower        |  6.79 |  9.84 |
|      chandelier     | 63.17 | 80.03 |
|        awning       | 22.47 | 26.09 |
|     streetlight     | 19.76 | 28.59 |
|        booth        | 53.67 | 61.91 |
| television receiver | 62.25 | 76.22 |
|       airplane      | 50.45 | 65.25 |
|      dirt track     | 21.89 | 22.79 |
|       apparel       | 37.83 | 52.64 |
|         pole        | 14.46 | 17.59 |
|         land        |  2.33 |  3.67 |
|      bannister      |  6.41 |  8.74 |
|      escalator      | 44.65 | 76.33 |
|       ottoman       | 37.12 | 51.69 |
|        bottle       | 30.73 | 50.25 |
|        buffet       | 52.22 | 61.09 |
|        poster       | 29.84 | 33.53 |
|        stage        | 14.65 | 24.25 |
|         van         | 41.06 | 50.74 |
|         ship        | 62.39 | 62.78 |
|       fountain      | 26.12 | 29.02 |
|    conveyer belt    | 82.01 | 87.31 |
|        canopy       | 15.46 | 19.81 |
|        washer       | 65.65 | 70.26 |
|      plaything      | 17.77 | 36.18 |
|    swimming pool    | 60.81 | 84.98 |
|        stool        | 36.98 | 45.37 |
|        barrel       | 48.17 | 69.95 |
|        basket       | 22.58 | 25.02 |
|      waterfall      | 63.26 | 92.14 |
|         tent        | 95.62 | 98.63 |
|         bag         | 10.26 | 11.66 |
|       minibike      | 63.75 | 80.18 |
|        cradle       | 74.01 |  95.1 |
|         oven        | 31.68 | 54.22 |
|         ball        |  51.1 | 65.32 |
|         food        | 36.03 |  43.7 |
|         step        |  5.77 |  6.14 |
|         tank        | 47.49 | 56.34 |
|      trade name     | 23.42 | 27.21 |
|      microwave      | 69.38 | 77.49 |
|         pot         | 32.77 | 37.42 |
|        animal       |  51.4 | 53.56 |
|       bicycle       |  51.6 |  65.5 |
|         lake        |  28.5 | 63.98 |
|      dishwasher     | 58.72 | 63.81 |
|        screen       | 70.93 | 84.82 |
|       blanket       | 12.98 | 15.81 |
|      sculpture      | 55.47 | 72.09 |
|         hood        | 54.28 | 61.14 |
|        sconce       | 39.99 | 50.07 |
|         vase        | 24.96 | 42.63 |
|    traffic light    | 29.14 | 50.05 |
|         tray        |  5.43 |  8.02 |
|        ashcan       | 33.45 | 42.53 |
|         fan         | 55.58 | 68.56 |
|         pier        | 41.18 | 84.42 |
|      crt screen     | 13.97 | 23.18 |
|        plate        | 35.05 | 46.72 |
|       monitor       | 40.33 | 50.05 |
|    bulletin board   |  44.4 | 52.51 |
|        shower       |  2.19 |  3.77 |
|       radiator      |  43.0 | 47.01 |
|        glass        |  9.03 |  9.57 |
|        clock        | 31.04 |  37.6 |
|         flag        | 38.84 | 42.47 |
+---------------------+-------+-------+
09/15 14:57:37 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.5900  mIoU: 46.5300  mAcc: 58.2100  data_time: 0.0016  time: 0.2032
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
09/15 14:57:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 140112946
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 140112946
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:57:40 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/glass_blur'

09/15 14:57:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:57:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:57:44 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 14:57:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 15:03:53 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:59:37  time: 7.2415  data_time: 0.0015  memory: 19905  
09/15 15:09:29 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:43:08  time: 7.1549  data_time: 0.0017  memory: 19901  
09/15 15:14:55 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:31:48  time: 6.6619  data_time: 0.0016  memory: 19874  
09/15 15:20:32 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:25:09  time: 6.6056  data_time: 0.0015  memory: 19902  
09/15 15:25:52 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:16:52  time: 6.2959  data_time: 0.0015  memory: 19898  
09/15 15:31:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:09:26  time: 6.4867  data_time: 0.0026  memory: 19898  
09/15 15:36:37 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:03:17  time: 6.0901  data_time: 0.0027  memory: 19898  
09/15 15:41:58 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:56:55  time: 6.5546  data_time: 0.0015  memory: 19899  
09/15 15:46:47 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:48:54  time: 5.8433  data_time: 0.0015  memory: 19872  
09/15 15:52:00 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:42:47  time: 6.0491  data_time: 0.0015  memory: 19838  
09/15 15:57:32 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:37:38  time: 6.6762  data_time: 0.0016  memory: 19896  
09/15 16:02:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:31:46  time: 6.9654  data_time: 0.0016  memory: 19898  
09/15 16:08:03 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:26:02  time: 6.4820  data_time: 0.0014  memory: 19907  
09/15 16:13:40 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:21:00  time: 6.5174  data_time: 0.0017  memory: 19906  
09/15 16:19:08 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:15:39  time: 6.6078  data_time: 0.0015  memory: 19913  
09/15 16:24:04 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:09:29  time: 6.2361  data_time: 0.0017  memory: 19876  
09/15 16:29:18 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:03:52  time: 6.3561  data_time: 0.0017  memory: 697  
09/15 16:34:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:57:52  time: 5.6873  data_time: 0.0025  memory: 19864  
09/15 16:39:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:52:35  time: 6.3243  data_time: 0.0016  memory: 19894  
09/15 16:44:41 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:46:57  time: 6.0113  data_time: 0.0016  memory: 19895  
09/15 16:50:08 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:41:41  time: 6.8400  data_time: 0.0016  memory: 19913  
09/15 16:55:28 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:36:19  time: 6.2195  data_time: 0.0016  memory: 19878  
09/15 17:00:37 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:30:49  time: 6.2906  data_time: 0.0015  memory: 19852  
09/15 17:05:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:25:27  time: 6.1317  data_time: 0.0016  memory: 1894  
09/15 17:11:01 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:19:57  time: 6.1372  data_time: 0.0017  memory: 19881  
09/15 17:15:53 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:14:23  time: 6.2801  data_time: 0.0015  memory: 698  
09/15 17:21:03 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:09:00  time: 5.8401  data_time: 0.0015  memory: 19833  
09/15 17:26:19 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:03:40  time: 6.7256  data_time: 0.0015  memory: 19886  
09/15 17:31:19 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:58:15  time: 6.5829  data_time: 0.0015  memory: 19864  
09/15 17:36:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:52:52  time: 5.8286  data_time: 0.0015  memory: 697  
09/15 17:41:50 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:47:38  time: 6.3835  data_time: 0.0016  memory: 19890  
09/15 17:46:53 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:42:17  time: 6.1571  data_time: 0.0017  memory: 688  
09/15 17:52:02 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:36:58  time: 5.7434  data_time: 0.0014  memory: 19895  
09/15 17:57:20 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:31:41  time: 6.2392  data_time: 0.0016  memory: 19868  
09/15 18:02:40 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:26:25  time: 6.1950  data_time: 0.0014  memory: 19886  
09/15 18:07:39 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:21:06  time: 6.3292  data_time: 0.0016  memory: 19838  
09/15 18:12:51 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:15:49  time: 6.2480  data_time: 0.0016  memory: 646  
09/15 18:17:45 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:10:31  time: 6.0279  data_time: 0.0015  memory: 19907  
09/15 18:23:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:15  time: 6.0269  data_time: 0.0015  memory: 19848  
09/15 18:28:01 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 5.6469  data_time: 0.0015  memory: 19909  
09/15 18:28:01 - mmengine - INFO - per class results:
09/15 18:28:01 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.59 | 89.33 |
|       building      | 80.63 | 92.09 |
|         sky         | 93.39 | 97.56 |
|        floor        | 79.47 | 90.25 |
|         tree        | 71.12 | 86.38 |
|       ceiling       | 83.44 | 93.13 |
|         road        |  81.8 | 91.14 |
|         bed         | 86.93 | 94.29 |
|      windowpane     |  58.1 | 74.89 |
|        grass        |  64.9 | 81.11 |
|       cabinet       | 55.02 |  66.4 |
|       sidewalk      |  58.7 | 67.93 |
|        person       | 77.38 | 90.19 |
|        earth        | 33.31 |  49.8 |
|         door        | 41.65 | 47.61 |
|        table        | 57.58 | 71.13 |
|       mountain      | 54.32 | 67.07 |
|        plant        | 48.23 |  58.4 |
|       curtain       | 66.81 |  80.5 |
|        chair        | 53.82 | 67.21 |
|         car         | 81.85 | 90.84 |
|        water        | 57.77 | 74.76 |
|       painting      | 69.69 | 79.73 |
|         sofa        | 67.13 | 84.34 |
|        shelf        | 38.79 |  57.0 |
|        house        | 47.45 | 54.95 |
|         sea         | 54.68 | 70.51 |
|        mirror       | 58.98 | 74.37 |
|         rug         | 59.67 | 72.72 |
|        field        | 27.32 | 42.74 |
|       armchair      | 43.04 | 56.54 |
|         seat        | 60.91 | 82.68 |
|        fence        | 37.23 | 56.84 |
|         desk        | 48.15 | 65.04 |
|         rock        | 36.05 | 60.54 |
|       wardrobe      |  40.5 | 56.59 |
|         lamp        | 58.48 | 69.84 |
|       bathtub       | 75.08 | 80.56 |
|       railing       |  26.7 | 37.18 |
|       cushion       | 54.73 | 68.36 |
|         base        |  20.5 | 33.68 |
|         box         | 21.15 | 28.05 |
|        column       | 44.94 | 53.71 |
|      signboard      | 32.94 | 42.02 |
|   chest of drawers  | 36.68 | 58.83 |
|       counter       | 20.07 | 24.03 |
|         sand        | 45.16 | 70.02 |
|         sink        |  64.7 | 73.52 |
|      skyscraper     | 51.15 | 61.46 |
|      fireplace      | 70.06 | 85.12 |
|     refrigerator    | 70.09 | 73.63 |
|      grandstand     | 39.56 | 76.92 |
|         path        | 22.58 | 32.75 |
|        stairs       | 28.61 | 37.75 |
|        runway       | 69.39 | 81.57 |
|         case        | 55.11 | 66.54 |
|      pool table     |  87.3 | 93.54 |
|        pillow       | 52.47 | 61.72 |
|     screen door     | 63.58 | 65.25 |
|       stairway      | 28.65 | 37.73 |
|        river        |  6.12 | 10.55 |
|        bridge       | 31.42 | 36.19 |
|       bookcase      | 43.48 |  53.8 |
|        blind        | 33.42 | 35.67 |
|     coffee table    | 56.13 | 79.07 |
|        toilet       | 81.19 | 87.81 |
|        flower       | 31.86 | 54.32 |
|         book        | 40.83 | 52.35 |
|         hill        |  11.5 | 23.92 |
|        bench        | 35.72 | 42.55 |
|      countertop     | 52.39 | 65.29 |
|        stove        | 66.17 | 74.51 |
|         palm        | 41.46 | 54.29 |
|    kitchen island   | 35.26 | 51.71 |
|       computer      | 52.78 | 60.11 |
|     swivel chair    |  35.8 | 49.56 |
|         boat        | 39.77 | 44.93 |
|         bar         | 25.39 | 32.13 |
|    arcade machine   |  70.7 |  79.3 |
|        hovel        | 48.81 | 57.91 |
|         bus         | 84.64 | 92.12 |
|        towel        | 59.74 | 71.97 |
|        light        | 45.61 | 52.82 |
|        truck        | 34.25 |  44.8 |
|        tower        |  7.15 |  12.7 |
|      chandelier     | 63.81 | 77.55 |
|        awning       | 21.23 | 24.41 |
|     streetlight     | 19.56 | 26.11 |
|        booth        | 24.01 | 24.08 |
| television receiver |  63.2 | 69.83 |
|       airplane      | 50.95 | 64.76 |
|      dirt track     | 18.66 | 20.93 |
|       apparel       | 40.72 | 56.91 |
|         pole        | 15.13 | 19.06 |
|         land        |  2.53 |  4.43 |
|      bannister      |  2.77 |  3.22 |
|      escalator      | 28.05 |  31.1 |
|       ottoman       | 38.24 | 52.55 |
|        bottle       | 30.35 | 48.12 |
|        buffet       | 44.36 |  49.4 |
|        poster       | 22.34 | 27.85 |
|        stage        | 23.35 | 33.17 |
|         van         | 43.81 | 55.27 |
|         ship        | 31.88 | 45.16 |
|       fountain      | 18.94 | 22.41 |
|    conveyer belt    | 78.03 | 82.97 |
|        canopy       | 18.39 | 20.39 |
|        washer       | 57.66 | 58.87 |
|      plaything      | 22.45 |  36.0 |
|    swimming pool    | 59.66 | 87.21 |
|        stool        | 41.66 | 50.34 |
|        barrel       | 48.65 |  71.0 |
|        basket       | 20.98 | 23.45 |
|      waterfall      | 59.16 | 87.87 |
|         tent        | 95.85 | 98.14 |
|         bag         | 10.04 | 11.24 |
|       minibike      | 65.02 | 81.91 |
|        cradle       | 72.07 | 94.99 |
|         oven        | 20.42 | 53.13 |
|         ball        | 44.93 |  66.5 |
|         food        | 39.09 | 43.49 |
|         step        |  6.32 |  6.61 |
|         tank        |  50.4 | 56.09 |
|      trade name     |  18.7 | 20.89 |
|      microwave      |  39.0 | 40.72 |
|         pot         | 29.07 | 32.28 |
|        animal       | 50.71 | 53.01 |
|       bicycle       |  53.1 | 68.62 |
|         lake        | 32.58 | 63.27 |
|      dishwasher     | 54.26 | 57.61 |
|        screen       |  67.6 | 82.94 |
|       blanket       | 14.94 |  17.2 |
|      sculpture      | 51.36 | 60.27 |
|         hood        | 46.21 | 48.03 |
|        sconce       | 37.59 | 46.78 |
|         vase        |  26.6 | 41.64 |
|    traffic light    | 31.05 | 46.02 |
|         tray        |  6.02 |  9.7  |
|        ashcan       | 37.57 | 46.22 |
|         fan         | 52.63 | 63.15 |
|         pier        | 44.17 | 68.58 |
|      crt screen     | 12.53 | 32.03 |
|        plate        | 41.21 | 49.81 |
|       monitor       | 19.25 | 24.24 |
|    bulletin board   | 39.82 | 44.38 |
|        shower       |  0.02 |  0.04 |
|       radiator      | 45.06 | 50.87 |
|        glass        |  8.34 |  8.71 |
|        clock        | 30.69 |  36.2 |
|         flag        | 24.02 | 24.82 |
+---------------------+-------+-------+
09/15 18:28:01 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.1300  mIoU: 44.6000  mAcc: 55.3000  data_time: 0.0018  time: 6.3084
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
09/15 18:28:29 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1657738650
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1657738650
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:28:29 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/motion_blur'

09/15 18:29:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:29:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:29:15 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 18:29:16 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 18:31:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:14:08  time: 1.2343  data_time: 0.0015  memory: 19905  
09/15 18:32:13 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:56:02  time: 1.3628  data_time: 0.0016  memory: 19901  
09/15 18:33:01 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:46:13  time: 0.9559  data_time: 0.0015  memory: 19874  
09/15 18:33:56 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:42:01  time: 1.0939  data_time: 0.0015  memory: 19902  
09/15 18:34:48 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:38:43  time: 0.9200  data_time: 0.0015  memory: 19898  
09/15 18:35:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:36:05  time: 0.8296  data_time: 0.0016  memory: 19898  
09/15 18:36:29 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:34:02  time: 0.8375  data_time: 0.0015  memory: 19898  
09/15 18:37:19 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:32:11  time: 0.9802  data_time: 0.0014  memory: 19899  
09/15 18:37:57 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:29:55  time: 0.8021  data_time: 0.0014  memory: 19872  
09/15 18:38:39 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:28:07  time: 0.7463  data_time: 0.0014  memory: 19838  
09/15 18:39:22 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:26:36  time: 0.9475  data_time: 0.0016  memory: 19896  
09/15 18:40:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:25:05  time: 0.9065  data_time: 0.0016  memory: 19898  
09/15 18:40:47 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:23:55  time: 1.0044  data_time: 0.0014  memory: 19907  
09/15 18:41:36 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:22:53  time: 0.8079  data_time: 0.0016  memory: 19906  
09/15 18:42:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:21:58  time: 1.2720  data_time: 0.0015  memory: 19913  
09/15 18:43:05 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:20:42  time: 0.7352  data_time: 0.0016  memory: 19876  
09/15 18:43:42 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:19:31  time: 0.7478  data_time: 0.0016  memory: 697  
09/15 18:44:21 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:18:25  time: 0.7983  data_time: 0.0014  memory: 19864  
09/15 18:45:08 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:17:31  time: 0.9924  data_time: 0.0015  memory: 19894  
09/15 18:45:49 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:16:32  time: 0.7320  data_time: 0.0015  memory: 19895  
09/15 18:46:35 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:15:40  time: 1.1437  data_time: 0.0014  memory: 19913  
09/15 18:47:19 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:14:46  time: 0.7695  data_time: 0.0015  memory: 19878  
09/15 18:47:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:13:50  time: 0.8479  data_time: 0.0015  memory: 19852  
09/15 18:48:39 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:12:55  time: 0.7653  data_time: 0.0015  memory: 1894  
09/15 18:49:20 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:02  time: 0.8357  data_time: 0.0014  memory: 19881  
09/15 18:49:56 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:07  time: 0.7581  data_time: 0.0015  memory: 698  
09/15 18:50:36 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:16  time: 0.7189  data_time: 0.0014  memory: 19833  
09/15 18:51:20 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:09:27  time: 0.9993  data_time: 0.0014  memory: 19886  
09/15 18:51:59 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:36  time: 0.9221  data_time: 0.0014  memory: 19864  
09/15 18:52:37 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:46  time: 0.7021  data_time: 0.0014  memory: 697  
09/15 18:53:18 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:58  time: 0.7929  data_time: 0.0015  memory: 19890  
09/15 18:53:54 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:09  time: 0.7241  data_time: 0.0016  memory: 688  
09/15 18:54:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:22  time: 0.7218  data_time: 0.0013  memory: 19895  
09/15 18:55:18 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:35  time: 0.7869  data_time: 0.0016  memory: 19868  
09/15 18:56:00 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:49  time: 0.8111  data_time: 0.0014  memory: 19886  
09/15 18:56:39 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:02  time: 0.8114  data_time: 0.0017  memory: 19838  
09/15 18:57:17 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:16  time: 0.7349  data_time: 0.0016  memory: 646  
09/15 18:57:55 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:30  time: 0.7795  data_time: 0.0015  memory: 19907  
09/15 18:58:37 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:45  time: 0.7914  data_time: 0.0014  memory: 19848  
09/15 18:59:18 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.6767  data_time: 0.0013  memory: 19909  
09/15 18:59:18 - mmengine - INFO - per class results:
09/15 18:59:18 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.94 | 87.24 |
|       building      | 80.71 | 92.92 |
|         sky         | 92.99 | 96.36 |
|        floor        | 79.21 | 90.06 |
|         tree        | 70.18 | 86.77 |
|       ceiling       | 83.45 | 93.24 |
|         road        | 82.23 | 90.56 |
|         bed         | 87.59 | 94.78 |
|      windowpane     | 59.47 | 76.97 |
|        grass        | 67.43 | 85.22 |
|       cabinet       | 57.23 | 68.43 |
|       sidewalk      |  61.3 | 74.11 |
|        person       | 75.77 | 89.93 |
|        earth        | 33.58 | 46.07 |
|         door        |  44.4 | 55.67 |
|        table        | 57.31 | 72.07 |
|       mountain      | 53.68 | 66.18 |
|        plant        | 48.09 | 57.84 |
|       curtain       | 66.54 | 79.44 |
|        chair        | 53.97 | 68.76 |
|         car         | 80.26 | 90.97 |
|        water        | 54.35 |  75.8 |
|       painting      | 69.94 | 83.61 |
|         sofa        | 64.57 | 84.85 |
|        shelf        | 41.77 | 57.05 |
|        house        | 40.33 | 46.34 |
|         sea         |  56.9 | 69.11 |
|        mirror       | 59.93 | 68.58 |
|         rug         | 59.85 | 72.15 |
|        field        | 26.78 |  39.1 |
|       armchair      | 41.18 | 55.14 |
|         seat        | 61.06 | 81.75 |
|        fence        | 39.18 | 50.17 |
|         desk        | 47.68 | 70.03 |
|         rock        | 39.49 | 62.28 |
|       wardrobe      |  48.0 |  65.7 |
|         lamp        | 57.35 | 71.63 |
|       bathtub       | 76.56 | 82.82 |
|       railing       | 28.73 | 44.21 |
|       cushion       | 53.09 | 64.94 |
|         base        | 26.29 | 37.62 |
|         box         | 24.91 | 33.57 |
|        column       | 42.64 | 52.48 |
|      signboard      | 34.18 | 45.25 |
|   chest of drawers  | 37.32 | 54.38 |
|       counter       | 26.81 |  37.0 |
|         sand        | 48.54 | 71.47 |
|         sink        | 66.16 | 75.18 |
|      skyscraper     | 37.94 | 43.25 |
|      fireplace      | 72.66 | 88.12 |
|     refrigerator    | 74.49 | 80.25 |
|      grandstand     | 51.46 | 77.87 |
|         path        | 19.22 | 30.83 |
|        stairs       | 29.99 | 35.97 |
|        runway       | 70.31 | 93.43 |
|         case        | 49.73 | 63.46 |
|      pool table     | 87.15 | 94.05 |
|        pillow       | 55.24 | 65.93 |
|     screen door     | 67.59 |  77.7 |
|       stairway      | 26.59 |  33.4 |
|        river        |  5.43 |  9.85 |
|        bridge       | 40.13 | 45.89 |
|       bookcase      | 39.75 | 53.63 |
|        blind        | 41.88 | 49.25 |
|     coffee table    | 53.66 | 82.52 |
|        toilet       | 81.35 | 89.46 |
|        flower       | 31.63 | 45.67 |
|         book        | 44.89 |  60.9 |
|         hill        | 11.96 | 21.19 |
|        bench        | 39.23 |  47.1 |
|      countertop     | 54.02 | 70.29 |
|        stove        | 72.84 | 82.42 |
|         palm        | 46.72 |  62.8 |
|    kitchen island   | 39.67 | 61.99 |
|       computer      | 58.51 | 69.19 |
|     swivel chair    | 36.45 | 51.14 |
|         boat        | 63.12 | 85.52 |
|         bar         | 41.92 | 52.75 |
|    arcade machine   | 49.13 | 51.93 |
|        hovel        | 39.64 | 44.08 |
|         bus         | 84.32 | 94.28 |
|        towel        | 60.44 | 76.85 |
|        light        | 49.66 | 60.76 |
|        truck        |  33.9 | 47.33 |
|        tower        | 27.05 |  36.4 |
|      chandelier     | 58.12 | 71.21 |
|        awning       | 24.57 | 30.61 |
|     streetlight     | 18.85 | 25.58 |
|        booth        | 52.78 | 59.07 |
| television receiver | 63.52 |  74.4 |
|       airplane      | 51.74 | 65.37 |
|      dirt track     | 24.22 |  50.2 |
|       apparel       | 42.84 | 59.09 |
|         pole        | 18.18 |  24.2 |
|         land        |  1.66 |  2.16 |
|      bannister      |  6.97 |  9.09 |
|      escalator      |  50.6 | 79.28 |
|       ottoman       | 39.45 | 57.26 |
|        bottle       | 32.64 | 56.95 |
|        buffet       | 46.17 | 50.64 |
|        poster       | 33.11 |  39.6 |
|        stage        | 19.55 | 26.19 |
|         van         | 43.66 | 59.16 |
|         ship        | 69.04 | 70.58 |
|       fountain      |  18.3 | 18.84 |
|    conveyer belt    | 80.71 | 87.92 |
|        canopy       | 13.17 | 16.91 |
|        washer       |  68.6 | 71.84 |
|      plaything      | 24.12 | 34.37 |
|    swimming pool    | 61.41 | 82.77 |
|        stool        | 36.88 |  46.5 |
|        barrel       | 42.14 |  69.1 |
|        basket       | 24.87 | 32.33 |
|      waterfall      | 38.47 | 53.32 |
|         tent        | 95.85 |  98.2 |
|         bag         | 14.47 | 19.66 |
|       minibike      |  59.6 | 81.53 |
|        cradle       |  73.9 | 94.27 |
|         oven        | 22.36 | 54.62 |
|         ball        | 49.22 | 64.65 |
|         food        | 40.44 | 50.76 |
|         step        |  8.66 |  9.27 |
|         tank        | 52.24 | 57.32 |
|      trade name     | 26.86 | 33.03 |
|      microwave      | 49.82 | 54.59 |
|         pot         | 45.54 | 53.96 |
|        animal       | 49.99 | 54.27 |
|       bicycle       | 45.31 |  72.7 |
|         lake        |  9.53 | 17.35 |
|      dishwasher     | 59.11 | 65.94 |
|        screen       | 72.81 |  84.5 |
|       blanket       | 15.55 | 19.49 |
|      sculpture      | 40.33 | 55.04 |
|         hood        | 58.52 | 62.78 |
|        sconce       | 43.05 | 54.25 |
|         vase        | 31.37 | 45.02 |
|    traffic light    | 29.23 |  49.0 |
|         tray        |  8.3  | 12.42 |
|        ashcan       | 39.57 | 53.02 |
|         fan         | 54.86 | 72.74 |
|         pier        | 44.39 |  84.1 |
|      crt screen     |  7.73 | 14.58 |
|        plate        | 44.53 | 60.88 |
|       monitor       | 27.03 | 34.31 |
|    bulletin board   | 41.68 | 51.58 |
|        shower       |  2.21 |  3.26 |
|       radiator      |  50.3 | 54.53 |
|        glass        | 11.36 | 12.06 |
|        clock        |  34.2 | 42.47 |
|         flag        | 41.69 | 44.61 |
+---------------------+-------+-------+
09/15 18:59:18 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.4600  mIoU: 46.5400  mAcc: 58.4700  data_time: 0.0018  time: 0.9010
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
09/15 18:59:21 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 444805958
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 444805958
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:59:22 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/zoom_blur'

09/15 18:59:25 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:59:25 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:59:26 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 18:59:26 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:00:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:05  time: 1.1353  data_time: 0.0016  memory: 19905  
09/15 19:01:42 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:43:11  time: 1.2864  data_time: 0.0017  memory: 19901  
09/15 19:02:27 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:37:13  time: 0.8923  data_time: 0.0016  memory: 19874  
09/15 19:03:18 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:34:50  time: 1.0141  data_time: 0.0015  memory: 19902  
09/15 19:04:05 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:32:33  time: 0.8016  data_time: 0.0015  memory: 19898  
09/15 19:04:50 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:30:38  time: 0.7200  data_time: 0.0016  memory: 19898  
09/15 19:05:38 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:29:13  time: 0.7598  data_time: 0.0015  memory: 19898  
09/15 19:06:23 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:27:49  time: 0.8795  data_time: 0.0014  memory: 19899  
09/15 19:06:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:25:56  time: 0.7207  data_time: 0.0014  memory: 19872  
09/15 19:07:35 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:24:26  time: 0.6710  data_time: 0.0015  memory: 19838  
09/15 19:08:15 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:23:14  time: 0.8677  data_time: 0.0016  memory: 19896  
09/15 19:08:52 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:22:00  time: 0.8609  data_time: 0.0016  memory: 19898  
09/15 19:09:33 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:21:01  time: 0.9272  data_time: 0.0014  memory: 19907  
09/15 19:10:18 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:20:09  time: 0.7228  data_time: 0.0016  memory: 19906  
09/15 19:11:02 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:19:20  time: 1.1300  data_time: 0.0015  memory: 19913  
09/15 19:11:37 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:18:16  time: 0.7015  data_time: 0.0017  memory: 19876  
09/15 19:12:12 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:17:16  time: 0.7103  data_time: 0.0017  memory: 697  
09/15 19:12:47 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:16:19  time: 0.7361  data_time: 0.0015  memory: 19864  
09/15 19:13:31 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:15:33  time: 0.8978  data_time: 0.0016  memory: 19894  
09/15 19:14:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:14:41  time: 0.6639  data_time: 0.0015  memory: 19895  
09/15 19:14:50 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:13:56  time: 1.0405  data_time: 0.0015  memory: 19913  
09/15 19:15:30 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:13:08  time: 0.6870  data_time: 0.0016  memory: 19878  
09/15 19:16:06 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:12:19  time: 0.7771  data_time: 0.0015  memory: 19852  
09/15 19:16:42 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:11:30  time: 0.6842  data_time: 0.0015  memory: 1894  
09/15 19:17:19 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:10:43  time: 0.7474  data_time: 0.0015  memory: 19881  
09/15 19:17:52 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:09:55  time: 0.7000  data_time: 0.0015  memory: 698  
09/15 19:18:27 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:09:09  time: 0.6488  data_time: 0.0015  memory: 19833  
09/15 19:19:07 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:08:26  time: 0.8999  data_time: 0.0015  memory: 19886  
09/15 19:19:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:07:41  time: 0.8190  data_time: 0.0014  memory: 19864  
09/15 19:20:16 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:06:56  time: 0.6472  data_time: 0.0014  memory: 697  
09/15 19:20:54 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:13  time: 0.7134  data_time: 0.0015  memory: 19890  
09/15 19:21:27 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:05:30  time: 0.6843  data_time: 0.0016  memory: 688  
09/15 19:22:06 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:04:48  time: 0.6403  data_time: 0.0014  memory: 19895  
09/15 19:22:44 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:06  time: 0.6955  data_time: 0.0016  memory: 19868  
09/15 19:23:22 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:25  time: 0.7014  data_time: 0.0014  memory: 19886  
09/15 19:23:58 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:43  time: 0.7417  data_time: 0.0016  memory: 19838  
09/15 19:24:35 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:02  time: 0.7552  data_time: 0.0016  memory: 646  
09/15 19:25:10 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:21  time: 0.6805  data_time: 0.0015  memory: 19907  
09/15 19:25:47 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:40  time: 0.6699  data_time: 0.0015  memory: 19848  
09/15 19:26:23 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.6316  data_time: 0.0014  memory: 19909  
09/15 19:26:23 - mmengine - INFO - per class results:
09/15 19:26:23 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 57.65 | 84.36 |
|       building      | 66.35 | 84.49 |
|         sky         | 85.37 | 89.04 |
|        floor        | 58.11 | 84.68 |
|         tree        | 44.53 | 51.93 |
|       ceiling       | 63.31 | 89.71 |
|         road        |  62.5 | 68.41 |
|         bed         | 72.19 | 88.87 |
|      windowpane     | 43.14 | 58.83 |
|        grass        | 47.18 | 68.03 |
|       cabinet       | 42.11 | 51.69 |
|       sidewalk      | 33.66 | 49.97 |
|        person       | 56.37 | 75.68 |
|        earth        | 16.68 | 23.69 |
|         door        | 19.72 | 22.78 |
|        table        |  40.7 | 52.63 |
|       mountain      | 31.04 | 37.08 |
|        plant        | 26.78 | 51.11 |
|       curtain       | 46.45 | 58.67 |
|        chair        | 33.95 | 42.47 |
|         car         | 64.21 | 79.47 |
|        water        | 40.27 | 68.72 |
|       painting      | 51.49 | 66.23 |
|         sofa        | 45.74 | 74.19 |
|        shelf        | 26.65 | 41.71 |
|        house        | 26.32 | 29.76 |
|         sea         | 33.85 | 39.19 |
|        mirror       | 44.29 | 52.31 |
|         rug         | 14.65 | 15.18 |
|        field        | 21.57 | 30.36 |
|       armchair      | 19.82 |  26.4 |
|         seat        | 28.99 | 51.91 |
|        fence        | 10.38 | 12.75 |
|         desk        | 33.86 | 48.71 |
|         rock        | 15.03 | 19.08 |
|       wardrobe      | 31.68 | 47.38 |
|         lamp        | 38.22 | 50.78 |
|       bathtub       | 62.32 | 79.17 |
|       railing       | 12.99 | 18.45 |
|       cushion       | 28.46 | 32.79 |
|         base        | 12.16 | 14.61 |
|         box         |  3.43 |  3.8  |
|        column       | 17.96 | 19.95 |
|      signboard      | 18.23 | 21.07 |
|   chest of drawers  | 31.51 | 39.41 |
|       counter       | 16.42 | 30.52 |
|         sand        | 20.55 | 36.25 |
|         sink        | 50.63 | 58.51 |
|      skyscraper     | 27.41 | 33.98 |
|      fireplace      | 61.71 | 72.07 |
|     refrigerator    | 58.44 | 69.14 |
|      grandstand     | 29.45 | 34.98 |
|         path        |  9.72 | 13.74 |
|        stairs       |  3.84 |  5.06 |
|        runway       | 61.58 | 79.42 |
|         case        | 25.85 | 34.55 |
|      pool table     | 80.21 | 90.32 |
|        pillow       | 39.59 | 49.47 |
|     screen door     | 31.83 |  35.9 |
|       stairway      | 12.67 | 14.49 |
|        river        |  4.59 |  6.35 |
|        bridge       | 21.63 | 29.18 |
|       bookcase      |  27.4 | 37.77 |
|        blind        | 17.77 | 19.85 |
|     coffee table    | 35.12 | 49.76 |
|        toilet       | 69.13 | 80.35 |
|        flower       | 14.66 | 20.02 |
|         book        | 27.74 | 33.17 |
|         hill        | 12.35 | 21.49 |
|        bench        | 26.96 | 35.83 |
|      countertop     | 41.36 | 57.89 |
|        stove        | 58.69 | 67.76 |
|         palm        | 10.71 | 40.18 |
|    kitchen island   | 31.76 | 61.39 |
|       computer      | 43.94 | 48.53 |
|     swivel chair    | 10.97 | 11.78 |
|         boat        | 20.61 | 22.97 |
|         bar         |  16.6 | 22.17 |
|    arcade machine   | 11.62 | 13.25 |
|        hovel        |  6.39 |  7.17 |
|         bus         | 66.53 | 79.37 |
|        towel        | 23.43 | 29.64 |
|        light        | 22.13 | 29.47 |
|        truck        |  4.58 |  5.79 |
|        tower        | 14.84 |  18.3 |
|      chandelier     | 16.25 | 17.23 |
|        awning       | 17.71 | 19.94 |
|     streetlight     |  2.81 |  3.12 |
|        booth        |  8.45 |  9.25 |
| television receiver | 34.98 | 39.17 |
|       airplane      | 39.74 | 56.37 |
|      dirt track     |  6.33 | 14.73 |
|       apparel       |  8.07 |  8.88 |
|         pole        |  3.06 |  3.31 |
|         land        |  0.28 |  0.32 |
|      bannister      |  1.8  |  2.65 |
|      escalator      |  17.8 | 39.01 |
|       ottoman       | 22.59 | 28.25 |
|        bottle       | 12.98 | 14.21 |
|        buffet       | 25.74 | 27.56 |
|        poster       |  6.94 |  9.56 |
|        stage        |  3.68 |  4.4  |
|         van         | 27.44 | 39.24 |
|         ship        |  1.16 |  1.73 |
|       fountain      | 14.52 | 18.09 |
|    conveyer belt    | 43.79 | 61.13 |
|        canopy       |  4.91 |  4.98 |
|        washer       | 66.89 | 70.74 |
|      plaything      |  6.17 |  6.92 |
|    swimming pool    | 27.56 | 43.11 |
|        stool        | 24.72 | 30.82 |
|        barrel       |  5.74 |  6.75 |
|        basket       |  6.74 |  8.12 |
|      waterfall      | 22.48 | 73.19 |
|         tent        | 78.84 | 99.52 |
|         bag         |  6.23 |  7.24 |
|       minibike      | 41.28 | 55.51 |
|        cradle       | 67.56 | 95.78 |
|         oven        |  7.81 |  9.31 |
|         ball        | 29.52 | 49.02 |
|         food        | 14.02 |  14.7 |
|         step        |  6.95 |  9.73 |
|         tank        |  32.4 | 37.12 |
|      trade name     | 18.83 | 22.81 |
|      microwave      | 24.04 | 25.66 |
|         pot         |  9.99 | 10.54 |
|        animal       |  40.1 | 46.23 |
|       bicycle       | 12.78 | 14.97 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     | 28.17 | 35.41 |
|        screen       | 62.77 |  77.1 |
|       blanket       |  2.45 |  2.98 |
|      sculpture      |  5.17 |  6.81 |
|         hood        | 37.06 | 44.58 |
|        sconce       | 18.54 | 22.91 |
|         vase        | 15.51 | 21.97 |
|    traffic light    | 10.76 | 12.23 |
|         tray        |  0.59 |  0.85 |
|        ashcan       | 21.46 | 25.05 |
|         fan         | 36.13 | 52.58 |
|         pier        | 14.76 | 17.96 |
|      crt screen     | 15.45 | 19.68 |
|        plate        | 17.93 | 22.52 |
|       monitor       |  42.2 |  49.0 |
|    bulletin board   | 13.19 |  14.5 |
|        shower       |  0.26 |  2.24 |
|       radiator      |  24.3 | 31.39 |
|        glass        |  1.22 |  1.37 |
|        clock        |  5.87 |  6.11 |
|         flag        | 16.97 | 19.29 |
+---------------------+-------+-------+
09/15 19:26:23 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 67.9700  mIoU: 27.4400  mAcc: 35.8200  data_time: 0.0017  time: 0.8085
Finished processing corruption type: zoom_blur
Processing corruption type: snow
09/15 19:26:26 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 450055184
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 450055184
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:26:27 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/snow'

09/15 19:26:30 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:26:30 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:26:30 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:26:31 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:27:31 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:38:58  time: 0.6999  data_time: 0.0015  memory: 19905  
09/15 19:28:04 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:29:43  time: 0.8506  data_time: 0.0016  memory: 19901  
09/15 19:28:28 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:10  time: 0.4648  data_time: 0.0015  memory: 19874  
09/15 19:28:58 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:06  time: 0.5916  data_time: 0.0015  memory: 19902  
09/15 19:29:25 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:18  time: 0.3903  data_time: 0.0015  memory: 19898  
09/15 19:29:50 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:50  time: 0.2958  data_time: 0.0016  memory: 19898  
09/15 19:30:17 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:47  time: 0.3663  data_time: 0.0015  memory: 19898  
09/15 19:30:42 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:16:44  time: 0.4641  data_time: 0.0014  memory: 19899  
09/15 19:30:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:21  time: 0.3459  data_time: 0.0015  memory: 19872  
09/15 19:31:15 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:12  time: 0.2846  data_time: 0.0015  memory: 19838  
09/15 19:31:33 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:16  time: 0.4367  data_time: 0.0016  memory: 19896  
09/15 19:31:50 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:24  time: 0.4374  data_time: 0.0016  memory: 19898  
09/15 19:32:11 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:11:46  time: 0.5090  data_time: 0.0018  memory: 19907  
09/15 19:32:33 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:13  time: 0.2930  data_time: 0.0016  memory: 19906  
09/15 19:32:57 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:10:44  time: 0.7340  data_time: 0.0015  memory: 19913  
09/15 19:33:13 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:03  time: 0.2907  data_time: 0.0016  memory: 19876  
09/15 19:33:27 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:23  time: 0.2924  data_time: 0.0016  memory: 697  
09/15 19:33:44 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:49  time: 0.3715  data_time: 0.0014  memory: 19864  
09/15 19:34:06 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:23  time: 0.4952  data_time: 0.0015  memory: 19894  
09/15 19:34:24 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:53  time: 0.2780  data_time: 0.0015  memory: 19895  
09/15 19:34:45 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:27  time: 0.6082  data_time: 0.0015  memory: 19913  
09/15 19:35:04 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:00  time: 0.2765  data_time: 0.0016  memory: 19878  
09/15 19:35:21 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:31  time: 0.3679  data_time: 0.0015  memory: 19852  
09/15 19:35:37 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:04  time: 0.3271  data_time: 0.0015  memory: 1894  
09/15 19:35:58 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:40  time: 0.4107  data_time: 0.0015  memory: 19881  
09/15 19:36:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:14  time: 0.3172  data_time: 0.0015  memory: 698  
09/15 19:36:32 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:49  time: 0.2918  data_time: 0.0015  memory: 19833  
09/15 19:36:52 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:26  time: 0.4640  data_time: 0.0014  memory: 19886  
09/15 19:37:08 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:01  time: 0.3991  data_time: 0.0014  memory: 19864  
09/15 19:37:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:37  time: 0.2677  data_time: 0.0014  memory: 697  
09/15 19:37:39 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:13  time: 0.3004  data_time: 0.0015  memory: 19890  
09/15 19:37:53 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:50  time: 0.2924  data_time: 0.0016  memory: 688  
09/15 19:38:12 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:28  time: 0.2663  data_time: 0.0014  memory: 19895  
09/15 19:38:30 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:06  time: 0.2950  data_time: 0.0016  memory: 19868  
09/15 19:38:47 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:45  time: 0.2944  data_time: 0.0014  memory: 19886  
09/15 19:39:02 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:23  time: 0.2991  data_time: 0.0016  memory: 19838  
09/15 19:39:17 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:02  time: 0.2937  data_time: 0.0016  memory: 646  
09/15 19:39:32 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:41  time: 0.2838  data_time: 0.0015  memory: 19907  
09/15 19:39:49 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:20  time: 0.2824  data_time: 0.0015  memory: 19848  
09/15 19:40:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2942  data_time: 0.0014  memory: 19909  
09/15 19:40:06 - mmengine - INFO - per class results:
09/15 19:40:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 66.87 | 90.08 |
|       building      |  78.8 |  92.0 |
|         sky         | 91.17 |  95.0 |
|        floor        | 72.35 | 88.21 |
|         tree        |  69.2 | 84.45 |
|       ceiling       | 70.95 |  79.3 |
|         road        | 77.06 | 85.53 |
|         bed         | 82.01 | 90.15 |
|      windowpane     | 55.37 | 69.79 |
|        grass        | 62.09 | 80.28 |
|       cabinet       | 49.83 | 60.36 |
|       sidewalk      | 52.86 | 66.66 |
|        person       |  72.6 | 86.52 |
|        earth        | 30.21 | 39.07 |
|         door        | 26.89 |  29.8 |
|        table        | 48.89 | 62.51 |
|       mountain      | 47.35 | 70.97 |
|        plant        |  47.4 | 56.12 |
|       curtain       | 59.25 | 69.39 |
|        chair        | 47.48 | 57.39 |
|         car         | 78.54 | 90.51 |
|        water        | 48.47 | 73.74 |
|       painting      | 64.92 | 78.47 |
|         sofa        | 60.46 | 79.42 |
|        shelf        | 35.25 |  57.0 |
|        house        |  31.1 | 34.61 |
|         sea         | 48.46 | 67.67 |
|        mirror       | 49.92 | 68.51 |
|         rug         | 40.49 | 45.14 |
|        field        | 23.69 | 39.48 |
|       armchair      | 35.77 | 51.61 |
|         seat        | 50.19 | 66.12 |
|        fence        | 30.95 | 53.11 |
|         desk        | 42.43 | 52.62 |
|         rock        | 33.72 |  46.7 |
|       wardrobe      | 35.94 | 47.33 |
|         lamp        | 54.57 | 64.71 |
|       bathtub       | 58.09 | 65.28 |
|       railing       | 24.87 | 32.28 |
|       cushion       | 43.65 | 48.77 |
|         base        | 14.13 | 20.54 |
|         box         | 18.15 | 25.72 |
|        column       | 38.16 | 44.19 |
|      signboard      | 32.34 | 43.86 |
|   chest of drawers  | 40.84 | 60.38 |
|       counter       | 28.34 | 40.31 |
|         sand        | 34.16 | 45.47 |
|         sink        | 61.82 | 69.99 |
|      skyscraper     |  32.0 |  38.1 |
|      fireplace      | 57.99 | 67.74 |
|     refrigerator    | 66.45 | 75.13 |
|      grandstand     | 37.98 | 80.18 |
|         path        | 18.39 | 29.33 |
|        stairs       | 29.84 | 38.89 |
|        runway       | 56.96 | 69.84 |
|         case        | 39.09 | 45.31 |
|      pool table     | 84.42 | 90.18 |
|        pillow       | 44.52 | 54.36 |
|     screen door     | 52.88 | 63.15 |
|       stairway      | 27.35 |  32.3 |
|        river        |  8.97 |  14.5 |
|        bridge       | 60.92 | 68.11 |
|       bookcase      | 34.67 | 38.94 |
|        blind        | 22.03 |  23.1 |
|     coffee table    | 54.56 |  70.6 |
|        toilet       |  69.8 |  73.6 |
|        flower       | 32.54 | 44.79 |
|         book        | 32.58 | 38.79 |
|         hill        |  7.91 | 10.32 |
|        bench        | 26.94 |  32.9 |
|      countertop     | 49.83 | 68.06 |
|        stove        | 60.91 | 68.85 |
|         palm        | 47.76 | 64.35 |
|    kitchen island   | 42.47 | 58.75 |
|       computer      | 47.41 | 50.76 |
|     swivel chair    | 27.55 | 30.81 |
|         boat        | 56.56 | 69.57 |
|         bar         |  33.2 | 44.53 |
|    arcade machine   |  23.1 | 23.56 |
|        hovel        | 44.92 | 51.51 |
|         bus         | 82.41 | 94.99 |
|        towel        | 45.87 | 50.88 |
|        light        | 38.69 | 41.71 |
|        truck        | 30.91 | 39.33 |
|        tower        | 28.17 |  45.2 |
|      chandelier     | 54.25 | 67.98 |
|        awning       | 18.45 | 19.68 |
|     streetlight     | 20.56 | 25.67 |
|        booth        | 28.01 |  28.6 |
| television receiver | 43.51 | 48.62 |
|       airplane      | 48.85 | 60.44 |
|      dirt track     |  3.16 |  3.83 |
|       apparel       | 28.93 | 37.71 |
|         pole        | 17.86 | 24.63 |
|         land        |  0.02 |  0.03 |
|      bannister      |  6.7  |  8.34 |
|      escalator      | 21.87 | 26.42 |
|       ottoman       | 22.82 | 27.28 |
|        bottle       | 31.53 | 54.07 |
|        buffet       | 40.05 | 47.87 |
|        poster       | 24.75 |  31.7 |
|        stage        |  9.57 | 11.43 |
|         van         | 39.49 | 57.59 |
|         ship        | 33.29 | 35.24 |
|       fountain      | 16.33 | 20.55 |
|    conveyer belt    |  67.7 |  71.8 |
|        canopy       |  8.8  |  9.47 |
|        washer       | 61.24 | 62.84 |
|      plaything      | 15.53 | 17.85 |
|    swimming pool    | 64.31 | 84.43 |
|        stool        | 27.47 | 37.98 |
|        barrel       | 21.88 | 46.71 |
|        basket       | 21.56 | 27.06 |
|      waterfall      | 58.87 | 70.37 |
|         tent        | 86.66 | 99.12 |
|         bag         |  7.01 |  9.18 |
|       minibike      |  59.2 | 76.42 |
|        cradle       | 74.83 | 93.08 |
|         oven        | 24.36 | 27.96 |
|         ball        | 40.14 | 64.68 |
|         food        | 40.71 | 47.78 |
|         step        |  2.9  |  3.27 |
|         tank        | 27.43 | 31.23 |
|      trade name     |  24.5 | 29.74 |
|      microwave      | 31.24 | 32.26 |
|         pot         | 28.74 | 30.89 |
|        animal       | 50.94 | 54.28 |
|       bicycle       | 49.02 | 72.25 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     | 29.09 | 29.77 |
|        screen       | 59.81 | 66.02 |
|       blanket       |  8.25 |  8.74 |
|      sculpture      | 43.23 |  60.8 |
|         hood        | 30.49 | 31.28 |
|        sconce       | 33.94 | 43.89 |
|         vase        | 26.68 | 46.65 |
|    traffic light    | 28.08 | 40.35 |
|         tray        | 12.54 | 21.21 |
|        ashcan       | 31.67 |  37.4 |
|         fan         | 48.83 | 57.64 |
|         pier        | 55.38 | 77.37 |
|      crt screen     |  3.55 | 16.78 |
|        plate        | 48.75 | 60.51 |
|       monitor       |  1.63 |  1.77 |
|    bulletin board   | 28.02 | 28.85 |
|        shower       |  0.51 |  1.58 |
|       radiator      | 23.07 | 24.65 |
|        glass        | 12.62 |  14.2 |
|        clock        | 26.65 | 29.59 |
|         flag        | 28.77 | 34.62 |
+---------------------+-------+-------+
09/15 19:40:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.3700  mIoU: 39.4200  mAcc: 48.9500  data_time: 0.0016  time: 0.4079
Finished processing corruption type: snow
Processing corruption type: frost
09/15 19:40:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1520908153
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1520908153
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:40:10 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/frost'

09/15 19:40:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:40:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:40:13 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:40:14 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:41:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:36:17  time: 0.5643  data_time: 0.0015  memory: 19905  
09/15 19:41:36 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:04  time: 0.6204  data_time: 0.0016  memory: 19901  
09/15 19:41:49 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:36  time: 0.2410  data_time: 0.0015  memory: 19874  
09/15 19:42:08 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:07  time: 0.3775  data_time: 0.0015  memory: 19902  
09/15 19:42:25 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:14  time: 0.1820  data_time: 0.0015  memory: 19898  
09/15 19:42:40 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:13:47  time: 0.0800  data_time: 0.0016  memory: 19898  
09/15 19:42:57 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:12:46  time: 0.1707  data_time: 0.0015  memory: 19898  
09/15 19:43:11 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:47  time: 0.2535  data_time: 0.0014  memory: 19899  
09/15 19:43:18 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:10:32  time: 0.1522  data_time: 0.0030  memory: 19872  
09/15 19:43:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:29  time: 0.0731  data_time: 0.0015  memory: 19838  
09/15 19:43:31 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:38  time: 0.2231  data_time: 0.0015  memory: 19896  
09/15 19:43:38 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:55  time: 0.2286  data_time: 0.0016  memory: 19898  
09/15 19:43:48 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:24  time: 0.3020  data_time: 0.0014  memory: 19907  
09/15 19:44:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:00  time: 0.0767  data_time: 0.0015  memory: 19906  
09/15 19:44:13 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:39  time: 0.5268  data_time: 0.0014  memory: 19913  
09/15 19:44:19 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:07  time: 0.0753  data_time: 0.0016  memory: 19876  
09/15 19:44:23 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:36  time: 0.0747  data_time: 0.0016  memory: 697  
09/15 19:44:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:11  time: 0.1817  data_time: 0.0014  memory: 19864  
09/15 19:44:41 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:54  time: 0.2810  data_time: 0.0015  memory: 19894  
09/15 19:44:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:34  time: 0.0730  data_time: 0.0015  memory: 19895  
09/15 19:44:59 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:17  time: 0.3918  data_time: 0.0015  memory: 19913  
09/15 19:45:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:00  time: 0.0757  data_time: 0.0039  memory: 19878  
09/15 19:45:13 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:41  time: 0.1484  data_time: 0.0015  memory: 19852  
09/15 19:45:17 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:22  time: 0.0724  data_time: 0.0015  memory: 1894  
09/15 19:45:24 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:06  time: 0.1551  data_time: 0.0015  memory: 19881  
09/15 19:45:28 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:48  time: 0.0726  data_time: 0.0015  memory: 698  
09/15 19:45:32 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:33  time: 0.0741  data_time: 0.0015  memory: 19833  
09/15 19:45:42 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:20  time: 0.2437  data_time: 0.0015  memory: 19886  
09/15 19:45:48 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:06  time: 0.1741  data_time: 0.0014  memory: 19864  
09/15 19:45:51 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:52  time: 0.0737  data_time: 0.0014  memory: 697  
09/15 19:45:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:39  time: 0.0724  data_time: 0.0015  memory: 19890  
09/15 19:46:00 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:26  time: 0.0731  data_time: 0.0016  memory: 688  
09/15 19:46:08 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:15  time: 0.0712  data_time: 0.0014  memory: 19895  
09/15 19:46:15 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:03  time: 0.0753  data_time: 0.0016  memory: 19868  
09/15 19:46:22 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:52  time: 0.0735  data_time: 0.0014  memory: 19886  
09/15 19:46:26 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:41  time: 0.0736  data_time: 0.0016  memory: 19838  
09/15 19:46:30 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:30  time: 0.0718  data_time: 0.0016  memory: 646  
09/15 19:46:35 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:20  time: 0.0742  data_time: 0.0015  memory: 19907  
09/15 19:46:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0745  data_time: 0.0015  memory: 19848  
09/15 19:46:47 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0701  data_time: 0.0014  memory: 19909  
09/15 19:46:47 - mmengine - INFO - per class results:
09/15 19:46:47 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 67.88 | 88.62 |
|       building      | 79.15 | 90.32 |
|         sky         | 73.44 | 76.05 |
|        floor        | 74.36 | 89.21 |
|         tree        | 68.41 | 86.82 |
|       ceiling       | 69.05 | 77.69 |
|         road        | 77.12 | 86.46 |
|         bed         | 83.58 | 92.75 |
|      windowpane     | 53.89 | 70.87 |
|        grass        | 61.96 | 77.36 |
|       cabinet       | 51.33 | 61.03 |
|       sidewalk      |  54.6 |  64.6 |
|        person       | 75.51 | 89.53 |
|        earth        | 33.89 | 51.31 |
|         door        | 33.91 | 41.06 |
|        table        | 53.55 | 71.39 |
|       mountain      | 26.71 |  71.9 |
|        plant        | 46.58 | 56.07 |
|       curtain       | 57.14 | 65.09 |
|        chair        | 51.33 | 64.24 |
|         car         | 80.67 | 90.35 |
|        water        | 55.87 | 74.51 |
|       painting      | 65.38 | 79.69 |
|         sofa        | 62.12 | 79.81 |
|        shelf        |  36.4 | 48.06 |
|        house        | 39.69 | 50.71 |
|         sea         | 43.93 | 59.92 |
|        mirror       | 54.88 |  63.4 |
|         rug         | 43.76 | 48.98 |
|        field        | 20.34 | 36.21 |
|       armchair      | 39.64 | 58.04 |
|         seat        | 57.03 | 76.23 |
|        fence        | 33.67 | 49.29 |
|         desk        | 43.09 |  57.5 |
|         rock        | 41.47 | 58.51 |
|       wardrobe      | 37.97 | 53.34 |
|         lamp        | 57.91 | 68.83 |
|       bathtub       | 62.76 | 70.96 |
|       railing       | 24.15 |  31.4 |
|       cushion       | 47.76 | 58.77 |
|         base        | 18.41 | 23.56 |
|         box         | 17.62 | 21.71 |
|        column       | 37.43 | 48.28 |
|      signboard      | 34.31 | 45.57 |
|   chest of drawers  |  36.2 | 50.74 |
|       counter       | 23.73 | 35.92 |
|         sand        | 49.65 | 67.58 |
|         sink        | 64.71 | 73.75 |
|      skyscraper     |  71.2 |  81.8 |
|      fireplace      | 56.88 | 71.77 |
|     refrigerator    | 65.28 | 71.75 |
|      grandstand     | 52.24 | 74.03 |
|         path        | 23.65 | 35.56 |
|        stairs       | 32.48 | 41.48 |
|        runway       | 82.49 | 86.81 |
|         case        | 51.69 | 64.97 |
|      pool table     | 86.48 | 89.99 |
|        pillow       | 48.93 | 58.61 |
|     screen door     | 52.75 | 79.73 |
|       stairway      | 28.95 | 35.34 |
|        river        |  5.49 |  8.89 |
|        bridge       | 34.98 | 40.28 |
|       bookcase      | 38.82 | 50.42 |
|        blind        | 31.47 | 33.02 |
|     coffee table    |  53.4 | 74.64 |
|        toilet       | 67.11 | 70.49 |
|        flower       |  34.5 | 53.36 |
|         book        | 42.98 |  59.0 |
|         hill        | 11.67 | 19.92 |
|        bench        | 34.26 | 41.54 |
|      countertop     | 46.69 | 66.88 |
|        stove        | 60.09 | 64.34 |
|         palm        | 42.32 | 63.32 |
|    kitchen island   | 35.08 | 54.57 |
|       computer      | 50.41 | 56.31 |
|     swivel chair    | 31.89 | 37.23 |
|         boat        |  33.6 | 45.74 |
|         bar         | 37.94 | 46.33 |
|    arcade machine   | 14.13 | 14.36 |
|        hovel        | 37.04 | 42.22 |
|         bus         | 82.78 |  92.8 |
|        towel        |  53.4 | 67.14 |
|        light        | 46.01 | 51.06 |
|        truck        | 27.78 | 33.98 |
|        tower        |  5.8  |  9.46 |
|      chandelier     | 60.78 | 75.46 |
|        awning       | 19.85 | 22.04 |
|     streetlight     | 22.17 | 27.52 |
|        booth        |  52.0 | 55.53 |
| television receiver | 56.17 | 60.43 |
|       airplane      | 54.32 | 64.31 |
|      dirt track     |  4.01 | 20.66 |
|       apparel       |  31.0 | 42.87 |
|         pole        | 21.75 | 30.64 |
|         land        |  1.07 |  1.26 |
|      bannister      |  7.29 |  9.94 |
|      escalator      | 37.46 | 49.89 |
|       ottoman       | 38.13 | 53.73 |
|        bottle       | 34.91 | 59.97 |
|        buffet       | 34.26 | 39.11 |
|        poster       | 22.77 | 26.18 |
|        stage        | 12.19 |  16.5 |
|         van         | 34.41 |  46.8 |
|         ship        | 14.14 | 19.11 |
|       fountain      | 19.87 | 21.18 |
|    conveyer belt    |  74.0 | 77.25 |
|        canopy       | 15.19 |  20.4 |
|        washer       | 60.82 | 61.32 |
|      plaything      | 22.68 | 28.97 |
|    swimming pool    | 64.87 | 86.89 |
|        stool        | 38.38 | 46.53 |
|        barrel       | 29.05 | 68.28 |
|        basket       | 26.67 | 33.34 |
|      waterfall      | 59.28 |  68.8 |
|         tent        | 92.28 | 99.34 |
|         bag         | 10.33 | 12.02 |
|       minibike      | 60.43 | 71.97 |
|        cradle       | 79.65 | 93.71 |
|         oven        | 32.32 | 46.93 |
|         ball        | 36.91 | 63.13 |
|         food        | 43.87 | 56.23 |
|         step        | 10.98 | 12.54 |
|         tank        | 24.16 | 27.46 |
|      trade name     | 25.84 | 31.82 |
|      microwave      | 34.43 | 35.86 |
|         pot         | 31.31 | 34.18 |
|        animal       | 52.79 | 54.64 |
|       bicycle       | 53.99 | 75.63 |
|         lake        | 34.31 | 39.79 |
|      dishwasher     | 38.97 | 42.49 |
|        screen       | 65.33 | 72.16 |
|       blanket       | 14.17 | 15.37 |
|      sculpture      | 47.17 | 61.66 |
|         hood        | 39.96 | 41.49 |
|        sconce       | 35.03 | 44.49 |
|         vase        | 28.87 | 49.16 |
|    traffic light    | 33.09 | 42.36 |
|         tray        | 10.32 | 18.79 |
|        ashcan       | 30.38 | 34.76 |
|         fan         | 52.24 | 64.04 |
|         pier        | 28.58 | 42.61 |
|      crt screen     |  5.47 |  12.4 |
|        plate        | 41.82 | 52.46 |
|       monitor       |  5.76 |  6.18 |
|    bulletin board   | 33.19 | 37.78 |
|        shower       |  0.95 |  2.49 |
|       radiator      | 28.38 | 29.66 |
|        glass        | 14.12 | 15.36 |
|        clock        |  24.1 | 28.07 |
|         flag        | 45.68 | 48.99 |
+---------------------+-------+-------+
09/15 19:46:47 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 76.5800  mIoU: 41.6900  mAcc: 51.9700  data_time: 0.0016  time: 0.1965
Finished processing corruption type: frost
Processing corruption type: fog
09/15 19:46:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1395807823
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1395807823
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:46:51 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/fog'

09/15 19:46:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:46:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:46:54 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:46:55 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:47:50 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:36:01  time: 0.5898  data_time: 0.0016  memory: 19905  
09/15 19:48:19 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:47  time: 0.7515  data_time: 0.0016  memory: 19901  
09/15 19:48:38 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:21:18  time: 0.3644  data_time: 0.0015  memory: 19874  
09/15 19:49:03 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:19:17  time: 0.4952  data_time: 0.0015  memory: 19902  
09/15 19:49:26 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:36  time: 0.3053  data_time: 0.0015  memory: 19898  
09/15 19:49:50 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:16:36  time: 0.1978  data_time: 0.0016  memory: 19898  
09/15 19:50:17 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:15:54  time: 0.3689  data_time: 0.0015  memory: 19898  
09/15 19:50:41 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:04  time: 0.4069  data_time: 0.0014  memory: 19899  
09/15 19:50:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:49  time: 0.2690  data_time: 0.0014  memory: 19872  
09/15 19:51:08 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:39  time: 0.1992  data_time: 0.0015  memory: 19838  
09/15 19:51:21 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:41  time: 0.3356  data_time: 0.0016  memory: 19896  
09/15 19:51:34 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:51  time: 0.3496  data_time: 0.0016  memory: 19898  
09/15 19:51:50 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:14  time: 0.4301  data_time: 0.0014  memory: 19907  
09/15 19:52:09 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:43  time: 0.2027  data_time: 0.0016  memory: 19906  
09/15 19:52:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:16  time: 0.6520  data_time: 0.0015  memory: 19913  
09/15 19:52:40 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:37  time: 0.1971  data_time: 0.0017  memory: 19876  
09/15 19:52:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:00  time: 0.1971  data_time: 0.0017  memory: 697  
09/15 19:53:02 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:29  time: 0.2953  data_time: 0.0015  memory: 19864  
09/15 19:53:20 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:06  time: 0.4031  data_time: 0.0016  memory: 19894  
09/15 19:53:34 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:39  time: 0.1991  data_time: 0.0016  memory: 19895  
09/15 19:53:51 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:16  time: 0.5184  data_time: 0.0015  memory: 19913  
09/15 19:54:05 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:52  time: 0.1980  data_time: 0.0016  memory: 19878  
09/15 19:54:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:27  time: 0.2745  data_time: 0.0015  memory: 19852  
09/15 19:54:27 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:01  time: 0.2010  data_time: 0.0015  memory: 1894  
09/15 19:54:40 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:39  time: 0.2738  data_time: 0.0015  memory: 19881  
09/15 19:54:50 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:16  time: 0.1970  data_time: 0.0015  memory: 698  
09/15 19:55:01 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:54  time: 0.1968  data_time: 0.0015  memory: 19833  
09/15 19:55:17 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:35  time: 0.3661  data_time: 0.0015  memory: 19886  
09/15 19:55:29 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:15  time: 0.3044  data_time: 0.0015  memory: 19864  
09/15 19:55:39 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:54  time: 0.1987  data_time: 0.0015  memory: 697  
09/15 19:55:50 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:35  time: 0.1977  data_time: 0.0015  memory: 19890  
09/15 19:56:00 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:16  time: 0.1986  data_time: 0.0016  memory: 688  
09/15 19:56:14 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:58  time: 0.1969  data_time: 0.0014  memory: 19895  
09/15 19:56:27 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:41  time: 0.1971  data_time: 0.0016  memory: 19868  
09/15 19:56:40 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:23  time: 0.1992  data_time: 0.0014  memory: 19886  
09/15 19:56:51 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:06  time: 0.2004  data_time: 0.0016  memory: 19838  
09/15 19:57:01 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:49  time: 0.1986  data_time: 0.0016  memory: 646  
09/15 19:57:12 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:32  time: 0.1984  data_time: 0.0015  memory: 19907  
09/15 19:57:24 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.1967  data_time: 0.0015  memory: 19848  
09/15 19:57:37 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1946  data_time: 0.0014  memory: 19909  
09/15 19:57:37 - mmengine - INFO - per class results:
09/15 19:57:37 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.72 | 88.81 |
|       building      | 81.16 | 92.03 |
|         sky         | 93.72 | 97.05 |
|        floor        | 80.05 | 90.81 |
|         tree        | 72.39 | 87.96 |
|       ceiling       | 83.62 |  92.5 |
|         road        | 83.98 | 91.21 |
|         bed         | 87.88 | 94.53 |
|      windowpane     | 59.28 | 76.65 |
|        grass        | 66.63 |  82.3 |
|       cabinet       | 57.42 | 70.49 |
|       sidewalk      | 64.93 |  76.9 |
|        person       | 78.51 | 91.52 |
|        earth        | 34.58 | 49.24 |
|         door        | 43.95 | 56.79 |
|        table        | 58.33 | 74.18 |
|       mountain      |  53.3 | 69.33 |
|        plant        | 49.25 | 57.93 |
|       curtain       | 69.82 | 80.97 |
|        chair        | 54.55 | 68.49 |
|         car         | 83.33 | 91.82 |
|        water        | 55.58 | 72.33 |
|       painting      | 70.41 | 84.23 |
|         sofa        |  64.7 | 83.38 |
|        shelf        | 38.46 | 52.59 |
|        house        |  41.4 | 48.28 |
|         sea         | 61.34 | 78.72 |
|        mirror       | 65.34 | 71.87 |
|         rug         | 61.61 | 68.42 |
|        field        | 34.35 | 44.72 |
|       armchair      | 39.01 | 54.76 |
|         seat        | 62.38 | 80.78 |
|        fence        |  38.8 | 51.04 |
|         desk        | 51.69 | 69.91 |
|         rock        | 38.29 | 61.42 |
|       wardrobe      | 43.85 | 60.54 |
|         lamp        | 61.37 | 74.82 |
|       bathtub       | 75.03 | 82.01 |
|       railing       | 29.13 | 43.78 |
|       cushion       | 56.17 | 69.14 |
|         base        | 25.67 | 35.82 |
|         box         | 25.15 | 31.41 |
|        column       | 44.42 | 51.96 |
|      signboard      | 34.82 | 48.58 |
|   chest of drawers  | 39.47 | 56.47 |
|       counter       | 27.46 | 36.74 |
|         sand        | 48.81 | 72.52 |
|         sink        | 66.63 | 76.67 |
|      skyscraper     | 54.44 | 64.23 |
|      fireplace      | 71.67 | 83.27 |
|     refrigerator    | 75.41 | 82.98 |
|      grandstand     | 50.73 | 74.43 |
|         path        | 23.91 | 36.07 |
|        stairs       | 31.99 | 39.98 |
|        runway       | 72.09 | 95.17 |
|         case        | 51.89 | 69.29 |
|      pool table     | 89.36 | 94.41 |
|        pillow       | 58.35 | 69.95 |
|     screen door     | 67.68 | 76.69 |
|       stairway      | 32.53 | 40.15 |
|        river        |  9.09 | 17.35 |
|        bridge       | 40.21 | 46.03 |
|       bookcase      | 42.59 | 59.89 |
|        blind        | 45.32 | 50.46 |
|     coffee table    | 54.59 | 80.67 |
|        toilet       | 82.37 | 89.75 |
|        flower       | 36.08 | 51.43 |
|         book        | 46.53 |  64.6 |
|         hill        |  6.91 | 10.52 |
|        bench        | 35.88 | 43.81 |
|      countertop     | 56.43 | 71.68 |
|        stove        | 71.13 | 76.77 |
|         palm        |  49.7 | 66.92 |
|    kitchen island   | 38.92 | 60.55 |
|       computer      | 64.75 | 76.09 |
|     swivel chair    | 38.49 |  52.6 |
|         boat        | 37.81 |  54.0 |
|         bar         | 37.53 | 46.08 |
|    arcade machine   | 56.65 | 59.95 |
|        hovel        | 37.67 | 41.05 |
|         bus         | 87.28 | 94.03 |
|        towel        | 62.87 | 76.07 |
|        light        | 47.74 |  54.7 |
|        truck        | 35.47 | 42.39 |
|        tower        | 19.93 | 28.89 |
|      chandelier     | 64.73 | 79.75 |
|        awning       | 21.16 | 24.91 |
|     streetlight     | 24.28 |  32.5 |
|        booth        | 50.75 | 51.92 |
| television receiver |  68.8 | 78.77 |
|       airplane      | 54.77 | 63.93 |
|      dirt track     | 16.73 | 19.79 |
|       apparel       | 41.75 | 56.78 |
|         pole        | 21.94 | 30.62 |
|         land        |  2.64 |  3.79 |
|      bannister      |  9.47 |  13.3 |
|      escalator      | 46.76 | 69.75 |
|       ottoman       | 36.98 | 54.04 |
|        bottle       | 34.29 | 58.45 |
|        buffet       | 32.26 | 38.03 |
|        poster       | 30.67 |  38.6 |
|        stage        | 15.72 | 21.26 |
|         van         | 41.47 | 58.49 |
|         ship        | 47.39 | 66.41 |
|       fountain      | 20.18 | 21.16 |
|    conveyer belt    | 83.39 | 88.31 |
|        canopy       | 13.19 | 15.79 |
|        washer       | 67.74 | 70.05 |
|      plaything      | 27.27 | 39.18 |
|    swimming pool    | 61.25 |  81.2 |
|        stool        | 38.13 | 46.13 |
|        barrel       | 25.31 | 70.59 |
|        basket       | 33.05 | 41.34 |
|      waterfall      | 64.63 | 79.44 |
|         tent        | 95.22 |  98.5 |
|         bag         | 14.89 | 18.29 |
|       minibike      | 67.89 | 80.16 |
|        cradle       |  75.9 | 95.04 |
|         oven        | 21.16 | 53.51 |
|         ball        | 42.23 | 66.87 |
|         food        | 36.18 | 40.59 |
|         step        |  8.57 |  9.78 |
|         tank        |  47.0 | 54.98 |
|      trade name     | 27.22 | 34.34 |
|      microwave      | 44.73 | 49.06 |
|         pot         | 38.59 | 44.32 |
|        animal       | 52.75 | 54.54 |
|       bicycle       | 52.63 | 75.76 |
|         lake        | 36.85 |  63.3 |
|      dishwasher     |  65.4 | 76.64 |
|        screen       | 61.08 | 71.95 |
|       blanket       | 12.06 | 14.55 |
|      sculpture      | 52.38 | 69.65 |
|         hood        |  55.4 | 60.55 |
|        sconce       | 43.02 |  54.4 |
|         vase        |  30.6 | 54.65 |
|    traffic light    | 30.66 | 49.42 |
|         tray        | 10.93 | 20.29 |
|        ashcan       | 40.22 | 51.55 |
|         fan         |  60.5 | 76.67 |
|         pier        | 52.05 | 82.41 |
|      crt screen     |  6.84 |  20.5 |
|        plate        | 45.73 | 57.28 |
|       monitor       |  2.73 |  2.84 |
|    bulletin board   | 49.81 |  58.4 |
|        shower       |  1.81 |  3.8  |
|       radiator      | 52.41 | 58.72 |
|        glass        | 16.49 | 18.91 |
|        clock        | 32.71 | 39.75 |
|         flag        | 34.34 |  37.4 |
+---------------------+-------+-------+
09/15 19:57:37 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.0600  mIoU: 47.1400  mAcc: 58.8100  data_time: 0.0017  time: 0.3210
Finished processing corruption type: fog
Processing corruption type: brightness
09/15 19:57:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 472750180
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 472750180
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:57:40 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/brightness'

09/15 19:57:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:57:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:57:44 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:57:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 19:58:40 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:36:23  time: 0.6152  data_time: 0.0017  memory: 19905  
09/15 19:59:14 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:28:15  time: 0.9496  data_time: 0.0016  memory: 19901  
09/15 19:59:37 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:13  time: 0.4547  data_time: 0.0016  memory: 19874  
09/15 20:00:08 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:21:33  time: 0.5072  data_time: 0.0015  memory: 19902  
09/15 20:00:31 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:19:24  time: 0.3058  data_time: 0.0015  memory: 19898  
09/15 20:00:52 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:17:43  time: 0.2154  data_time: 0.0016  memory: 19898  
09/15 20:01:15 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:34  time: 0.2986  data_time: 0.0015  memory: 19898  
09/15 20:01:36 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:26  time: 0.3773  data_time: 0.0014  memory: 19899  
09/15 20:01:49 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:01  time: 0.2815  data_time: 0.0015  memory: 19872  
09/15 20:02:01 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:51  time: 0.2052  data_time: 0.0015  memory: 19838  
09/15 20:02:15 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:54  time: 0.3602  data_time: 0.0016  memory: 19896  
09/15 20:02:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:04  time: 0.3687  data_time: 0.0016  memory: 19898  
09/15 20:02:46 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:26  time: 0.4339  data_time: 0.0014  memory: 19907  
09/15 20:03:05 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:55  time: 0.2186  data_time: 0.0016  memory: 19906  
09/15 20:03:25 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:27  time: 0.6539  data_time: 0.0015  memory: 19913  
09/15 20:03:37 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:48  time: 0.2229  data_time: 0.0017  memory: 19876  
09/15 20:03:48 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:12  time: 0.2100  data_time: 0.0017  memory: 697  
09/15 20:04:02 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:42  time: 0.3039  data_time: 0.0014  memory: 19864  
09/15 20:04:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:20  time: 0.4608  data_time: 0.0015  memory: 19894  
09/15 20:04:38 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:53  time: 0.2339  data_time: 0.0015  memory: 19895  
09/15 20:04:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:30  time: 0.5607  data_time: 0.0015  memory: 19913  
09/15 20:05:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:06  time: 0.2670  data_time: 0.0015  memory: 19878  
09/15 20:05:25 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:40  time: 0.3521  data_time: 0.0015  memory: 19852  
09/15 20:05:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:14  time: 0.1965  data_time: 0.0015  memory: 1894  
09/15 20:05:51 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:51  time: 0.2718  data_time: 0.0015  memory: 19881  
09/15 20:06:01 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:27  time: 0.2074  data_time: 0.0015  memory: 698  
09/15 20:06:14 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:05  time: 0.1918  data_time: 0.0015  memory: 19833  
09/15 20:06:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:45  time: 0.3782  data_time: 0.0035  memory: 19886  
09/15 20:06:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:23  time: 0.3145  data_time: 0.0014  memory: 19864  
09/15 20:06:52 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:02  time: 0.1917  data_time: 0.0015  memory: 697  
09/15 20:07:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:42  time: 0.2091  data_time: 0.0015  memory: 19890  
09/15 20:07:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:22  time: 0.1999  data_time: 0.0016  memory: 688  
09/15 20:07:28 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:03  time: 0.1898  data_time: 0.0014  memory: 19895  
09/15 20:07:41 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:45  time: 0.2028  data_time: 0.0016  memory: 19868  
09/15 20:07:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:27  time: 0.1998  data_time: 0.0014  memory: 19886  
09/15 20:08:05 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:08  time: 0.2069  data_time: 0.0017  memory: 19838  
09/15 20:08:15 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:51  time: 0.2102  data_time: 0.0016  memory: 646  
09/15 20:08:26 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:33  time: 0.2006  data_time: 0.0015  memory: 19907  
09/15 20:08:38 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.1992  data_time: 0.0015  memory: 19848  
09/15 20:08:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1874  data_time: 0.0014  memory: 19909  
09/15 20:08:51 - mmengine - INFO - per class results:
09/15 20:08:51 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.53 | 88.86 |
|       building      |  81.9 | 92.44 |
|         sky         | 93.74 | 97.53 |
|        floor        | 80.73 | 90.96 |
|         tree        | 72.79 | 86.93 |
|       ceiling       | 84.44 | 92.42 |
|         road        | 83.83 |  91.0 |
|         bed         | 88.24 | 94.88 |
|      windowpane     | 60.12 | 78.58 |
|        grass        | 67.94 | 83.58 |
|       cabinet       | 58.22 | 70.37 |
|       sidewalk      | 65.05 | 77.67 |
|        person       | 78.83 | 91.89 |
|        earth        | 36.82 | 51.55 |
|         door        | 45.18 | 57.84 |
|        table        | 58.75 |  73.9 |
|       mountain      | 56.63 | 71.01 |
|        plant        |  50.4 |  60.8 |
|       curtain       | 70.17 | 79.83 |
|        chair        | 54.65 | 68.61 |
|         car         | 83.78 | 92.46 |
|        water        | 56.66 | 73.04 |
|       painting      | 71.57 | 84.87 |
|         sofa        | 65.36 | 85.01 |
|        shelf        | 42.11 | 58.15 |
|        house        | 42.87 | 50.72 |
|         sea         | 57.69 |  76.6 |
|        mirror       | 63.56 | 71.11 |
|         rug         | 62.72 | 72.06 |
|        field        |  32.5 |  44.2 |
|       armchair      |  40.9 | 56.39 |
|         seat        | 63.37 | 83.02 |
|        fence        | 43.02 | 58.88 |
|         desk        | 51.17 | 70.24 |
|         rock        | 39.33 | 62.97 |
|       wardrobe      | 47.98 | 66.56 |
|         lamp        | 61.51 | 73.85 |
|       bathtub       | 78.18 | 84.03 |
|       railing       | 29.95 |  43.4 |
|       cushion       | 56.44 | 69.37 |
|         base        | 29.83 | 40.75 |
|         box         |  25.9 | 32.47 |
|        column       |  45.1 | 53.28 |
|      signboard      | 35.02 | 48.39 |
|   chest of drawers  | 37.82 |  53.0 |
|       counter       | 31.13 | 42.08 |
|         sand        | 49.88 | 74.45 |
|         sink        | 66.66 | 77.46 |
|      skyscraper     | 53.17 | 60.68 |
|      fireplace      | 73.81 |  84.5 |
|     refrigerator    | 75.86 | 82.25 |
|      grandstand     | 49.45 | 72.18 |
|         path        | 22.66 |  35.6 |
|        stairs       | 30.96 | 38.82 |
|        runway       | 72.42 | 94.64 |
|         case        | 52.51 |  65.1 |
|      pool table     | 89.46 | 95.15 |
|        pillow       | 57.09 | 66.66 |
|     screen door     |  69.8 | 74.72 |
|       stairway      | 32.17 | 38.95 |
|        river        |  9.32 | 17.73 |
|        bridge       | 40.92 | 46.95 |
|       bookcase      | 41.63 | 59.91 |
|        blind        | 44.04 | 47.98 |
|     coffee table    | 54.45 | 81.94 |
|        toilet       | 82.61 | 89.87 |
|        flower       | 37.99 | 56.63 |
|         book        | 47.17 | 64.83 |
|         hill        |  7.97 | 12.29 |
|        bench        | 39.38 | 47.12 |
|      countertop     | 59.27 | 72.04 |
|        stove        | 73.62 | 81.23 |
|         palm        | 51.01 | 70.26 |
|    kitchen island   | 41.05 | 65.72 |
|       computer      | 69.32 |  79.8 |
|     swivel chair    | 36.58 | 51.36 |
|         boat        | 36.44 | 53.97 |
|         bar         | 34.24 | 41.45 |
|    arcade machine   |  44.7 |  47.2 |
|        hovel        | 39.23 | 44.97 |
|         bus         | 87.11 | 95.15 |
|        towel        | 63.14 | 74.89 |
|        light        | 52.24 | 61.28 |
|        truck        | 38.72 | 47.27 |
|        tower        | 20.72 | 29.77 |
|      chandelier     | 64.72 | 80.69 |
|        awning       | 24.65 | 30.04 |
|     streetlight     | 24.17 | 31.77 |
|        booth        | 50.69 | 52.13 |
| television receiver | 69.67 | 79.92 |
|       airplane      | 54.85 | 65.25 |
|      dirt track     |  6.75 | 21.86 |
|       apparel       | 41.62 | 54.15 |
|         pole        |  21.7 | 31.48 |
|         land        |  2.68 |  3.92 |
|      bannister      |  9.49 | 12.28 |
|      escalator      | 47.75 | 69.51 |
|       ottoman       | 35.14 | 52.66 |
|        bottle       | 34.63 | 58.96 |
|        buffet       | 31.14 | 37.43 |
|        poster       | 30.31 |  36.7 |
|        stage        | 15.32 | 20.29 |
|         van         | 43.45 | 58.26 |
|         ship        | 59.58 | 84.43 |
|       fountain      | 20.01 | 21.23 |
|    conveyer belt    | 81.39 | 88.17 |
|        canopy       | 23.63 |  30.1 |
|        washer       | 68.57 | 71.18 |
|      plaything      | 26.11 |  37.4 |
|    swimming pool    | 57.16 | 83.12 |
|        stool        | 39.27 | 47.89 |
|        barrel       | 24.28 | 71.12 |
|        basket       | 35.01 | 43.78 |
|      waterfall      | 62.93 | 79.83 |
|         tent        | 95.91 | 98.45 |
|         bag         | 15.29 | 19.23 |
|       minibike      | 67.77 | 82.81 |
|        cradle       |  75.3 | 95.19 |
|         oven        | 22.44 | 60.06 |
|         ball        | 42.87 | 66.26 |
|         food        | 45.83 | 52.75 |
|         step        | 10.39 | 11.42 |
|         tank        | 50.02 | 58.23 |
|      trade name     | 28.98 |  37.3 |
|      microwave      | 43.56 | 47.73 |
|         pot         | 39.81 |  45.1 |
|        animal       | 52.16 | 55.05 |
|       bicycle       | 52.14 | 75.35 |
|         lake        | 42.72 | 63.12 |
|      dishwasher     | 66.78 | 77.16 |
|        screen       | 59.56 | 69.85 |
|       blanket       | 15.34 |  18.7 |
|      sculpture      | 61.49 | 77.59 |
|         hood        | 57.83 | 61.66 |
|        sconce       | 44.99 | 55.85 |
|         vase        | 31.94 | 52.64 |
|    traffic light    | 33.25 | 53.43 |
|         tray        | 11.69 | 21.65 |
|        ashcan       | 42.32 | 54.16 |
|         fan         | 60.32 | 75.82 |
|         pier        | 52.08 | 86.95 |
|      crt screen     |  6.66 | 19.58 |
|        plate        | 50.15 | 62.56 |
|       monitor       |  3.61 |  3.81 |
|    bulletin board   | 43.06 | 49.97 |
|        shower       |  1.64 |  3.22 |
|       radiator      |  52.1 | 59.21 |
|        glass        | 16.01 | 17.62 |
|        clock        | 35.22 | 40.53 |
|         flag        |  32.0 | 35.05 |
+---------------------+-------+-------+
09/15 20:08:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.5400  mIoU: 47.8600  mAcc: 59.8100  data_time: 0.0017  time: 0.3333
Finished processing corruption type: brightness
Processing corruption type: contrast
09/15 20:08:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1454442908
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1454442908
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:08:55 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/contrast'

09/15 20:08:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:08:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:08:58 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:08:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:09:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:32:10  time: 0.4695  data_time: 0.0016  memory: 19905  
09/15 20:10:11 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:55  time: 0.6228  data_time: 0.0019  memory: 19901  
09/15 20:10:24 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:31  time: 0.2400  data_time: 0.0015  memory: 19874  
09/15 20:10:42 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:36  time: 0.3739  data_time: 0.0015  memory: 19902  
09/15 20:10:59 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:02  time: 0.1774  data_time: 0.0014  memory: 19898  
09/15 20:11:14 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:47  time: 0.0738  data_time: 0.0015  memory: 19898  
09/15 20:11:30 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:56  time: 0.1674  data_time: 0.0015  memory: 19898  
09/15 20:11:44 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:04  time: 0.2471  data_time: 0.0014  memory: 19899  
09/15 20:11:51 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:54  time: 0.1451  data_time: 0.0014  memory: 19872  
09/15 20:11:57 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:55  time: 0.0692  data_time: 0.0014  memory: 19838  
09/15 20:12:04 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:08  time: 0.2160  data_time: 0.0016  memory: 19896  
09/15 20:12:10 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:27  time: 0.2220  data_time: 0.0016  memory: 19898  
09/15 20:12:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:00  time: 0.3019  data_time: 0.0014  memory: 19907  
09/15 20:12:33 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:37  time: 0.0749  data_time: 0.0016  memory: 19906  
09/15 20:12:46 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:18  time: 0.5287  data_time: 0.0014  memory: 19913  
09/15 20:12:51 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:48  time: 0.0714  data_time: 0.0016  memory: 19876  
09/15 20:12:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:19  time: 0.0717  data_time: 0.0016  memory: 697  
09/15 20:13:01 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:56  time: 0.1727  data_time: 0.0014  memory: 19864  
09/15 20:13:12 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:40  time: 0.2804  data_time: 0.0015  memory: 19894  
09/15 20:13:20 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:21  time: 0.0698  data_time: 0.0015  memory: 19895  
09/15 20:13:30 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:06  time: 0.3896  data_time: 0.0015  memory: 19913  
09/15 20:13:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:49  time: 0.0697  data_time: 0.0015  memory: 19878  
09/15 20:13:44 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:31  time: 0.1451  data_time: 0.0015  memory: 19852  
09/15 20:13:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:13  time: 0.0698  data_time: 0.0015  memory: 1894  
09/15 20:13:55 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:57  time: 0.1491  data_time: 0.0015  memory: 19881  
09/15 20:13:58 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:41  time: 0.0698  data_time: 0.0015  memory: 698  
09/15 20:14:03 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:26  time: 0.0713  data_time: 0.0015  memory: 19833  
09/15 20:14:12 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:14  time: 0.2390  data_time: 0.0014  memory: 19886  
09/15 20:14:18 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:01  time: 0.1698  data_time: 0.0014  memory: 19864  
09/15 20:14:21 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:47  time: 0.0689  data_time: 0.0014  memory: 697  
09/15 20:14:26 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:35  time: 0.0699  data_time: 0.0015  memory: 19890  
09/15 20:14:30 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:22  time: 0.0685  data_time: 0.0016  memory: 688  
09/15 20:14:37 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:11  time: 0.0695  data_time: 0.0014  memory: 19895  
09/15 20:14:44 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:01  time: 0.0696  data_time: 0.0016  memory: 19868  
09/15 20:14:50 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:50  time: 0.0710  data_time: 0.0014  memory: 19886  
09/15 20:14:55 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:39  time: 0.0708  data_time: 0.0016  memory: 19838  
09/15 20:14:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:29  time: 0.0702  data_time: 0.0016  memory: 646  
09/15 20:15:03 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:19  time: 0.0717  data_time: 0.0015  memory: 19907  
09/15 20:15:09 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0691  data_time: 0.0014  memory: 19848  
09/15 20:15:15 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0681  data_time: 0.0014  memory: 19909  
09/15 20:15:15 - mmengine - INFO - per class results:
09/15 20:15:15 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.03 | 89.14 |
|       building      |  81.9 | 92.37 |
|         sky         |  93.5 | 96.95 |
|        floor        | 80.34 | 91.39 |
|         tree        | 72.07 | 87.83 |
|       ceiling       | 84.34 | 92.51 |
|         road        | 83.98 | 91.32 |
|         bed         | 88.28 | 94.71 |
|      windowpane     | 59.77 | 76.51 |
|        grass        | 66.28 | 83.09 |
|       cabinet       | 58.39 | 70.97 |
|       sidewalk      | 65.16 | 77.96 |
|        person       | 78.33 | 91.29 |
|        earth        |  35.9 | 49.92 |
|         door        | 44.73 | 56.91 |
|        table        | 58.61 | 74.33 |
|       mountain      | 55.77 | 70.74 |
|        plant        | 48.86 | 57.49 |
|       curtain       | 69.83 | 80.45 |
|        chair        | 54.64 | 68.89 |
|         car         | 83.06 | 91.37 |
|        water        | 54.49 | 70.81 |
|       painting      | 70.08 | 83.87 |
|         sofa        | 65.73 | 84.89 |
|        shelf        | 39.68 | 53.36 |
|        house        | 44.39 | 52.51 |
|         sea         | 59.92 | 79.88 |
|        mirror       | 64.45 | 70.75 |
|         rug         | 61.69 | 67.13 |
|        field        | 33.41 | 44.39 |
|       armchair      | 39.71 | 55.11 |
|         seat        |  63.6 | 81.84 |
|        fence        | 40.62 | 52.54 |
|         desk        | 50.09 |  67.0 |
|         rock        | 39.81 | 63.66 |
|       wardrobe      | 46.57 | 63.67 |
|         lamp        | 61.37 |  74.2 |
|       bathtub       | 76.59 |  82.6 |
|       railing       | 29.91 | 43.45 |
|       cushion       |  55.9 | 67.67 |
|         base        | 29.47 | 39.43 |
|         box         | 25.51 | 31.17 |
|        column       | 44.23 | 51.71 |
|      signboard      | 35.39 | 48.78 |
|   chest of drawers  | 39.37 | 57.88 |
|       counter       | 30.28 | 42.87 |
|         sand        | 49.62 |  73.3 |
|         sink        | 67.39 |  76.5 |
|      skyscraper     | 57.88 | 70.45 |
|      fireplace      | 73.07 | 84.84 |
|     refrigerator    |  76.9 |  82.5 |
|      grandstand     | 49.03 | 74.24 |
|         path        | 23.88 | 36.48 |
|        stairs       | 31.91 | 38.85 |
|        runway       | 72.39 | 95.56 |
|         case        | 50.33 | 69.87 |
|      pool table     |  90.0 | 94.82 |
|        pillow       | 57.07 | 68.08 |
|     screen door     | 69.73 | 78.36 |
|       stairway      | 31.99 | 38.87 |
|        river        |  8.46 | 16.55 |
|        bridge       | 45.81 | 52.47 |
|       bookcase      | 43.09 | 60.23 |
|        blind        |  44.9 | 49.55 |
|     coffee table    | 54.44 | 80.51 |
|        toilet       | 81.95 | 89.47 |
|        flower       | 36.65 | 52.17 |
|         book        | 45.11 | 62.65 |
|         hill        |  6.55 | 11.14 |
|        bench        |  37.7 | 46.59 |
|      countertop     | 55.89 | 72.08 |
|        stove        | 74.28 |  79.9 |
|         palm        | 49.04 | 65.54 |
|    kitchen island   | 37.58 | 57.85 |
|       computer      | 61.57 | 71.97 |
|     swivel chair    | 38.04 | 51.37 |
|         boat        | 35.04 | 49.24 |
|         bar         | 29.98 | 36.45 |
|    arcade machine   | 33.65 | 35.08 |
|        hovel        | 32.68 | 36.28 |
|         bus         | 87.83 | 95.03 |
|        towel        | 64.34 | 77.83 |
|        light        | 49.05 | 55.25 |
|        truck        | 35.45 | 42.96 |
|        tower        | 21.65 | 31.26 |
|      chandelier     | 65.46 | 80.13 |
|        awning       | 23.28 | 28.67 |
|     streetlight     | 24.23 | 32.06 |
|        booth        | 51.57 | 53.04 |
| television receiver |  65.4 | 75.79 |
|       airplane      | 55.85 | 64.51 |
|      dirt track     | 11.92 | 19.72 |
|       apparel       | 41.53 | 53.32 |
|         pole        | 22.04 | 32.16 |
|         land        |  3.77 |  5.45 |
|      bannister      |  8.98 |  11.9 |
|      escalator      | 44.91 | 64.86 |
|       ottoman       | 38.22 | 57.23 |
|        bottle       | 33.98 | 56.65 |
|        buffet       | 32.81 | 37.93 |
|        poster       | 28.95 | 35.16 |
|        stage        | 16.52 | 21.73 |
|         van         | 43.25 |  59.8 |
|         ship        | 55.43 | 81.04 |
|       fountain      | 19.94 |  20.7 |
|    conveyer belt    | 79.52 | 87.41 |
|        canopy       | 23.03 | 26.77 |
|        washer       |  68.2 | 70.98 |
|      plaything      | 27.01 | 37.52 |
|    swimming pool    | 60.63 | 80.22 |
|        stool        | 38.06 | 46.03 |
|        barrel       | 29.87 | 68.98 |
|        basket       | 32.49 | 40.27 |
|      waterfall      | 60.57 | 78.12 |
|         tent        | 96.26 | 98.65 |
|         bag         | 15.31 | 18.43 |
|       minibike      | 66.55 | 81.76 |
|        cradle       | 74.71 | 95.19 |
|         oven        | 24.41 | 53.71 |
|         ball        |  42.0 |  66.2 |
|         food        | 37.76 | 41.53 |
|         step        | 10.68 | 12.14 |
|         tank        | 44.53 | 51.95 |
|      trade name     | 28.74 | 36.17 |
|      microwave      | 54.62 | 59.74 |
|         pot         | 37.44 | 42.51 |
|        animal       | 53.49 | 55.49 |
|       bicycle       | 55.46 |  75.4 |
|         lake        | 36.68 | 63.22 |
|      dishwasher     | 64.89 | 73.05 |
|        screen       | 70.22 | 80.38 |
|       blanket       | 13.69 |  16.0 |
|      sculpture      | 52.28 | 66.36 |
|         hood        | 55.47 | 58.95 |
|        sconce       |  43.0 | 54.44 |
|         vase        | 31.33 | 53.59 |
|    traffic light    | 32.59 | 52.69 |
|         tray        | 12.24 | 20.63 |
|        ashcan       | 43.13 | 54.35 |
|         fan         | 59.95 | 76.37 |
|         pier        | 50.93 | 85.96 |
|      crt screen     |  6.76 | 18.99 |
|        plate        | 46.74 | 58.05 |
|       monitor       |  2.65 |  2.77 |
|    bulletin board   | 50.55 |  59.1 |
|        shower       |  2.1  |  3.49 |
|       radiator      | 52.46 | 58.38 |
|        glass        | 16.71 |  19.0 |
|        clock        | 35.14 | 41.84 |
|         flag        | 33.39 | 36.17 |
+---------------------+-------+-------+
09/15 20:15:15 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.3200  mIoU: 47.4400  mAcc: 59.0000  data_time: 0.0016  time: 0.1883
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
09/15 20:15:18 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1926157761
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1926157761
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:15:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/elastic_transform'

09/15 20:15:22 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:15:22 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:15:22 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:15:23 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:16:58 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:01:40  time: 1.4270  data_time: 0.0016  memory: 19905  
09/15 20:18:06 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:51:49  time: 1.5822  data_time: 0.0016  memory: 19901  
09/15 20:19:05 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:45:43  time: 1.1819  data_time: 0.0025  memory: 19874  
09/15 20:20:10 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:43:09  time: 1.2898  data_time: 0.0031  memory: 19902  
09/15 20:21:11 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:40:37  time: 1.0737  data_time: 0.0015  memory: 19898  
09/15 20:22:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:38:26  time: 1.0025  data_time: 0.0016  memory: 19898  
09/15 20:23:11 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:36:48  time: 1.0253  data_time: 0.0015  memory: 19898  
09/15 20:24:10 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:35:09  time: 1.1661  data_time: 0.0014  memory: 19899  
09/15 20:24:57 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:32:59  time: 0.9675  data_time: 0.0014  memory: 19872  
09/15 20:25:48 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:31:15  time: 0.9431  data_time: 0.0015  memory: 19838  
09/15 20:26:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:29:51  time: 1.1588  data_time: 0.0016  memory: 19896  
09/15 20:27:33 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:28:24  time: 1.1498  data_time: 0.0016  memory: 19898  
09/15 20:28:27 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:27:09  time: 1.1956  data_time: 0.0014  memory: 19907  
09/15 20:29:26 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:26:05  time: 1.0094  data_time: 0.0016  memory: 19906  
09/15 20:30:25 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:25:03  time: 1.4042  data_time: 0.0014  memory: 19913  
09/15 20:31:12 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:23:44  time: 0.9828  data_time: 0.0016  memory: 19876  
09/15 20:32:02 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:22:31  time: 0.9935  data_time: 0.0016  memory: 697  
09/15 20:32:49 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:21:19  time: 0.9694  data_time: 0.0014  memory: 19864  
09/15 20:33:46 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:20:19  time: 1.1518  data_time: 0.0015  memory: 19894  
09/15 20:34:37 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:19:13  time: 0.9325  data_time: 0.0015  memory: 19895  
09/15 20:35:33 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:15  time: 1.3243  data_time: 0.0015  memory: 19913  
09/15 20:36:27 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:14  time: 0.9589  data_time: 0.0016  memory: 19878  
09/15 20:37:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:11  time: 1.0489  data_time: 0.0015  memory: 19852  
09/15 20:38:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:08  time: 0.9581  data_time: 0.0015  memory: 1894  
09/15 20:38:59 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:09  time: 1.0723  data_time: 0.0015  memory: 19881  
09/15 20:39:46 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:07  time: 0.9770  data_time: 0.0015  memory: 698  
09/15 20:40:35 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:08  time: 0.9117  data_time: 0.0014  memory: 19833  
09/15 20:41:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:11  time: 1.2073  data_time: 0.0014  memory: 19886  
09/15 20:42:18 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:12  time: 1.1196  data_time: 0.0014  memory: 19864  
09/15 20:43:08 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:14  time: 0.9312  data_time: 0.0014  memory: 697  
09/15 20:44:00 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:18  time: 0.9861  data_time: 0.0016  memory: 19890  
09/15 20:44:48 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:21  time: 0.9664  data_time: 0.0015  memory: 688  
09/15 20:45:39 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:25  time: 0.8891  data_time: 0.0014  memory: 19895  
09/15 20:46:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:29  time: 0.9849  data_time: 0.0015  memory: 19868  
09/15 20:47:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:34  time: 0.9625  data_time: 0.0014  memory: 19886  
09/15 20:48:13 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:38  time: 0.9993  data_time: 0.0016  memory: 19838  
09/15 20:49:02 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:43  time: 1.0000  data_time: 0.0016  memory: 646  
09/15 20:49:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:48  time: 0.9355  data_time: 0.0015  memory: 19907  
09/15 20:50:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:54  time: 0.9296  data_time: 0.0014  memory: 19848  
09/15 20:51:28 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8648  data_time: 0.0014  memory: 19909  
09/15 20:51:28 - mmengine - INFO - per class results:
09/15 20:51:28 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  64.2 | 79.73 |
|       building      | 74.01 | 87.86 |
|         sky         | 84.29 |  91.9 |
|        floor        | 68.98 | 82.97 |
|         tree        | 62.69 | 80.11 |
|       ceiling       | 70.93 | 83.99 |
|         road        |  76.4 | 86.87 |
|         bed         |  76.6 | 88.28 |
|      windowpane     | 48.66 | 66.84 |
|        grass        | 58.78 | 76.21 |
|       cabinet       | 49.01 | 62.71 |
|       sidewalk      | 51.74 | 66.22 |
|        person       | 61.59 | 79.06 |
|        earth        | 31.88 | 46.05 |
|         door        |  36.1 | 46.84 |
|        table        | 43.88 | 61.85 |
|       mountain      |  51.2 | 64.14 |
|        plant        | 42.92 | 55.15 |
|       curtain       | 53.38 | 70.42 |
|        chair        | 40.58 |  56.9 |
|         car         | 61.39 | 75.98 |
|        water        |  53.1 | 70.47 |
|       painting      | 48.94 | 67.14 |
|         sofa        | 52.47 | 71.87 |
|        shelf        | 36.86 | 54.37 |
|        house        | 36.56 | 44.59 |
|         sea         | 49.66 | 65.23 |
|        mirror       | 54.56 | 66.74 |
|         rug         | 44.99 |  57.5 |
|        field        | 28.93 | 41.59 |
|       armchair      | 32.89 | 49.53 |
|         seat        | 57.31 | 80.07 |
|        fence        |  37.3 | 51.75 |
|         desk        | 43.01 | 64.02 |
|         rock        | 30.59 | 53.04 |
|       wardrobe      | 42.98 | 61.81 |
|         lamp        | 30.33 | 47.74 |
|       bathtub       | 61.09 | 70.59 |
|       railing       | 25.11 |  38.5 |
|       cushion       | 41.11 | 55.64 |
|         base        | 27.39 | 40.46 |
|         box         | 21.83 | 30.25 |
|        column       | 30.01 | 42.86 |
|      signboard      | 22.51 | 34.37 |
|   chest of drawers  | 27.22 | 41.42 |
|       counter       | 28.31 | 35.61 |
|         sand        | 43.65 | 65.38 |
|         sink        | 47.79 | 61.19 |
|      skyscraper     | 40.34 | 47.96 |
|      fireplace      | 65.15 | 80.68 |
|     refrigerator    |  64.4 | 74.09 |
|      grandstand     |  43.5 | 68.25 |
|         path        | 17.67 | 28.26 |
|        stairs       | 25.57 | 32.08 |
|        runway       | 65.89 | 87.83 |
|         case        |  51.0 |  67.2 |
|      pool table     | 78.58 | 88.53 |
|        pillow       | 42.63 | 56.03 |
|     screen door     | 61.84 |  71.8 |
|       stairway      | 26.29 | 32.38 |
|        river        |  9.59 | 16.92 |
|        bridge       | 30.09 | 36.61 |
|       bookcase      | 35.09 | 53.88 |
|        blind        | 36.98 | 41.64 |
|     coffee table    | 42.06 | 69.38 |
|        toilet       | 59.19 | 73.05 |
|        flower       | 25.41 | 38.56 |
|         book        | 31.99 | 48.05 |
|         hill        |  9.1  | 18.67 |
|        bench        | 31.92 | 39.99 |
|      countertop     | 46.81 | 62.27 |
|        stove        | 62.32 | 74.52 |
|         palm        | 35.89 | 52.43 |
|    kitchen island   | 33.97 | 54.74 |
|       computer      |  51.0 | 64.32 |
|     swivel chair    | 28.34 | 42.17 |
|         boat        | 46.07 | 68.98 |
|         bar         | 34.65 |  42.2 |
|    arcade machine   | 52.76 | 61.46 |
|        hovel        | 47.75 |  55.7 |
|         bus         | 69.41 |  87.2 |
|        towel        | 38.46 | 56.76 |
|        light        | 14.02 | 22.09 |
|        truck        | 26.52 |  44.3 |
|        tower        | 14.76 | 23.57 |
|      chandelier     | 42.13 | 60.59 |
|        awning       | 18.49 |  24.2 |
|     streetlight     |  9.07 | 15.72 |
|        booth        | 48.49 | 53.31 |
| television receiver | 48.97 | 63.32 |
|       airplane      | 38.29 | 53.06 |
|      dirt track     | 12.12 |  22.8 |
|       apparel       | 32.83 | 49.51 |
|         pole        |  7.05 | 10.42 |
|         land        |  0.35 |  0.52 |
|      bannister      |  4.68 |  6.33 |
|      escalator      | 46.68 | 66.83 |
|       ottoman       | 30.74 | 46.12 |
|        bottle       | 26.72 | 53.55 |
|        buffet       | 36.03 | 41.92 |
|        poster       |  21.0 | 31.19 |
|        stage        | 11.69 | 17.11 |
|         van         | 35.11 | 47.33 |
|         ship        | 59.24 |  70.3 |
|       fountain      | 20.38 | 21.48 |
|    conveyer belt    | 73.84 | 80.78 |
|        canopy       | 13.28 | 16.64 |
|        washer       | 58.95 | 66.15 |
|      plaything      | 18.22 | 29.74 |
|    swimming pool    | 62.27 | 85.94 |
|        stool        | 20.92 | 29.22 |
|        barrel       | 23.32 | 65.72 |
|        basket       | 23.79 | 31.15 |
|      waterfall      | 52.27 | 72.92 |
|         tent        | 78.24 | 93.65 |
|         bag         | 11.32 | 14.29 |
|       minibike      | 50.58 |  71.4 |
|        cradle       | 67.36 | 89.56 |
|         oven        | 24.26 | 46.59 |
|         ball        | 41.61 | 60.37 |
|         food        | 33.16 | 38.36 |
|         step        |  3.24 |  3.47 |
|         tank        | 47.29 | 56.72 |
|      trade name     | 21.09 | 27.94 |
|      microwave      |  58.0 | 68.74 |
|         pot         | 19.18 | 24.95 |
|        animal       | 46.75 |  51.1 |
|       bicycle       |  40.8 | 63.07 |
|         lake        | 29.57 |  60.8 |
|      dishwasher     | 46.68 | 58.61 |
|        screen       | 58.68 | 75.58 |
|       blanket       | 12.99 | 16.82 |
|      sculpture      | 39.19 | 68.05 |
|         hood        | 38.31 | 45.98 |
|        sconce       | 19.69 | 28.83 |
|         vase        | 14.93 | 31.25 |
|    traffic light    | 15.57 | 29.69 |
|         tray        |  6.08 | 12.01 |
|        ashcan       | 29.49 | 44.83 |
|         fan         | 24.43 | 38.68 |
|         pier        |  35.1 | 81.27 |
|      crt screen     |  6.06 | 17.09 |
|        plate        | 28.99 | 38.03 |
|       monitor       |  1.53 |  1.62 |
|    bulletin board   | 37.93 | 51.83 |
|        shower       |  0.4  |  0.72 |
|       radiator      | 37.45 | 44.38 |
|        glass        | 11.53 | 13.43 |
|        clock        | 21.42 | 28.79 |
|         flag        | 21.76 | 27.66 |
+---------------------+-------+-------+
09/15 20:51:28 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 74.8000  mIoU: 38.2700  mAcc: 51.4600  data_time: 0.0017  time: 1.0828
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/15 20:51:32 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 62729362
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 62729362
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:51:32 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/pixelate'

09/15 20:51:35 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:51:35 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:51:35 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:51:36 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:52:25 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:31:51  time: 0.4569  data_time: 0.0015  memory: 19905  
09/15 20:52:47 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:35  time: 0.6097  data_time: 0.0015  memory: 19901  
09/15 20:52:59 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:11  time: 0.2282  data_time: 0.0015  memory: 19874  
09/15 20:53:18 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:17  time: 0.3662  data_time: 0.0030  memory: 19902  
09/15 20:53:33 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:43  time: 0.1668  data_time: 0.0014  memory: 19898  
09/15 20:53:48 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:29  time: 0.0630  data_time: 0.0015  memory: 19898  
09/15 20:54:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:39  time: 0.1579  data_time: 0.0014  memory: 19898  
09/15 20:54:18 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:10:47  time: 0.2380  data_time: 0.0014  memory: 19899  
09/15 20:54:24 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:38  time: 0.1351  data_time: 0.0014  memory: 19872  
09/15 20:54:29 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:40  time: 0.0597  data_time: 0.0014  memory: 19838  
09/15 20:54:35 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:53  time: 0.2051  data_time: 0.0015  memory: 19896  
09/15 20:54:41 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:13  time: 0.2105  data_time: 0.0015  memory: 19898  
09/15 20:54:51 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:46  time: 0.2850  data_time: 0.0013  memory: 19907  
09/15 20:55:03 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:24  time: 0.0632  data_time: 0.0015  memory: 19906  
09/15 20:55:15 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:05  time: 0.5176  data_time: 0.0014  memory: 19913  
09/15 20:55:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:36  time: 0.0611  data_time: 0.0016  memory: 19876  
09/15 20:55:23 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:07  time: 0.0594  data_time: 0.0015  memory: 697  
09/15 20:55:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:44  time: 0.1635  data_time: 0.0014  memory: 19864  
09/15 20:55:40 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:29  time: 0.2690  data_time: 0.0014  memory: 19894  
09/15 20:55:46 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:10  time: 0.0594  data_time: 0.0014  memory: 19895  
09/15 20:55:56 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:03:55  time: 0.3771  data_time: 0.0014  memory: 19913  
09/15 20:56:04 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:39  time: 0.0595  data_time: 0.0014  memory: 19878  
09/15 20:56:09 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:22  time: 0.1326  data_time: 0.0014  memory: 19852  
09/15 20:56:12 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:04  time: 0.0581  data_time: 0.0014  memory: 1894  
09/15 20:56:19 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:49  time: 0.1408  data_time: 0.0014  memory: 19881  
09/15 20:56:22 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:33  time: 0.0603  data_time: 0.0014  memory: 698  
09/15 20:56:26 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:19  time: 0.0629  data_time: 0.0014  memory: 19833  
09/15 20:56:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:08  time: 0.2279  data_time: 0.0014  memory: 19886  
09/15 20:56:40 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:55  time: 0.1636  data_time: 0.0014  memory: 19864  
09/15 20:56:43 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:42  time: 0.0605  data_time: 0.0013  memory: 697  
09/15 20:56:47 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:30  time: 0.0601  data_time: 0.0014  memory: 19890  
09/15 20:56:50 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:18  time: 0.0596  data_time: 0.0015  memory: 688  
09/15 20:56:57 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:08  time: 0.0595  data_time: 0.0013  memory: 19895  
09/15 20:57:04 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:57  time: 0.0601  data_time: 0.0015  memory: 19868  
09/15 20:57:09 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:47  time: 0.0621  data_time: 0.0013  memory: 19886  
09/15 20:57:13 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:37  time: 0.0611  data_time: 0.0015  memory: 19838  
09/15 20:57:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:27  time: 0.0622  data_time: 0.0015  memory: 646  
09/15 20:57:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0616  data_time: 0.0014  memory: 19907  
09/15 20:57:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:08  time: 0.0597  data_time: 0.0014  memory: 19848  
09/15 20:57:32 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0562  data_time: 0.0012  memory: 19909  
09/15 20:57:32 - mmengine - INFO - per class results:
09/15 20:57:32 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.58 | 89.06 |
|       building      | 80.68 | 93.15 |
|         sky         | 94.04 |  97.3 |
|        floor        | 79.55 | 91.04 |
|         tree        |  71.8 | 86.76 |
|       ceiling       | 83.89 | 92.26 |
|         road        | 84.02 | 91.85 |
|         bed         | 87.73 | 94.67 |
|      windowpane     | 59.64 | 76.44 |
|        grass        |  67.1 | 82.82 |
|       cabinet       | 58.08 | 70.35 |
|       sidewalk      | 65.02 | 77.23 |
|        person       | 77.96 | 88.42 |
|        earth        | 37.22 | 51.83 |
|         door        |  43.7 | 56.54 |
|        table        | 56.55 | 73.12 |
|       mountain      | 56.97 | 67.59 |
|        plant        | 48.91 | 56.73 |
|       curtain       | 70.78 | 81.14 |
|        chair        | 55.38 | 67.71 |
|         car         | 80.95 | 88.34 |
|        water        | 57.17 | 78.12 |
|       painting      | 71.31 | 84.25 |
|         sofa        | 64.72 | 87.69 |
|        shelf        | 42.42 | 59.19 |
|        house        | 41.17 | 45.86 |
|         sea         | 53.38 | 68.62 |
|        mirror       | 60.61 | 68.87 |
|         rug         | 59.14 | 68.94 |
|        field        | 31.12 | 45.53 |
|       armchair      | 38.11 | 49.36 |
|         seat        | 58.71 | 77.84 |
|        fence        | 39.78 | 56.63 |
|         desk        | 50.71 | 64.72 |
|         rock        | 40.91 | 59.59 |
|       wardrobe      | 45.11 | 62.72 |
|         lamp        | 60.66 | 72.38 |
|       bathtub       | 77.44 | 83.12 |
|       railing       | 29.45 | 38.25 |
|       cushion       | 53.02 | 63.64 |
|         base        |  19.7 | 26.26 |
|         box         | 22.68 |  30.4 |
|        column       | 43.63 | 52.84 |
|      signboard      | 34.41 | 44.99 |
|   chest of drawers  | 38.58 | 58.46 |
|       counter       | 27.44 | 39.69 |
|         sand        | 47.37 | 69.38 |
|         sink        | 65.92 | 75.14 |
|      skyscraper     | 52.08 | 58.38 |
|      fireplace      | 75.47 | 84.44 |
|     refrigerator    | 75.46 | 82.39 |
|      grandstand     | 43.82 | 75.88 |
|         path        | 26.98 |  41.4 |
|        stairs       | 31.32 | 40.65 |
|        runway       | 72.85 | 95.22 |
|         case        | 53.19 | 68.66 |
|      pool table     |  91.1 | 94.94 |
|        pillow       | 54.01 | 63.63 |
|     screen door     | 70.67 | 76.57 |
|       stairway      | 31.42 |  38.5 |
|        river        |  8.74 | 15.49 |
|        bridge       |  61.2 | 73.36 |
|       bookcase      | 40.41 | 57.62 |
|        blind        | 41.84 | 45.17 |
|     coffee table    | 56.52 | 81.01 |
|        toilet       | 82.02 | 88.82 |
|        flower       | 34.09 | 48.55 |
|         book        | 44.79 |  63.5 |
|         hill        | 12.49 | 20.32 |
|        bench        | 36.77 |  48.3 |
|      countertop     | 55.79 | 67.77 |
|        stove        |  72.0 | 78.71 |
|         palm        | 47.74 | 62.36 |
|    kitchen island   | 41.64 | 66.15 |
|       computer      | 60.35 | 68.75 |
|     swivel chair    | 36.17 | 50.21 |
|         boat        |  38.7 | 47.42 |
|         bar         | 42.18 | 54.14 |
|    arcade machine   | 26.06 | 26.75 |
|        hovel        | 40.51 | 45.14 |
|         bus         | 86.45 | 93.91 |
|        towel        | 61.87 | 71.35 |
|        light        | 51.56 | 59.55 |
|        truck        | 34.36 | 48.39 |
|        tower        | 20.48 | 31.44 |
|      chandelier     | 62.78 |  79.4 |
|        awning       | 22.21 |  24.9 |
|     streetlight     |  22.9 | 30.36 |
|        booth        | 47.57 | 50.38 |
| television receiver | 65.94 | 78.17 |
|       airplane      | 55.05 | 61.74 |
|      dirt track     | 22.99 | 28.45 |
|       apparel       | 37.43 | 48.23 |
|         pole        | 22.65 | 34.09 |
|         land        |  2.73 |  4.17 |
|      bannister      |  7.05 |  8.8  |
|      escalator      | 35.48 | 57.65 |
|       ottoman       | 38.96 | 54.09 |
|        bottle       | 30.99 | 50.94 |
|        buffet       | 43.06 | 49.38 |
|        poster       | 27.06 |  30.7 |
|        stage        | 18.13 | 22.83 |
|         van         | 38.11 | 60.79 |
|         ship        | 20.45 | 30.56 |
|       fountain      | 19.76 | 21.32 |
|    conveyer belt    | 74.51 | 84.43 |
|        canopy       | 13.96 |  15.8 |
|        washer       | 64.99 | 67.07 |
|      plaything      | 25.38 | 33.05 |
|    swimming pool    | 64.53 | 88.73 |
|        stool        | 36.72 |  44.4 |
|        barrel       | 30.76 | 73.48 |
|        basket       | 29.61 | 34.11 |
|      waterfall      | 46.62 | 56.25 |
|         tent        | 95.81 | 98.44 |
|         bag         |  6.78 |  7.62 |
|       minibike      |  53.5 | 59.31 |
|        cradle       | 76.34 | 94.74 |
|         oven        | 21.75 |  62.2 |
|         ball        | 37.24 | 67.72 |
|         food        | 34.48 | 38.23 |
|         step        | 13.93 | 16.62 |
|         tank        | 46.02 | 54.78 |
|      trade name     | 28.34 | 37.21 |
|      microwave      |  39.5 | 43.64 |
|         pot         | 43.53 | 50.28 |
|        animal       | 50.11 |  54.4 |
|       bicycle       | 51.94 | 66.66 |
|         lake        | 48.92 | 63.18 |
|      dishwasher     | 63.78 |  71.5 |
|        screen       | 66.15 | 79.32 |
|       blanket       | 14.69 |  16.9 |
|      sculpture      | 52.57 | 59.01 |
|         hood        | 55.62 | 59.31 |
|        sconce       |  43.3 | 54.03 |
|         vase        | 31.95 | 45.66 |
|    traffic light    | 32.41 | 49.44 |
|         tray        | 10.18 | 18.39 |
|        ashcan       | 40.07 | 51.31 |
|         fan         | 61.88 | 76.72 |
|         pier        | 54.76 | 83.22 |
|      crt screen     |  4.3  | 12.77 |
|        plate        | 43.19 |  54.9 |
|       monitor       |  2.81 |  3.01 |
|    bulletin board   |  49.4 | 58.52 |
|        shower       |  1.91 |  2.97 |
|       radiator      |  54.7 |  59.9 |
|        glass        | 14.71 | 16.37 |
|        clock        | 25.99 | 32.66 |
|         flag        | 32.88 | 34.92 |
+---------------------+-------+-------+
09/15 20:57:32 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.0200  mIoU: 46.3800  mAcc: 57.4800  data_time: 0.0016  time: 0.1779
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/15 20:57:35 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 200424765
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 200424765
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:57:35 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/jpeg_compression'

09/15 20:57:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:57:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:57:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:57:39 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 20:58:28 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:32:06  time: 0.4671  data_time: 0.0014  memory: 19905  
09/15 20:58:51 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:49  time: 0.6173  data_time: 0.0015  memory: 19901  
09/15 20:59:04 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:24  time: 0.2344  data_time: 0.0015  memory: 19874  
09/15 20:59:22 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:29  time: 0.3673  data_time: 0.0014  memory: 19902  
09/15 20:59:38 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:55  time: 0.1736  data_time: 0.0014  memory: 19898  
09/15 20:59:53 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:40  time: 0.0685  data_time: 0.0015  memory: 19898  
09/15 21:00:10 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:49  time: 0.1630  data_time: 0.0014  memory: 19898  
09/15 21:00:23 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:10:57  time: 0.2422  data_time: 0.0013  memory: 19899  
09/15 21:00:30 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:47  time: 0.1399  data_time: 0.0013  memory: 19872  
09/15 21:00:35 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:48  time: 0.0646  data_time: 0.0013  memory: 19838  
09/15 21:00:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:01  time: 0.2112  data_time: 0.0014  memory: 19896  
09/15 21:00:48 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:21  time: 0.2179  data_time: 0.0015  memory: 19898  
09/15 21:00:58 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:53  time: 0.2893  data_time: 0.0013  memory: 19907  
09/15 21:01:10 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:31  time: 0.0693  data_time: 0.0015  memory: 19906  
09/15 21:01:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:12  time: 0.5256  data_time: 0.0014  memory: 19913  
09/15 21:01:28 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:43  time: 0.0668  data_time: 0.0015  memory: 19876  
09/15 21:01:31 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:14  time: 0.0688  data_time: 0.0015  memory: 697  
09/15 21:01:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:51  time: 0.1696  data_time: 0.0014  memory: 19864  
09/15 21:01:49 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:35  time: 0.2758  data_time: 0.0018  memory: 19894  
09/15 21:01:56 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:16  time: 0.0652  data_time: 0.0014  memory: 19895  
09/15 21:02:06 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:01  time: 0.3850  data_time: 0.0014  memory: 19913  
09/15 21:02:14 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:45  time: 0.0653  data_time: 0.0014  memory: 19878  
09/15 21:02:20 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:27  time: 0.1416  data_time: 0.0014  memory: 19852  
09/15 21:02:23 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:09  time: 0.0655  data_time: 0.0014  memory: 1894  
09/15 21:02:30 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:54  time: 0.1456  data_time: 0.0014  memory: 19881  
09/15 21:02:33 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:38  time: 0.0657  data_time: 0.0014  memory: 698  
09/15 21:02:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:23  time: 0.0684  data_time: 0.0013  memory: 19833  
09/15 21:02:46 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:11  time: 0.2347  data_time: 0.0014  memory: 19886  
09/15 21:02:52 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:58  time: 0.1685  data_time: 0.0014  memory: 19864  
09/15 21:02:55 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:45  time: 0.0653  data_time: 0.0014  memory: 697  
09/15 21:03:00 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:33  time: 0.0659  data_time: 0.0014  memory: 19890  
09/15 21:03:03 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:20  time: 0.0652  data_time: 0.0015  memory: 688  
09/15 21:03:10 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:10  time: 0.0628  data_time: 0.0013  memory: 19895  
09/15 21:03:17 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:59  time: 0.0651  data_time: 0.0015  memory: 19868  
09/15 21:03:23 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:49  time: 0.0659  data_time: 0.0013  memory: 19886  
09/15 21:03:27 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:38  time: 0.0669  data_time: 0.0016  memory: 19838  
09/15 21:03:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:28  time: 0.0674  data_time: 0.0015  memory: 646  
09/15 21:03:35 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0666  data_time: 0.0014  memory: 19907  
09/15 21:03:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0645  data_time: 0.0013  memory: 19848  
09/15 21:03:47 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0603  data_time: 0.0012  memory: 19909  
09/15 21:03:47 - mmengine - INFO - per class results:
09/15 21:03:47 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.86 | 88.84 |
|       building      | 81.17 | 92.61 |
|         sky         | 93.48 | 97.43 |
|        floor        | 78.87 | 91.45 |
|         tree        | 71.83 | 85.73 |
|       ceiling       | 82.95 | 91.23 |
|         road        |  82.1 |  91.2 |
|         bed         | 87.23 | 94.28 |
|      windowpane     | 59.36 | 75.93 |
|        grass        | 68.21 | 82.97 |
|       cabinet       | 56.34 | 68.38 |
|       sidewalk      | 62.56 | 74.88 |
|        person       | 77.44 | 90.25 |
|        earth        | 35.49 | 51.62 |
|         door        | 43.75 | 56.19 |
|        table        | 57.76 | 73.43 |
|       mountain      | 56.26 | 69.67 |
|        plant        | 49.02 | 58.35 |
|       curtain       | 69.31 | 78.49 |
|        chair        | 53.59 | 64.53 |
|         car         | 81.99 | 90.83 |
|        water        | 52.78 | 69.94 |
|       painting      | 70.06 |  81.4 |
|         sofa        | 64.73 | 84.23 |
|        shelf        | 40.48 | 57.77 |
|        house        | 52.09 | 62.21 |
|         sea         | 52.12 | 69.88 |
|        mirror       | 61.68 | 68.41 |
|         rug         | 53.97 | 61.46 |
|        field        | 35.99 | 47.15 |
|       armchair      |  40.9 |  56.6 |
|         seat        |  59.9 | 79.94 |
|        fence        | 40.93 | 57.17 |
|         desk        | 51.05 | 70.14 |
|         rock        | 43.47 |  68.2 |
|       wardrobe      | 44.41 | 63.72 |
|         lamp        | 59.52 | 70.12 |
|       bathtub       |  76.6 | 83.59 |
|       railing       | 28.76 | 38.29 |
|       cushion       | 53.98 | 64.56 |
|         base        |  23.5 |  32.5 |
|         box         | 22.33 | 28.09 |
|        column       | 43.28 | 51.59 |
|      signboard      | 34.68 | 45.17 |
|   chest of drawers  | 40.67 | 56.48 |
|       counter       | 26.24 | 36.54 |
|         sand        | 48.63 | 69.25 |
|         sink        | 66.31 | 76.08 |
|      skyscraper     | 49.44 | 57.26 |
|      fireplace      | 71.13 | 82.36 |
|     refrigerator    | 73.93 | 82.17 |
|      grandstand     | 51.89 | 72.12 |
|         path        | 21.58 | 33.82 |
|        stairs       | 31.15 | 38.56 |
|        runway       | 71.33 | 94.57 |
|         case        | 51.91 | 62.59 |
|      pool table     | 87.74 |  92.9 |
|        pillow       | 55.91 | 63.83 |
|     screen door     | 66.63 | 69.31 |
|       stairway      | 34.61 |  43.8 |
|        river        |  7.58 | 17.16 |
|        bridge       | 36.89 | 46.09 |
|       bookcase      | 36.56 | 55.62 |
|        blind        | 28.03 | 28.74 |
|     coffee table    | 55.38 | 79.05 |
|        toilet       | 81.53 | 88.61 |
|        flower       | 33.95 |  48.8 |
|         book        | 46.25 | 60.41 |
|         hill        | 11.33 | 20.56 |
|        bench        | 39.95 | 47.19 |
|      countertop     |  57.4 | 68.05 |
|        stove        | 74.97 | 83.18 |
|         palm        | 48.43 |  64.9 |
|    kitchen island   | 34.67 | 56.44 |
|       computer      | 61.96 | 69.57 |
|     swivel chair    | 38.85 | 50.74 |
|         boat        | 45.99 | 65.55 |
|         bar         | 35.22 | 44.33 |
|    arcade machine   | 65.15 | 68.19 |
|        hovel        | 33.81 | 37.78 |
|         bus         | 84.42 | 92.81 |
|        towel        | 61.62 | 69.21 |
|        light        | 48.63 | 55.24 |
|        truck        | 36.48 | 46.15 |
|        tower        | 23.32 | 36.31 |
|      chandelier     | 63.59 | 79.83 |
|        awning       | 23.51 | 27.15 |
|     streetlight     | 21.04 | 26.48 |
|        booth        | 49.97 | 54.13 |
| television receiver | 66.98 | 78.31 |
|       airplane      | 55.16 | 65.41 |
|      dirt track     | 15.09 | 24.64 |
|       apparel       | 34.65 | 45.01 |
|         pole        | 20.79 | 29.76 |
|         land        |  2.18 |  3.31 |
|      bannister      |  9.44 | 12.36 |
|      escalator      | 36.46 | 56.05 |
|       ottoman       | 33.65 | 47.96 |
|        bottle       | 34.92 | 58.79 |
|        buffet       | 30.49 | 34.94 |
|        poster       | 29.75 | 34.33 |
|        stage        | 14.29 | 19.08 |
|         van         | 43.17 | 58.05 |
|         ship        | 73.03 | 91.17 |
|       fountain      | 19.66 | 21.32 |
|    conveyer belt    | 78.24 | 87.76 |
|        canopy       | 13.33 | 16.92 |
|        washer       | 66.62 | 69.87 |
|      plaything      |  26.0 | 36.92 |
|    swimming pool    | 58.98 | 74.84 |
|        stool        | 37.37 | 44.83 |
|        barrel       | 44.57 | 72.23 |
|        basket       | 24.19 | 27.71 |
|      waterfall      |  60.2 | 74.99 |
|         tent        |  94.5 | 98.69 |
|         bag         | 13.64 | 16.27 |
|       minibike      | 64.96 | 76.22 |
|        cradle       | 76.02 | 94.83 |
|         oven        | 20.39 | 53.38 |
|         ball        | 47.21 | 63.95 |
|         food        | 38.97 | 46.23 |
|         step        |  7.31 |  7.94 |
|         tank        |  51.5 | 56.66 |
|      trade name     | 28.94 | 35.51 |
|      microwave      |  41.2 | 45.76 |
|         pot         | 39.75 | 45.12 |
|        animal       | 51.89 | 54.47 |
|       bicycle       | 51.27 |  69.4 |
|         lake        | 47.85 | 59.39 |
|      dishwasher     | 62.18 | 70.33 |
|        screen       | 65.27 | 80.16 |
|       blanket       |  13.5 | 15.07 |
|      sculpture      | 50.23 |  63.5 |
|         hood        | 53.46 | 55.97 |
|        sconce       | 40.41 | 50.07 |
|         vase        | 28.96 | 44.44 |
|    traffic light    | 30.03 | 46.84 |
|         tray        | 13.02 | 24.07 |
|        ashcan       | 38.88 |  50.2 |
|         fan         | 56.88 | 71.83 |
|         pier        | 44.92 | 85.45 |
|      crt screen     |  7.41 | 19.74 |
|        plate        | 47.54 | 59.62 |
|       monitor       |  4.86 |  5.56 |
|    bulletin board   | 39.09 | 44.02 |
|        shower       |  0.95 |  2.3  |
|       radiator      | 51.09 | 55.93 |
|        glass        | 12.59 | 13.67 |
|        clock        | 28.51 |  33.5 |
|         flag        | 30.25 | 32.51 |
+---------------------+-------+-------+
09/15 21:03:47 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.7100  mIoU: 46.6100  mAcc: 57.5700  data_time: 0.0016  time: 0.1837
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
09/15 21:03:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 588498210
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 588498210
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:03:50 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/elastic_transform'

09/15 21:03:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:03:53 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:03:54 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 21:03:54 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 21:05:29 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:01:45  time: 1.4410  data_time: 0.0016  memory: 19905  
09/15 21:06:38 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:51:55  time: 1.5872  data_time: 0.0016  memory: 19901  
09/15 21:07:37 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:45:46  time: 1.1818  data_time: 0.0016  memory: 19874  
09/15 21:08:42 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:43:13  time: 1.2957  data_time: 0.0037  memory: 19902  
09/15 21:09:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:40:40  time: 1.0753  data_time: 0.0016  memory: 19898  
09/15 21:10:42 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:38:29  time: 0.9960  data_time: 0.0016  memory: 19898  
09/15 21:11:43 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:36:50  time: 1.0269  data_time: 0.0015  memory: 19898  
09/15 21:12:42 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:35:12  time: 1.1660  data_time: 0.0015  memory: 19899  
09/15 21:13:29 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:33:01  time: 0.9669  data_time: 0.0015  memory: 19872  
09/15 21:14:20 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:31:17  time: 0.9493  data_time: 0.0015  memory: 19838  
09/15 21:15:14 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:29:52  time: 1.1570  data_time: 0.0016  memory: 19896  
09/15 21:16:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:28:25  time: 1.1490  data_time: 0.0016  memory: 19898  
09/15 21:17:00 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:27:11  time: 1.1978  data_time: 0.0014  memory: 19907  
09/15 21:17:58 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:26:07  time: 1.0148  data_time: 0.0016  memory: 19906  
09/15 21:18:57 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:25:04  time: 1.4072  data_time: 0.0015  memory: 19913  
09/15 21:19:45 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:23:45  time: 0.9815  data_time: 0.0017  memory: 19876  
09/15 21:20:34 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:22:33  time: 0.9967  data_time: 0.0016  memory: 697  
09/15 21:21:22 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:21:20  time: 0.9709  data_time: 0.0015  memory: 19864  
09/15 21:22:20 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:20:21  time: 1.1837  data_time: 0.0015  memory: 19894  
09/15 21:23:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:19:18  time: 0.9786  data_time: 0.0015  memory: 19895  
09/15 21:24:10 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:20  time: 1.3322  data_time: 0.0015  memory: 19913  
09/15 21:25:04 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:19  time: 0.9664  data_time: 0.0015  memory: 19878  
09/15 21:25:55 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:16  time: 1.0648  data_time: 0.0015  memory: 19852  
09/15 21:26:46 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:14  time: 0.9634  data_time: 0.0015  memory: 1894  
09/15 21:27:38 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:14  time: 1.0482  data_time: 0.0015  memory: 19881  
09/15 21:28:24 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:11  time: 0.9854  data_time: 0.0014  memory: 698  
09/15 21:29:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:11  time: 0.9189  data_time: 0.0014  memory: 19833  
09/15 21:30:08 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:14  time: 1.2030  data_time: 0.0014  memory: 19886  
09/15 21:30:57 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:15  time: 1.0925  data_time: 0.0015  memory: 19864  
09/15 21:31:43 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:16  time: 0.8736  data_time: 0.0015  memory: 697  
09/15 21:32:33 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:18  time: 0.9649  data_time: 0.0015  memory: 19890  
09/15 21:33:19 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:21  time: 0.9327  data_time: 0.0016  memory: 688  
09/15 21:34:09 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:24  time: 0.8603  data_time: 0.0014  memory: 19895  
09/15 21:34:59 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:29  time: 0.9450  data_time: 0.0016  memory: 19868  
09/15 21:35:50 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:33  time: 0.9366  data_time: 0.0014  memory: 19886  
09/15 21:36:36 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:37  time: 0.9683  data_time: 0.0016  memory: 19838  
09/15 21:37:24 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:42  time: 0.9675  data_time: 0.0016  memory: 646  
09/15 21:38:11 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:48  time: 0.9781  data_time: 0.0015  memory: 19907  
09/15 21:39:02 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:54  time: 0.9258  data_time: 0.0015  memory: 19848  
09/15 21:39:50 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8605  data_time: 0.0014  memory: 19909  
09/15 21:39:50 - mmengine - INFO - per class results:
09/15 21:39:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 63.62 | 79.22 |
|       building      | 74.04 | 87.66 |
|         sky         | 84.07 | 91.58 |
|        floor        | 68.21 | 82.09 |
|         tree        |  62.3 |  80.0 |
|       ceiling       | 70.71 | 84.64 |
|         road        | 76.61 | 86.73 |
|         bed         | 76.21 | 86.78 |
|      windowpane     | 47.07 | 66.08 |
|        grass        | 61.29 | 78.16 |
|       cabinet       | 49.45 | 63.85 |
|       sidewalk      | 52.41 | 67.28 |
|        person       | 59.55 | 77.31 |
|        earth        | 32.14 | 45.25 |
|         door        | 35.69 |  47.4 |
|        table        | 43.34 | 61.12 |
|       mountain      | 49.19 | 64.15 |
|        plant        | 42.35 | 54.73 |
|       curtain       | 50.76 | 67.42 |
|        chair        | 39.26 | 55.15 |
|         car         | 62.27 | 77.72 |
|        water        |  54.1 | 71.84 |
|       painting      |  46.7 | 64.04 |
|         sofa        | 51.24 |  71.4 |
|        shelf        | 34.87 | 51.24 |
|        house        | 39.72 |  47.7 |
|         sea         | 51.39 | 65.35 |
|        mirror       | 53.64 | 65.78 |
|         rug         | 51.21 | 68.04 |
|        field        | 29.69 | 42.97 |
|       armchair      | 31.57 | 48.15 |
|         seat        | 55.25 | 78.01 |
|        fence        | 33.93 | 48.64 |
|         desk        |  40.5 | 59.26 |
|         rock        | 29.05 | 50.98 |
|       wardrobe      | 41.96 | 59.76 |
|         lamp        |  30.5 | 48.55 |
|       bathtub       | 64.19 | 74.03 |
|       railing       | 23.37 | 38.19 |
|       cushion       | 40.24 | 54.15 |
|         base        | 30.62 | 42.69 |
|         box         | 19.82 | 26.48 |
|        column       | 27.99 |  39.0 |
|      signboard      | 23.61 | 36.12 |
|   chest of drawers  | 31.66 | 46.02 |
|       counter       | 22.42 | 31.42 |
|         sand        | 43.55 | 68.34 |
|         sink        | 47.81 | 61.78 |
|      skyscraper     | 36.67 | 44.18 |
|      fireplace      | 59.59 | 78.56 |
|     refrigerator    | 62.08 |  71.6 |
|      grandstand     | 45.09 | 70.23 |
|         path        | 15.64 | 25.02 |
|        stairs       | 24.03 | 29.63 |
|        runway       | 66.92 | 89.24 |
|         case        | 50.93 | 65.53 |
|      pool table     | 71.69 | 84.45 |
|        pillow       | 39.76 | 51.95 |
|     screen door     | 61.33 | 68.88 |
|       stairway      | 24.18 |  31.2 |
|        river        |  7.42 | 13.43 |
|        bridge       | 44.51 | 53.96 |
|       bookcase      | 34.33 | 53.96 |
|        blind        | 34.98 | 41.03 |
|     coffee table    | 40.82 | 69.28 |
|        toilet       | 56.35 | 71.89 |
|        flower       | 25.84 | 40.72 |
|         book        | 33.23 | 48.04 |
|         hill        |  9.24 | 17.18 |
|        bench        | 33.57 | 43.03 |
|      countertop     | 42.75 | 59.27 |
|        stove        | 63.92 | 76.28 |
|         palm        | 38.78 | 57.38 |
|    kitchen island   | 31.01 | 51.32 |
|       computer      | 51.61 | 64.17 |
|     swivel chair    | 29.28 | 43.67 |
|         boat        | 48.36 | 71.64 |
|         bar         | 23.53 | 30.29 |
|    arcade machine   | 34.08 | 39.79 |
|        hovel        | 56.38 |  66.8 |
|         bus         | 68.97 |  83.8 |
|        towel        | 40.72 | 59.66 |
|        light        | 16.31 | 25.73 |
|        truck        | 28.74 | 42.96 |
|        tower        | 19.44 | 29.45 |
|      chandelier     | 42.74 | 62.79 |
|        awning       |  16.5 | 21.27 |
|     streetlight     | 10.24 | 16.67 |
|        booth        | 46.51 | 54.23 |
| television receiver | 43.56 | 58.53 |
|       airplane      | 36.15 | 49.24 |
|      dirt track     | 19.06 | 22.89 |
|       apparel       | 30.65 | 45.75 |
|         pole        |  8.44 |  13.6 |
|         land        |  2.08 |  3.22 |
|      bannister      |  2.48 |  3.59 |
|      escalator      | 46.76 | 65.65 |
|       ottoman       | 37.01 | 51.04 |
|        bottle       | 26.94 | 53.14 |
|        buffet       | 34.69 | 39.27 |
|        poster       | 23.82 | 33.05 |
|        stage        | 11.89 |  16.4 |
|         van         | 35.73 | 50.19 |
|         ship        | 41.33 | 47.31 |
|       fountain      | 20.12 | 21.08 |
|    conveyer belt    | 75.45 | 86.65 |
|        canopy       | 11.69 | 16.82 |
|        washer       | 57.11 | 65.92 |
|      plaything      | 17.13 | 28.13 |
|    swimming pool    |  58.4 | 82.93 |
|        stool        | 21.57 | 30.04 |
|        barrel       | 23.57 | 68.38 |
|        basket       | 23.58 | 30.84 |
|      waterfall      | 51.27 | 69.26 |
|         tent        | 81.35 | 90.83 |
|         bag         |  9.77 |  13.4 |
|       minibike      | 50.78 |  69.4 |
|        cradle       | 60.53 | 77.34 |
|         oven        | 22.37 | 51.88 |
|         ball        | 37.69 | 58.38 |
|         food        | 36.14 |  41.5 |
|         step        |  3.46 |  3.65 |
|         tank        | 44.19 | 53.53 |
|      trade name     | 19.91 | 26.62 |
|      microwave      | 43.16 | 49.87 |
|         pot         | 22.46 | 29.38 |
|        animal       | 44.96 | 48.92 |
|       bicycle       | 34.45 | 60.01 |
|         lake        | 29.49 | 60.66 |
|      dishwasher     | 45.36 | 56.16 |
|        screen       | 61.69 | 74.71 |
|       blanket       |  13.8 | 17.19 |
|      sculpture      | 39.98 | 65.51 |
|         hood        | 37.56 | 46.15 |
|        sconce       | 21.61 | 32.59 |
|         vase        | 15.19 | 31.71 |
|    traffic light    | 16.43 | 30.18 |
|         tray        |  7.35 |  13.3 |
|        ashcan       | 27.06 |  41.2 |
|         fan         | 25.05 | 40.52 |
|         pier        | 41.22 | 83.14 |
|      crt screen     |  8.18 | 22.39 |
|        plate        |  27.4 | 38.11 |
|       monitor       |  1.61 |  1.79 |
|    bulletin board   | 37.12 | 49.73 |
|        shower       |  0.55 |  1.17 |
|       radiator      | 35.82 | 45.69 |
|        glass        |  8.34 |  9.69 |
|        clock        | 20.68 | 29.65 |
|         flag        | 19.96 | 25.25 |
+---------------------+-------+-------+
09/15 21:39:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 74.4800  mIoU: 37.6800  mAcc: 50.8600  data_time: 0.0017  time: 1.0780
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/15 21:39:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1970482070
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1970482070
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:39:54 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/pixelate'

09/15 21:39:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:39:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:39:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 21:39:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 21:40:47 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:31:56  time: 0.4558  data_time: 0.0015  memory: 19905  
09/15 21:41:09 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:22:38  time: 0.6099  data_time: 0.0016  memory: 19901  
09/15 21:41:22 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:13  time: 0.2269  data_time: 0.0015  memory: 19874  
09/15 21:41:40 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:17  time: 0.3617  data_time: 0.0014  memory: 19902  
09/15 21:41:55 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:43  time: 0.1654  data_time: 0.0014  memory: 19898  
09/15 21:42:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:29  time: 0.0625  data_time: 0.0015  memory: 19898  
09/15 21:42:26 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:39  time: 0.1554  data_time: 0.0014  memory: 19898  
09/15 21:42:40 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:10:47  time: 0.2371  data_time: 0.0024  memory: 19899  
09/15 21:42:46 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:38  time: 0.1332  data_time: 0.0014  memory: 19872  
09/15 21:42:51 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:39  time: 0.0578  data_time: 0.0014  memory: 19838  
09/15 21:42:57 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:52  time: 0.2037  data_time: 0.0015  memory: 19896  
09/15 21:43:03 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:11  time: 0.2099  data_time: 0.0015  memory: 19898  
09/15 21:43:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:44  time: 0.2836  data_time: 0.0013  memory: 19907  
09/15 21:43:24 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:23  time: 0.0621  data_time: 0.0015  memory: 19906  
09/15 21:43:36 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:04  time: 0.5173  data_time: 0.0014  memory: 19913  
09/15 21:43:41 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:35  time: 0.0593  data_time: 0.0015  memory: 19876  
09/15 21:43:44 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:06  time: 0.0579  data_time: 0.0016  memory: 697  
09/15 21:43:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:43  time: 0.1604  data_time: 0.0013  memory: 19864  
09/15 21:44:01 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:28  time: 0.2677  data_time: 0.0015  memory: 19894  
09/15 21:44:07 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:09  time: 0.0579  data_time: 0.0014  memory: 19895  
09/15 21:44:17 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:03:54  time: 0.3780  data_time: 0.0014  memory: 19913  
09/15 21:44:25 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:38  time: 0.0573  data_time: 0.0014  memory: 19878  
09/15 21:44:30 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:21  time: 0.1309  data_time: 0.0014  memory: 19852  
09/15 21:44:33 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:03  time: 0.0566  data_time: 0.0013  memory: 1894  
09/15 21:44:39 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:48  time: 0.1409  data_time: 0.0014  memory: 19881  
09/15 21:44:42 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:32  time: 0.0567  data_time: 0.0014  memory: 698  
09/15 21:44:46 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:18  time: 0.0584  data_time: 0.0013  memory: 19833  
09/15 21:44:55 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:07  time: 0.2264  data_time: 0.0013  memory: 19886  
09/15 21:44:59 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:54  time: 0.1596  data_time: 0.0013  memory: 19864  
09/15 21:45:02 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:41  time: 0.0566  data_time: 0.0013  memory: 697  
09/15 21:45:07 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:29  time: 0.0572  data_time: 0.0014  memory: 19890  
09/15 21:45:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:17  time: 0.0564  data_time: 0.0014  memory: 688  
09/15 21:45:16 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:07  time: 0.0547  data_time: 0.0013  memory: 19895  
09/15 21:45:23 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:57  time: 0.0572  data_time: 0.0015  memory: 19868  
09/15 21:45:28 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:47  time: 0.0577  data_time: 0.0013  memory: 19886  
09/15 21:45:32 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:37  time: 0.0578  data_time: 0.0015  memory: 19838  
09/15 21:45:35 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:27  time: 0.0577  data_time: 0.0015  memory: 646  
09/15 21:45:39 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:17  time: 0.0582  data_time: 0.0014  memory: 19907  
09/15 21:45:44 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:08  time: 0.0559  data_time: 0.0014  memory: 19848  
09/15 21:45:50 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0517  data_time: 0.0012  memory: 19909  
09/15 21:45:50 - mmengine - INFO - per class results:
09/15 21:45:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.58 | 89.06 |
|       building      | 80.68 | 93.15 |
|         sky         | 94.04 |  97.3 |
|        floor        | 79.55 | 91.04 |
|         tree        |  71.8 | 86.76 |
|       ceiling       | 83.89 | 92.26 |
|         road        | 84.02 | 91.85 |
|         bed         | 87.73 | 94.67 |
|      windowpane     | 59.64 | 76.44 |
|        grass        |  67.1 | 82.82 |
|       cabinet       | 58.08 | 70.35 |
|       sidewalk      | 65.02 | 77.23 |
|        person       | 77.96 | 88.42 |
|        earth        | 37.22 | 51.83 |
|         door        |  43.7 | 56.54 |
|        table        | 56.55 | 73.12 |
|       mountain      | 56.97 | 67.59 |
|        plant        | 48.91 | 56.73 |
|       curtain       | 70.78 | 81.14 |
|        chair        | 55.38 | 67.71 |
|         car         | 80.95 | 88.34 |
|        water        | 57.17 | 78.12 |
|       painting      | 71.31 | 84.25 |
|         sofa        | 64.72 | 87.69 |
|        shelf        | 42.42 | 59.19 |
|        house        | 41.17 | 45.86 |
|         sea         | 53.38 | 68.62 |
|        mirror       | 60.61 | 68.87 |
|         rug         | 59.14 | 68.94 |
|        field        | 31.12 | 45.53 |
|       armchair      | 38.11 | 49.36 |
|         seat        | 58.71 | 77.84 |
|        fence        | 39.78 | 56.63 |
|         desk        | 50.71 | 64.72 |
|         rock        | 40.91 | 59.59 |
|       wardrobe      | 45.11 | 62.72 |
|         lamp        | 60.66 | 72.38 |
|       bathtub       | 77.44 | 83.12 |
|       railing       | 29.45 | 38.25 |
|       cushion       | 53.02 | 63.64 |
|         base        |  19.7 | 26.26 |
|         box         | 22.68 |  30.4 |
|        column       | 43.63 | 52.84 |
|      signboard      | 34.41 | 44.99 |
|   chest of drawers  | 38.58 | 58.46 |
|       counter       | 27.44 | 39.69 |
|         sand        | 47.37 | 69.38 |
|         sink        | 65.92 | 75.14 |
|      skyscraper     | 52.08 | 58.38 |
|      fireplace      | 75.47 | 84.44 |
|     refrigerator    | 75.46 | 82.39 |
|      grandstand     | 43.82 | 75.88 |
|         path        | 26.98 |  41.4 |
|        stairs       | 31.32 | 40.65 |
|        runway       | 72.85 | 95.22 |
|         case        | 53.19 | 68.66 |
|      pool table     |  91.1 | 94.94 |
|        pillow       | 54.01 | 63.63 |
|     screen door     | 70.67 | 76.57 |
|       stairway      | 31.42 |  38.5 |
|        river        |  8.74 | 15.49 |
|        bridge       |  61.2 | 73.36 |
|       bookcase      | 40.41 | 57.62 |
|        blind        | 41.84 | 45.17 |
|     coffee table    | 56.52 | 81.01 |
|        toilet       | 82.02 | 88.82 |
|        flower       | 34.09 | 48.55 |
|         book        | 44.79 |  63.5 |
|         hill        | 12.49 | 20.32 |
|        bench        | 36.77 |  48.3 |
|      countertop     | 55.79 | 67.77 |
|        stove        |  72.0 | 78.71 |
|         palm        | 47.74 | 62.36 |
|    kitchen island   | 41.64 | 66.15 |
|       computer      | 60.35 | 68.75 |
|     swivel chair    | 36.17 | 50.21 |
|         boat        |  38.7 | 47.42 |
|         bar         | 42.18 | 54.14 |
|    arcade machine   | 26.06 | 26.75 |
|        hovel        | 40.51 | 45.14 |
|         bus         | 86.45 | 93.91 |
|        towel        | 61.87 | 71.35 |
|        light        | 51.56 | 59.55 |
|        truck        | 34.36 | 48.39 |
|        tower        | 20.48 | 31.44 |
|      chandelier     | 62.78 |  79.4 |
|        awning       | 22.21 |  24.9 |
|     streetlight     |  22.9 | 30.36 |
|        booth        | 47.57 | 50.38 |
| television receiver | 65.94 | 78.17 |
|       airplane      | 55.05 | 61.74 |
|      dirt track     | 22.99 | 28.45 |
|       apparel       | 37.43 | 48.23 |
|         pole        | 22.65 | 34.09 |
|         land        |  2.73 |  4.17 |
|      bannister      |  7.05 |  8.8  |
|      escalator      | 35.48 | 57.65 |
|       ottoman       | 38.96 | 54.09 |
|        bottle       | 30.99 | 50.94 |
|        buffet       | 43.06 | 49.38 |
|        poster       | 27.06 |  30.7 |
|        stage        | 18.13 | 22.83 |
|         van         | 38.11 | 60.79 |
|         ship        | 20.45 | 30.56 |
|       fountain      | 19.76 | 21.32 |
|    conveyer belt    | 74.51 | 84.43 |
|        canopy       | 13.96 |  15.8 |
|        washer       | 64.99 | 67.07 |
|      plaything      | 25.38 | 33.05 |
|    swimming pool    | 64.53 | 88.73 |
|        stool        | 36.72 |  44.4 |
|        barrel       | 30.76 | 73.48 |
|        basket       | 29.61 | 34.11 |
|      waterfall      | 46.62 | 56.25 |
|         tent        | 95.81 | 98.44 |
|         bag         |  6.78 |  7.62 |
|       minibike      |  53.5 | 59.31 |
|        cradle       | 76.34 | 94.74 |
|         oven        | 21.75 |  62.2 |
|         ball        | 37.24 | 67.72 |
|         food        | 34.48 | 38.23 |
|         step        | 13.93 | 16.62 |
|         tank        | 46.02 | 54.78 |
|      trade name     | 28.34 | 37.21 |
|      microwave      |  39.5 | 43.64 |
|         pot         | 43.53 | 50.28 |
|        animal       | 50.11 |  54.4 |
|       bicycle       | 51.94 | 66.66 |
|         lake        | 48.92 | 63.18 |
|      dishwasher     | 63.78 |  71.5 |
|        screen       | 66.15 | 79.32 |
|       blanket       | 14.69 |  16.9 |
|      sculpture      | 52.57 | 59.01 |
|         hood        | 55.62 | 59.31 |
|        sconce       |  43.3 | 54.03 |
|         vase        | 31.95 | 45.66 |
|    traffic light    | 32.41 | 49.44 |
|         tray        | 10.18 | 18.39 |
|        ashcan       | 40.07 | 51.31 |
|         fan         | 61.88 | 76.72 |
|         pier        | 54.76 | 83.22 |
|      crt screen     |  4.3  | 12.77 |
|        plate        | 43.19 |  54.9 |
|       monitor       |  2.81 |  3.01 |
|    bulletin board   |  49.4 | 58.52 |
|        shower       |  1.91 |  2.97 |
|       radiator      |  54.7 |  59.9 |
|        glass        | 14.71 | 16.37 |
|        clock        | 25.99 | 32.66 |
|         flag        | 32.88 | 34.92 |
+---------------------+-------+-------+
09/15 21:45:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.0200  mIoU: 46.3800  mAcc: 57.4800  data_time: 0.0016  time: 0.1758
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/15 21:45:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 371421455
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 371421455
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:45:53 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b4_20220624-d588d980.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            8,
            27,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_512x512/jpeg_compression'

09/15 21:45:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:45:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:45:56 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 21:45:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b4_512x512_160k_ade20k_20210728_183055-7f509d7d.pth
09/15 21:46:49 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:13  time: 0.4603  data_time: 0.0015  memory: 19905  
09/15 21:47:11 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:18  time: 0.6109  data_time: 0.0016  memory: 19901  
09/15 21:47:24 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:41  time: 0.2308  data_time: 0.0015  memory: 19874  
09/15 21:47:42 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:40  time: 0.3664  data_time: 0.0015  memory: 19902  
09/15 21:47:58 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:02  time: 0.1707  data_time: 0.0014  memory: 19898  
09/15 21:48:13 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:45  time: 0.0662  data_time: 0.0015  memory: 19898  
09/15 21:48:29 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:53  time: 0.1611  data_time: 0.0014  memory: 19898  
09/15 21:48:43 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:11:00  time: 0.2387  data_time: 0.0013  memory: 19899  
09/15 21:48:49 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:50  time: 0.1378  data_time: 0.0014  memory: 19872  
09/15 21:48:54 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:50  time: 0.0626  data_time: 0.0013  memory: 19838  
09/15 21:49:01 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:02  time: 0.2083  data_time: 0.0015  memory: 19896  
09/15 21:49:07 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:21  time: 0.2123  data_time: 0.0015  memory: 19898  
09/15 21:49:17 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:53  time: 0.2869  data_time: 0.0013  memory: 19907  
09/15 21:49:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:31  time: 0.0660  data_time: 0.0015  memory: 19906  
09/15 21:49:41 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:12  time: 0.5214  data_time: 0.0014  memory: 19913  
09/15 21:49:46 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:42  time: 0.0652  data_time: 0.0015  memory: 19876  
09/15 21:49:49 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:13  time: 0.0656  data_time: 0.0016  memory: 697  
09/15 21:49:55 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:50  time: 0.1645  data_time: 0.0013  memory: 19864  
09/15 21:50:06 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:34  time: 0.2723  data_time: 0.0015  memory: 19894  
09/15 21:50:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:15  time: 0.0614  data_time: 0.0014  memory: 19895  
09/15 21:50:23 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:00  time: 0.3811  data_time: 0.0014  memory: 19913  
09/15 21:50:32 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:44  time: 0.0626  data_time: 0.0015  memory: 19878  
09/15 21:50:37 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:26  time: 0.1373  data_time: 0.0014  memory: 19852  
09/15 21:50:40 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:08  time: 0.0622  data_time: 0.0014  memory: 1894  
09/15 21:50:46 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:53  time: 0.1435  data_time: 0.0014  memory: 19881  
09/15 21:50:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:37  time: 0.0629  data_time: 0.0014  memory: 698  
09/15 21:50:54 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:22  time: 0.0641  data_time: 0.0014  memory: 19833  
09/15 21:51:03 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:10  time: 0.2308  data_time: 0.0014  memory: 19886  
09/15 21:51:08 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:57  time: 0.1667  data_time: 0.0014  memory: 19864  
09/15 21:51:11 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:44  time: 0.0630  data_time: 0.0013  memory: 697  
09/15 21:51:16 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:32  time: 0.0647  data_time: 0.0014  memory: 19890  
09/15 21:51:19 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:20  time: 0.0621  data_time: 0.0015  memory: 688  
09/15 21:51:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:09  time: 0.0603  data_time: 0.0013  memory: 19895  
09/15 21:51:33 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:59  time: 0.0637  data_time: 0.0015  memory: 19868  
09/15 21:51:38 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:48  time: 0.0648  data_time: 0.0013  memory: 19886  
09/15 21:51:43 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:38  time: 0.0646  data_time: 0.0016  memory: 19838  
09/15 21:51:46 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:28  time: 0.0695  data_time: 0.0019  memory: 646  
09/15 21:51:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0644  data_time: 0.0014  memory: 19907  
09/15 21:51:55 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0618  data_time: 0.0014  memory: 19848  
09/15 21:52:01 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0575  data_time: 0.0012  memory: 19909  
09/15 21:52:01 - mmengine - INFO - per class results:
09/15 21:52:01 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.86 | 88.84 |
|       building      | 81.17 | 92.61 |
|         sky         | 93.48 | 97.43 |
|        floor        | 78.87 | 91.45 |
|         tree        | 71.83 | 85.73 |
|       ceiling       | 82.95 | 91.23 |
|         road        |  82.1 |  91.2 |
|         bed         | 87.23 | 94.28 |
|      windowpane     | 59.36 | 75.93 |
|        grass        | 68.21 | 82.97 |
|       cabinet       | 56.34 | 68.38 |
|       sidewalk      | 62.56 | 74.88 |
|        person       | 77.44 | 90.25 |
|        earth        | 35.49 | 51.62 |
|         door        | 43.75 | 56.19 |
|        table        | 57.76 | 73.43 |
|       mountain      | 56.26 | 69.67 |
|        plant        | 49.02 | 58.35 |
|       curtain       | 69.31 | 78.49 |
|        chair        | 53.59 | 64.53 |
|         car         | 81.99 | 90.83 |
|        water        | 52.78 | 69.94 |
|       painting      | 70.06 |  81.4 |
|         sofa        | 64.73 | 84.23 |
|        shelf        | 40.48 | 57.77 |
|        house        | 52.09 | 62.21 |
|         sea         | 52.12 | 69.88 |
|        mirror       | 61.68 | 68.41 |
|         rug         | 53.97 | 61.46 |
|        field        | 35.99 | 47.15 |
|       armchair      |  40.9 |  56.6 |
|         seat        |  59.9 | 79.94 |
|        fence        | 40.93 | 57.17 |
|         desk        | 51.05 | 70.14 |
|         rock        | 43.47 |  68.2 |
|       wardrobe      | 44.41 | 63.72 |
|         lamp        | 59.52 | 70.12 |
|       bathtub       |  76.6 | 83.59 |
|       railing       | 28.76 | 38.29 |
|       cushion       | 53.98 | 64.56 |
|         base        |  23.5 |  32.5 |
|         box         | 22.33 | 28.09 |
|        column       | 43.28 | 51.59 |
|      signboard      | 34.68 | 45.17 |
|   chest of drawers  | 40.67 | 56.48 |
|       counter       | 26.24 | 36.54 |
|         sand        | 48.63 | 69.25 |
|         sink        | 66.31 | 76.08 |
|      skyscraper     | 49.44 | 57.26 |
|      fireplace      | 71.13 | 82.36 |
|     refrigerator    | 73.93 | 82.17 |
|      grandstand     | 51.89 | 72.12 |
|         path        | 21.58 | 33.82 |
|        stairs       | 31.15 | 38.56 |
|        runway       | 71.33 | 94.57 |
|         case        | 51.91 | 62.59 |
|      pool table     | 87.74 |  92.9 |
|        pillow       | 55.91 | 63.83 |
|     screen door     | 66.63 | 69.31 |
|       stairway      | 34.61 |  43.8 |
|        river        |  7.58 | 17.16 |
|        bridge       | 36.89 | 46.09 |
|       bookcase      | 36.56 | 55.62 |
|        blind        | 28.03 | 28.74 |
|     coffee table    | 55.38 | 79.05 |
|        toilet       | 81.53 | 88.61 |
|        flower       | 33.95 |  48.8 |
|         book        | 46.25 | 60.41 |
|         hill        | 11.33 | 20.56 |
|        bench        | 39.95 | 47.19 |
|      countertop     |  57.4 | 68.05 |
|        stove        | 74.97 | 83.18 |
|         palm        | 48.43 |  64.9 |
|    kitchen island   | 34.67 | 56.44 |
|       computer      | 61.96 | 69.57 |
|     swivel chair    | 38.85 | 50.74 |
|         boat        | 45.99 | 65.55 |
|         bar         | 35.22 | 44.33 |
|    arcade machine   | 65.15 | 68.19 |
|        hovel        | 33.81 | 37.78 |
|         bus         | 84.42 | 92.81 |
|        towel        | 61.62 | 69.21 |
|        light        | 48.63 | 55.24 |
|        truck        | 36.48 | 46.15 |
|        tower        | 23.32 | 36.31 |
|      chandelier     | 63.59 | 79.83 |
|        awning       | 23.51 | 27.15 |
|     streetlight     | 21.04 | 26.48 |
|        booth        | 49.97 | 54.13 |
| television receiver | 66.98 | 78.31 |
|       airplane      | 55.16 | 65.41 |
|      dirt track     | 15.09 | 24.64 |
|       apparel       | 34.65 | 45.01 |
|         pole        | 20.79 | 29.76 |
|         land        |  2.18 |  3.31 |
|      bannister      |  9.44 | 12.36 |
|      escalator      | 36.46 | 56.05 |
|       ottoman       | 33.65 | 47.96 |
|        bottle       | 34.92 | 58.79 |
|        buffet       | 30.49 | 34.94 |
|        poster       | 29.75 | 34.33 |
|        stage        | 14.29 | 19.08 |
|         van         | 43.17 | 58.05 |
|         ship        | 73.03 | 91.17 |
|       fountain      | 19.66 | 21.32 |
|    conveyer belt    | 78.24 | 87.76 |
|        canopy       | 13.33 | 16.92 |
|        washer       | 66.62 | 69.87 |
|      plaything      |  26.0 | 36.92 |
|    swimming pool    | 58.98 | 74.84 |
|        stool        | 37.37 | 44.83 |
|        barrel       | 44.57 | 72.23 |
|        basket       | 24.19 | 27.71 |
|      waterfall      |  60.2 | 74.99 |
|         tent        |  94.5 | 98.69 |
|         bag         | 13.64 | 16.27 |
|       minibike      | 64.96 | 76.22 |
|        cradle       | 76.02 | 94.83 |
|         oven        | 20.39 | 53.38 |
|         ball        | 47.21 | 63.95 |
|         food        | 38.97 | 46.23 |
|         step        |  7.31 |  7.94 |
|         tank        |  51.5 | 56.66 |
|      trade name     | 28.94 | 35.51 |
|      microwave      |  41.2 | 45.76 |
|         pot         | 39.75 | 45.12 |
|        animal       | 51.89 | 54.47 |
|       bicycle       | 51.27 |  69.4 |
|         lake        | 47.85 | 59.39 |
|      dishwasher     | 62.18 | 70.33 |
|        screen       | 65.27 | 80.16 |
|       blanket       |  13.5 | 15.07 |
|      sculpture      | 50.23 |  63.5 |
|         hood        | 53.46 | 55.97 |
|        sconce       | 40.41 | 50.07 |
|         vase        | 28.96 | 44.44 |
|    traffic light    | 30.03 | 46.84 |
|         tray        | 13.02 | 24.07 |
|        ashcan       | 38.88 |  50.2 |
|         fan         | 56.88 | 71.83 |
|         pier        | 44.92 | 85.45 |
|      crt screen     |  7.41 | 19.74 |
|        plate        | 47.54 | 59.62 |
|       monitor       |  4.86 |  5.56 |
|    bulletin board   | 39.09 | 44.02 |
|        shower       |  0.95 |  2.3  |
|       radiator      | 51.09 | 55.93 |
|        glass        | 12.59 | 13.67 |
|        clock        | 28.51 |  33.5 |
|         flag        | 30.25 | 32.51 |
+---------------------+-------+-------+
09/15 21:52:02 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 81.7100  mIoU: 46.6100  mAcc: 57.5700  data_time: 0.0017  time: 0.1819
Finished processing corruption type: jpeg_compression
Runtime: 1726429923

============================= JOB FEEDBACK =============================

NodeName=uc2n484
Job ID: 24235245
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 06:59:12
CPU Efficiency: 5.87% of 4-22:57:20 core-walltime
Job Wall-clock time: 07:26:05
Memory Utilized: 3.32 GB
Memory Efficiency: 3.32% of 100.00 GB
