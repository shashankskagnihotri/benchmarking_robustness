Started at Wed Jan 29 20:00:42 CET 2025
01/29 20:01:13 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 246439255
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 246439255
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

01/29 20:01:13 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
crop_size = (
    512,
    512,
)
custom_imports = dict(allow_failed_imports=False, imports='mmdet.models')
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    test_cfg=dict(size_divisor=32),
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False, interval=5000, save_best='mIoU',
        type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
embed_multi = dict(decay_mult=0.0, lr_mult=1.0)
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/mask2former/mask2former_r101_8xb2-160k_ade20k-512x512_20221203_233905-b7135890.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=0.01, epsilon=2, iterations=40, name='pgd', norm='linf'),
    attack_loss=dict(
        loss_weight=1.0,
        reduction='none',
        type='CrossEntropyLoss',
        use_sigmoid=False),
    backbone=dict(
        deep_stem=False,
        depth=101,
        frozen_stages=-1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=False, type='SyncBN'),
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        test_cfg=dict(size_divisor=32),
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        enforce_decoder_input_project=False,
        feat_channels=256,
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        loss_cls=dict(
            class_weight=[
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.1,
            ],
            loss_weight=2.0,
            reduction='none',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=False),
        loss_dice=dict(
            activate=True,
            eps=1.0,
            loss_weight=5.0,
            naive_dice=True,
            reduction='none',
            type='mmdet.DiceLoss',
            use_sigmoid=True),
        loss_mask=dict(
            loss_weight=5.0,
            reduction='none',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=True),
        num_classes=150,
        num_queries=100,
        num_transformer_feat_level=3,
        out_channels=256,
        pixel_decoder=dict(
            act_cfg=dict(type='ReLU'),
            encoder=dict(
                init_cfg=None,
                layer_cfg=dict(
                    ffn_cfg=dict(
                        act_cfg=dict(inplace=True, type='ReLU'),
                        embed_dims=256,
                        feedforward_channels=1024,
                        ffn_drop=0.0,
                        num_fcs=2),
                    self_attn_cfg=dict(
                        batch_first=True,
                        dropout=0.0,
                        embed_dims=256,
                        im2col_step=64,
                        init_cfg=None,
                        norm_cfg=None,
                        num_heads=8,
                        num_levels=3,
                        num_points=4)),
                num_layers=6),
            init_cfg=None,
            norm_cfg=dict(num_groups=32, type='GN'),
            num_outs=3,
            positional_encoding=dict(normalize=True, num_feats=128),
            type='mmdet.MSDeformAttnPixelDecoder'),
        positional_encoding=dict(normalize=True, num_feats=128),
        strides=[
            4,
            8,
            16,
            32,
        ],
        train_cfg=dict(
            assigner=dict(
                match_costs=[
                    dict(type='mmdet.ClassificationCost', weight=2.0),
                    dict(
                        type='mmdet.CrossEntropyLossCost',
                        use_sigmoid=True,
                        weight=5.0),
                    dict(
                        eps=1.0,
                        pred_act=True,
                        type='mmdet.DiceCost',
                        weight=5.0),
                ],
                type='mmdet.HungarianAssigner'),
            importance_sample_ratio=0.75,
            num_points=12544,
            oversample_ratio=3.0,
            sampler=dict(type='mmdet.MaskPseudoSampler')),
        transformer_decoder=dict(
            init_cfg=None,
            layer_cfg=dict(
                cross_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0),
                ffn_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    add_identity=True,
                    dropout_layer=None,
                    embed_dims=256,
                    feedforward_channels=2048,
                    ffn_drop=0.0,
                    num_fcs=2),
                self_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0)),
            num_layers=9,
            return_intermediate=True),
        type='Mask2FormerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=True,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
num_classes = 150
optim_wrapper = dict(
    clip_grad=dict(max_norm=0.01, norm_type=2),
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ),
        eps=1e-08,
        lr=0.0001,
        type='AdamW',
        weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(decay_mult=1.0, lr_mult=0.1),
            level_embed=dict(decay_mult=0.0, lr_mult=1.0),
            query_embed=dict(decay_mult=0.0, lr_mult=1.0),
            query_feat=dict(decay_mult=0.0, lr_mult=1.0)),
        norm_decay_mult=0.0),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    eps=1e-08,
    lr=0.0001,
    type='AdamW',
    weight_decay=0.05)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=5000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                max_size=2048,
                resize_type='ResizeShortestEdge',
                scales=[
                    256,
                    307,
                    358,
                    409,
                    460,
                    512,
                    563,
                    614,
                    665,
                    716,
                    768,
                    819,
                    870,
                    921,
                    972,
                    1024,
                ],
                type='RandomChoiceResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        max_size=2048,
        resize_type='ResizeShortestEdge',
        scales=[
            256,
            307,
            358,
            409,
            460,
            512,
            563,
            614,
            665,
            716,
            768,
            819,
            870,
            921,
            972,
            1024,
        ],
        type='RandomChoiceResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir=
    '../aa_workdir/mask2former/mask2former_r101_8xb2-160k_ade20k-512x512/attack_pgd/norm_linf/iterations_40/epsilon_2/alpha_0.01/show_dir',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/mask2former/mask2former_r101_8xb2-160k_ade20k-512x512/attack_pgd/norm_linf/iterations_40/epsilon_2/alpha_0.01'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
Number of parameters:  62928151
01/29 20:01:22 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
01/29 20:01:23 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
01/29 20:01:23 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/mask2former/mask2former_r101_8xb2-160k_ade20k-512x512_20221203_233905-b7135890.pth
01/29 20:01:25 - mmengine - INFO - Load checkpoint from ../checkpoint_files/mask2former/mask2former_r101_8xb2-160k_ade20k-512x512_20221203_233905-b7135890.pth
01/29 20:10:33 - mmengine - INFO - Iter(test) [  50/2000]    eta: 5:54:55  time: 9.8406  data_time: 0.0019  memory: 21577  
01/29 20:14:30 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 10:53:57  time: 19.8435  data_time: 0.0020  memory: 7932  
01/29 20:17:55 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 5:13:13  time: 9.2705  data_time: 0.0020  memory: 21005  
01/29 20:24:52 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 4:48:52  time: 8.3925  data_time: 0.0018  memory: 7930  
01/29 20:31:21 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 10:29:00  time: 19.5724  data_time: 0.0042  memory: 21167  
01/29 20:32:03 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 4:35:39  time: 8.0559  data_time: 0.0017  memory: 21167  
01/29 20:39:00 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 4:23:03  time: 8.0352  data_time: 0.0017  memory: 23052  
01/29 20:45:54 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 4:12:01  time: 8.2282  data_time: 0.0018  memory: 21297  
01/29 20:47:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 10:02:54  time: 19.4479  data_time: 0.0018  memory: 23052  
01/29 20:52:56 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 4:02:49  time: 7.9496  data_time: 0.0016  memory: 21460  
01/29 20:59:48 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:53:30  time: 8.1577  data_time: 0.0022  memory: 20315  
01/29 21:03:50 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 9:40:05  time: 19.7812  data_time: 0.0021  memory: 21297  
01/29 21:06:24 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:43:46  time: 8.1639  data_time: 0.0059  memory: 7561  
01/29 21:13:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 3:35:20  time: 7.9691  data_time: 0.0015  memory: 7709  
01/29 21:20:10 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 3:27:33  time: 8.2621  data_time: 0.0017  memory: 8674  
01/29 21:20:23 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 9:20:39  time: 19.2183  data_time: 0.0022  memory: 21460  
01/29 21:26:53 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 3:19:22  time: 8.1345  data_time: 0.0017  memory: 8485  
01/29 21:33:38 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 3:11:28  time: 8.8248  data_time: 0.0014  memory: 21704  
01/29 21:36:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 9:01:14  time: 19.6774  data_time: 0.0017  memory: 20315  
01/29 21:40:28 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 3:03:54  time: 7.9838  data_time: 0.0017  memory: 21339  
01/29 21:47:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:56:02  time: 7.7657  data_time: 0.0016  memory: 9211  
01/29 21:52:28 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 8:40:07  time: 18.7765  data_time: 0.0017  memory: 7561  
01/29 21:53:28 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:48:02  time: 7.9010  data_time: 0.0017  memory: 7552  
01/29 22:00:05 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:40:31  time: 7.9338  data_time: 0.0018  memory: 7431  
01/29 22:06:26 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:32:47  time: 7.5238  data_time: 0.0016  memory: 8023  
01/29 22:08:47 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 8:21:54  time: 19.3394  data_time: 0.0018  memory: 7709  
01/29 22:13:02 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:25:26  time: 7.7859  data_time: 0.0016  memory: 8444  
01/29 22:19:29 - mmengine - INFO - Iter(test) [1000/2000]    eta: 2:18:03  time: 7.7891  data_time: 0.0015  memory: 8377  
01/29 22:25:30 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 8:05:10  time: 19.8143  data_time: 0.0023  memory: 8674  
01/29 22:26:16 - mmengine - INFO - Iter(test) [1050/2000]    eta: 2:11:02  time: 7.9800  data_time: 0.0016  memory: 21780  
01/29 22:32:50 - mmengine - INFO - Iter(test) [1100/2000]    eta: 2:03:52  time: 7.7945  data_time: 0.0016  memory: 8196  
01/29 22:39:22 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:56:43  time: 7.8975  data_time: 0.0015  memory: 7861  
01/29 22:41:46 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 7:47:21  time: 19.9484  data_time: 0.0019  memory: 8485  
01/29 22:46:01 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:49:42  time: 7.7799  data_time: 0.0016  memory: 8453  
01/29 22:52:37 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:42:42  time: 7.8140  data_time: 0.0016  memory: 20946  
01/29 22:58:07 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 7:29:56  time: 20.6124  data_time: 0.0030  memory: 21704  
01/29 22:59:02 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:35:37  time: 7.9109  data_time: 0.0015  memory: 7634  
01/29 23:05:34 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:28:39  time: 7.6446  data_time: 0.0017  memory: 7714  
01/29 23:12:06 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:21:43  time: 7.9933  data_time: 0.0015  memory: 8154  
01/29 23:15:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 7:13:39  time: 20.0910  data_time: 0.0021  memory: 21339  
01/29 23:18:33 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:14:46  time: 7.9552  data_time: 0.0015  memory: 8808  
01/29 23:25:02 - mmengine - INFO - Iter(test) [1500/2000]    eta: 1:07:52  time: 7.6452  data_time: 0.0015  memory: 7564  
01/29 23:31:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 6:56:38  time: 19.6556  data_time: 0.0017  memory: 9226  
01/29 23:31:43 - mmengine - INFO - Iter(test) [1550/2000]    eta: 1:01:03  time: 7.9315  data_time: 0.0015  memory: 8382  
01/29 23:38:12 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:54:11  time: 7.7933  data_time: 0.0016  memory: 7312  
01/29 23:44:48 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:47:22  time: 7.5929  data_time: 0.0018  memory: 21444  
01/29 23:47:18 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 6:38:43  time: 19.7336  data_time: 0.0020  memory: 7554  
01/29 23:51:22 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:40:34  time: 7.8887  data_time: 0.0017  memory: 8123  
01/29 23:57:55 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:33:46  time: 7.6932  data_time: 0.0015  memory: 8384  
01/30 00:03:46 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 6:21:55  time: 19.7604  data_time: 0.0022  memory: 7435  
01/30 00:04:18 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:26:59  time: 7.8768  data_time: 0.0017  memory: 7762  
01/30 00:10:52 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:20:13  time: 7.8779  data_time: 0.0032  memory: 6927  
01/30 00:17:12 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:13:27  time: 7.7075  data_time: 0.0015  memory: 8901  
01/30 00:19:26 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 6:04:11  time: 18.5026  data_time: 0.0016  memory: 8023  
01/30 00:23:44 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:06:43  time: 7.7925  data_time: 0.0184  memory: 11054  
01/30 00:30:07 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 7.5317  data_time: 0.0014  memory: 9049  
01/30 00:30:08 - mmengine - INFO - per class results:
01/30 00:30:08 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 41.66 | 61.71 |
|       building      | 46.09 |  65.1 |
|         sky         |  71.4 | 76.61 |
|        floor        | 45.31 | 59.78 |
|         tree        | 31.12 | 43.53 |
|       ceiling       | 40.21 | 52.82 |
|         road        | 46.79 | 55.26 |
|         bed         |  46.2 | 63.33 |
|      windowpane     | 27.17 | 39.79 |
|        grass        | 35.54 |  45.6 |
|       cabinet       | 21.86 | 31.91 |
|       sidewalk      | 26.48 | 44.78 |
|        person       | 42.65 | 60.64 |
|        earth        | 14.94 | 25.95 |
|         door        | 10.18 |  19.4 |
|        table        | 21.89 | 39.63 |
|       mountain      | 21.07 | 31.32 |
|        plant        | 18.46 | 31.31 |
|       curtain       | 28.96 | 53.43 |
|        chair        | 20.48 | 35.09 |
|         car         | 47.33 | 69.15 |
|        water        | 24.99 | 47.15 |
|       painting      | 33.71 | 48.87 |
|         sofa        | 21.51 | 43.98 |
|        shelf        | 10.56 | 17.62 |
|        house        | 12.74 | 17.02 |
|         sea         | 21.97 | 32.45 |
|        mirror       | 12.02 | 27.83 |
|         rug         | 15.89 | 20.51 |
|        field        |  6.96 | 12.72 |
|       armchair      | 13.41 | 26.69 |
|         seat        | 16.59 | 31.69 |
|        fence        |  9.01 | 21.72 |
|         desk        | 17.81 | 25.66 |
|         rock        | 16.35 | 34.88 |
|       wardrobe      | 17.16 |  32.3 |
|         lamp        | 31.75 | 49.98 |
|       bathtub       | 24.73 | 47.33 |
|       railing       |  8.29 | 19.76 |
|       cushion       | 16.31 | 35.24 |
|         base        |  3.87 |  7.52 |
|         box         |  7.74 | 14.88 |
|        column       |  8.88 | 25.85 |
|      signboard      | 10.87 | 23.31 |
|   chest of drawers  | 19.01 | 29.05 |
|       counter       |  9.56 |  14.5 |
|         sand        |  9.13 | 11.83 |
|         sink        | 23.67 | 36.07 |
|      skyscraper     | 17.01 | 23.46 |
|      fireplace      |  20.6 | 35.62 |
|     refrigerator    | 23.29 | 38.57 |
|      grandstand     | 15.22 | 26.67 |
|         path        |  7.3  | 12.81 |
|        stairs       |  9.99 | 24.07 |
|        runway       | 34.09 | 36.15 |
|         case        | 12.46 | 16.94 |
|      pool table     | 54.11 | 63.19 |
|        pillow       | 16.08 | 29.41 |
|     screen door     |  9.05 | 24.77 |
|       stairway      |  7.99 | 15.02 |
|        river        |  4.24 |  5.43 |
|        bridge       | 14.17 | 46.54 |
|       bookcase      | 14.88 | 20.38 |
|        blind        |  9.78 | 13.02 |
|     coffee table    | 20.49 | 32.55 |
|        toilet       | 36.78 | 49.21 |
|        flower       | 10.51 | 24.68 |
|         book        | 21.75 | 34.39 |
|         hill        |  3.9  |  9.04 |
|        bench        |  7.45 | 17.98 |
|      countertop     | 17.47 | 28.93 |
|        stove        | 21.64 | 32.66 |
|         palm        | 10.68 | 36.48 |
|    kitchen island   |  6.96 |  13.9 |
|       computer      | 20.57 | 27.64 |
|     swivel chair    | 18.26 | 25.64 |
|         boat        |  8.53 | 12.63 |
|         bar         |  6.13 |  8.3  |
|    arcade machine   | 14.91 | 16.24 |
|        hovel        | 16.93 | 27.65 |
|         bus         |  8.49 | 10.13 |
|        towel        | 10.58 | 48.61 |
|        light        | 26.51 | 38.67 |
|        truck        |  2.79 |  9.81 |
|        tower        | 14.64 |  37.3 |
|      chandelier     | 30.14 | 36.31 |
|        awning       |  3.03 | 12.79 |
|     streetlight     | 15.91 | 27.87 |
|        booth        |  0.91 |  1.98 |
| television receiver | 15.19 | 19.23 |
|       airplane      | 20.59 |  50.0 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  3.37 |  10.8 |
|         pole        | 12.43 | 31.22 |
|         land        |  0.0  |  0.0  |
|      bannister      |  4.33 | 13.26 |
|      escalator      |  3.46 |  4.36 |
|       ottoman       | 15.14 | 42.14 |
|        bottle       |  6.09 | 11.91 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  9.08 | 21.44 |
|        stage        |  1.69 |  4.09 |
|         van         | 21.06 | 48.73 |
|         ship        |  0.01 |  0.02 |
|       fountain      |  2.89 |  6.73 |
|    conveyer belt    |  0.32 |  0.6  |
|        canopy       |  9.73 |  26.9 |
|        washer       | 22.41 | 30.46 |
|      plaything      |  5.37 | 15.02 |
|    swimming pool    |  9.98 | 26.57 |
|        stool        | 17.62 | 37.92 |
|        barrel       |  1.64 | 18.39 |
|        basket       | 10.87 | 27.97 |
|      waterfall      | 29.74 | 35.06 |
|         tent        | 55.79 | 87.74 |
|         bag         |  1.69 |  4.42 |
|       minibike      |  6.28 | 15.12 |
|        cradle       | 54.25 | 66.12 |
|         oven        | 12.01 | 23.33 |
|         ball        | 17.14 | 49.63 |
|         food        | 18.25 | 30.93 |
|         step        |  1.6  |  4.85 |
|         tank        | 20.59 | 24.12 |
|      trade name     |  7.41 | 11.82 |
|      microwave      | 14.73 | 15.54 |
|         pot         | 11.57 | 14.79 |
|        animal       | 19.11 | 50.82 |
|       bicycle       |  9.75 | 27.33 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     | 16.87 | 26.34 |
|        screen       | 30.42 | 34.16 |
|       blanket       |  1.3  |  5.61 |
|      sculpture      |  4.61 | 32.88 |
|         hood        |  9.99 | 16.37 |
|        sconce       | 15.27 | 20.63 |
|         vase        | 11.23 | 25.26 |
|    traffic light    | 20.07 | 30.85 |
|         tray        |  2.69 |  12.4 |
|        ashcan       |  12.8 | 28.82 |
|         fan         | 17.49 | 35.98 |
|         pier        | 13.77 | 25.87 |
|      crt screen     |  4.85 | 14.75 |
|        plate        | 16.64 | 30.33 |
|       monitor       |  0.21 |  0.34 |
|    bulletin board   |  2.33 |  3.12 |
|        shower       |  0.26 |  1.67 |
|       radiator      | 16.29 | 25.27 |
|        glass        |  7.1  | 10.92 |
|        clock        | 13.84 | 26.19 |
|         flag        |  8.22 | 13.15 |
+---------------------+-------+-------+
01/30 00:30:08 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 51.1000  mIoU: 16.3700  mAcc: 27.6400  data_time: 0.0169  time: 8.0604
Runtime: 16182

============================= JOB FEEDBACK =============================

NodeName=uc2n482
Job ID: 25197146
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 04:24:32
CPU Efficiency: 12.24% of 1-12:01:52 core-walltime
Job Wall-clock time: 04:30:14
Memory Utilized: 4.76 GB
Memory Efficiency: 47.63% of 10.00 GB
01/30 00:35:40 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 5:47:15  time: 19.2529  data_time: 0.0017  memory: 8449  
01/30 00:51:32 - mmengine - INFO - Iter(test) [1000/2000]    eta: 5:30:04  time: 19.0612  data_time: 0.0017  memory: 8380  
01/30 01:08:04 - mmengine - INFO - Iter(test) [1050/2000]    eta: 5:13:34  time: 19.6481  data_time: 0.0017  memory: 21780  
01/30 01:24:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 4:56:45  time: 19.0738  data_time: 0.0020  memory: 8204  
01/30 01:40:13 - mmengine - INFO - Iter(test) [1150/2000]    eta: 4:39:56  time: 19.4481  data_time: 0.0018  memory: 7861  
01/30 01:56:35 - mmengine - INFO - Iter(test) [1200/2000]    eta: 4:23:23  time: 19.2260  data_time: 0.0016  memory: 8457  
01/30 02:12:32 - mmengine - INFO - Iter(test) [1250/2000]    eta: 4:06:38  time: 19.0889  data_time: 0.0027  memory: 20946  
01/30 02:28:15 - mmengine - INFO - Iter(test) [1300/2000]    eta: 3:49:47  time: 19.4784  data_time: 0.0017  memory: 7635  
01/30 02:44:19 - mmengine - INFO - Iter(test) [1350/2000]    eta: 3:33:12  time: 18.8482  data_time: 0.0174  memory: 7721  
01/30 03:00:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 3:16:39  time: 19.6289  data_time: 0.0016  memory: 8154  
01/30 03:16:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 3:00:02  time: 19.5499  data_time: 0.0016  memory: 8808  
01/30 03:32:08 - mmengine - INFO - Iter(test) [1500/2000]    eta: 2:43:33  time: 18.7791  data_time: 0.0016  memory: 7566  
01/30 03:48:36 - mmengine - INFO - Iter(test) [1550/2000]    eta: 2:27:13  time: 19.6314  data_time: 0.0016  memory: 8389  
01/30 04:04:38 - mmengine - INFO - Iter(test) [1600/2000]    eta: 2:10:47  time: 19.2832  data_time: 0.0018  memory: 7312  
01/30 04:20:40 - mmengine - INFO - Iter(test) [1650/2000]    eta: 1:54:22  time: 18.6737  data_time: 0.0050  memory: 21444  
01/30 04:36:52 - mmengine - INFO - Iter(test) [1700/2000]    eta: 1:38:00  time: 19.5633  data_time: 0.0018  memory: 8123  
01/30 04:53:09 - mmengine - INFO - Iter(test) [1750/2000]    eta: 1:21:39  time: 19.1547  data_time: 0.0029  memory: 8396  
01/30 05:09:05 - mmengine - INFO - Iter(test) [1800/2000]    eta: 1:05:17  time: 19.8138  data_time: 0.0042  memory: 7765  
01/30 05:25:32 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:48:58  time: 19.7533  data_time: 0.0019  memory: 6938  
01/30 05:41:14 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:32:37  time: 19.0796  data_time: 0.0016  memory: 8904  
01/30 05:57:24 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:16:18  time: 19.2059  data_time: 0.0016  memory: 11083  
01/30 06:13:16 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 18.7659  data_time: 0.0017  memory: 9052  
01/30 06:13:16 - mmengine - INFO - per class results:
01/30 06:13:16 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 42.16 | 62.89 |
|       building      | 46.05 |  65.5 |
|         sky         | 70.84 | 76.15 |
|        floor        | 44.94 |  58.3 |
|         tree        |  29.3 | 40.49 |
|       ceiling       | 40.71 | 53.74 |
|         road        | 47.26 |  54.3 |
|         bed         | 47.75 | 64.91 |
|      windowpane     | 25.93 | 37.61 |
|        grass        | 36.51 | 48.02 |
|       cabinet       | 23.49 | 34.06 |
|       sidewalk      | 26.08 | 45.16 |
|        person       | 39.95 | 57.17 |
|        earth        | 14.93 | 26.32 |
|         door        | 13.58 | 24.45 |
|        table        | 21.93 | 40.31 |
|       mountain      | 24.98 |  40.3 |
|        plant        | 17.88 | 29.92 |
|       curtain       | 27.23 | 50.32 |
|        chair        | 20.91 | 35.58 |
|         car         | 47.89 | 73.02 |
|        water        |  19.0 | 39.39 |
|       painting      | 36.41 | 51.19 |
|         sofa        | 20.89 | 38.34 |
|        shelf        | 13.65 | 24.21 |
|        house        |  9.78 | 11.88 |
|         sea         | 22.03 | 37.29 |
|        mirror       | 12.14 |  23.6 |
|         rug         | 17.71 | 24.44 |
|        field        | 10.41 |  16.0 |
|       armchair      | 13.54 | 25.04 |
|         seat        | 12.86 | 28.54 |
|        fence        |  5.84 | 15.59 |
|         desk        | 12.14 | 17.88 |
|         rock        | 13.71 | 25.41 |
|       wardrobe      | 16.93 | 28.92 |
|         lamp        | 31.49 | 53.46 |
|       bathtub       | 28.67 | 54.89 |
|       railing       |  8.41 | 20.51 |
|       cushion       | 19.73 |  40.7 |
|         base        |  2.45 |  5.92 |
|         box         |  7.59 | 15.73 |
|        column       |  7.1  | 18.97 |
|      signboard      |  14.1 |  29.1 |
|   chest of drawers  | 20.99 | 29.97 |
|       counter       |  4.83 |  7.5  |
|         sand        |  9.56 | 13.53 |
|         sink        | 22.92 | 32.17 |
|      skyscraper     | 15.09 | 19.24 |
|      fireplace      | 10.81 |  18.9 |
|     refrigerator    | 27.47 | 38.25 |
|      grandstand     | 17.42 | 26.01 |
|         path        | 10.37 | 19.97 |
|        stairs       |  5.64 | 13.94 |
|        runway       |  46.0 | 48.22 |
|         case        |  9.97 | 14.51 |
|      pool table     | 53.59 | 63.96 |
|        pillow       | 19.36 |  32.7 |
|     screen door     | 12.32 | 33.78 |
|       stairway      |  9.18 | 13.71 |
|        river        |  0.57 |  0.66 |
|        bridge       |  5.14 | 14.64 |
|       bookcase      |  9.89 | 12.27 |
|        blind        | 12.77 | 17.76 |
|     coffee table    | 16.77 | 26.98 |
|        toilet       | 36.79 | 45.96 |
|        flower       |  8.2  | 20.56 |
|         book        | 18.65 |  29.9 |
|         hill        |  1.63 |  3.45 |
|        bench        | 11.07 | 27.03 |
|      countertop     | 19.06 | 27.21 |
|        stove        | 21.52 | 29.29 |
|         palm        |  8.32 | 31.85 |
|    kitchen island   |  7.36 | 13.37 |
|       computer      | 18.34 |  27.2 |
|     swivel chair    | 19.58 | 32.95 |
|         boat        | 10.62 |  18.5 |
|         bar         | 10.52 | 14.37 |
|    arcade machine   |  1.34 |  1.62 |
|        hovel        |  0.0  |  0.0  |
|         bus         |  40.4 | 57.77 |
|        towel        | 12.56 | 48.59 |
|        light        | 24.37 |  36.7 |
|        truck        |  1.6  |  4.81 |
|        tower        | 13.12 | 55.75 |
|      chandelier     | 23.96 | 31.31 |
|        awning       |  4.04 |  11.4 |
|     streetlight     |  14.5 | 25.91 |
|        booth        |  2.75 |  3.23 |
| television receiver | 21.54 | 29.62 |
|       airplane      | 20.77 | 46.27 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  6.12 | 24.78 |
|         pole        |  9.98 | 22.69 |
|         land        |  0.07 |  0.14 |
|      bannister      |  2.38 |  6.05 |
|      escalator      |  8.6  | 16.16 |
|       ottoman       | 17.38 | 43.06 |
|        bottle       |  4.68 |  11.2 |
|        buffet       |  0.0  |  0.0  |
|        poster       | 20.29 | 36.99 |
|        stage        |  1.15 |  3.53 |
|         van         |  9.73 | 20.99 |
|         ship        |  0.34 |  0.47 |
|       fountain      |  5.9  | 13.84 |
|    conveyer belt    |  0.32 |  0.45 |
|        canopy       |  1.28 |  4.2  |
|        washer       |  35.2 | 41.99 |
|      plaything      |  5.86 | 21.11 |
|    swimming pool    |  20.8 | 43.98 |
|        stool        | 15.09 | 29.53 |
|        barrel       |  9.93 | 48.47 |
|        basket       | 10.33 | 24.75 |
|      waterfall      | 10.57 | 12.36 |
|         tent        | 23.24 | 45.39 |
|         bag         |  4.19 | 13.49 |
|       minibike      | 22.08 | 45.04 |
|        cradle       | 47.44 | 58.19 |
|         oven        |  4.52 | 13.11 |
|         ball        | 18.44 | 31.99 |
|         food        | 14.21 | 28.38 |
|         step        |  0.88 |  2.5  |
|         tank        |  8.04 | 11.83 |
|      trade name     |  6.79 |  9.5  |
|      microwave      | 11.66 |  12.4 |
|         pot         | 17.43 | 23.27 |
|        animal       | 16.89 | 42.25 |
|       bicycle       | 13.25 | 34.35 |
|         lake        |  0.29 |  0.31 |
|      dishwasher     |  9.95 | 21.55 |
|        screen       |  17.4 | 26.31 |
|       blanket       |  0.53 |  2.51 |
|      sculpture      |  2.69 | 19.61 |
|         hood        |  9.21 | 13.19 |
|        sconce       | 14.46 | 19.74 |
|         vase        | 10.08 | 21.48 |
|    traffic light    |  14.8 | 23.51 |
|         tray        |  1.93 |  9.49 |
|        ashcan       |  7.89 |  16.0 |
|         fan         | 16.54 | 38.92 |
|         pier        |  8.17 | 25.37 |
|      crt screen     |  2.95 | 11.31 |
|        plate        | 12.77 | 25.41 |
|       monitor       |  4.72 |  5.81 |
|    bulletin board   | 17.11 | 21.94 |
|        shower       |  0.59 |  6.77 |
|       radiator      |  4.64 |  8.12 |
|        glass        |  5.13 |  8.53 |
|        clock        |  7.73 | 23.84 |
|         flag        | 14.61 | 21.09 |
+---------------------+-------+-------+
01/30 06:13:16 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 51.0600  mIoU: 15.8000  mAcc: 26.7200  data_time: 0.0194  time: 19.5534
Runtime: 39260

============================= JOB FEEDBACK =============================

NodeName=uc2n519
Job ID: 25197140
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 10:44:22
CPU Efficiency: 12.30% of 3-15:19:04 core-walltime
Job Wall-clock time: 10:54:53
Memory Utilized: 5.19 GB
Memory Efficiency: 51.90% of 10.00 GB
