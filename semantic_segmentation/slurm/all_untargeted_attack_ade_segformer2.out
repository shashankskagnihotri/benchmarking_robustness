Started at Sat Jul 13 15:48:53 CEST 2024
07/13 15:50:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1204689730
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1204689730
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 15:50:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 15:51:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 15:51:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 15:51:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 15:51:02 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 15:54:53 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:30:22  time: 2.8558  data_time: 0.0021  memory: 22150  
07/13 15:56:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:53:11  time: 2.8860  data_time: 0.0021  memory: 22019  
07/13 15:58:28 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:31:47  time: 1.7210  data_time: 0.0021  memory: 21734  
07/13 16:00:15 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:23:01  time: 2.1060  data_time: 0.0021  memory: 22192  
07/13 16:01:53 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:16:00  time: 1.5600  data_time: 0.0021  memory: 22014  
07/13 16:03:31 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:10:44  time: 1.2905  data_time: 0.0019  memory: 22121  
07/13 16:05:16 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:07:04  time: 1.5385  data_time: 0.0016  memory: 22022  
07/13 16:06:44 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:02:46  time: 1.5539  data_time: 0.0015  memory: 21976  
07/13 16:07:48 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:57:45  time: 1.4302  data_time: 0.0017  memory: 21630  
07/13 16:08:58 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:53:48  time: 1.1620  data_time: 0.0016  memory: 21131  
07/13 16:10:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:50:29  time: 1.7081  data_time: 0.0017  memory: 22101  
07/13 16:11:19 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:47:19  time: 1.5438  data_time: 0.0018  memory: 21998  
07/13 16:12:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:44:46  time: 1.7876  data_time: 0.0015  memory: 22138  
07/13 16:14:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:42:38  time: 1.2567  data_time: 0.0018  memory: 22148  
07/13 16:15:22 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:40:33  time: 2.5018  data_time: 0.0016  memory: 22358  
07/13 16:16:24 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:38:02  time: 1.3128  data_time: 0.0017  memory: 21743  
07/13 16:17:28 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:35:45  time: 1.2639  data_time: 0.0018  memory: 3746  
07/13 16:18:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:33:33  time: 1.2463  data_time: 0.0015  memory: 21454  
07/13 16:19:50 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:31:49  time: 1.6737  data_time: 0.0017  memory: 22052  
07/13 16:20:58 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:29:55  time: 1.1615  data_time: 0.0017  memory: 22065  
07/13 16:22:16 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:28:15  time: 2.0204  data_time: 0.0017  memory: 22366  
07/13 16:23:32 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:26:35  time: 1.1981  data_time: 0.0016  memory: 21643  
07/13 16:24:37 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:24:49  time: 1.4157  data_time: 0.0017  memory: 21377  
07/13 16:25:42 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:23:06  time: 1.1335  data_time: 0.0032  memory: 7177  
07/13 16:26:46 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:21:26  time: 1.3637  data_time: 0.0016  memory: 21669  
07/13 16:27:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:19:44  time: 1.2078  data_time: 0.0016  memory: 3777  
07/13 16:28:44 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:18:09  time: 1.1016  data_time: 0.0016  memory: 20997  
07/13 16:30:00 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:16:41  time: 1.5511  data_time: 0.0016  memory: 21859  
07/13 16:31:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:15:09  time: 1.4919  data_time: 0.0016  memory: 21485  
07/13 16:31:58 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:38  time: 1.1290  data_time: 0.0015  memory: 3746  
07/13 16:33:03 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:12:11  time: 1.1910  data_time: 0.0016  memory: 22000  
07/13 16:34:03 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:45  time: 1.1966  data_time: 0.0016  memory: 3681  
07/13 16:35:10 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:09:21  time: 1.0609  data_time: 0.0015  memory: 22081  
07/13 16:36:17 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:59  time: 1.2591  data_time: 0.0017  memory: 21609  
07/13 16:37:23 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:37  time: 1.1283  data_time: 0.0016  memory: 21912  
07/13 16:38:24 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:15  time: 1.2948  data_time: 0.0019  memory: 21067  
07/13 16:39:28 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:55  time: 1.2730  data_time: 0.0017  memory: 3321  
07/13 16:40:26 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:35  time: 1.0795  data_time: 0.0016  memory: 22257  
07/13 16:41:31 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:17  time: 1.1635  data_time: 0.0016  memory: 21303  
07/13 16:42:36 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0666  data_time: 0.0015  memory: 22229  
07/13 16:42:36 - mmengine - INFO - per class results:
07/13 16:42:36 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  1.03 |  1.06 |
|       building      |  2.89 |  2.97 |
|         sky         | 17.06 | 92.35 |
|        floor        |  1.52 |  1.62 |
|         tree        | 10.12 |  68.8 |
|       ceiling       |  3.77 |  4.37 |
|         road        |  0.06 |  0.07 |
|         bed         |  0.04 |  0.04 |
|      windowpane     |  0.02 |  0.02 |
|        grass        |  0.0  |  0.0  |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       |  0.05 |  0.05 |
|        earth        |  0.13 |  0.16 |
|         door        |  0.0  |  0.0  |
|        table        |  0.0  |  0.0  |
|       mountain      |  2.74 | 14.37 |
|        plant        |  0.01 |  0.01 |
|       curtain       |  1.19 |  8.39 |
|        chair        |  0.01 |  0.01 |
|         car         |  0.0  |  0.0  |
|        water        |  0.7  |  3.6  |
|       painting      |  0.0  |  0.0  |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  0.0  |  0.0  |
|         sea         |  0.0  |  0.0  |
|        mirror       |  0.0  |  0.0  |
|         rug         |  0.0  |  0.0  |
|        field        |  0.0  |  0.0  |
|       armchair      |  0.0  |  0.0  |
|         seat        |  0.0  |  0.0  |
|        fence        |  0.0  |  0.0  |
|         desk        |  0.0  |  0.0  |
|         rock        |  0.0  |  0.0  |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.0  |  0.0  |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  0.0  |  0.0  |
|       cushion       |  0.0  |  0.0  |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.0  |  0.0  |
|      signboard      |  0.41 |  0.42 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.0  |  0.0  |
|         sink        |  0.0  |  0.0  |
|      skyscraper     |  1.3  |  7.87 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  0.75 |  0.75 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.0  |  0.0  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.0  |  0.0  |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.0  |  0.0  |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.0  |  0.0  |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.02 |  0.02 |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.09 |  0.09 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.35 |  5.93 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/13 16:42:36 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 12.6300  mIoU: 0.2900  mAcc: 1.4200  data_time: 0.0031  time: 1.5466
07/13 16:42:39 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 738963422
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 738963422
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 16:42:40 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 16:42:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 16:42:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 16:42:44 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 16:42:44 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 16:45:46 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:58:12  time: 2.5075  data_time: 0.0016  memory: 22150  
07/13 16:47:43 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:34:26  time: 2.7369  data_time: 0.0016  memory: 22019  
07/13 16:49:04 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:18:07  time: 1.6173  data_time: 0.0015  memory: 21734  
07/13 16:50:46 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:12:19  time: 1.9901  data_time: 0.0015  memory: 22192  
07/13 16:52:22 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:07:19  time: 1.4610  data_time: 0.0015  memory: 22014  
07/13 16:53:53 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:03:06  time: 1.2427  data_time: 0.0015  memory: 22121  
07/13 16:55:29 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:00:06  time: 1.4595  data_time: 0.0014  memory: 22022  
07/13 16:56:53 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:56:34  time: 1.5280  data_time: 0.0013  memory: 21976  
07/13 16:57:54 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:52:13  time: 1.3319  data_time: 0.0014  memory: 21630  
07/13 16:59:00 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:48:46  time: 1.1126  data_time: 0.0014  memory: 21131  
07/13 17:00:10 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:45:55  time: 1.6008  data_time: 0.0015  memory: 22101  
07/13 17:01:14 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:43:07  time: 1.5005  data_time: 0.0015  memory: 21998  
07/13 17:02:28 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:40:58  time: 1.7738  data_time: 0.0013  memory: 22138  
07/13 17:03:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:39:11  time: 1.2156  data_time: 0.0015  memory: 22148  
07/13 17:05:18 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:37:35  time: 2.7789  data_time: 0.0014  memory: 22358  
07/13 17:06:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:35:23  time: 1.2777  data_time: 0.0015  memory: 21743  
07/13 17:07:24 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:33:21  time: 1.2258  data_time: 0.0015  memory: 3746  
07/13 17:08:24 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:31:21  time: 1.2253  data_time: 0.0014  memory: 21454  
07/13 17:09:47 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:29:53  time: 1.7768  data_time: 0.0014  memory: 22052  
07/13 17:10:55 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:28:10  time: 1.1076  data_time: 0.0014  memory: 22065  
07/13 17:12:13 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:26:39  time: 1.9574  data_time: 0.0034  memory: 22366  
07/13 17:13:25 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:25:06  time: 1.1666  data_time: 0.0015  memory: 21643  
07/13 17:14:32 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:23:29  time: 1.3620  data_time: 0.0014  memory: 21377  
07/13 17:15:34 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:21:53  time: 1.1073  data_time: 0.0015  memory: 7177  
07/13 17:16:40 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:20:20  time: 1.3396  data_time: 0.0014  memory: 21669  
07/13 17:17:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:18:45  time: 1.1440  data_time: 0.0014  memory: 3777  
07/13 17:18:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:17:16  time: 1.0603  data_time: 0.0013  memory: 20997  
07/13 17:19:52 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:15:54  time: 1.6083  data_time: 0.0014  memory: 21859  
07/13 17:20:52 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:14:27  time: 1.4725  data_time: 0.0014  memory: 21485  
07/13 17:21:49 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:01  time: 1.0331  data_time: 0.0013  memory: 3746  
07/13 17:22:53 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:11:39  time: 1.1642  data_time: 0.0014  memory: 22000  
07/13 17:23:50 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:16  time: 1.1877  data_time: 0.0015  memory: 3681  
07/13 17:24:55 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:08:56  time: 1.0536  data_time: 0.0014  memory: 22081  
07/13 17:26:00 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:38  time: 1.2017  data_time: 0.0016  memory: 21609  
07/13 17:27:04 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:19  time: 1.0990  data_time: 0.0013  memory: 21912  
07/13 17:28:04 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:02  time: 1.2301  data_time: 0.0016  memory: 21067  
07/13 17:29:05 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:45  time: 1.2192  data_time: 0.0015  memory: 3321  
07/13 17:30:03 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:29  time: 1.0528  data_time: 0.0014  memory: 22257  
07/13 17:31:06 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:14  time: 1.1094  data_time: 0.0014  memory: 21303  
07/13 17:32:10 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0283  data_time: 0.0013  memory: 22229  
07/13 17:32:10 - mmengine - INFO - per class results:
07/13 17:32:10 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.0  |  0.0  |
|       building      | 0.0  |  0.0  |
|         sky         | 8.89 | 99.95 |
|        floor        | 0.0  |  0.0  |
|         tree        | 0.0  |  0.0  |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.0  |  0.0  |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.0  |  0.0  |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 17:32:10 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.8800  mIoU: 0.0600  mAcc: 0.6700  data_time: 0.0024  time: 1.4829
07/13 17:32:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1365726758
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1365726758
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 17:32:14 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='pgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 17:32:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 17:32:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 17:32:18 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 17:32:19 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 17:35:24 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:00:03  time: 2.6035  data_time: 0.0017  memory: 22150  
07/13 17:37:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:35:44  time: 2.7637  data_time: 0.0016  memory: 22019  
07/13 17:38:44 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:19:09  time: 1.6344  data_time: 0.0016  memory: 21734  
07/13 17:40:30 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:13:44  time: 2.0303  data_time: 0.0014  memory: 22192  
07/13 17:42:06 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:08:28  time: 1.4813  data_time: 0.0015  memory: 22014  
07/13 17:43:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:04:12  time: 1.2647  data_time: 0.0015  memory: 22121  
07/13 17:45:18 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:01:12  time: 1.4834  data_time: 0.0014  memory: 22022  
07/13 17:46:44 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:57:38  time: 1.5977  data_time: 0.0013  memory: 21976  
07/13 17:47:46 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:53:13  time: 1.3539  data_time: 0.0014  memory: 21630  
07/13 17:48:54 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:49:44  time: 1.1466  data_time: 0.0014  memory: 21131  
07/13 17:50:04 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:46:48  time: 1.6391  data_time: 0.0014  memory: 22101  
07/13 17:51:10 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:43:58  time: 1.5188  data_time: 0.0015  memory: 21998  
07/13 17:52:26 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:41:47  time: 1.7781  data_time: 0.0014  memory: 22138  
07/13 17:53:49 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:39:55  time: 1.2327  data_time: 0.0015  memory: 22148  
07/13 17:55:12 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:38:08  time: 2.5954  data_time: 0.0026  memory: 22358  
07/13 17:56:12 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:35:49  time: 1.2238  data_time: 0.0016  memory: 21743  
07/13 17:57:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:33:42  time: 1.2464  data_time: 0.0016  memory: 3746  
07/13 17:58:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:31:41  time: 1.2948  data_time: 0.0014  memory: 21454  
07/13 17:59:34 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:30:07  time: 1.6209  data_time: 0.0014  memory: 22052  
07/13 18:00:40 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:28:21  time: 1.1159  data_time: 0.0014  memory: 22065  
07/13 18:01:58 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:26:49  time: 1.9874  data_time: 0.0014  memory: 22366  
07/13 18:03:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:25:14  time: 1.2137  data_time: 0.0014  memory: 21643  
07/13 18:04:16 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:23:37  time: 1.3822  data_time: 0.0014  memory: 21377  
07/13 18:05:19 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:22:00  time: 1.1254  data_time: 0.0014  memory: 7178  
07/13 18:06:23 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:20:26  time: 1.3460  data_time: 0.0014  memory: 21669  
07/13 18:07:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:18:50  time: 1.1545  data_time: 0.0014  memory: 3778  
07/13 18:08:18 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:17:19  time: 1.0837  data_time: 0.0014  memory: 20997  
07/13 18:09:32 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:15:57  time: 1.5478  data_time: 0.0015  memory: 21859  
07/13 18:10:32 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:14:29  time: 1.5036  data_time: 0.0014  memory: 21485  
07/13 18:11:29 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:03  time: 1.0496  data_time: 0.0014  memory: 3746  
07/13 18:12:33 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:11:40  time: 1.1779  data_time: 0.0014  memory: 22000  
07/13 18:13:31 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:18  time: 1.2003  data_time: 0.0015  memory: 3680  
07/13 18:14:38 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:08:58  time: 1.0491  data_time: 0.0013  memory: 22081  
07/13 18:15:45 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:39  time: 1.2437  data_time: 0.0015  memory: 21609  
07/13 18:16:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:22  time: 1.2208  data_time: 0.0014  memory: 21912  
07/13 18:17:56 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:04  time: 1.3706  data_time: 0.0015  memory: 21067  
07/13 18:19:01 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:47  time: 1.3142  data_time: 0.0016  memory: 3321  
07/13 18:20:00 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:30  time: 1.1205  data_time: 0.0014  memory: 22257  
07/13 18:21:07 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:15  time: 1.1459  data_time: 0.0014  memory: 21303  
07/13 18:22:15 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0909  data_time: 0.0013  memory: 22229  
07/13 18:22:15 - mmengine - INFO - per class results:
07/13 18:22:15 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 42.94 | 87.95 |
|       building      | 61.38 |  75.9 |
|         sky         | 89.78 | 95.29 |
|        floor        |  44.2 | 58.36 |
|         tree        | 45.04 | 57.34 |
|       ceiling       | 64.93 | 74.31 |
|         road        | 53.29 | 59.46 |
|         bed         | 62.02 | 72.22 |
|      windowpane     |  49.0 | 61.89 |
|        grass        | 39.76 | 47.34 |
|       cabinet       | 34.29 |  42.7 |
|       sidewalk      | 43.51 | 53.75 |
|        person       | 49.89 | 59.57 |
|        earth        | 21.65 | 34.54 |
|         door        | 22.55 |  28.2 |
|        table        | 28.11 | 39.73 |
|       mountain      | 36.87 | 54.71 |
|        plant        | 23.38 | 27.07 |
|       curtain       | 48.43 | 59.89 |
|        chair        | 27.11 | 36.16 |
|         car         | 56.15 | 64.87 |
|        water        | 31.68 | 41.49 |
|       painting      | 50.69 | 67.94 |
|         sofa        | 30.62 |  39.3 |
|        shelf        | 25.61 | 34.36 |
|        house        | 30.17 | 41.51 |
|         sea         | 32.78 | 53.06 |
|        mirror       |  37.0 | 43.33 |
|         rug         | 23.73 | 25.42 |
|        field        | 17.73 | 33.26 |
|       armchair      | 15.58 | 20.43 |
|         seat        | 30.35 | 35.83 |
|        fence        | 18.98 | 22.94 |
|         desk        | 25.74 | 33.01 |
|         rock        |  19.5 | 25.74 |
|       wardrobe      | 28.79 | 36.89 |
|         lamp        | 44.53 |  54.5 |
|       bathtub       | 50.05 | 59.05 |
|       railing       |  18.6 | 23.71 |
|       cushion       | 28.56 | 33.86 |
|         base        |  6.4  |  7.63 |
|         box         |  8.22 | 10.46 |
|        column       | 23.27 | 32.08 |
|      signboard      | 21.45 | 32.53 |
|   chest of drawers  | 19.08 | 23.81 |
|       counter       | 11.94 | 15.21 |
|         sand        | 23.77 | 39.47 |
|         sink        | 44.69 | 57.83 |
|      skyscraper     | 16.48 |  20.7 |
|      fireplace      |  30.6 | 32.73 |
|     refrigerator    | 28.15 | 31.05 |
|      grandstand     | 29.89 | 47.97 |
|         path        | 11.51 | 14.06 |
|        stairs       | 13.19 | 14.62 |
|        runway       | 39.87 | 51.78 |
|         case        |  28.4 | 36.01 |
|      pool table     |  38.0 | 39.63 |
|        pillow       | 39.01 | 49.47 |
|     screen door     | 26.86 | 32.75 |
|       stairway      | 13.13 | 17.06 |
|        river        |  3.98 |  5.55 |
|        bridge       |  9.58 | 10.86 |
|       bookcase      | 26.95 | 32.11 |
|        blind        | 12.37 | 13.91 |
|     coffee table    | 15.75 | 18.32 |
|        toilet       | 59.63 | 65.04 |
|        flower       | 21.98 | 29.77 |
|         book        | 33.08 | 42.92 |
|         hill        |  4.71 |  7.55 |
|        bench        | 19.31 | 23.78 |
|      countertop     | 30.63 |  39.4 |
|        stove        | 20.95 | 21.69 |
|         palm        |  20.8 | 26.24 |
|    kitchen island   | 12.85 | 14.93 |
|       computer      | 44.21 | 50.78 |
|     swivel chair    |  2.33 |  2.35 |
|         boat        | 25.39 | 27.27 |
|         bar         | 10.04 | 10.65 |
|    arcade machine   |  1.82 |  1.83 |
|        hovel        | 20.58 | 22.23 |
|         bus         | 53.87 | 56.79 |
|        towel        | 44.94 | 51.91 |
|        light        |  35.1 | 38.06 |
|        truck        |  3.28 |  3.49 |
|        tower        |  5.32 |  7.31 |
|      chandelier     | 47.55 | 54.77 |
|        awning       |  5.23 |  5.52 |
|     streetlight     |  8.4  |  9.03 |
|        booth        |  9.51 | 10.11 |
| television receiver |  9.79 | 10.47 |
|       airplane      | 31.52 | 48.49 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  9.45 | 11.82 |
|         pole        |  7.04 |  8.49 |
|         land        |  0.17 |  0.23 |
|      bannister      |  1.89 |  2.26 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       | 15.59 | 18.19 |
|        bottle       |  21.4 |  26.3 |
|        buffet       |  3.51 |  3.82 |
|        poster       | 18.55 | 25.17 |
|        stage        |  7.9  |  9.65 |
|         van         | 21.94 |  28.2 |
|         ship        | 22.55 | 23.49 |
|       fountain      |  2.85 |  2.85 |
|    conveyer belt    | 40.48 | 42.98 |
|        canopy       |  9.38 |  9.78 |
|        washer       | 31.43 | 33.96 |
|      plaything      |  14.8 | 18.97 |
|    swimming pool    | 12.11 | 15.31 |
|        stool        | 10.12 | 11.12 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 16.69 | 18.38 |
|      waterfall      | 49.63 | 56.16 |
|         tent        | 72.94 | 81.45 |
|         bag         |  1.66 |  1.83 |
|       minibike      |  16.4 | 17.67 |
|        cradle       |  33.6 | 37.32 |
|         oven        |  1.28 |  1.34 |
|         ball        | 23.43 | 47.05 |
|         food        | 16.68 | 18.47 |
|         step        |  0.4  |  0.51 |
|         tank        | 20.41 | 23.53 |
|      trade name     |  9.61 | 10.01 |
|      microwave      | 17.71 | 18.68 |
|         pot         |  6.04 |  6.19 |
|        animal       | 17.07 | 17.65 |
|       bicycle       | 14.53 | 23.86 |
|         lake        | 44.53 | 46.32 |
|      dishwasher     |  8.21 |  8.53 |
|        screen       | 41.63 | 47.65 |
|       blanket       | 11.41 | 12.28 |
|      sculpture      |  3.04 |  3.88 |
|         hood        | 27.61 | 31.43 |
|        sconce       | 27.51 | 34.43 |
|         vase        | 15.63 | 21.33 |
|    traffic light    | 15.57 | 20.17 |
|         tray        |  3.7  |  5.18 |
|        ashcan       |  7.61 |  7.98 |
|         fan         | 36.66 | 42.08 |
|         pier        |  1.04 |  1.07 |
|      crt screen     |  0.06 |  0.15 |
|        plate        | 39.03 | 50.56 |
|       monitor       |  6.5  |  8.56 |
|    bulletin board   | 20.78 | 28.02 |
|        shower       |  0.63 |  1.17 |
|       radiator      |  43.6 | 47.05 |
|        glass        |  5.11 |  5.37 |
|        clock        | 13.07 | 14.45 |
|         flag        |  12.2 | 13.03 |
+---------------------+-------+-------+
07/13 18:22:15 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 62.7400  mIoU: 23.9000  mAcc: 29.4000  data_time: 0.0023  time: 1.4980
07/13 18:22:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1085426789
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1085426789
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 18:22:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 18:22:22 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 18:22:22 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 18:22:23 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 18:22:23 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 18:25:56 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:18:00  time: 3.2216  data_time: 0.0016  memory: 22154  
07/13 18:28:24 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:54:06  time: 3.5491  data_time: 0.0016  memory: 22021  
07/13 18:30:10 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:35:57  time: 2.2537  data_time: 0.0015  memory: 21737  
07/13 18:32:21 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:29:36  time: 2.4399  data_time: 0.0015  memory: 22196  
07/13 18:34:16 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:23:11  time: 1.8094  data_time: 0.0014  memory: 22017  
07/13 18:36:09 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:18:00  time: 1.6858  data_time: 0.0015  memory: 22125  
07/13 18:38:06 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:14:06  time: 1.7038  data_time: 0.0014  memory: 22025  
07/13 18:39:44 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:09:24  time: 1.7641  data_time: 0.0013  memory: 21980  
07/13 18:40:59 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:04:02  time: 1.5385  data_time: 0.0014  memory: 21633  
07/13 18:42:22 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:59:54  time: 1.5130  data_time: 0.0014  memory: 21132  
07/13 18:43:50 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:56:32  time: 2.1326  data_time: 0.0014  memory: 22104  
07/13 18:45:14 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:53:18  time: 1.9452  data_time: 0.0015  memory: 22000  
07/13 18:46:42 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:50:28  time: 2.0227  data_time: 0.0013  memory: 22138  
07/13 18:48:23 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:48:17  time: 1.5066  data_time: 0.0016  memory: 22151  
07/13 18:49:57 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:45:56  time: 2.8784  data_time: 0.0014  memory: 22362  
07/13 18:51:08 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:43:07  time: 1.5314  data_time: 0.0016  memory: 21746  
07/13 18:52:29 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:40:42  time: 1.7150  data_time: 0.0015  memory: 4019  
07/13 18:53:40 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:38:14  time: 1.4284  data_time: 0.0014  memory: 21456  
07/13 18:55:15 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:36:19  time: 1.9906  data_time: 0.0014  memory: 22055  
07/13 18:56:36 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:34:12  time: 1.5150  data_time: 0.0015  memory: 22069  
07/13 18:58:10 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:32:22  time: 2.2770  data_time: 0.0014  memory: 22370  
07/13 18:59:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:30:29  time: 1.4412  data_time: 0.0015  memory: 21644  
07/13 19:00:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:28:30  time: 1.6561  data_time: 0.0014  memory: 21379  
07/13 19:02:15 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:26:34  time: 1.3094  data_time: 0.0020  memory: 14562  
07/13 19:03:28 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:24:38  time: 1.5976  data_time: 0.0014  memory: 21670  
07/13 19:04:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:22:42  time: 1.3681  data_time: 0.0014  memory: 4042  
07/13 19:05:47 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:20:53  time: 1.2744  data_time: 0.0014  memory: 20997  
07/13 19:07:12 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:19:12  time: 1.7453  data_time: 0.0014  memory: 21862  
07/13 19:08:24 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:17:27  time: 1.7825  data_time: 0.0014  memory: 21487  
07/13 19:09:32 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:15:42  time: 1.2075  data_time: 0.0013  memory: 4019  
07/13 19:10:51 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:14:04  time: 1.4922  data_time: 0.0014  memory: 22004  
07/13 19:12:00 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:12:24  time: 1.4278  data_time: 0.0015  memory: 3947  
07/13 19:13:15 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:10:47  time: 1.2081  data_time: 0.0013  memory: 22085  
07/13 19:14:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:09:12  time: 1.5093  data_time: 0.0016  memory: 21612  
07/13 19:15:49 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:07:37  time: 1.3373  data_time: 0.0014  memory: 21915  
07/13 19:17:03 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:06:04  time: 1.5735  data_time: 0.0015  memory: 21067  
07/13 19:18:23 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:04:32  time: 1.6261  data_time: 0.0016  memory: 3571  
07/13 19:19:31 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:00  time: 1.2452  data_time: 0.0014  memory: 22261  
07/13 19:20:46 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:29  time: 1.3594  data_time: 0.0013  memory: 21307  
07/13 19:22:01 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.2128  data_time: 0.0013  memory: 22232  
07/13 19:22:01 - mmengine - INFO - per class results:
07/13 19:22:02 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  1.04 |  1.07 |
|       building      |  2.18 |  2.22 |
|         sky         | 17.03 | 92.58 |
|        floor        |  1.83 |  1.97 |
|         tree        | 10.07 | 68.65 |
|       ceiling       |  3.57 |  4.15 |
|         road        |  0.05 |  0.05 |
|         bed         |  0.05 |  0.05 |
|      windowpane     |  0.01 |  0.01 |
|        grass        |  0.0  |  0.0  |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       |  0.03 |  0.03 |
|        earth        |  1.27 |  1.54 |
|         door        |  0.01 |  0.01 |
|        table        |  0.0  |  0.0  |
|       mountain      |  3.17 | 16.62 |
|        plant        |  0.01 |  0.01 |
|       curtain       |  1.34 |  9.42 |
|        chair        |  0.0  |  0.0  |
|         car         |  0.0  |  0.0  |
|        water        |  0.82 |  4.18 |
|       painting      |  0.0  |  0.0  |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  0.0  |  0.0  |
|         sea         |  0.0  |  0.0  |
|        mirror       |  0.0  |  0.0  |
|         rug         |  0.0  |  0.0  |
|        field        |  0.0  |  0.0  |
|       armchair      |  0.0  |  0.0  |
|         seat        |  0.0  |  0.0  |
|        fence        |  0.0  |  0.0  |
|         desk        |  0.0  |  0.0  |
|         rock        |  0.0  |  0.0  |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.0  |  0.0  |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  0.0  |  0.0  |
|       cushion       |  0.0  |  0.0  |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.0  |  0.0  |
|      signboard      |  0.38 |  0.38 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.0  |  0.0  |
|         sink        |  0.0  |  0.0  |
|      skyscraper     |  1.3  |  7.73 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  0.37 |  0.37 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.0  |  0.0  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.0  |  0.0  |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.0  |  0.0  |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.0  |  0.0  |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.0  |  0.0  |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.03 |  0.03 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.43 |  6.87 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/13 19:22:02 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 12.6400  mIoU: 0.3000  mAcc: 1.4500  data_time: 0.0022  time: 1.7890
07/13 19:22:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1343693219
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1343693219
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 19:22:08 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 19:22:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 19:22:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 19:22:12 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 19:22:12 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 19:25:39 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:14:32  time: 2.8173  data_time: 0.0023  memory: 22154  
07/13 19:27:55 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:48:32  time: 3.1749  data_time: 0.0021  memory: 22021  
07/13 19:29:46 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:33:22  time: 2.5837  data_time: 0.0018  memory: 21737  
07/13 19:32:13 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:30:12  time: 2.9230  data_time: 0.0017  memory: 22196  
07/13 19:34:14 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:24:16  time: 2.0628  data_time: 0.0018  memory: 22017  
07/13 19:36:17 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:19:46  time: 1.8014  data_time: 0.0018  memory: 22125  
07/13 19:38:14 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:15:32  time: 1.6549  data_time: 0.0017  memory: 22025  
07/13 19:39:58 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:11:04  time: 1.8968  data_time: 0.0015  memory: 21980  
07/13 19:41:16 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:05:41  time: 1.6028  data_time: 0.0015  memory: 21633  
07/13 19:42:42 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:01:30  time: 1.4154  data_time: 0.0015  memory: 21132  
07/13 19:44:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:58:20  time: 2.3213  data_time: 0.0017  memory: 22104  
07/13 19:45:42 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:54:50  time: 2.0365  data_time: 0.0017  memory: 22000  
07/13 19:47:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:51:59  time: 2.1715  data_time: 0.0015  memory: 22138  
07/13 19:49:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:49:45  time: 1.4558  data_time: 0.0017  memory: 22151  
07/13 19:50:42 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:47:29  time: 3.1563  data_time: 0.0016  memory: 22362  
07/13 19:51:53 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:44:30  time: 1.4942  data_time: 0.0017  memory: 21746  
07/13 19:53:11 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:41:54  time: 1.5148  data_time: 0.0017  memory: 4019  
07/13 19:54:21 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:39:17  time: 1.3957  data_time: 0.0015  memory: 21456  
07/13 19:55:52 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:37:12  time: 1.8933  data_time: 0.0018  memory: 22055  
07/13 19:57:10 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:34:57  time: 1.2999  data_time: 0.0016  memory: 22069  
07/13 19:58:40 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:32:59  time: 2.2399  data_time: 0.0016  memory: 22370  
07/13 20:00:10 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:31:03  time: 1.5348  data_time: 0.0016  memory: 21644  
07/13 20:01:29 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:29:01  time: 1.6390  data_time: 0.0015  memory: 21379  
07/13 20:02:52 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:27:06  time: 1.4130  data_time: 0.0015  memory: 14562  
07/13 20:04:05 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:25:07  time: 1.6914  data_time: 0.0015  memory: 21670  
07/13 20:05:12 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:23:08  time: 1.5047  data_time: 0.0015  memory: 4042  
07/13 20:06:25 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:21:17  time: 1.2183  data_time: 0.0015  memory: 20997  
07/13 20:07:48 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:19:32  time: 1.7159  data_time: 0.0015  memory: 21862  
07/13 20:08:55 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:17:43  time: 1.6784  data_time: 0.0015  memory: 21487  
07/13 20:10:00 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:15:55  time: 1.1689  data_time: 0.0015  memory: 4019  
07/13 20:11:22 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:14:16  time: 1.5280  data_time: 0.0015  memory: 22004  
07/13 20:12:32 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:12:34  time: 1.3935  data_time: 0.0016  memory: 3947  
07/13 20:13:48 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:10:56  time: 1.2916  data_time: 0.0015  memory: 22085  
07/13 20:15:05 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:09:19  time: 1.4544  data_time: 0.0018  memory: 21612  
07/13 20:16:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:07:44  time: 1.2609  data_time: 0.0015  memory: 21915  
07/13 20:17:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:06:09  time: 1.6175  data_time: 0.0017  memory: 21067  
07/13 20:18:57 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:04:36  time: 1.5013  data_time: 0.0017  memory: 3571  
07/13 20:20:04 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:02  time: 1.1732  data_time: 0.0015  memory: 22261  
07/13 20:21:18 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:30  time: 1.2984  data_time: 0.0015  memory: 21307  
07/13 20:22:30 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.1659  data_time: 0.0013  memory: 22232  
07/13 20:22:30 - mmengine - INFO - per class results:
07/13 20:22:30 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.0  |  0.0  |
|       building      | 0.0  |  0.0  |
|         sky         | 8.89 | 99.93 |
|        floor        | 0.0  |  0.0  |
|         tree        | 0.0  |  0.0  |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.0  |  0.0  |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.0  |  0.0  |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 20:22:30 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.8700  mIoU: 0.0600  mAcc: 0.6700  data_time: 0.0024  time: 1.8090
07/13 20:22:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 106092833
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 106092833
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 20:22:34 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='cospgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 20:22:37 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 20:22:37 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 20:22:37 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 20:22:38 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 20:26:03 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:13:04  time: 2.8460  data_time: 0.0022  memory: 22154  
07/13 20:28:19 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:48:00  time: 3.3455  data_time: 0.0021  memory: 22021  
07/13 20:30:02 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:31:17  time: 2.2050  data_time: 0.0020  memory: 21737  
07/13 20:32:02 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:24:38  time: 2.2981  data_time: 0.0021  memory: 22196  
07/13 20:33:51 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:18:31  time: 1.7122  data_time: 0.0019  memory: 22017  
07/13 20:35:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:13:46  time: 1.5355  data_time: 0.0020  memory: 22125  
07/13 20:37:32 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:10:15  time: 1.6859  data_time: 0.0019  memory: 22025  
07/13 20:39:10 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:06:07  time: 1.7677  data_time: 0.0018  memory: 21980  
07/13 20:40:27 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:01:20  time: 1.6793  data_time: 0.0020  memory: 21633  
07/13 20:41:48 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:57:29  time: 1.4318  data_time: 0.0016  memory: 21132  
07/13 20:43:14 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:54:17  time: 1.9234  data_time: 0.0016  memory: 22104  
07/13 20:44:34 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:51:09  time: 1.8261  data_time: 0.0017  memory: 22000  
07/13 20:46:00 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:48:32  time: 1.9650  data_time: 0.0015  memory: 22138  
07/13 20:47:36 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:46:21  time: 1.4805  data_time: 0.0017  memory: 22151  
07/13 20:49:10 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:44:12  time: 2.8876  data_time: 0.0017  memory: 22362  
07/13 20:50:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:41:34  time: 1.4975  data_time: 0.0017  memory: 21746  
07/13 20:51:40 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:39:16  time: 1.5290  data_time: 0.0018  memory: 4021  
07/13 20:52:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:36:54  time: 1.4127  data_time: 0.0015  memory: 21456  
07/13 20:54:29 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:35:11  time: 2.3666  data_time: 0.0018  memory: 22055  
07/13 20:56:06 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:33:27  time: 1.8089  data_time: 0.0016  memory: 22069  
07/13 20:57:59 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:31:58  time: 2.5614  data_time: 0.0017  memory: 22370  
07/13 20:59:38 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:30:16  time: 1.7344  data_time: 0.0016  memory: 21644  
07/13 21:01:07 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:28:26  time: 1.7216  data_time: 0.0016  memory: 21379  
07/13 21:02:32 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:26:35  time: 1.5988  data_time: 0.0016  memory: 14562  
07/13 21:03:47 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:24:41  time: 1.7410  data_time: 0.0015  memory: 21670  
07/13 21:04:56 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:22:46  time: 1.4671  data_time: 0.0016  memory: 4043  
07/13 21:06:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:21:00  time: 1.2429  data_time: 0.0015  memory: 20997  
07/13 21:07:50 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:19:22  time: 1.7533  data_time: 0.0016  memory: 21862  
07/13 21:09:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:17:38  time: 1.8496  data_time: 0.0015  memory: 21487  
07/13 21:10:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:15:54  time: 1.5050  data_time: 0.0015  memory: 4021  
07/13 21:11:47 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:14:15  time: 1.8364  data_time: 0.0016  memory: 22004  
07/13 21:13:02 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:12:35  time: 1.5308  data_time: 0.0017  memory: 3948  
07/13 21:14:23 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:10:58  time: 1.3232  data_time: 0.0015  memory: 22085  
07/13 21:15:43 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:09:22  time: 1.4755  data_time: 0.0018  memory: 21612  
07/13 21:17:03 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:07:46  time: 1.4021  data_time: 0.0015  memory: 21915  
07/13 21:18:14 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:06:10  time: 1.5191  data_time: 0.0018  memory: 21067  
07/13 21:19:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:04:36  time: 1.5081  data_time: 0.0017  memory: 3571  
07/13 21:20:39 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:03:03  time: 1.3748  data_time: 0.0016  memory: 22261  
07/13 21:21:54 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:31  time: 1.3304  data_time: 0.0016  memory: 21307  
07/13 21:23:11 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.3373  data_time: 0.0015  memory: 22232  
07/13 21:23:11 - mmengine - INFO - per class results:
07/13 21:23:11 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 42.94 | 87.95 |
|       building      | 61.38 |  75.9 |
|         sky         | 89.78 | 95.29 |
|        floor        |  44.2 | 58.36 |
|         tree        | 45.04 | 57.34 |
|       ceiling       | 64.93 | 74.31 |
|         road        | 53.29 | 59.46 |
|         bed         | 62.02 | 72.22 |
|      windowpane     |  49.0 | 61.89 |
|        grass        | 39.76 | 47.34 |
|       cabinet       | 34.29 |  42.7 |
|       sidewalk      | 43.51 | 53.75 |
|        person       | 49.89 | 59.57 |
|        earth        | 21.65 | 34.54 |
|         door        | 22.56 | 28.21 |
|        table        | 28.11 | 39.73 |
|       mountain      | 36.87 | 54.71 |
|        plant        | 23.38 | 27.07 |
|       curtain       | 48.43 | 59.89 |
|        chair        | 27.11 | 36.16 |
|         car         | 56.15 | 64.87 |
|        water        | 31.68 | 41.49 |
|       painting      | 50.69 | 67.94 |
|         sofa        | 30.62 |  39.3 |
|        shelf        | 25.61 | 34.36 |
|        house        | 30.17 | 41.51 |
|         sea         | 32.78 | 53.06 |
|        mirror       |  37.0 | 43.33 |
|         rug         | 23.73 | 25.42 |
|        field        | 17.73 | 33.26 |
|       armchair      | 15.58 | 20.43 |
|         seat        | 30.35 | 35.83 |
|        fence        | 18.98 | 22.94 |
|         desk        | 25.74 | 33.01 |
|         rock        |  19.5 | 25.74 |
|       wardrobe      | 28.79 | 36.89 |
|         lamp        | 44.53 |  54.5 |
|       bathtub       | 50.05 | 59.05 |
|       railing       |  18.6 | 23.71 |
|       cushion       | 28.56 | 33.86 |
|         base        |  6.4  |  7.63 |
|         box         |  8.22 | 10.46 |
|        column       | 23.27 | 32.08 |
|      signboard      | 21.45 | 32.53 |
|   chest of drawers  | 19.08 | 23.81 |
|       counter       | 11.94 | 15.21 |
|         sand        | 23.77 | 39.47 |
|         sink        | 44.69 | 57.83 |
|      skyscraper     | 16.48 |  20.7 |
|      fireplace      |  30.6 | 32.73 |
|     refrigerator    | 28.15 | 31.05 |
|      grandstand     | 29.89 | 47.97 |
|         path        | 11.51 | 14.06 |
|        stairs       | 13.19 | 14.62 |
|        runway       | 39.88 | 51.78 |
|         case        |  28.4 | 36.01 |
|      pool table     |  38.0 | 39.63 |
|        pillow       | 39.01 | 49.47 |
|     screen door     | 26.86 | 32.75 |
|       stairway      | 13.13 | 17.06 |
|        river        |  3.98 |  5.55 |
|        bridge       |  9.58 | 10.86 |
|       bookcase      | 26.95 | 32.11 |
|        blind        | 12.37 | 13.91 |
|     coffee table    | 15.75 | 18.32 |
|        toilet       | 59.63 | 65.04 |
|        flower       | 21.98 | 29.77 |
|         book        | 33.08 | 42.92 |
|         hill        |  4.71 |  7.55 |
|        bench        | 19.31 | 23.78 |
|      countertop     | 30.63 |  39.4 |
|        stove        | 20.95 | 21.69 |
|         palm        |  20.8 | 26.24 |
|    kitchen island   | 12.85 | 14.93 |
|       computer      | 44.21 | 50.78 |
|     swivel chair    |  2.33 |  2.35 |
|         boat        | 25.39 | 27.27 |
|         bar         | 10.04 | 10.65 |
|    arcade machine   |  1.82 |  1.83 |
|        hovel        | 20.58 | 22.23 |
|         bus         | 53.87 | 56.79 |
|        towel        | 44.94 | 51.91 |
|        light        |  35.1 | 38.07 |
|        truck        |  3.28 |  3.49 |
|        tower        |  5.32 |  7.31 |
|      chandelier     | 47.55 | 54.77 |
|        awning       |  5.23 |  5.52 |
|     streetlight     |  8.4  |  9.03 |
|        booth        |  9.51 | 10.11 |
| television receiver |  9.79 | 10.47 |
|       airplane      | 31.52 | 48.49 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  9.45 | 11.82 |
|         pole        |  7.04 |  8.49 |
|         land        |  0.17 |  0.23 |
|      bannister      |  1.89 |  2.26 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       | 15.59 | 18.19 |
|        bottle       |  21.4 |  26.3 |
|        buffet       |  3.51 |  3.82 |
|        poster       | 18.55 | 25.17 |
|        stage        |  7.9  |  9.65 |
|         van         | 21.94 |  28.2 |
|         ship        | 22.55 | 23.49 |
|       fountain      |  2.85 |  2.85 |
|    conveyer belt    | 40.48 | 42.98 |
|        canopy       |  9.38 |  9.78 |
|        washer       | 31.43 | 33.96 |
|      plaything      |  14.8 | 18.97 |
|    swimming pool    | 12.11 | 15.31 |
|        stool        | 10.12 | 11.12 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 16.69 | 18.38 |
|      waterfall      | 49.63 | 56.16 |
|         tent        | 72.94 | 81.45 |
|         bag         |  1.66 |  1.83 |
|       minibike      |  16.4 | 17.67 |
|        cradle       |  33.6 | 37.32 |
|         oven        |  1.28 |  1.34 |
|         ball        | 23.43 | 47.05 |
|         food        | 16.68 | 18.47 |
|         step        |  0.4  |  0.51 |
|         tank        | 20.41 | 23.53 |
|      trade name     |  9.61 | 10.01 |
|      microwave      | 17.71 | 18.68 |
|         pot         |  6.04 |  6.19 |
|        animal       | 17.07 | 17.65 |
|       bicycle       | 14.53 | 23.86 |
|         lake        | 44.53 | 46.32 |
|      dishwasher     |  8.21 |  8.53 |
|        screen       | 41.63 | 47.65 |
|       blanket       | 11.41 | 12.28 |
|      sculpture      |  3.04 |  3.88 |
|         hood        | 27.61 | 31.43 |
|        sconce       | 27.51 | 34.43 |
|         vase        | 15.63 | 21.33 |
|    traffic light    | 15.57 | 20.17 |
|         tray        |  3.7  |  5.18 |
|        ashcan       |  7.61 |  7.98 |
|         fan         | 36.66 | 42.08 |
|         pier        |  1.04 |  1.07 |
|      crt screen     |  0.06 |  0.15 |
|        plate        | 39.03 | 50.56 |
|       monitor       |  6.5  |  8.56 |
|    bulletin board   | 20.78 | 28.02 |
|        shower       |  0.63 |  1.17 |
|       radiator      |  43.6 | 47.05 |
|        glass        |  5.11 |  5.37 |
|        clock        | 13.07 | 14.45 |
|         flag        |  12.2 | 13.03 |
+---------------------+-------+-------+
07/13 21:23:11 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 62.7400  mIoU: 23.9000  mAcc: 29.4000  data_time: 0.0025  time: 1.8163
07/13 21:23:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1256916945
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1256916945
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 21:23:15 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 21:23:18 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 21:23:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 21:23:18 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 21:23:19 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/13 21:23:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2142227989
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2142227989
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 21:23:31 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 21:23:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 21:23:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 21:23:35 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 21:23:35 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/13 21:23:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 274243033
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 274243033
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 21:23:46 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='apgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 21:23:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 21:23:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 21:23:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 21:23:50 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/13 21:24:00 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1808933683
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1808933683
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 21:24:01 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 21:24:04 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 21:24:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 21:24:04 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 21:24:04 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 21:27:12 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:01:33  time: 2.5992  data_time: 0.0015  memory: 22150  
07/13 21:29:10 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:36:43  time: 2.8083  data_time: 0.0016  memory: 22019  
07/13 21:30:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:20:29  time: 1.7235  data_time: 0.0015  memory: 21734  
07/13 21:32:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:14:18  time: 2.0212  data_time: 0.0014  memory: 22192  
07/13 21:33:53 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:08:40  time: 1.5023  data_time: 0.0014  memory: 22014  
07/13 21:35:26 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:04:19  time: 1.3148  data_time: 0.0015  memory: 22121  
07/13 21:37:08 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:01:35  time: 1.4817  data_time: 0.0013  memory: 22022  
07/13 21:38:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:58:01  time: 1.5628  data_time: 0.0013  memory: 21976  
07/13 21:39:39 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:53:39  time: 1.4108  data_time: 0.0013  memory: 21630  
07/13 21:40:48 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:50:10  time: 1.2119  data_time: 0.0014  memory: 21131  
07/13 21:42:02 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:47:19  time: 1.7782  data_time: 0.0015  memory: 22101  
07/13 21:43:10 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:44:31  time: 1.5842  data_time: 0.0015  memory: 21998  
07/13 21:44:26 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:42:17  time: 1.7775  data_time: 0.0013  memory: 22138  
07/13 21:45:51 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:40:25  time: 1.2651  data_time: 0.0015  memory: 22148  
07/13 21:47:14 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:38:35  time: 2.4790  data_time: 0.0014  memory: 22358  
07/13 21:48:15 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:36:15  time: 1.2704  data_time: 0.0015  memory: 21743  
07/13 21:49:19 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:34:09  time: 1.2768  data_time: 0.0016  memory: 3746  
07/13 21:50:21 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:32:06  time: 1.2550  data_time: 0.0014  memory: 21454  
07/13 21:51:41 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:30:30  time: 1.6375  data_time: 0.0014  memory: 22052  
07/13 21:52:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:28:43  time: 1.1549  data_time: 0.0014  memory: 22065  
07/13 21:54:09 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:27:12  time: 2.1355  data_time: 0.0014  memory: 22366  
07/13 21:55:22 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:25:36  time: 1.2023  data_time: 0.0014  memory: 21643  
07/13 21:56:29 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:23:56  time: 1.4200  data_time: 0.0014  memory: 21377  
07/13 21:57:34 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:22:19  time: 1.1475  data_time: 0.0014  memory: 7177  
07/13 21:58:38 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:20:44  time: 1.3738  data_time: 0.0014  memory: 21669  
07/13 21:59:34 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:19:06  time: 1.1931  data_time: 0.0015  memory: 3777  
07/13 22:00:36 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:17:35  time: 1.1170  data_time: 0.0014  memory: 20997  
07/13 22:01:50 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:16:10  time: 1.5622  data_time: 0.0014  memory: 21859  
07/13 22:02:51 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:14:42  time: 1.4999  data_time: 0.0014  memory: 21485  
07/13 22:03:49 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:14  time: 1.0746  data_time: 0.0013  memory: 3746  
07/13 22:04:55 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:11:51  time: 1.2018  data_time: 0.0014  memory: 22000  
07/13 22:05:54 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:27  time: 1.2082  data_time: 0.0020  memory: 3681  
07/13 22:07:02 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:09:06  time: 1.1174  data_time: 0.0013  memory: 22081  
07/13 22:08:09 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:46  time: 1.2694  data_time: 0.0016  memory: 21609  
07/13 22:09:15 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:27  time: 1.1355  data_time: 0.0014  memory: 21912  
07/13 22:10:17 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:08  time: 1.3054  data_time: 0.0016  memory: 21067  
07/13 22:11:21 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:49  time: 1.2880  data_time: 0.0015  memory: 3321  
07/13 22:12:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:32  time: 1.0916  data_time: 0.0014  memory: 22257  
07/13 22:13:27 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:15  time: 1.1789  data_time: 0.0013  memory: 21303  
07/13 22:14:32 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0756  data_time: 0.0013  memory: 22229  
07/13 22:14:32 - mmengine - INFO - per class results:
07/13 22:14:32 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  1.1  |  1.13 |
|       building      |  2.45 |  2.52 |
|         sky         | 17.06 | 92.58 |
|        floor        |  1.51 |  1.61 |
|         tree        | 10.13 | 68.74 |
|       ceiling       |  3.74 |  4.32 |
|         road        |  0.08 |  0.08 |
|         bed         |  0.03 |  0.03 |
|      windowpane     |  0.03 |  0.03 |
|        grass        |  0.0  |  0.0  |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       |  0.09 |  0.09 |
|        earth        |  0.51 |  0.63 |
|         door        |  0.0  |  0.0  |
|        table        |  0.0  |  0.0  |
|       mountain      |  2.81 | 14.99 |
|        plant        |  0.01 |  0.01 |
|       curtain       |  1.07 |  7.68 |
|        chair        |  0.0  |  0.0  |
|         car         |  0.0  |  0.0  |
|        water        |  0.85 |  4.26 |
|       painting      |  0.0  |  0.0  |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  0.0  |  0.0  |
|         sea         |  0.0  |  0.0  |
|        mirror       |  0.0  |  0.0  |
|         rug         |  0.0  |  0.0  |
|        field        |  0.0  |  0.0  |
|       armchair      |  0.0  |  0.0  |
|         seat        |  0.0  |  0.0  |
|        fence        |  0.0  |  0.0  |
|         desk        |  0.0  |  0.0  |
|         rock        |  0.04 |  0.05 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.0  |  0.0  |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  0.0  |  0.0  |
|       cushion       |  0.0  |  0.0  |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.0  |  0.0  |
|      signboard      |  0.27 |  0.27 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.0  |  0.0  |
|         sink        |  0.0  |  0.0  |
|      skyscraper     |  1.61 |  9.28 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  0.19 |  0.19 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.0  |  0.0  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.0  |  0.0  |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.0  |  0.0  |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.01 |  0.02 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.04 |  0.04 |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.0  |  0.0  |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.0  |  0.0  |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.55 |  8.99 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.31 |  0.31 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/13 22:14:32 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 12.6200  mIoU: 0.3000  mAcc: 1.4500  data_time: 0.0022  time: 1.5137
07/13 22:14:48 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 499890698
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 499890698
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 22:14:49 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 22:14:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 22:14:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 22:14:58 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 22:14:58 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 22:18:08 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:03:45  time: 2.7952  data_time: 0.0018  memory: 22150  
07/13 22:20:17 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:40:56  time: 2.8947  data_time: 0.0020  memory: 22019  
07/13 22:21:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:23:35  time: 1.7709  data_time: 0.0017  memory: 21734  
07/13 22:23:32 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:17:05  time: 2.0471  data_time: 0.0017  memory: 22192  
07/13 22:25:11 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:11:34  time: 1.5262  data_time: 0.0016  memory: 22014  
07/13 22:26:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:06:37  time: 1.2292  data_time: 0.0017  memory: 22121  
07/13 22:28:23 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:03:13  time: 1.5438  data_time: 0.0055  memory: 22022  
07/13 22:29:51 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:59:33  time: 1.5306  data_time: 0.0015  memory: 21976  
07/13 22:30:54 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:54:52  time: 1.3513  data_time: 0.0016  memory: 21630  
07/13 22:32:02 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:51:11  time: 1.1162  data_time: 0.0016  memory: 21131  
07/13 22:33:13 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:48:06  time: 1.6032  data_time: 0.0017  memory: 22101  
07/13 22:34:19 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:45:08  time: 1.5049  data_time: 0.0018  memory: 21998  
07/13 22:35:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:42:48  time: 1.9616  data_time: 0.0015  memory: 22138  
07/13 22:36:59 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:40:53  time: 1.2913  data_time: 0.0017  memory: 22148  
07/13 22:38:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:39:00  time: 2.5238  data_time: 0.0016  memory: 22358  
07/13 22:39:23 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:36:37  time: 1.2311  data_time: 0.0017  memory: 21743  
07/13 22:40:25 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:34:25  time: 1.2329  data_time: 0.0017  memory: 3746  
07/13 22:41:25 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:32:19  time: 1.2256  data_time: 0.0016  memory: 21454  
07/13 22:42:43 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:30:40  time: 1.5852  data_time: 0.0016  memory: 22052  
07/13 22:43:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:28:49  time: 1.1097  data_time: 0.0016  memory: 22065  
07/13 22:45:05 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:27:14  time: 1.9509  data_time: 0.0016  memory: 22366  
07/13 22:46:15 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:25:35  time: 1.1671  data_time: 0.0016  memory: 21643  
07/13 22:47:20 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:23:55  time: 1.4085  data_time: 0.0016  memory: 21377  
07/13 22:48:22 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:22:15  time: 1.0976  data_time: 0.0016  memory: 7177  
07/13 22:49:25 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:20:40  time: 1.3873  data_time: 0.0016  memory: 21669  
07/13 22:50:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:19:02  time: 1.1489  data_time: 0.0015  memory: 3777  
07/13 22:51:20 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:17:30  time: 1.0590  data_time: 0.0016  memory: 20997  
07/13 22:52:33 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:16:06  time: 1.5285  data_time: 0.0016  memory: 21859  
07/13 22:53:34 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:14:38  time: 1.5392  data_time: 0.0015  memory: 21485  
07/13 22:54:29 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:10  time: 1.0296  data_time: 0.0016  memory: 3746  
07/13 22:55:32 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:11:46  time: 1.1614  data_time: 0.0016  memory: 22000  
07/13 22:56:29 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:22  time: 1.1653  data_time: 0.0017  memory: 3681  
07/13 22:57:34 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:09:02  time: 1.0274  data_time: 0.0015  memory: 22081  
07/13 22:58:40 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:42  time: 1.2263  data_time: 0.0017  memory: 21609  
07/13 22:59:45 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:23  time: 1.1005  data_time: 0.0015  memory: 21912  
07/13 23:00:45 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:05  time: 1.2341  data_time: 0.0017  memory: 21067  
07/13 23:01:46 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:47  time: 1.2504  data_time: 0.0017  memory: 3321  
07/13 23:02:44 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:30  time: 1.0492  data_time: 0.0016  memory: 22257  
07/13 23:03:48 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:15  time: 1.1362  data_time: 0.0016  memory: 21303  
07/13 23:04:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0252  data_time: 0.0015  memory: 22229  
07/13 23:04:51 - mmengine - INFO - per class results:
07/13 23:04:51 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.0  |  0.0  |
|       building      | 0.0  |  0.0  |
|         sky         | 8.89 | 99.94 |
|        floor        | 0.0  |  0.0  |
|         tree        | 0.0  |  0.0  |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.0  |  0.0  |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.0  |  0.0  |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 23:04:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.8700  mIoU: 0.0600  mAcc: 0.6700  data_time: 0.0025  time: 1.4963
07/13 23:04:55 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1417908337
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1417908337
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 23:04:56 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='segpgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B1'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 23:04:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 23:04:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 23:04:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 23:05:00 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B1/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
07/13 23:08:06 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:00:43  time: 2.4834  data_time: 0.0024  memory: 22150  
07/13 23:10:02 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:35:41  time: 2.7206  data_time: 0.0022  memory: 22019  
07/13 23:11:25 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:19:08  time: 1.6413  data_time: 0.0022  memory: 21734  
07/13 23:13:10 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 1:13:27  time: 1.9875  data_time: 0.0019  memory: 22192  
07/13 23:14:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:07:58  time: 1.4786  data_time: 0.0020  memory: 22014  
07/13 23:16:14 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:03:40  time: 1.2698  data_time: 0.0022  memory: 22121  
07/13 23:17:53 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:00:44  time: 1.4643  data_time: 0.0019  memory: 22022  
07/13 23:19:19 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:57:15  time: 1.5624  data_time: 0.0027  memory: 21976  
07/13 23:20:22 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:52:55  time: 1.3934  data_time: 0.0018  memory: 21630  
07/13 23:21:29 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:49:27  time: 1.1535  data_time: 0.0019  memory: 21131  
07/13 23:22:41 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:46:36  time: 1.6446  data_time: 0.0021  memory: 22101  
07/13 23:23:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:43:48  time: 1.5276  data_time: 0.0024  memory: 21998  
07/13 23:25:01 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:41:35  time: 1.7594  data_time: 0.0019  memory: 22138  
07/13 23:26:25 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:39:45  time: 1.2387  data_time: 0.0019  memory: 22148  
07/13 23:27:48 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:38:00  time: 2.4835  data_time: 0.0021  memory: 22358  
07/13 23:28:50 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:35:44  time: 1.2473  data_time: 0.0017  memory: 21743  
07/13 23:29:52 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:33:37  time: 1.2486  data_time: 0.0018  memory: 3746  
07/13 23:30:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:31:37  time: 1.2384  data_time: 0.0016  memory: 21454  
07/13 23:32:12 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:30:03  time: 1.6574  data_time: 0.0017  memory: 22052  
07/13 23:33:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:28:17  time: 1.1200  data_time: 0.0016  memory: 22065  
07/13 23:34:35 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:26:46  time: 1.9626  data_time: 0.0019  memory: 22366  
07/13 23:35:48 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:25:11  time: 1.1994  data_time: 0.0017  memory: 21643  
07/13 23:36:53 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:23:33  time: 1.3842  data_time: 0.0017  memory: 21377  
07/13 23:37:57 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:21:57  time: 1.1289  data_time: 0.0017  memory: 7178  
07/13 23:39:01 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:20:24  time: 1.3489  data_time: 0.0016  memory: 21669  
07/13 23:39:56 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:18:48  time: 1.1595  data_time: 0.0017  memory: 3778  
07/13 23:41:00 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:17:19  time: 1.1255  data_time: 0.0017  memory: 20997  
07/13 23:42:17 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:15:58  time: 1.6557  data_time: 0.0016  memory: 21859  
07/13 23:43:22 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:14:33  time: 1.6799  data_time: 0.0016  memory: 21485  
07/13 23:44:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:13:07  time: 1.0990  data_time: 0.0016  memory: 3746  
07/13 23:45:27 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:11:44  time: 1.1818  data_time: 0.0016  memory: 22000  
07/13 23:46:27 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:10:21  time: 1.2036  data_time: 0.0018  memory: 3680  
07/13 23:47:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:09:02  time: 1.0644  data_time: 0.0018  memory: 22081  
07/13 23:48:43 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:07:42  time: 1.2323  data_time: 0.0018  memory: 21609  
07/13 23:49:50 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:06:24  time: 1.1364  data_time: 0.0016  memory: 21912  
07/13 23:50:51 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:05:05  time: 1.2638  data_time: 0.0018  memory: 21067  
07/13 23:51:54 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:48  time: 1.2373  data_time: 0.0018  memory: 3321  
07/13 23:52:55 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:31  time: 1.1116  data_time: 0.0016  memory: 22257  
07/13 23:54:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:15  time: 1.1905  data_time: 0.0016  memory: 21303  
07/13 23:55:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0436  data_time: 0.0019  memory: 22229  
07/13 23:55:06 - mmengine - INFO - per class results:
07/13 23:55:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 42.94 | 87.95 |
|       building      | 61.38 |  75.9 |
|         sky         | 89.78 | 95.29 |
|        floor        |  44.2 | 58.36 |
|         tree        | 45.04 | 57.34 |
|       ceiling       | 64.93 | 74.31 |
|         road        | 53.29 | 59.46 |
|         bed         | 62.02 | 72.22 |
|      windowpane     |  49.0 | 61.89 |
|        grass        | 39.76 | 47.34 |
|       cabinet       | 34.29 |  42.7 |
|       sidewalk      | 43.51 | 53.75 |
|        person       | 49.89 | 59.57 |
|        earth        | 21.65 | 34.54 |
|         door        | 22.55 |  28.2 |
|        table        | 28.11 | 39.73 |
|       mountain      | 36.87 | 54.71 |
|        plant        | 23.38 | 27.07 |
|       curtain       | 48.43 | 59.89 |
|        chair        | 27.11 | 36.16 |
|         car         | 56.15 | 64.87 |
|        water        | 31.68 | 41.49 |
|       painting      | 50.69 | 67.94 |
|         sofa        | 30.62 |  39.3 |
|        shelf        | 25.62 | 34.36 |
|        house        | 30.17 | 41.51 |
|         sea         | 32.78 | 53.06 |
|        mirror       |  37.0 | 43.33 |
|         rug         | 23.73 | 25.42 |
|        field        | 17.73 | 33.26 |
|       armchair      | 15.58 | 20.43 |
|         seat        | 30.35 | 35.83 |
|        fence        | 18.98 | 22.94 |
|         desk        | 25.74 | 33.01 |
|         rock        |  19.5 | 25.74 |
|       wardrobe      | 28.76 | 36.86 |
|         lamp        | 44.53 |  54.5 |
|       bathtub       | 50.05 | 59.05 |
|       railing       |  18.6 | 23.71 |
|       cushion       | 28.56 | 33.86 |
|         base        |  6.4  |  7.63 |
|         box         |  8.22 | 10.46 |
|        column       | 23.27 | 32.08 |
|      signboard      | 21.45 | 32.53 |
|   chest of drawers  | 19.08 | 23.81 |
|       counter       | 11.94 | 15.21 |
|         sand        | 23.77 | 39.47 |
|         sink        | 44.69 | 57.83 |
|      skyscraper     | 16.48 |  20.7 |
|      fireplace      |  30.6 | 32.73 |
|     refrigerator    | 28.15 | 31.05 |
|      grandstand     | 29.89 | 47.97 |
|         path        | 11.51 | 14.06 |
|        stairs       | 13.19 | 14.62 |
|        runway       | 39.88 | 51.78 |
|         case        |  28.4 | 36.01 |
|      pool table     |  38.0 | 39.63 |
|        pillow       | 39.01 | 49.47 |
|     screen door     | 26.86 | 32.75 |
|       stairway      | 13.13 | 17.06 |
|        river        |  3.98 |  5.55 |
|        bridge       |  9.58 | 10.86 |
|       bookcase      | 26.95 | 32.11 |
|        blind        | 12.37 | 13.91 |
|     coffee table    | 15.75 | 18.32 |
|        toilet       | 59.63 | 65.04 |
|        flower       | 21.98 | 29.77 |
|         book        | 33.08 | 42.92 |
|         hill        |  4.71 |  7.55 |
|        bench        | 19.31 | 23.78 |
|      countertop     | 30.63 |  39.4 |
|        stove        | 20.95 | 21.69 |
|         palm        |  20.8 | 26.24 |
|    kitchen island   | 12.85 | 14.93 |
|       computer      | 44.21 | 50.78 |
|     swivel chair    |  2.33 |  2.35 |
|         boat        | 25.39 | 27.27 |
|         bar         | 10.04 | 10.65 |
|    arcade machine   |  1.82 |  1.83 |
|        hovel        | 20.58 | 22.23 |
|         bus         | 53.87 | 56.79 |
|        towel        | 44.94 | 51.91 |
|        light        |  35.1 | 38.07 |
|        truck        |  3.28 |  3.49 |
|        tower        |  5.32 |  7.31 |
|      chandelier     | 47.55 | 54.77 |
|        awning       |  5.23 |  5.52 |
|     streetlight     |  8.4  |  9.03 |
|        booth        |  9.51 | 10.11 |
| television receiver |  9.79 | 10.47 |
|       airplane      | 31.52 | 48.49 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  9.45 | 11.82 |
|         pole        |  7.04 |  8.49 |
|         land        |  0.17 |  0.23 |
|      bannister      |  1.89 |  2.26 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       | 15.59 | 18.19 |
|        bottle       |  21.4 |  26.3 |
|        buffet       |  3.51 |  3.82 |
|        poster       | 18.55 | 25.17 |
|        stage        |  7.9  |  9.65 |
|         van         | 21.94 |  28.2 |
|         ship        | 22.55 | 23.49 |
|       fountain      |  2.85 |  2.85 |
|    conveyer belt    | 40.48 | 42.98 |
|        canopy       |  9.38 |  9.78 |
|        washer       | 31.43 | 33.96 |
|      plaything      |  14.8 | 18.97 |
|    swimming pool    | 12.11 | 15.31 |
|        stool        | 10.12 | 11.12 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 16.69 | 18.38 |
|      waterfall      | 49.63 | 56.16 |
|         tent        | 72.94 | 81.45 |
|         bag         |  1.66 |  1.83 |
|       minibike      |  16.4 | 17.67 |
|        cradle       |  33.6 | 37.32 |
|         oven        |  1.28 |  1.34 |
|         ball        | 23.43 | 47.05 |
|         food        | 16.68 | 18.47 |
|         step        |  0.4  |  0.51 |
|         tank        | 20.41 | 23.53 |
|      trade name     |  9.61 | 10.01 |
|      microwave      | 17.71 | 18.68 |
|         pot         |  6.04 |  6.19 |
|        animal       | 17.07 | 17.65 |
|       bicycle       | 14.53 | 23.86 |
|         lake        | 44.53 | 46.32 |
|      dishwasher     |  8.21 |  8.53 |
|        screen       | 41.63 | 47.65 |
|       blanket       | 11.41 | 12.28 |
|      sculpture      |  3.04 |  3.88 |
|         hood        | 27.61 | 31.43 |
|        sconce       | 27.51 | 34.43 |
|         vase        | 15.63 | 21.33 |
|    traffic light    | 15.57 | 20.17 |
|         tray        |  3.7  |  5.18 |
|        ashcan       |  7.61 |  7.98 |
|         fan         | 36.66 | 42.08 |
|         pier        |  1.04 |  1.07 |
|      crt screen     |  0.06 |  0.15 |
|        plate        | 39.03 | 50.56 |
|       monitor       |  6.5  |  8.56 |
|    bulletin board   | 20.78 | 28.02 |
|        shower       |  0.63 |  1.17 |
|       radiator      |  43.6 | 47.05 |
|        glass        |  5.11 |  5.37 |
|        clock        | 13.07 | 14.45 |
|         flag        |  12.2 | 13.03 |
+---------------------+-------+-------+
07/13 23:55:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 62.7300  mIoU: 23.9000  mAcc: 29.4000  data_time: 0.0026  time: 1.5028
Runtime: 29174

============================= JOB FEEDBACK =============================

NodeName=uc2n485
Job ID: 23861454
Array Job ID: 23860916_2
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 06:35:05
CPU Efficiency: 5.07% of 5-09:48:00 core-walltime
Job Wall-clock time: 08:06:45
Memory Utilized: 3.39 GB
Memory Efficiency: 3.39% of 100.00 GB
