Started at Tue Aug  6 18:00:11 CEST 2024
08/06 18:02:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 743327494
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 743327494
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

08/06 18:02:10 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b0_20220624-7e0fe6dd.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    enable_normalization=False,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B0/segformer_mit-b0_512x512_160k_ade20k_20210726_101530-8ffa8fda.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=0.01, epsilon=2, iterations=5, name='cospgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=32,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b0_20220624-7e0fe6dd.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption=None,
        enable_normalization=False,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            32,
            64,
            160,
            256,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    enable_normalization=False,
    normalize_mean_std=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ], std=[
            58.395,
            57.12,
            57.375,
        ]),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B0/attack_cospgd/norm_linf/iterations_5/epsilon_2/alpha_0.01'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
08/06 18:04:15 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
08/06 18:04:15 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
08/06 18:04:17 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B0/segformer_mit-b0_512x512_160k_ade20k_20210726_101530-8ffa8fda.pth
08/06 18:04:18 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B0/segformer_mit-b0_512x512_160k_ade20k_20210726_101530-8ffa8fda.pth
08/06 18:06:49 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:38:24  time: 0.9516  data_time: 0.0016  memory: 21524  
08/06 18:07:40 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:04:02  time: 1.1675  data_time: 0.0017  memory: 21380  
08/06 18:08:13 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:48:19  time: 0.6212  data_time: 0.0016  memory: 21184  
08/06 18:08:59 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:42:09  time: 0.8515  data_time: 0.0015  memory: 21556  
08/06 18:09:44 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:38:01  time: 0.5667  data_time: 0.0015  memory: 21390  
08/06 18:10:23 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:34:28  time: 0.3754  data_time: 0.0016  memory: 21499  
08/06 18:11:03 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:31:49  time: 0.5589  data_time: 0.0015  memory: 21399  
08/06 18:11:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:29:09  time: 0.5553  data_time: 0.0015  memory: 21387  
08/06 18:11:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:26:23  time: 0.5501  data_time: 0.0014  memory: 21085  
08/06 18:12:20 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:24:04  time: 0.3253  data_time: 0.0015  memory: 20689  
08/06 18:12:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:22:08  time: 0.5051  data_time: 0.0015  memory: 21482  
08/06 18:13:03 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:20:24  time: 0.5418  data_time: 0.0016  memory: 21368  
08/06 18:13:29 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:19:03  time: 0.5975  data_time: 0.0013  memory: 21482  
08/06 18:14:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:18:01  time: 0.3674  data_time: 0.0016  memory: 21499  
08/06 18:14:32 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:17:03  time: 1.3139  data_time: 0.0015  memory: 21698  
08/06 18:14:51 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:15:49  time: 0.3669  data_time: 0.0016  memory: 21191  
08/06 18:15:09 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:14:41  time: 0.3704  data_time: 0.0017  memory: 3485  
08/06 18:15:30 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:13:41  time: 0.4997  data_time: 0.0014  memory: 20936  
08/06 18:16:00 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:12:56  time: 0.7446  data_time: 0.0016  memory: 21446  
08/06 18:16:23 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:12:04  time: 0.3186  data_time: 0.0014  memory: 21460  
08/06 18:16:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:11:19  time: 0.8048  data_time: 0.0015  memory: 21705  
08/06 18:17:15 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:10:35  time: 0.3509  data_time: 0.0015  memory: 21076  
08/06 18:17:36 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:09:50  time: 0.5498  data_time: 0.0014  memory: 20900  
08/06 18:17:55 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:09:04  time: 0.3111  data_time: 0.0014  memory: 14182  
08/06 18:18:15 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:08:22  time: 0.5183  data_time: 0.0015  memory: 21095  
08/06 18:18:30 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:38  time: 0.3234  data_time: 0.0014  memory: 3499  
08/06 18:18:49 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:59  time: 0.3029  data_time: 0.0014  memory: 20559  
08/06 18:19:15 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:06:24  time: 0.5490  data_time: 0.0014  memory: 21274  
08/06 18:19:34 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:47  time: 0.5555  data_time: 0.0014  memory: 20968  
08/06 18:19:50 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:05:10  time: 0.2892  data_time: 0.0014  memory: 3484  
08/06 18:20:10 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:36  time: 0.3275  data_time: 0.0014  memory: 21406  
08/06 18:20:27 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:04:02  time: 0.3456  data_time: 0.0016  memory: 3415  
08/06 18:20:49 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:30  time: 0.2926  data_time: 0.0014  memory: 21472  
08/06 18:21:11 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:58  time: 0.3538  data_time: 0.0015  memory: 21085  
08/06 18:21:32 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:27  time: 0.3205  data_time: 0.0014  memory: 21335  
08/06 18:21:51 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:56  time: 0.3784  data_time: 0.0016  memory: 20617  
08/06 18:22:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:26  time: 0.3702  data_time: 0.0017  memory: 3076  
08/06 18:22:26 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:57  time: 0.2922  data_time: 0.0014  memory: 21608  
08/06 18:22:48 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:28  time: 0.3232  data_time: 0.0014  memory: 20835  
08/06 18:23:09 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2920  data_time: 0.0013  memory: 20835  
08/06 18:23:10 - mmengine - INFO - per class results:
08/06 18:23:10 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  18.3 | 31.83 |
|       building      | 14.78 | 20.13 |
|         sky         | 55.93 | 58.29 |
|        floor        | 20.32 | 30.26 |
|         tree        | 22.72 | 29.13 |
|       ceiling       |  24.1 | 30.36 |
|         road        |  20.7 | 24.66 |
|         bed         | 18.49 | 30.68 |
|      windowpane     | 12.86 | 20.79 |
|        grass        | 12.28 | 17.46 |
|       cabinet       |  9.95 | 21.77 |
|       sidewalk      |  7.01 | 13.34 |
|        person       | 31.19 | 40.45 |
|        earth        |  1.26 |  2.67 |
|         door        |  3.1  |  7.79 |
|        table        |  6.28 | 14.34 |
|       mountain      |  9.97 | 21.39 |
|        plant        |  9.37 |  17.2 |
|       curtain       | 13.07 |  31.4 |
|        chair        |  7.25 | 15.11 |
|         car         | 34.48 | 40.26 |
|        water        |  6.22 | 12.25 |
|       painting      | 16.67 | 27.09 |
|         sofa        |  5.42 | 13.43 |
|        shelf        |  1.84 |  5.59 |
|        house        |  1.01 |  4.29 |
|         sea         |  8.3  | 24.05 |
|        mirror       |  3.38 | 26.11 |
|         rug         |  6.8  | 13.65 |
|        field        |  0.08 |  0.28 |
|       armchair      |  2.63 |  5.97 |
|         seat        |  6.07 | 15.87 |
|        fence        |  3.22 |  9.69 |
|         desk        |  4.31 |  11.4 |
|         rock        |  7.9  | 14.96 |
|       wardrobe      |  2.85 | 11.33 |
|         lamp        | 14.81 | 24.64 |
|       bathtub       |  4.7  |  6.81 |
|       railing       |  2.55 |  6.87 |
|       cushion       |  7.47 | 21.28 |
|         base        |  0.35 |  1.47 |
|         box         |  2.17 |  4.83 |
|        column       |  1.66 |  4.4  |
|      signboard      |  4.83 | 13.54 |
|   chest of drawers  | 11.62 |  20.8 |
|       counter       |  0.78 |  1.02 |
|         sand        |  0.08 |  0.17 |
|         sink        | 13.31 | 22.89 |
|      skyscraper     |  4.71 |  9.68 |
|      fireplace      |  7.1  | 14.05 |
|     refrigerator    |  3.86 |  9.46 |
|      grandstand     |  0.27 |  1.24 |
|         path        |  3.27 |  5.65 |
|        stairs       |  2.38 |  5.08 |
|        runway       |  7.8  | 12.69 |
|         case        |  0.38 |  0.83 |
|      pool table     | 47.29 | 52.59 |
|        pillow       |  7.62 | 14.54 |
|     screen door     |  3.2  | 23.23 |
|       stairway      |  2.5  |  3.92 |
|        river        |  0.03 |  0.06 |
|        bridge       |  1.75 | 13.68 |
|       bookcase      |  4.29 | 12.31 |
|        blind        |  1.22 |  2.03 |
|     coffee table    |  7.93 | 14.97 |
|        toilet       | 23.13 | 30.81 |
|        flower       |  6.49 | 21.99 |
|         book        | 10.09 | 18.11 |
|         hill        |  0.72 |  1.32 |
|        bench        | 10.09 | 16.21 |
|      countertop     |  5.21 | 13.17 |
|        stove        |  6.51 | 10.57 |
|         palm        |  4.27 | 31.19 |
|    kitchen island   |  0.38 |  1.6  |
|       computer      | 11.38 | 16.65 |
|     swivel chair    |  7.58 | 14.35 |
|         boat        |  0.46 |  0.69 |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  2.02 |  4.3  |
|        towel        |  3.52 | 13.38 |
|        light        | 10.45 | 11.47 |
|        truck        |  1.2  |  9.13 |
|        tower        |  0.98 |  6.75 |
|      chandelier     | 13.29 | 19.48 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  3.67 |  4.6  |
|        booth        |  0.33 |  1.54 |
| television receiver | 15.09 | 19.37 |
|       airplane      |  7.1  |  30.4 |
|      dirt track     |  0.1  |  0.56 |
|       apparel       |  5.21 | 10.93 |
|         pole        |  2.1  |  3.84 |
|         land        |  0.02 |  0.03 |
|      bannister      |  0.36 |  0.64 |
|      escalator      |  0.46 |  0.95 |
|       ottoman       |  0.31 |  0.92 |
|        bottle       |  1.06 |  2.12 |
|        buffet       |  0.03 |  0.07 |
|        poster       |  1.55 |  3.53 |
|        stage        |  0.65 |  3.59 |
|         van         |  1.7  |  3.36 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.48 |  1.57 |
|        washer       | 20.21 | 24.59 |
|      plaything      |  0.46 |  1.33 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  2.59 |  4.67 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  2.45 |  6.76 |
|      waterfall      |  7.01 | 10.85 |
|         tent        |  8.29 | 21.73 |
|         bag         |  0.54 |  0.75 |
|       minibike      |  1.74 |  3.83 |
|        cradle       | 17.67 | 40.24 |
|         oven        |  0.63 |  1.42 |
|         ball        |  0.07 |  0.08 |
|         food        |  4.85 |  5.48 |
|         step        |  0.35 |  0.68 |
|         tank        | 13.11 | 16.93 |
|      trade name     |  1.38 |  1.72 |
|      microwave      |  4.83 |  6.49 |
|         pot         |  3.39 |  4.55 |
|        animal       | 24.59 | 30.64 |
|       bicycle       | 10.31 | 30.63 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  5.65 |  9.65 |
|        screen       | 14.38 | 23.75 |
|       blanket       |  1.02 |  2.85 |
|      sculpture      |  0.13 |  1.16 |
|         hood        |  5.94 | 14.72 |
|        sconce       |  5.97 |  7.53 |
|         vase        |  4.96 | 10.98 |
|    traffic light    |  2.71 |  5.27 |
|         tray        |  0.58 |  0.89 |
|        ashcan       |  0.32 |  0.51 |
|         fan         |  9.92 | 14.93 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  2.87 |  3.72 |
|       monitor       |  3.7  |  4.38 |
|    bulletin board   |  7.72 | 10.69 |
|        shower       |  0.08 |  2.24 |
|       radiator      |  8.71 |  10.3 |
|        glass        |  2.06 |  2.9  |
|        clock        |  7.19 |  8.98 |
|         flag        |  5.85 |  7.45 |
+---------------------+-------+-------+
08/06 18:23:10 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 26.0000  mIoU: 6.4800  mAcc: 11.5000  data_time: 0.0030  time: 0.5655
/var/spool/slurmd/job23933915/slurm_script: line 28: date +%s: command not found
Runtime: 0

============================= JOB FEEDBACK =============================

NodeName=uc2n513
Job ID: 23933915
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 8
CPU Utilized: 00:13:30
CPU Efficiency: 7.14% of 03:09:04 core-walltime
Job Wall-clock time: 00:23:38
Memory Utilized: 2.64 GB
Memory Efficiency: 13.21% of 20.00 GB
