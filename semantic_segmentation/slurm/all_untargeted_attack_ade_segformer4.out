Started at Sat Jul 13 15:48:51 CEST 2024
07/13 15:50:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 959243713
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 959243713
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 15:50:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 15:51:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 15:51:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 15:51:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 15:51:03 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 15:55:51 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:07:00  time: 4.1466  data_time: 0.0029  memory: 25150  
07/13 15:59:08 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:33:35  time: 4.4215  data_time: 0.0021  memory: 25019  
07/13 16:01:51 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:13:17  time: 3.3053  data_time: 0.0016  memory: 24220  
07/13 16:04:58 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:05:19  time: 3.5863  data_time: 0.0017  memory: 25155  
07/13 16:07:51 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:57:37  time: 3.0759  data_time: 0.0016  memory: 24893  
07/13 16:10:41 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:51:17  time: 2.8608  data_time: 0.0016  memory: 24993  
07/13 16:13:38 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:46:28  time: 3.0040  data_time: 0.0016  memory: 24900  
07/13 16:16:21 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:41:13  time: 3.1354  data_time: 0.0015  memory: 24904  
07/13 16:18:38 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:35:01  time: 2.8780  data_time: 0.0015  memory: 24048  
07/13 16:21:04 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:30:03  time: 2.6984  data_time: 0.0016  memory: 22981  
07/13 16:23:37 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:25:50  time: 3.2672  data_time: 0.0017  memory: 24963  
07/13 16:26:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:21:34  time: 3.1456  data_time: 0.0017  memory: 24951  
07/13 16:28:33 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:17:53  time: 3.3666  data_time: 0.0015  memory: 25239  
07/13 16:31:17 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:14:43  time: 2.8296  data_time: 0.0017  memory: 25205  
07/13 16:33:58 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:11:31  time: 4.0449  data_time: 0.0015  memory: 25525  
07/13 16:36:14 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:07:46  time: 2.8207  data_time: 0.0016  memory: 24230  
07/13 16:38:36 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:04:19  time: 2.8366  data_time: 0.0016  memory: 7185  
07/13 16:40:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:00:52  time: 2.7552  data_time: 0.0014  memory: 23715  
07/13 16:43:34 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:58:01  time: 3.3092  data_time: 0.0015  memory: 24864  
07/13 16:45:57 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:54:53  time: 2.6782  data_time: 0.0015  memory: 24883  
07/13 16:48:36 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:52:03  time: 3.6326  data_time: 0.0015  memory: 25535  
07/13 16:51:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:49:08  time: 2.7682  data_time: 0.0016  memory: 24188  
07/13 16:53:32 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:46:10  time: 2.9914  data_time: 0.0015  memory: 23441  
07/13 16:55:55 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:43:14  time: 2.6723  data_time: 0.0023  memory: 8738  
07/13 16:58:15 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:40:18  time: 2.8961  data_time: 0.0014  memory: 24267  
07/13 17:00:24 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:37:20  time: 2.7256  data_time: 0.0015  memory: 7268  
07/13 17:02:41 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:34:29  time: 2.5719  data_time: 0.0014  memory: 22809  
07/13 17:05:13 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:31:46  time: 3.1831  data_time: 0.0014  memory: 24557  
07/13 17:07:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:28:59  time: 3.0941  data_time: 0.0014  memory: 23746  
07/13 17:09:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:26:13  time: 2.5554  data_time: 0.0014  memory: 7184  
07/13 17:12:08 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:23:32  time: 2.7633  data_time: 0.0015  memory: 24744  
07/13 17:14:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:20:49  time: 2.7486  data_time: 0.0016  memory: 7102  
07/13 17:16:46 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:18:10  time: 2.5166  data_time: 0.0014  memory: 24905  
07/13 17:19:11 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:15:32  time: 2.7923  data_time: 0.0017  memory: 23916  
07/13 17:21:35 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:12:55  time: 2.6897  data_time: 0.0014  memory: 24547  
07/13 17:23:52 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:10:18  time: 2.8693  data_time: 0.0017  memory: 22950  
07/13 17:26:14 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:07:42  time: 2.8359  data_time: 0.0016  memory: 6364  
07/13 17:28:28 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:07  time: 2.6055  data_time: 0.0015  memory: 25312  
07/13 17:30:51 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:33  time: 2.6838  data_time: 0.0014  memory: 24042  
07/13 17:33:12 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.5401  data_time: 0.0016  memory: 25332  
07/13 17:33:12 - mmengine - INFO - per class results:
07/13 17:33:12 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 26.28 | 52.75 |
|       building      | 29.15 | 38.31 |
|         sky         | 41.01 | 82.96 |
|        floor        | 21.67 | 30.94 |
|         tree        | 19.57 | 56.95 |
|       ceiling       | 22.33 | 50.71 |
|         road        |  11.5 | 13.48 |
|         bed         |  5.64 |  6.19 |
|      windowpane     | 13.66 | 18.14 |
|        grass        |  8.09 |  8.75 |
|       cabinet       |  0.21 |  0.21 |
|       sidewalk      |  1.33 |  1.37 |
|        person       | 22.12 | 35.69 |
|        earth        |  4.69 |  11.9 |
|         door        |  0.92 |  1.05 |
|        table        |  3.65 |  4.24 |
|       mountain      |  8.27 | 30.16 |
|        plant        |  0.56 |  0.59 |
|       curtain       |  2.24 |  2.58 |
|        chair        |  3.95 |  4.47 |
|         car         | 22.26 | 28.72 |
|        water        |  1.36 |  4.41 |
|       painting      | 10.38 | 10.56 |
|         sofa        |  1.48 |  1.6  |
|        shelf        |  2.67 |  2.68 |
|        house        |  17.0 | 26.43 |
|         sea         |  3.13 |  4.37 |
|        mirror       |  0.57 |  0.59 |
|         rug         |  0.58 |  0.59 |
|        field        |  1.81 |  2.69 |
|       armchair      |  2.18 |  2.25 |
|         seat        |  1.91 |  2.33 |
|        fence        |  2.19 |  2.37 |
|         desk        |  1.79 |  2.09 |
|         rock        |  5.09 | 17.19 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  1.82 |  1.95 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  9.45 | 17.98 |
|       cushion       |  0.34 |  0.34 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  2.71 |  7.1  |
|      signboard      |  2.14 |  2.62 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  2.65 |  3.55 |
|         sink        |  5.81 | 15.76 |
|      skyscraper     |  1.97 |  2.04 |
|      fireplace      |  1.04 |  1.05 |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.48 |  0.57 |
|        stairs       |  4.68 |  8.17 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  2.69 |  2.7  |
|        pillow       |  1.52 |  1.56 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  2.55 | 12.51 |
|        river        |  0.57 |  1.17 |
|        bridge       |  4.81 | 11.13 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.46 |  0.46 |
|        toilet       |  0.16 |  0.16 |
|        flower       |  0.48 |  0.67 |
|         book        |  0.0  |  0.0  |
|         hill        |  1.41 | 11.37 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  7.34 | 10.47 |
|        stove        |  0.1  |  0.1  |
|         palm        |  6.87 |  7.11 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.9  |  0.9  |
|     swivel chair    |  0.05 |  0.06 |
|         boat        |  0.0  |  0.0  |
|         bar         | 10.94 | 13.06 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         | 57.89 | 61.33 |
|        towel        |  0.0  |  0.0  |
|        light        |  0.16 |  0.17 |
|        truck        |  0.0  |  0.0  |
|        tower        |  5.33 | 15.43 |
|      chandelier     |  2.72 |  2.94 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.08 |  0.08 |
|        booth        |  0.0  |  0.0  |
| television receiver |  1.7  |  1.77 |
|       airplane      |  4.18 |  4.56 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.51 | 20.72 |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.03 |  0.03 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 17.43 |  17.5 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        | 11.45 | 12.95 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  1.52 |  4.31 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.06 |  0.06 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  9.72 | 10.09 |
|       bicycle       |  2.69 |  3.14 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.28 |  0.29 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  1.58 |  1.59 |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.35 |  0.44 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  5.32 |  11.2 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  6.46 |  7.28 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.29 |  0.29 |
+---------------------+-------+-------+
07/13 17:33:12 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 32.0600  mIoU: 3.5000  mAcc: 5.8100  data_time: 0.0025  time: 3.0641
07/13 17:33:29 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1096070798
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1096070798
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 17:33:30 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='pgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 17:33:40 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 17:33:40 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 17:33:41 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 17:33:43 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 17:38:11 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:54:22  time: 4.1379  data_time: 0.0020  memory: 25150  
07/13 17:41:27 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:27:00  time: 4.3687  data_time: 0.0021  memory: 25019  
07/13 17:44:10 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:08:54  time: 3.2816  data_time: 0.0016  memory: 24220  
07/13 17:47:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:02:40  time: 3.6062  data_time: 0.0017  memory: 25155  
07/13 17:50:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:55:28  time: 3.0546  data_time: 0.0016  memory: 24893  
07/13 17:53:02 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:49:29  time: 2.8660  data_time: 0.0017  memory: 24993  
07/13 17:56:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:45:21  time: 3.4228  data_time: 0.0016  memory: 24900  
07/13 17:58:51 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:40:33  time: 3.1544  data_time: 0.0014  memory: 24904  
07/13 18:01:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:34:27  time: 2.8733  data_time: 0.0014  memory: 24048  
07/13 18:03:33 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:29:31  time: 2.6750  data_time: 0.0015  memory: 22981  
07/13 18:06:05 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:25:21  time: 3.2620  data_time: 0.0016  memory: 24963  
07/13 18:08:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:21:07  time: 3.1488  data_time: 0.0016  memory: 24951  
07/13 18:11:01 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:17:28  time: 3.3631  data_time: 0.0014  memory: 25239  
07/13 18:13:45 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:14:20  time: 2.8458  data_time: 0.0015  memory: 25205  
07/13 18:16:26 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:11:12  time: 4.0706  data_time: 0.0015  memory: 25525  
07/13 18:18:43 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:07:30  time: 2.8413  data_time: 0.0017  memory: 24230  
07/13 18:21:07 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:04:07  time: 2.8981  data_time: 0.0016  memory: 7185  
07/13 18:23:28 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:00:48  time: 3.1886  data_time: 0.0015  memory: 23715  
07/13 18:26:13 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:58:01  time: 3.2098  data_time: 0.0015  memory: 24864  
07/13 18:28:37 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:54:53  time: 2.6594  data_time: 0.0015  memory: 24883  
07/13 18:31:15 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:52:03  time: 3.6616  data_time: 0.0015  memory: 25535  
07/13 18:33:58 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:49:17  time: 2.7348  data_time: 0.0015  memory: 24188  
07/13 18:36:22 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:46:17  time: 2.9893  data_time: 0.0015  memory: 23441  
07/13 18:38:46 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:43:21  time: 2.7603  data_time: 0.0207  memory: 8738  
07/13 18:41:09 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:40:27  time: 2.9463  data_time: 0.0015  memory: 24267  
07/13 18:43:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:37:28  time: 2.7304  data_time: 0.0015  memory: 7268  
07/13 18:45:39 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:34:37  time: 2.5859  data_time: 0.0015  memory: 22809  
07/13 18:48:11 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:31:54  time: 3.1734  data_time: 0.0014  memory: 24557  
07/13 18:50:26 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:29:05  time: 3.0716  data_time: 0.0014  memory: 23746  
07/13 18:52:38 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:26:18  time: 2.5267  data_time: 0.0014  memory: 7184  
07/13 18:55:02 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:23:36  time: 2.7416  data_time: 0.0015  memory: 24744  
07/13 18:57:16 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:20:53  time: 2.7736  data_time: 0.0016  memory: 7102  
07/13 18:59:38 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:18:13  time: 2.5027  data_time: 0.0014  memory: 24905  
07/13 19:02:02 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:15:34  time: 2.7771  data_time: 0.0016  memory: 23916  
07/13 19:04:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:12:57  time: 2.6479  data_time: 0.0014  memory: 24547  
07/13 19:06:39 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:10:19  time: 2.8112  data_time: 0.0016  memory: 22950  
07/13 19:08:59 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:07:43  time: 2.7941  data_time: 0.0017  memory: 6364  
07/13 19:11:12 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:07  time: 2.5778  data_time: 0.0015  memory: 25312  
07/13 19:13:34 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:33  time: 2.6441  data_time: 0.0015  memory: 24042  
07/13 19:15:53 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.4878  data_time: 0.0013  memory: 25332  
07/13 19:15:53 - mmengine - INFO - per class results:
07/13 19:15:53 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.02 |  0.02 |
|       building      | 0.0  |  0.0  |
|         sky         | 8.98 | 99.95 |
|        floor        | 0.0  |  0.0  |
|         tree        | 0.76 |  0.94 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.0  |  0.0  |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.01 |  0.01 |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/13 19:15:53 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.9200  mIoU: 0.0700  mAcc: 0.6700  data_time: 0.0026  time: 3.0645
07/13 19:16:20 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 157443478
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 157443478
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 19:16:20 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='pgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 19:16:32 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 19:16:32 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 19:16:33 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 19:16:34 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 19:21:03 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:54:46  time: 4.1277  data_time: 0.0020  memory: 25150  
07/13 19:24:18 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:26:42  time: 4.3194  data_time: 0.0022  memory: 25019  
07/13 19:26:59 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:08:20  time: 3.2350  data_time: 0.0016  memory: 24220  
07/13 19:30:05 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:01:31  time: 3.5708  data_time: 0.0016  memory: 25155  
07/13 19:32:58 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:54:42  time: 3.0405  data_time: 0.0016  memory: 24891  
07/13 19:35:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:49:02  time: 2.8863  data_time: 0.0018  memory: 24993  
07/13 19:38:46 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:44:38  time: 3.0982  data_time: 0.0016  memory: 24900  
07/13 19:41:34 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:39:57  time: 3.2349  data_time: 0.0015  memory: 24904  
07/13 19:43:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:34:12  time: 2.9701  data_time: 0.0015  memory: 24047  
07/13 19:46:26 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:29:33  time: 2.7805  data_time: 0.0015  memory: 22981  
07/13 19:49:01 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:25:31  time: 3.3297  data_time: 0.0016  memory: 24963  
07/13 19:51:30 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:21:29  time: 3.2737  data_time: 0.0016  memory: 24951  
07/13 19:54:07 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:17:58  time: 3.4374  data_time: 0.0014  memory: 25239  
07/13 19:56:55 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:14:55  time: 2.9130  data_time: 0.0016  memory: 25205  
07/13 19:59:40 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:11:49  time: 4.1397  data_time: 0.0015  memory: 25525  
07/13 20:02:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:08:08  time: 2.8990  data_time: 0.0016  memory: 24230  
07/13 20:04:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:04:44  time: 2.9237  data_time: 0.0017  memory: 7183  
07/13 20:06:46 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:01:20  time: 2.8118  data_time: 0.0014  memory: 23715  
07/13 20:09:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:58:27  time: 3.2723  data_time: 0.0015  memory: 24864  
07/13 20:11:50 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:55:15  time: 2.6048  data_time: 0.0015  memory: 24883  
07/13 20:14:26 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:52:20  time: 3.5482  data_time: 0.0015  memory: 25535  
07/13 20:16:54 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:49:20  time: 2.6599  data_time: 0.0017  memory: 24188  
07/13 20:19:13 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:46:18  time: 2.9164  data_time: 0.0014  memory: 23441  
07/13 20:21:33 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:43:18  time: 2.6629  data_time: 0.0093  memory: 8739  
07/13 20:23:53 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:40:22  time: 2.8623  data_time: 0.0015  memory: 24267  
07/13 20:26:00 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:37:22  time: 2.6777  data_time: 0.0015  memory: 7268  
07/13 20:28:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:34:30  time: 2.5380  data_time: 0.0015  memory: 22809  
07/13 20:30:45 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:31:47  time: 3.1272  data_time: 0.0015  memory: 24558  
07/13 20:33:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:28:58  time: 3.0706  data_time: 0.0014  memory: 23746  
07/13 20:35:11 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:26:11  time: 2.5024  data_time: 0.0015  memory: 7183  
07/13 20:37:32 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:23:30  time: 2.7306  data_time: 0.0015  memory: 24744  
07/13 20:39:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:20:47  time: 2.7092  data_time: 0.0016  memory: 7100  
07/13 20:42:07 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:18:08  time: 2.4951  data_time: 0.0014  memory: 24905  
07/13 20:44:30 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:15:30  time: 2.7574  data_time: 0.0016  memory: 23916  
07/13 20:46:53 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:12:53  time: 2.6354  data_time: 0.0015  memory: 24547  
07/13 20:49:07 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:10:16  time: 2.8029  data_time: 0.0016  memory: 22950  
07/13 20:51:26 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:07:41  time: 2.7821  data_time: 0.0016  memory: 6365  
07/13 20:53:38 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:06  time: 2.6650  data_time: 0.0015  memory: 25312  
07/13 20:56:07 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:33  time: 2.7855  data_time: 0.0014  memory: 24042  
07/13 20:58:33 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.6392  data_time: 0.0013  memory: 25332  
07/13 20:58:33 - mmengine - INFO - per class results:
07/13 20:58:33 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 51.87 | 88.09 |
|       building      | 68.11 | 81.89 |
|         sky         | 91.09 | 95.42 |
|        floor        | 51.99 | 65.99 |
|         tree        | 55.08 | 71.86 |
|       ceiling       | 71.25 | 80.14 |
|         road        | 59.78 | 67.45 |
|         bed         | 71.62 | 82.15 |
|      windowpane     | 51.66 |  66.6 |
|        grass        | 39.24 | 45.02 |
|       cabinet       | 42.74 |  53.6 |
|       sidewalk      | 49.35 | 60.26 |
|        person       | 56.83 | 69.95 |
|        earth        | 26.92 | 40.19 |
|         door        | 34.08 | 45.04 |
|        table        | 35.18 | 54.25 |
|       mountain      | 43.33 | 64.19 |
|        plant        | 33.15 | 44.47 |
|       curtain       | 57.04 | 67.79 |
|        chair        | 34.18 | 45.39 |
|         car         | 67.71 | 76.97 |
|        water        | 39.39 | 49.49 |
|       painting      | 59.42 | 73.15 |
|         sofa        | 44.84 | 57.77 |
|        shelf        |  30.7 | 41.28 |
|        house        | 31.08 | 43.03 |
|         sea         | 39.63 | 64.13 |
|        mirror       | 47.97 | 54.24 |
|         rug         | 34.89 | 39.13 |
|        field        | 17.55 | 34.07 |
|       armchair      | 24.61 | 32.01 |
|         seat        |  38.1 | 54.32 |
|        fence        | 26.65 | 35.88 |
|         desk        | 29.26 |  43.2 |
|         rock        | 29.78 | 40.34 |
|       wardrobe      | 37.89 | 47.86 |
|         lamp        | 53.61 | 63.07 |
|       bathtub       | 63.03 | 70.81 |
|       railing       | 25.06 | 37.83 |
|       cushion       |  36.7 | 43.51 |
|         base        |  7.62 |  8.99 |
|         box         | 11.71 | 14.21 |
|        column       | 32.52 | 39.44 |
|      signboard      | 26.29 | 35.67 |
|   chest of drawers  | 25.47 | 30.44 |
|       counter       |  9.09 | 12.24 |
|         sand        | 33.25 | 50.94 |
|         sink        | 60.95 | 69.39 |
|      skyscraper     | 18.88 | 24.42 |
|      fireplace      | 36.79 | 40.16 |
|     refrigerator    |  46.7 | 52.91 |
|      grandstand     | 36.28 | 58.42 |
|         path        | 17.59 | 20.99 |
|        stairs       | 20.14 | 24.52 |
|        runway       |  41.5 | 57.21 |
|         case        | 22.57 | 29.91 |
|      pool table     | 56.91 | 59.92 |
|        pillow       | 44.08 | 55.65 |
|     screen door     | 39.51 | 44.23 |
|       stairway      |  15.0 | 23.27 |
|        river        | 15.09 | 27.48 |
|        bridge       | 10.87 |  12.1 |
|       bookcase      | 37.19 | 50.55 |
|        blind        | 27.65 | 30.42 |
|     coffee table    | 34.61 | 39.22 |
|        toilet       | 70.31 | 74.84 |
|        flower       | 30.44 | 40.27 |
|         book        | 36.69 | 49.09 |
|         hill        |  3.45 |  4.92 |
|        bench        | 30.18 | 34.77 |
|      countertop     | 35.68 | 42.95 |
|        stove        |  37.9 | 40.54 |
|         palm        | 25.21 | 32.78 |
|    kitchen island   | 20.63 | 28.99 |
|       computer      | 51.76 | 57.28 |
|     swivel chair    | 11.73 | 12.72 |
|         boat        |  34.6 | 41.53 |
|         bar         | 12.26 | 15.07 |
|    arcade machine   |  5.9  |  6.11 |
|        hovel        | 34.37 | 40.26 |
|         bus         | 75.58 |  85.5 |
|        towel        | 53.18 | 63.93 |
|        light        | 44.64 | 49.38 |
|        truck        |  3.07 |  3.97 |
|        tower        | 14.51 | 20.73 |
|      chandelier     | 62.17 | 70.78 |
|        awning       |  5.84 |  6.57 |
|     streetlight     | 15.23 | 16.78 |
|        booth        | 31.07 | 33.15 |
| television receiver | 15.78 | 17.75 |
|       airplane      | 39.66 |  60.9 |
|      dirt track     |  8.35 |  9.26 |
|       apparel       | 16.76 | 21.93 |
|         pole        | 10.39 | 12.44 |
|         land        |  3.31 |  5.89 |
|      bannister      |  7.08 |  9.68 |
|      escalator      |  1.47 |  1.49 |
|       ottoman       | 26.01 | 30.04 |
|        bottle       | 28.12 |  46.0 |
|        buffet       | 21.79 | 23.33 |
|        poster       | 23.42 |  31.6 |
|        stage        |  8.41 |  9.98 |
|         van         | 40.86 |  51.6 |
|         ship        | 49.47 |  56.9 |
|       fountain      | 10.53 | 10.84 |
|    conveyer belt    | 75.17 | 80.68 |
|        canopy       | 13.26 | 13.73 |
|        washer       | 43.24 | 44.95 |
|      plaything      | 16.37 | 20.36 |
|    swimming pool    |  21.0 | 21.53 |
|        stool        |  14.9 | 17.72 |
|        barrel       | 12.32 | 14.31 |
|        basket       | 11.92 | 14.16 |
|      waterfall      | 58.11 | 72.67 |
|         tent        | 74.56 | 95.41 |
|         bag         |  2.67 |  2.94 |
|       minibike      | 34.61 | 41.22 |
|        cradle       | 65.09 | 78.93 |
|         oven        |  2.51 |  3.12 |
|         ball        | 10.38 | 11.24 |
|         food        | 27.07 | 30.99 |
|         step        |  5.09 |  5.99 |
|         tank        | 21.51 | 22.16 |
|      trade name     | 17.73 | 19.62 |
|      microwave      | 25.34 | 27.33 |
|         pot         |  11.2 | 12.32 |
|        animal       | 24.52 |  25.1 |
|       bicycle       | 29.72 | 43.04 |
|         lake        | 47.91 | 49.68 |
|      dishwasher     | 34.74 | 37.42 |
|        screen       | 47.52 | 66.44 |
|       blanket       |  7.85 |  8.51 |
|      sculpture      | 10.65 | 12.29 |
|         hood        | 33.96 | 35.04 |
|        sconce       |  39.3 | 48.54 |
|         vase        | 27.32 | 38.03 |
|    traffic light    |  21.2 | 26.86 |
|         tray        |  6.75 | 18.87 |
|        ashcan       | 11.83 | 13.02 |
|         fan         |  49.7 | 60.33 |
|         pier        | 12.92 | 15.49 |
|      crt screen     |  5.8  | 12.85 |
|        plate        | 39.11 | 48.53 |
|       monitor       | 26.32 |  29.8 |
|    bulletin board   | 18.74 | 23.93 |
|        shower       |  0.89 |  1.08 |
|       radiator      | 46.83 | 50.04 |
|        glass        |  9.94 | 10.76 |
|        clock        | 21.45 | 28.13 |
|         flag        | 19.81 | 21.49 |
+---------------------+-------+-------+
07/13 20:58:33 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 69.1200  mIoU: 31.6500  mAcc: 39.0200  data_time: 0.0025  time: 3.0587
07/13 20:58:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 511272709
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 511272709
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 20:58:47 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 20:58:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 20:58:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 20:58:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 20:58:58 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 21:03:50 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:09:39  time: 4.5909  data_time: 0.0021  memory: 25151  
07/13 21:07:33 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:43:15  time: 5.0133  data_time: 0.0021  memory: 25021  
07/13 21:10:42 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:24:44  time: 3.8001  data_time: 0.0016  memory: 24224  
07/13 21:14:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:17:27  time: 4.0997  data_time: 0.0016  memory: 25159  
07/13 21:17:30 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:09:44  time: 3.5172  data_time: 0.0016  memory: 24897  
07/13 21:20:45 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:03:26  time: 3.2747  data_time: 0.0017  memory: 24998  
07/13 21:24:05 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:58:22  time: 3.4022  data_time: 0.0016  memory: 24904  
07/13 21:27:10 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:52:46  time: 3.4943  data_time: 0.0015  memory: 24906  
07/13 21:29:47 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:46:09  time: 3.2616  data_time: 0.0014  memory: 24051  
07/13 21:32:35 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:40:51  time: 3.1158  data_time: 0.0015  memory: 22983  
07/13 21:35:32 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:36:22  time: 3.7572  data_time: 0.0016  memory: 24966  
07/13 21:38:18 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:31:46  time: 3.6412  data_time: 0.0016  memory: 24953  
07/13 21:41:10 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:27:39  time: 3.7135  data_time: 0.0014  memory: 25242  
07/13 21:44:17 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:24:08  time: 3.2672  data_time: 0.0016  memory: 25206  
07/13 21:47:18 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:20:33  time: 4.6255  data_time: 0.0014  memory: 25530  
07/13 21:49:54 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:16:23  time: 3.2669  data_time: 0.0016  memory: 24231  
07/13 21:52:38 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:12:36  time: 3.3158  data_time: 0.0016  memory: 7189  
07/13 21:55:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:08:41  time: 3.0806  data_time: 0.0014  memory: 23717  
07/13 21:58:11 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:05:26  time: 3.6904  data_time: 0.0015  memory: 24867  
07/13 22:00:52 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:01:53  time: 2.9793  data_time: 0.0015  memory: 24887  
07/13 22:03:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:58:39  time: 4.0104  data_time: 0.0194  memory: 25539  
07/13 22:06:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:55:21  time: 3.0855  data_time: 0.0015  memory: 24189  
07/13 22:09:18 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:51:58  time: 3.3178  data_time: 0.0015  memory: 23444  
07/13 22:11:59 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:48:40  time: 2.9653  data_time: 0.0014  memory: 16120  
07/13 22:14:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:45:20  time: 3.2495  data_time: 0.0014  memory: 24267  
07/13 22:16:58 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:41:59  time: 3.0485  data_time: 0.0014  memory: 7275  
07/13 22:19:33 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:38:47  time: 2.8914  data_time: 0.0014  memory: 22810  
07/13 22:22:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:35:43  time: 3.4709  data_time: 0.0014  memory: 24561  
07/13 22:24:52 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:32:34  time: 3.3869  data_time: 0.0014  memory: 23749  
07/13 22:27:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:29:27  time: 2.8475  data_time: 0.0014  memory: 7189  
07/13 22:30:04 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:26:26  time: 3.0661  data_time: 0.0015  memory: 24750  
07/13 22:32:35 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:23:23  time: 3.0800  data_time: 0.0016  memory: 7112  
07/13 22:35:12 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:20:24  time: 2.7993  data_time: 0.0014  memory: 24910  
07/13 22:37:53 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:17:27  time: 3.1629  data_time: 0.0016  memory: 23922  
07/13 22:40:34 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:14:30  time: 2.9368  data_time: 0.0014  memory: 24553  
07/13 22:43:06 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:11:34  time: 3.2462  data_time: 0.0016  memory: 22950  
07/13 22:45:48 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:08:39  time: 3.2440  data_time: 0.0016  memory: 6366  
07/13 22:48:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:45  time: 2.8511  data_time: 0.0015  memory: 25316  
07/13 22:50:55 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:52  time: 2.9643  data_time: 0.0014  memory: 24042  
07/13 22:53:31 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.8082  data_time: 0.0013  memory: 25335  
07/13 22:53:31 - mmengine - INFO - per class results:
07/13 22:53:31 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 25.32 |  50.7 |
|       building      | 29.67 | 38.92 |
|         sky         | 39.27 | 82.86 |
|        floor        | 21.57 | 30.79 |
|         tree        | 20.08 | 57.76 |
|       ceiling       |  22.7 | 51.67 |
|         road        | 11.98 | 13.96 |
|         bed         |  6.93 |  7.49 |
|      windowpane     | 13.83 | 17.88 |
|        grass        |  8.89 |  9.42 |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  1.99 |  2.03 |
|        person       | 23.67 | 37.71 |
|        earth        |  4.34 |  11.5 |
|         door        |  0.9  |  1.06 |
|        table        |  3.93 |  4.58 |
|       mountain      |  7.34 |  25.9 |
|        plant        |  0.69 |  0.71 |
|       curtain       |  2.52 |  2.86 |
|        chair        |  4.15 |  4.75 |
|         car         | 22.31 | 27.48 |
|        water        |  1.65 |  5.31 |
|       painting      |  7.39 |  7.52 |
|         sofa        |  1.64 |  1.7  |
|        shelf        |  2.9  |  2.91 |
|        house        | 12.64 |  21.4 |
|         sea         |  2.97 |  4.36 |
|        mirror       |  1.88 |  1.93 |
|         rug         |  0.5  |  0.5  |
|        field        |  1.32 |  1.81 |
|       armchair      |  1.34 |  1.37 |
|         seat        |  1.89 |  2.43 |
|        fence        |  2.26 |  2.43 |
|         desk        |  2.9  |  3.24 |
|         rock        |  4.8  | 18.47 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  2.67 |  2.79 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  9.38 | 18.55 |
|       cushion       |  0.34 |  0.34 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  1.67 |  3.88 |
|      signboard      |  2.66 |  3.42 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.03 |  0.03 |
|         sand        |  1.21 |  1.5  |
|         sink        |  4.4  | 11.86 |
|      skyscraper     |  4.47 |  4.67 |
|      fireplace      |  0.34 |  0.34 |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.03 |  0.14 |
|         path        |  0.5  |  0.63 |
|        stairs       |  4.94 |  8.6  |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  2.27 |  2.27 |
|        pillow       |  1.42 |  1.45 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  3.24 |  16.3 |
|        river        |  0.1  |  0.2  |
|        bridge       |  4.91 | 10.79 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.46 |  0.46 |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.47 |  0.68 |
|         book        |  0.0  |  0.0  |
|         hill        |  1.22 |  9.36 |
|        bench        |  0.09 |  0.09 |
|      countertop     |  4.03 |  6.54 |
|        stove        |  0.0  |  0.0  |
|         palm        |  7.09 |  7.26 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.89 |  0.89 |
|     swivel chair    |  0.42 |  0.43 |
|         boat        |  0.16 |  0.19 |
|         bar         | 11.12 | 13.93 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         | 13.21 | 13.69 |
|        towel        |  0.0  |  0.0  |
|        light        |  0.74 |  0.74 |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.9  |  2.87 |
|      chandelier     |  2.48 |  2.68 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.07 |  0.07 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.59 |  0.67 |
|       airplane      | 12.01 | 13.23 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.93 | 33.66 |
|      bannister      |  0.03 |  0.06 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.08 |  0.08 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.01 |  0.01 |
|        canopy       |  0.0  |  0.0  |
|        washer       | 17.67 | 17.68 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        | 10.42 | 11.77 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      | 12.88 |  22.7 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.01 |  0.01 |
|       minibike      |  2.74 |  4.04 |
|        cradle       |  0.91 |  0.91 |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.01 |  0.01 |
|         pot         |  0.0  |  0.0  |
|        animal       |  6.64 |  7.08 |
|       bicycle       |  3.14 |  3.83 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  1.92 |  2.06 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.78 |  0.85 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  3.0  |  7.34 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  9.9  | 10.98 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.24 |  0.24 |
+---------------------+-------+-------+
07/13 22:53:31 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 31.8100  mIoU: 3.2700  mAcc: 5.6000  data_time: 0.0027  time: 3.4359
07/13 22:54:23 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 920972281
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 920972281
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/13 22:54:24 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='cospgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/13 22:54:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/13 22:54:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/13 22:54:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 22:54:50 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/13 23:00:22 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:35:54  time: 4.6349  data_time: 0.0021  memory: 25151  
07/13 23:04:03 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:55:13  time: 4.9536  data_time: 0.0022  memory: 25021  
07/13 23:07:09 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:31:54  time: 3.7108  data_time: 0.0017  memory: 24224  
07/13 23:10:39 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:22:18  time: 4.0916  data_time: 0.0017  memory: 25159  
07/13 23:13:53 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:13:21  time: 3.5095  data_time: 0.0016  memory: 24897  
07/13 23:17:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:06:35  time: 3.3685  data_time: 0.0016  memory: 24998  
07/13 23:20:33 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:01:14  time: 3.4615  data_time: 0.0015  memory: 24904  
07/13 23:23:41 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:55:22  time: 3.6094  data_time: 0.0015  memory: 24906  
07/13 23:26:19 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:48:27  time: 3.2845  data_time: 0.0014  memory: 24051  
07/13 23:29:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:42:49  time: 3.0784  data_time: 0.0014  memory: 22983  
07/13 23:32:02 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:38:03  time: 3.7236  data_time: 0.0016  memory: 24966  
07/13 23:34:45 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:33:07  time: 3.5486  data_time: 0.0016  memory: 24953  
07/13 23:37:33 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:28:41  time: 3.6530  data_time: 0.0014  memory: 25242  
07/13 23:40:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:24:57  time: 3.2061  data_time: 0.0016  memory: 25206  
07/13 23:43:34 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:21:12  time: 4.6205  data_time: 0.0014  memory: 25530  
07/13 23:46:10 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:16:58  time: 3.2868  data_time: 0.0016  memory: 24231  
07/13 23:48:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:13:09  time: 3.3295  data_time: 0.0016  memory: 7189  
07/13 23:51:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:09:13  time: 3.0894  data_time: 0.0014  memory: 23717  
07/13 23:54:29 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:05:55  time: 3.6889  data_time: 0.0015  memory: 24867  
07/13 23:57:13 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:02:22  time: 3.0494  data_time: 0.0015  memory: 24887  
07/14 00:00:15 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:59:10  time: 4.2566  data_time: 0.0101  memory: 25539  
07/14 00:03:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:55:52  time: 3.1814  data_time: 0.0015  memory: 24189  
07/14 00:05:51 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:52:28  time: 3.3802  data_time: 0.0015  memory: 23444  
07/14 00:08:33 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:49:08  time: 2.9611  data_time: 0.0014  memory: 16120  
07/14 00:11:08 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:45:46  time: 3.2598  data_time: 0.0014  memory: 24267  
07/14 00:13:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:42:23  time: 3.1213  data_time: 0.0015  memory: 7275  
07/14 00:16:11 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:39:09  time: 2.9229  data_time: 0.0014  memory: 22810  
07/14 00:18:59 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:36:03  time: 3.4599  data_time: 0.0014  memory: 24561  
07/14 00:21:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:32:52  time: 3.4164  data_time: 0.0014  memory: 23749  
07/14 00:24:01 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:29:43  time: 2.8538  data_time: 0.0014  memory: 7189  
07/14 00:26:44 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:26:40  time: 3.0738  data_time: 0.0014  memory: 24750  
07/14 00:29:16 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:23:36  time: 3.1144  data_time: 0.0016  memory: 7112  
07/14 00:31:54 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:20:35  time: 2.8277  data_time: 0.0013  memory: 24910  
07/14 00:34:35 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:17:36  time: 3.1821  data_time: 0.0016  memory: 23922  
07/14 00:37:16 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:14:37  time: 2.9553  data_time: 0.0014  memory: 24553  
07/14 00:39:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:11:39  time: 3.2541  data_time: 0.0016  memory: 22950  
07/14 00:42:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:08:43  time: 3.2452  data_time: 0.0016  memory: 6366  
07/14 00:45:00 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:47  time: 2.8528  data_time: 0.0014  memory: 25316  
07/14 00:47:38 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:53  time: 2.9859  data_time: 0.0014  memory: 24042  
07/14 00:50:15 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.8113  data_time: 0.0013  memory: 25335  
07/14 00:50:16 - mmengine - INFO - per class results:
07/14 00:50:16 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.02 |  0.02 |
|       building      | 0.01 |  0.01 |
|         sky         | 8.99 | 99.95 |
|        floor        | 0.0  |  0.0  |
|         tree        | 0.72 |  0.9  |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.01 |  0.01 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.02 |  0.02 |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/14 00:50:16 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.9200  mIoU: 0.0700  mAcc: 0.6700  data_time: 0.0025  time: 3.4621
07/14 00:50:32 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 617542257
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 617542257
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 00:50:33 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='cospgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 00:50:39 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 00:50:39 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 00:50:39 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 00:50:41 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 00:55:37 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:12:46  time: 4.5887  data_time: 0.0021  memory: 25151  
07/14 00:59:18 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:43:37  time: 4.9279  data_time: 0.0020  memory: 25021  
07/14 01:02:21 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:24:00  time: 3.6914  data_time: 0.0025  memory: 24224  
07/14 01:05:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:16:04  time: 4.0285  data_time: 0.0016  memory: 25159  
07/14 01:09:01 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:08:18  time: 3.4462  data_time: 0.0016  memory: 24897  
07/14 01:12:14 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:02:07  time: 3.2947  data_time: 0.0017  memory: 24998  
07/14 01:15:32 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:57:08  time: 3.3537  data_time: 0.0015  memory: 24904  
07/14 01:18:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:51:37  time: 3.5625  data_time: 0.0015  memory: 24906  
07/14 01:21:13 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:45:11  time: 3.2768  data_time: 0.0014  memory: 24050  
07/14 01:23:56 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:39:43  time: 2.9806  data_time: 0.0017  memory: 22983  
07/14 01:26:45 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:35:04  time: 3.6335  data_time: 0.0016  memory: 24966  
07/14 01:29:29 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:30:30  time: 3.5914  data_time: 0.0016  memory: 24953  
07/14 01:32:18 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:26:24  time: 3.6813  data_time: 0.0014  memory: 25242  
07/14 01:35:21 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:22:57  time: 3.2259  data_time: 0.0016  memory: 25206  
07/14 01:38:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:19:29  time: 4.6073  data_time: 0.0014  memory: 25530  
07/14 01:40:56 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:15:22  time: 3.2092  data_time: 0.0016  memory: 24231  
07/14 01:43:38 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:11:37  time: 3.2360  data_time: 0.0016  memory: 7189  
07/14 01:46:09 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:07:47  time: 3.0390  data_time: 0.0014  memory: 23717  
07/14 01:49:06 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:04:33  time: 3.5998  data_time: 0.0015  memory: 24867  
07/14 01:51:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:01:02  time: 2.9545  data_time: 0.0015  memory: 24887  
07/14 01:54:40 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:57:52  time: 3.9545  data_time: 0.0015  memory: 25539  
07/14 01:57:32 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:54:40  time: 3.0943  data_time: 0.0015  memory: 24190  
07/14 02:00:09 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:51:20  time: 3.2936  data_time: 0.0016  memory: 23444  
07/14 02:02:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:48:04  time: 2.9470  data_time: 0.0014  memory: 16119  
07/14 02:05:22 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:44:48  time: 3.2034  data_time: 0.0014  memory: 24269  
07/14 02:07:45 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:41:29  time: 3.0058  data_time: 0.0015  memory: 7275  
07/14 02:10:18 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:38:19  time: 2.8707  data_time: 0.0015  memory: 22810  
07/14 02:13:04 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:35:18  time: 3.4592  data_time: 0.0014  memory: 24561  
07/14 02:15:35 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:32:11  time: 3.4031  data_time: 0.0014  memory: 23749  
07/14 02:18:03 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:29:07  time: 2.8092  data_time: 0.0014  memory: 7188  
07/14 02:20:43 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:26:07  time: 3.0418  data_time: 0.0015  memory: 24750  
07/14 02:23:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:23:07  time: 3.0389  data_time: 0.0016  memory: 7111  
07/14 02:25:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:20:11  time: 2.8649  data_time: 0.0014  memory: 24910  
07/14 02:28:36 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:17:16  time: 3.1910  data_time: 0.0016  memory: 23922  
07/14 02:31:19 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:14:22  time: 2.9898  data_time: 0.0014  memory: 24553  
07/14 02:33:54 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:11:27  time: 3.2949  data_time: 0.0016  memory: 22950  
07/14 02:36:36 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:08:35  time: 3.2472  data_time: 0.0016  memory: 6368  
07/14 02:39:07 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:42  time: 2.8990  data_time: 0.0015  memory: 25316  
07/14 02:41:48 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:50  time: 3.0565  data_time: 0.0015  memory: 24042  
07/14 02:44:28 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.8626  data_time: 0.0014  memory: 25335  
07/14 02:44:28 - mmengine - INFO - per class results:
07/14 02:44:28 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 51.87 | 88.09 |
|       building      | 68.11 | 81.89 |
|         sky         | 91.09 | 95.42 |
|        floor        | 51.99 | 65.99 |
|         tree        | 55.08 | 71.86 |
|       ceiling       | 71.24 | 80.14 |
|         road        | 59.78 | 67.44 |
|         bed         | 71.62 | 82.15 |
|      windowpane     | 51.66 |  66.6 |
|        grass        | 39.24 | 45.02 |
|       cabinet       | 42.74 |  53.6 |
|       sidewalk      | 49.35 | 60.26 |
|        person       | 56.83 | 69.95 |
|        earth        | 26.92 | 40.19 |
|         door        | 34.08 | 45.04 |
|        table        | 35.18 | 54.25 |
|       mountain      | 43.33 | 64.19 |
|        plant        | 33.15 | 44.47 |
|       curtain       | 57.04 | 67.79 |
|        chair        | 34.18 | 45.39 |
|         car         | 67.71 | 76.97 |
|        water        | 39.39 | 49.49 |
|       painting      | 59.42 | 73.15 |
|         sofa        | 44.84 | 57.77 |
|        shelf        |  30.7 | 41.28 |
|        house        | 31.08 | 43.03 |
|         sea         | 39.63 | 64.13 |
|        mirror       | 47.97 | 54.24 |
|         rug         | 34.89 | 39.13 |
|        field        | 17.55 | 34.07 |
|       armchair      | 24.61 | 32.01 |
|         seat        |  38.1 | 54.32 |
|        fence        | 26.65 | 35.88 |
|         desk        | 29.26 |  43.2 |
|         rock        | 29.78 | 40.34 |
|       wardrobe      |  37.9 | 47.87 |
|         lamp        | 53.61 | 63.07 |
|       bathtub       | 63.03 | 70.81 |
|       railing       | 25.06 | 37.83 |
|       cushion       |  36.7 | 43.51 |
|         base        |  7.62 |  8.99 |
|         box         | 11.71 | 14.21 |
|        column       | 32.52 | 39.44 |
|      signboard      | 26.29 | 35.67 |
|   chest of drawers  | 25.47 | 30.44 |
|       counter       |  9.09 | 12.24 |
|         sand        | 33.25 | 50.94 |
|         sink        | 60.95 | 69.39 |
|      skyscraper     | 18.88 | 24.42 |
|      fireplace      | 36.79 | 40.16 |
|     refrigerator    |  46.7 | 52.91 |
|      grandstand     | 36.28 | 58.42 |
|         path        | 17.59 | 20.99 |
|        stairs       | 20.14 | 24.52 |
|        runway       | 41.51 | 57.27 |
|         case        | 22.57 | 29.91 |
|      pool table     | 56.91 | 59.92 |
|        pillow       | 44.08 | 55.65 |
|     screen door     | 39.51 | 44.23 |
|       stairway      |  15.0 | 23.27 |
|        river        | 15.09 | 27.48 |
|        bridge       | 10.87 |  12.1 |
|       bookcase      | 37.19 | 50.55 |
|        blind        | 27.65 | 30.42 |
|     coffee table    | 34.61 | 39.22 |
|        toilet       | 70.31 | 74.84 |
|        flower       | 30.44 | 40.27 |
|         book        | 36.69 | 49.09 |
|         hill        |  3.45 |  4.92 |
|        bench        | 30.18 | 34.77 |
|      countertop     | 35.68 | 42.95 |
|        stove        |  37.9 | 40.54 |
|         palm        | 25.21 | 32.78 |
|    kitchen island   | 20.63 | 28.99 |
|       computer      | 51.76 | 57.28 |
|     swivel chair    | 11.73 | 12.72 |
|         boat        |  34.6 | 41.53 |
|         bar         | 12.26 | 15.07 |
|    arcade machine   |  5.9  |  6.11 |
|        hovel        | 34.37 | 40.26 |
|         bus         | 75.58 |  85.5 |
|        towel        | 53.18 | 63.93 |
|        light        | 44.64 | 49.37 |
|        truck        |  3.07 |  3.97 |
|        tower        | 14.51 | 20.73 |
|      chandelier     | 62.17 | 70.78 |
|        awning       |  5.84 |  6.57 |
|     streetlight     | 15.23 | 16.78 |
|        booth        | 31.07 | 33.15 |
| television receiver | 15.78 | 17.75 |
|       airplane      | 39.66 |  60.9 |
|      dirt track     |  8.35 |  9.26 |
|       apparel       | 16.76 | 21.93 |
|         pole        | 10.39 | 12.44 |
|         land        |  3.32 |  5.89 |
|      bannister      |  7.08 |  9.68 |
|      escalator      |  1.47 |  1.49 |
|       ottoman       | 26.01 | 30.04 |
|        bottle       | 28.12 |  46.0 |
|        buffet       | 21.79 | 23.33 |
|        poster       | 23.42 |  31.6 |
|        stage        |  8.41 |  9.98 |
|         van         | 40.86 |  51.6 |
|         ship        | 49.47 |  56.9 |
|       fountain      | 10.53 | 10.84 |
|    conveyer belt    | 75.17 | 80.68 |
|        canopy       | 13.26 | 13.73 |
|        washer       | 43.24 | 44.95 |
|      plaything      | 16.37 | 20.36 |
|    swimming pool    |  21.0 | 21.53 |
|        stool        |  14.9 | 17.72 |
|        barrel       | 12.32 | 14.31 |
|        basket       | 11.92 | 14.16 |
|      waterfall      | 58.11 | 72.67 |
|         tent        | 74.56 | 95.41 |
|         bag         |  2.67 |  2.94 |
|       minibike      | 34.61 | 41.22 |
|        cradle       | 65.09 | 78.93 |
|         oven        |  2.51 |  3.12 |
|         ball        | 10.38 | 11.24 |
|         food        | 27.07 | 30.99 |
|         step        |  5.09 |  5.99 |
|         tank        | 21.51 | 22.16 |
|      trade name     | 17.73 | 19.62 |
|      microwave      | 25.34 | 27.33 |
|         pot         |  11.2 | 12.32 |
|        animal       | 24.52 |  25.1 |
|       bicycle       | 29.72 | 43.04 |
|         lake        | 47.91 | 49.68 |
|      dishwasher     | 34.74 | 37.42 |
|        screen       | 47.52 | 66.44 |
|       blanket       |  7.85 |  8.51 |
|      sculpture      | 10.65 | 12.29 |
|         hood        | 33.96 | 35.04 |
|        sconce       |  39.3 | 48.54 |
|         vase        | 27.32 | 38.03 |
|    traffic light    |  21.2 | 26.86 |
|         tray        |  6.75 | 18.87 |
|        ashcan       | 11.83 | 13.02 |
|         fan         |  49.7 | 60.33 |
|         pier        | 12.92 | 15.49 |
|      crt screen     |  5.8  | 12.85 |
|        plate        | 39.11 | 48.53 |
|       monitor       | 26.32 |  29.8 |
|    bulletin board   | 18.74 | 23.93 |
|        shower       |  0.89 |  1.08 |
|       radiator      | 46.83 | 50.04 |
|        glass        |  9.94 | 10.76 |
|        clock        | 21.45 | 28.13 |
|         flag        | 19.81 | 21.49 |
+---------------------+-------+-------+
07/14 02:44:28 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 69.1200  mIoU: 31.6500  mAcc: 39.0300  data_time: 0.0035  time: 3.4128
07/14 02:45:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1802443231
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1802443231
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 02:45:24 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=4, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 02:45:47 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 02:45:47 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 02:45:48 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 02:45:50 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/14 02:46:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 215404911
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 215404911
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 02:46:31 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=8, iterations=20, name='apgd', norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 02:46:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 02:46:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 02:46:35 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 02:46:36 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/14 02:46:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1563854735
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1563854735
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 02:46:46 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='apgd', norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 02:46:50 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 02:46:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 02:46:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 02:46:51 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
Traceback (most recent call last):
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 123, in <module>
    main()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/tools/test.py", line 119, in main
    runner.test()
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1823, in test
    metrics = self.test_loop.run()  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 445, in run
    self.run_iter(idx, data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/runner/loops.py", line 464, in run_iter
    outputs = self.runner.model.test_step(data_batch)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 145, in test_step
    return self._run_forward(data, mode='predict')  # type: ignore
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 361, in _run_forward
    results = self(**data, mode=mode)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/base.py", line 96, in forward
    return self.predict(inputs, data_samples)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 456, in predict
    inputs = self.apgd(model = self.inference, normalize_inputs=normalize, batch_img_metas = batch_img_metas, data_samples=data_samples, n_iter=self.attack_cfg['iterations'], x = inputs/255., y = data_samples[-1].gt_sem_seg, device = inputs.device, eps=self.attack_cfg['epsilon']/255.)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/segmentors/encoder_decoder.py", line 298, in apgd
    loss_best = loss_indiv.detach().view(len(loss_indiv),-1).mean(dim=1)
  File "/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/miniconda3/envs/py310/lib/python3.10/site-packages/torch/_tensor.py", line 894, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
07/14 02:47:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 158503756
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 158503756
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 02:47:02 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 02:47:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 02:47:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 02:47:05 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 02:47:06 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 02:51:42 - mmengine - INFO - Iter(test) [  50/2000]    eta: 2:59:39  time: 4.3760  data_time: 0.0021  memory: 25150  
07/14 02:55:08 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:32:49  time: 4.5027  data_time: 0.0021  memory: 25019  
07/14 02:57:57 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:13:50  time: 3.3864  data_time: 0.0016  memory: 24220  
07/14 03:01:10 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:06:33  time: 3.6857  data_time: 0.0017  memory: 25155  
07/14 03:04:08 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 1:59:13  time: 3.1973  data_time: 0.0016  memory: 24893  
07/14 03:07:04 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:53:06  time: 2.9747  data_time: 0.0016  memory: 24993  
07/14 03:10:06 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:48:27  time: 3.1075  data_time: 0.0016  memory: 24900  
07/14 03:12:56 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:43:19  time: 3.2805  data_time: 0.0016  memory: 24904  
07/14 03:15:19 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:37:10  time: 2.9787  data_time: 0.0014  memory: 24048  
07/14 03:17:50 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:32:12  time: 2.7947  data_time: 0.0014  memory: 22981  
07/14 03:20:27 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:27:56  time: 3.3725  data_time: 0.0015  memory: 24963  
07/14 03:22:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:23:38  time: 3.2395  data_time: 0.0016  memory: 24951  
07/14 03:25:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:19:54  time: 3.4521  data_time: 0.0014  memory: 25239  
07/14 03:28:23 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:16:40  time: 2.9254  data_time: 0.0016  memory: 25205  
07/14 03:31:08 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:13:23  time: 4.1484  data_time: 0.0014  memory: 25525  
07/14 03:33:29 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:09:33  time: 2.9096  data_time: 0.0016  memory: 24230  
07/14 03:35:56 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:06:03  time: 2.9777  data_time: 0.0016  memory: 7185  
07/14 03:38:17 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:02:32  time: 2.8186  data_time: 0.0014  memory: 23715  
07/14 03:41:00 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:59:33  time: 3.2931  data_time: 0.0015  memory: 24864  
07/14 03:43:28 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:56:21  time: 2.7932  data_time: 0.0015  memory: 24883  
07/14 03:46:11 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:53:27  time: 3.6987  data_time: 0.0015  memory: 25535  
07/14 03:48:48 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:50:28  time: 2.8731  data_time: 0.0015  memory: 24188  
07/14 03:51:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:47:25  time: 3.0960  data_time: 0.0014  memory: 23441  
07/14 03:53:46 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:44:26  time: 2.7753  data_time: 0.0015  memory: 8738  
07/14 03:56:12 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:41:27  time: 3.0066  data_time: 0.0014  memory: 24267  
07/14 03:58:29 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:38:25  time: 2.8493  data_time: 0.0014  memory: 7268  
07/14 04:00:53 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:35:31  time: 2.7242  data_time: 0.0015  memory: 22809  
07/14 04:03:29 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:32:44  time: 3.2606  data_time: 0.0014  memory: 24557  
07/14 04:05:51 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:29:51  time: 3.1822  data_time: 0.0014  memory: 23746  
07/14 04:08:13 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:27:02  time: 2.7550  data_time: 0.0014  memory: 7184  
07/14 04:10:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:24:15  time: 2.8362  data_time: 0.0014  memory: 24744  
07/14 04:13:01 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:21:28  time: 2.8287  data_time: 0.0015  memory: 7102  
07/14 04:15:29 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:18:44  time: 2.5934  data_time: 0.0014  memory: 24905  
07/14 04:17:59 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:16:02  time: 2.9185  data_time: 0.0016  memory: 23916  
07/14 04:20:29 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:13:20  time: 2.7782  data_time: 0.0014  memory: 24547  
07/14 04:22:51 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:10:38  time: 2.9752  data_time: 0.0016  memory: 22950  
07/14 04:25:19 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:07:57  time: 2.9556  data_time: 0.0016  memory: 6364  
07/14 04:27:39 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:17  time: 2.7440  data_time: 0.0014  memory: 25312  
07/14 04:30:10 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:38  time: 2.8371  data_time: 0.0014  memory: 24042  
07/14 04:32:38 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.6748  data_time: 0.0013  memory: 25332  
07/14 04:32:38 - mmengine - INFO - per class results:
07/14 04:32:38 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 25.67 | 51.03 |
|       building      | 30.36 | 40.02 |
|         sky         | 39.86 | 82.93 |
|        floor        |  22.4 | 31.93 |
|         tree        | 19.59 | 57.21 |
|       ceiling       | 22.76 | 51.49 |
|         road        | 10.92 | 12.76 |
|         bed         |  7.55 |  8.22 |
|      windowpane     | 12.89 | 17.42 |
|        grass        |  6.97 |  7.44 |
|       cabinet       |  0.01 |  0.01 |
|       sidewalk      |  1.11 |  1.12 |
|        person       | 22.73 | 35.72 |
|        earth        |  4.56 | 11.29 |
|         door        |  1.1  |  1.28 |
|        table        |  4.59 |  5.29 |
|       mountain      |  7.94 | 28.32 |
|        plant        |  0.57 |  0.59 |
|       curtain       |  1.34 |  1.49 |
|        chair        |  3.91 |  4.59 |
|         car         | 23.59 | 28.73 |
|        water        |  3.27 | 10.81 |
|       painting      |  7.14 |  7.34 |
|         sofa        |  1.12 |  1.15 |
|        shelf        |  0.8  |  0.8  |
|        house        | 17.12 | 26.27 |
|         sea         |  3.04 |  4.15 |
|        mirror       |  2.06 |  2.14 |
|         rug         |  0.54 |  0.54 |
|        field        |  1.33 |  1.92 |
|       armchair      |  2.28 |  2.41 |
|         seat        |  0.13 |  0.17 |
|        fence        |  3.0  |  3.25 |
|         desk        |  1.63 |  1.86 |
|         rock        |  6.07 | 24.02 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  1.3  |  1.35 |
|       bathtub       |  0.13 |  0.14 |
|       railing       |  8.78 |  17.4 |
|       cushion       |  0.05 |  0.05 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  2.56 |  6.7  |
|      signboard      |  2.21 |  2.89 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  2.26 |  3.35 |
|         sink        |  4.81 | 13.69 |
|      skyscraper     |  1.81 |  1.9  |
|      fireplace      |  0.36 |  0.36 |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.3  |  0.37 |
|        stairs       |  2.37 |  3.98 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  2.49 |  2.49 |
|        pillow       |  1.58 |  1.59 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  1.85 | 10.38 |
|        river        |  0.46 |  0.93 |
|        bridge       |  5.47 | 12.65 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.61 |  0.61 |
|        toilet       |  0.02 |  0.02 |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  1.15 |  9.42 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  6.92 |  11.1 |
|        stove        |  0.0  |  0.0  |
|         palm        |  2.64 |  2.77 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.4  |  0.41 |
|         boat        |  0.21 |  0.25 |
|         bar         | 12.69 | 15.49 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         | 37.16 | 43.85 |
|        towel        |  0.0  |  0.0  |
|        light        |  0.44 |  0.44 |
|        truck        |  0.0  |  0.0  |
|        tower        |  1.4  |  4.0  |
|      chandelier     |  2.58 |  2.72 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.15 |  0.15 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.7  |  0.75 |
|       airplane      |  5.87 |  6.57 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.41 | 14.83 |
|      bannister      |  0.13 |  0.2  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.25 |  0.35 |
|        canopy       |  0.0  |  0.0  |
|        washer       | 17.34 | 17.34 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  9.17 | 10.85 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  3.29 |  8.67 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  8.63 | 10.32 |
|        cradle       |  0.1  |  0.1  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.3  |  0.3  |
|      microwave      |  0.14 |  0.14 |
|         pot         |  0.0  |  0.0  |
|        animal       |  3.1  |  3.22 |
|       bicycle       |  0.68 |  0.77 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  1.31 |  1.31 |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  1.21 |  1.23 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  2.26 |  5.37 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  7.44 |  7.7  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/14 04:32:38 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 32.0100  mIoU: 3.2500  mAcc: 5.5100  data_time: 0.0024  time: 3.1654
07/14 04:33:09 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 392851946
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 392851946
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 04:33:09 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 04:33:29 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 04:33:29 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 04:33:30 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 04:33:31 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 04:38:17 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:05:55  time: 4.3471  data_time: 0.0021  memory: 25150  
07/14 04:41:44 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:35:57  time: 4.5487  data_time: 0.0021  memory: 25019  
07/14 04:44:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:16:38  time: 3.4517  data_time: 0.0017  memory: 24220  
07/14 04:47:52 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:09:01  time: 3.7666  data_time: 0.0016  memory: 25155  
07/14 04:50:53 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:01:27  time: 3.2543  data_time: 0.0015  memory: 24893  
07/14 04:53:52 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:55:13  time: 3.0378  data_time: 0.0016  memory: 24993  
07/14 04:56:57 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:50:24  time: 3.1740  data_time: 0.0015  memory: 24900  
07/14 04:59:49 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:45:08  time: 3.3037  data_time: 0.0014  memory: 24904  
07/14 05:02:13 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:38:50  time: 3.0226  data_time: 0.0014  memory: 24048  
07/14 05:04:47 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:33:46  time: 2.8474  data_time: 0.0014  memory: 22981  
07/14 05:07:27 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:29:25  time: 3.4236  data_time: 0.0016  memory: 24963  
07/14 05:10:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:25:07  time: 3.3505  data_time: 0.0016  memory: 24951  
07/14 05:12:43 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:21:22  time: 3.5285  data_time: 0.0014  memory: 25239  
07/14 05:15:35 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:18:06  time: 2.9782  data_time: 0.0016  memory: 25205  
07/14 05:18:24 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:14:46  time: 4.2277  data_time: 0.0025  memory: 25525  
07/14 05:20:48 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:10:54  time: 2.9860  data_time: 0.0016  memory: 24230  
07/14 05:23:19 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:07:21  time: 3.0205  data_time: 0.0016  memory: 7185  
07/14 05:25:42 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:03:45  time: 2.9025  data_time: 0.0014  memory: 23715  
07/14 05:28:29 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:00:43  time: 3.3653  data_time: 0.0015  memory: 24864  
07/14 05:31:00 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:57:27  time: 2.8292  data_time: 0.0015  memory: 24883  
07/14 05:33:45 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:54:29  time: 3.7613  data_time: 0.0015  memory: 25535  
07/14 05:36:24 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:51:26  time: 2.8778  data_time: 0.0015  memory: 24188  
07/14 05:39:00 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:48:23  time: 3.5241  data_time: 0.0018  memory: 23441  
07/14 05:41:31 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:45:19  time: 2.8001  data_time: 0.0015  memory: 8738  
07/14 05:43:58 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:42:15  time: 3.0405  data_time: 0.0015  memory: 24267  
07/14 05:46:15 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:39:09  time: 2.8481  data_time: 0.0014  memory: 7268  
07/14 05:48:40 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:36:10  time: 2.7593  data_time: 0.0014  memory: 22809  
07/14 05:51:18 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:33:19  time: 3.3062  data_time: 0.0014  memory: 24557  
07/14 05:53:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:30:24  time: 3.2335  data_time: 0.0014  memory: 23746  
07/14 05:56:04 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:27:30  time: 2.7201  data_time: 0.0014  memory: 7184  
07/14 05:58:35 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:24:41  time: 2.9149  data_time: 0.0015  memory: 24744  
07/14 06:00:58 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:21:51  time: 2.8868  data_time: 0.0016  memory: 7102  
07/14 06:03:28 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:19:04  time: 2.6909  data_time: 0.0014  memory: 24905  
07/14 06:06:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:16:19  time: 2.9509  data_time: 0.0016  memory: 23916  
07/14 06:08:33 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:13:34  time: 2.8189  data_time: 0.0014  memory: 24547  
07/14 06:10:57 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:10:49  time: 3.0318  data_time: 0.0016  memory: 22950  
07/14 06:13:29 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:08:06  time: 3.0234  data_time: 0.0016  memory: 6364  
07/14 06:15:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:23  time: 2.7568  data_time: 0.0014  memory: 25312  
07/14 06:18:23 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:41  time: 2.9042  data_time: 0.0014  memory: 24042  
07/14 06:20:55 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.7596  data_time: 0.0013  memory: 25332  
07/14 06:20:55 - mmengine - INFO - per class results:
07/14 06:20:55 - mmengine - INFO - 
+---------------------+------+-------+
|        Class        | IoU  |  Acc  |
+---------------------+------+-------+
|         wall        | 0.03 |  0.03 |
|       building      | 0.01 |  0.01 |
|         sky         | 9.0  | 99.94 |
|        floor        | 0.0  |  0.0  |
|         tree        | 0.87 |  1.09 |
|       ceiling       | 0.0  |  0.0  |
|         road        | 0.0  |  0.0  |
|         bed         | 0.0  |  0.0  |
|      windowpane     | 0.0  |  0.0  |
|        grass        | 0.0  |  0.0  |
|       cabinet       | 0.0  |  0.0  |
|       sidewalk      | 0.0  |  0.0  |
|        person       | 0.0  |  0.0  |
|        earth        | 0.0  |  0.0  |
|         door        | 0.0  |  0.0  |
|        table        | 0.0  |  0.0  |
|       mountain      | 0.09 |  0.09 |
|        plant        | 0.0  |  0.0  |
|       curtain       | 0.02 |  0.03 |
|        chair        | 0.0  |  0.0  |
|         car         | 0.0  |  0.0  |
|        water        | 0.0  |  0.0  |
|       painting      | 0.0  |  0.0  |
|         sofa        | 0.0  |  0.0  |
|        shelf        | 0.0  |  0.0  |
|        house        | 0.0  |  0.0  |
|         sea         | 0.0  |  0.0  |
|        mirror       | 0.0  |  0.0  |
|         rug         | 0.0  |  0.0  |
|        field        | 0.0  |  0.0  |
|       armchair      | 0.0  |  0.0  |
|         seat        | 0.0  |  0.0  |
|        fence        | 0.0  |  0.0  |
|         desk        | 0.0  |  0.0  |
|         rock        | 0.0  |  0.0  |
|       wardrobe      | 0.0  |  0.0  |
|         lamp        | 0.0  |  0.0  |
|       bathtub       | 0.0  |  0.0  |
|       railing       | 0.0  |  0.0  |
|       cushion       | 0.0  |  0.0  |
|         base        | 0.0  |  0.0  |
|         box         | 0.0  |  0.0  |
|        column       | 0.0  |  0.0  |
|      signboard      | 0.0  |  0.0  |
|   chest of drawers  | 0.0  |  0.0  |
|       counter       | 0.0  |  0.0  |
|         sand        | 0.0  |  0.0  |
|         sink        | 0.0  |  0.0  |
|      skyscraper     | 0.0  |  0.0  |
|      fireplace      | 0.0  |  0.0  |
|     refrigerator    | 0.0  |  0.0  |
|      grandstand     | 0.0  |  0.0  |
|         path        | 0.0  |  0.0  |
|        stairs       | 0.0  |  0.0  |
|        runway       | 0.0  |  0.0  |
|         case        | 0.0  |  0.0  |
|      pool table     | 0.0  |  0.0  |
|        pillow       | 0.0  |  0.0  |
|     screen door     | 0.0  |  0.0  |
|       stairway      | 0.0  |  0.0  |
|        river        | 0.0  |  0.0  |
|        bridge       | 0.0  |  0.0  |
|       bookcase      | 0.0  |  0.0  |
|        blind        | 0.0  |  0.0  |
|     coffee table    | 0.0  |  0.0  |
|        toilet       | 0.0  |  0.0  |
|        flower       | 0.0  |  0.0  |
|         book        | 0.0  |  0.0  |
|         hill        | 0.0  |  0.0  |
|        bench        | 0.0  |  0.0  |
|      countertop     | 0.0  |  0.0  |
|        stove        | 0.0  |  0.0  |
|         palm        | 0.0  |  0.0  |
|    kitchen island   | 0.0  |  0.0  |
|       computer      | 0.0  |  0.0  |
|     swivel chair    | 0.0  |  0.0  |
|         boat        | 0.0  |  0.0  |
|         bar         | 0.0  |  0.0  |
|    arcade machine   | 0.0  |  0.0  |
|        hovel        | 0.0  |  0.0  |
|         bus         | 0.0  |  0.0  |
|        towel        | 0.0  |  0.0  |
|        light        | 0.0  |  0.0  |
|        truck        | 0.0  |  0.0  |
|        tower        | 0.0  |  0.0  |
|      chandelier     | 0.0  |  0.0  |
|        awning       | 0.0  |  0.0  |
|     streetlight     | 0.0  |  0.0  |
|        booth        | 0.0  |  0.0  |
| television receiver | 0.0  |  0.0  |
|       airplane      | 0.0  |  0.0  |
|      dirt track     | 0.0  |  0.0  |
|       apparel       | 0.0  |  0.0  |
|         pole        | 0.0  |  0.0  |
|         land        | 0.0  |  0.0  |
|      bannister      | 0.0  |  0.0  |
|      escalator      | 0.0  |  0.0  |
|       ottoman       | 0.0  |  0.0  |
|        bottle       | 0.0  |  0.0  |
|        buffet       | 0.0  |  0.0  |
|        poster       | 0.0  |  0.0  |
|        stage        | 0.0  |  0.0  |
|         van         | 0.0  |  0.0  |
|         ship        | 0.0  |  0.0  |
|       fountain      | 0.0  |  0.0  |
|    conveyer belt    | 0.0  |  0.0  |
|        canopy       | 0.0  |  0.0  |
|        washer       | 0.0  |  0.0  |
|      plaything      | 0.0  |  0.0  |
|    swimming pool    | 0.0  |  0.0  |
|        stool        | 0.0  |  0.0  |
|        barrel       | 0.0  |  0.0  |
|        basket       | 0.0  |  0.0  |
|      waterfall      | 0.0  |  0.0  |
|         tent        | 0.0  |  0.0  |
|         bag         | 0.0  |  0.0  |
|       minibike      | 0.0  |  0.0  |
|        cradle       | 0.0  |  0.0  |
|         oven        | 0.0  |  0.0  |
|         ball        | 0.0  |  0.0  |
|         food        | 0.0  |  0.0  |
|         step        | 0.0  |  0.0  |
|         tank        | 0.0  |  0.0  |
|      trade name     | 0.0  |  0.0  |
|      microwave      | 0.0  |  0.0  |
|         pot         | 0.0  |  0.0  |
|        animal       | 0.0  |  0.0  |
|       bicycle       | 0.0  |  0.0  |
|         lake        | 0.0  |  0.0  |
|      dishwasher     | 0.0  |  0.0  |
|        screen       | 0.0  |  0.0  |
|       blanket       | 0.0  |  0.0  |
|      sculpture      | 0.0  |  0.0  |
|         hood        | 0.0  |  0.0  |
|        sconce       | 0.0  |  0.0  |
|         vase        | 0.0  |  0.0  |
|    traffic light    | 0.0  |  0.0  |
|         tray        | 0.0  |  0.0  |
|        ashcan       | 0.0  |  0.0  |
|         fan         | 0.0  |  0.0  |
|         pier        | 0.0  |  0.0  |
|      crt screen     | 0.0  |  0.0  |
|        plate        | 0.0  |  0.0  |
|       monitor       | 0.0  |  0.0  |
|    bulletin board   | 0.0  |  0.0  |
|        shower       | 0.0  |  0.0  |
|       radiator      | 0.0  |  0.0  |
|        glass        | 0.0  |  0.0  |
|        clock        | 0.0  |  0.0  |
|         flag        | 0.0  |  0.0  |
+---------------------+------+-------+
07/14 06:20:55 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 8.9300  mIoU: 0.0700  mAcc: 0.6700  data_time: 0.0023  time: 3.2210
07/14 06:21:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1633827256
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1633827256
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/14 06:21:07 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='segpgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b3_20220624-13b1141c.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            4,
            18,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B3'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
07/14 06:21:12 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/14 06:21:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/14 06:21:13 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 06:21:15 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B3/segformer_mit-b3_512x512_160k_ade20k_20210726_081410-962b98d2.pth
07/14 06:26:01 - mmengine - INFO - Iter(test) [  50/2000]    eta: 3:05:55  time: 4.3140  data_time: 0.0021  memory: 25150  
07/14 06:29:27 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 2:35:37  time: 4.5318  data_time: 0.0021  memory: 25019  
07/14 06:32:19 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 2:16:24  time: 3.4688  data_time: 0.0016  memory: 24220  
07/14 06:35:34 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 2:08:52  time: 3.7696  data_time: 0.0016  memory: 25155  
07/14 06:38:37 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 2:01:34  time: 3.2471  data_time: 0.0016  memory: 24891  
07/14 06:41:37 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 1:55:21  time: 3.0457  data_time: 0.0016  memory: 24993  
07/14 06:44:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 1:50:29  time: 3.1904  data_time: 0.0015  memory: 24900  
07/14 06:47:33 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 1:45:09  time: 3.2842  data_time: 0.0015  memory: 24904  
07/14 06:49:58 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 1:38:52  time: 3.0194  data_time: 0.0015  memory: 24047  
07/14 06:52:30 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 1:33:45  time: 2.8514  data_time: 0.0015  memory: 22981  
07/14 06:55:09 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 1:29:20  time: 3.3379  data_time: 0.0015  memory: 24963  
07/14 06:57:36 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 1:24:48  time: 3.2299  data_time: 0.0016  memory: 24951  
07/14 07:00:15 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 1:20:59  time: 3.4867  data_time: 0.0014  memory: 25239  
07/14 07:03:06 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 1:17:41  time: 2.9604  data_time: 0.0016  memory: 25205  
07/14 07:05:54 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 1:14:24  time: 4.2260  data_time: 0.0015  memory: 25525  
07/14 07:08:18 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:10:34  time: 2.9653  data_time: 0.0016  memory: 24230  
07/14 07:10:48 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:07:01  time: 2.9773  data_time: 0.0016  memory: 7183  
07/14 07:13:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:03:27  time: 2.9139  data_time: 0.0014  memory: 23715  
07/14 07:15:57 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:00:26  time: 3.3578  data_time: 0.0015  memory: 24864  
07/14 07:18:27 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:57:11  time: 2.7862  data_time: 0.0015  memory: 24883  
07/14 07:21:11 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:54:13  time: 3.6775  data_time: 0.0015  memory: 25535  
07/14 07:23:48 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:51:09  time: 2.8782  data_time: 0.0015  memory: 24188  
07/14 07:26:18 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:48:04  time: 3.1982  data_time: 0.0076  memory: 23441  
07/14 07:28:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:45:01  time: 2.8381  data_time: 0.0014  memory: 8739  
07/14 07:31:16 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:41:59  time: 3.0535  data_time: 0.0015  memory: 24267  
07/14 07:33:34 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:38:55  time: 2.9047  data_time: 0.0015  memory: 7268  
07/14 07:36:00 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:35:59  time: 2.7590  data_time: 0.0015  memory: 22809  
07/14 07:38:40 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:33:10  time: 3.3162  data_time: 0.0014  memory: 24558  
07/14 07:41:04 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:30:16  time: 3.2422  data_time: 0.0014  memory: 23746  
07/14 07:43:25 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:27:23  time: 2.7040  data_time: 0.0014  memory: 7183  
07/14 07:45:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:24:34  time: 2.9107  data_time: 0.0014  memory: 24744  
07/14 07:48:20 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:21:45  time: 2.8965  data_time: 0.0016  memory: 7100  
07/14 07:50:51 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:19:00  time: 2.6986  data_time: 0.0014  memory: 24905  
07/14 07:53:24 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:16:15  time: 2.9631  data_time: 0.0016  memory: 23916  
07/14 07:55:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:13:31  time: 2.7743  data_time: 0.0014  memory: 24547  
07/14 07:58:15 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:10:46  time: 2.9591  data_time: 0.0016  memory: 22950  
07/14 08:00:43 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:08:03  time: 2.9344  data_time: 0.0016  memory: 6365  
07/14 08:03:04 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:05:21  time: 2.7127  data_time: 0.0014  memory: 25312  
07/14 08:05:32 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:02:40  time: 2.7455  data_time: 0.0014  memory: 24042  
07/14 08:07:52 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 2.4968  data_time: 0.0013  memory: 25332  
07/14 08:07:52 - mmengine - INFO - per class results:
07/14 08:07:52 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 51.87 | 88.09 |
|       building      | 68.11 | 81.89 |
|         sky         | 91.09 | 95.42 |
|        floor        | 51.99 | 65.99 |
|         tree        | 55.08 | 71.86 |
|       ceiling       | 71.24 | 80.14 |
|         road        | 59.78 | 67.44 |
|         bed         | 71.62 | 82.15 |
|      windowpane     | 51.66 | 66.61 |
|        grass        | 39.24 | 45.02 |
|       cabinet       | 42.74 |  53.6 |
|       sidewalk      | 49.35 | 60.26 |
|        person       | 56.83 | 69.95 |
|        earth        | 26.92 | 40.19 |
|         door        | 34.08 | 45.04 |
|        table        | 35.18 | 54.25 |
|       mountain      | 43.33 | 64.19 |
|        plant        | 33.15 | 44.47 |
|       curtain       | 57.04 | 67.79 |
|        chair        | 34.18 | 45.39 |
|         car         | 67.71 | 76.97 |
|        water        | 39.39 | 49.49 |
|       painting      | 59.43 | 73.15 |
|         sofa        | 44.84 | 57.77 |
|        shelf        |  30.7 | 41.28 |
|        house        | 31.08 | 43.03 |
|         sea         | 39.63 | 64.13 |
|        mirror       | 47.97 | 54.24 |
|         rug         | 34.89 | 39.13 |
|        field        | 17.56 | 34.08 |
|       armchair      | 24.61 | 32.01 |
|         seat        |  38.1 | 54.32 |
|        fence        | 26.65 | 35.88 |
|         desk        | 29.26 |  43.2 |
|         rock        | 29.78 | 40.34 |
|       wardrobe      | 37.94 | 47.92 |
|         lamp        | 53.61 | 63.07 |
|       bathtub       | 63.03 | 70.81 |
|       railing       | 25.06 | 37.83 |
|       cushion       |  36.7 | 43.51 |
|         base        |  7.62 |  8.99 |
|         box         | 11.71 | 14.21 |
|        column       | 32.52 | 39.44 |
|      signboard      | 26.29 | 35.67 |
|   chest of drawers  | 25.47 | 30.44 |
|       counter       |  9.09 | 12.24 |
|         sand        | 33.25 | 50.94 |
|         sink        | 60.95 | 69.39 |
|      skyscraper     | 18.88 | 24.42 |
|      fireplace      | 36.79 | 40.16 |
|     refrigerator    |  46.7 | 52.91 |
|      grandstand     | 36.28 | 58.42 |
|         path        | 17.59 | 20.99 |
|        stairs       | 20.14 | 24.52 |
|        runway       |  41.5 | 57.26 |
|         case        | 22.57 | 29.91 |
|      pool table     | 56.91 | 59.92 |
|        pillow       | 44.09 | 55.66 |
|     screen door     | 39.51 | 44.23 |
|       stairway      |  15.0 | 23.27 |
|        river        | 15.09 | 27.48 |
|        bridge       | 10.87 |  12.1 |
|       bookcase      | 37.19 | 50.55 |
|        blind        | 27.65 | 30.42 |
|     coffee table    | 34.61 | 39.22 |
|        toilet       | 70.31 | 74.84 |
|        flower       | 30.44 | 40.27 |
|         book        | 36.69 | 49.09 |
|         hill        |  3.45 |  4.92 |
|        bench        | 30.18 | 34.77 |
|      countertop     | 35.68 | 42.95 |
|        stove        |  37.9 | 40.54 |
|         palm        | 25.21 | 32.78 |
|    kitchen island   | 20.63 | 28.99 |
|       computer      | 51.76 | 57.28 |
|     swivel chair    | 11.73 | 12.72 |
|         boat        |  34.6 | 41.53 |
|         bar         | 12.26 | 15.07 |
|    arcade machine   |  5.9  |  6.11 |
|        hovel        | 34.37 | 40.26 |
|         bus         | 75.58 |  85.5 |
|        towel        | 53.18 | 63.93 |
|        light        | 44.64 | 49.38 |
|        truck        |  3.07 |  3.97 |
|        tower        | 14.51 | 20.73 |
|      chandelier     | 62.17 | 70.78 |
|        awning       |  5.84 |  6.57 |
|     streetlight     | 15.23 | 16.78 |
|        booth        | 31.07 | 33.15 |
| television receiver | 15.78 | 17.75 |
|       airplane      | 39.66 |  60.9 |
|      dirt track     |  8.35 |  9.26 |
|       apparel       | 16.76 | 21.93 |
|         pole        | 10.39 | 12.44 |
|         land        |  3.31 |  5.89 |
|      bannister      |  7.08 |  9.68 |
|      escalator      |  1.47 |  1.49 |
|       ottoman       | 26.01 | 30.04 |
|        bottle       | 28.12 |  46.0 |
|        buffet       | 21.79 | 23.33 |
|        poster       | 23.42 |  31.6 |
|        stage        |  8.41 |  9.98 |
|         van         | 40.86 |  51.6 |
|         ship        | 49.47 |  56.9 |
|       fountain      | 10.53 | 10.84 |
|    conveyer belt    | 75.17 | 80.68 |
|        canopy       | 13.26 | 13.73 |
|        washer       | 43.24 | 44.95 |
|      plaything      | 16.37 | 20.36 |
|    swimming pool    |  21.0 | 21.53 |
|        stool        |  14.9 | 17.72 |
|        barrel       | 12.32 | 14.31 |
|        basket       | 11.92 | 14.16 |
|      waterfall      | 58.11 | 72.67 |
|         tent        | 74.56 | 95.41 |
|         bag         |  2.67 |  2.94 |
|       minibike      | 34.61 | 41.22 |
|        cradle       | 65.09 | 78.93 |
|         oven        |  2.51 |  3.12 |
|         ball        | 10.38 | 11.24 |
|         food        | 27.07 | 30.99 |
|         step        |  5.09 |  5.99 |
|         tank        | 21.51 | 22.16 |
|      trade name     | 17.73 | 19.62 |
|      microwave      | 25.34 | 27.33 |
|         pot         |  11.2 | 12.32 |
|        animal       | 24.52 |  25.1 |
|       bicycle       | 29.72 | 43.04 |
|         lake        | 47.91 | 49.68 |
|      dishwasher     | 34.74 | 37.42 |
|        screen       | 47.52 | 66.44 |
|       blanket       |  7.85 |  8.51 |
|      sculpture      | 10.65 | 12.29 |
|         hood        | 33.96 | 35.04 |
|        sconce       |  39.3 | 48.54 |
|         vase        | 27.32 | 38.03 |
|    traffic light    |  21.2 | 26.86 |
|         tray        |  6.75 | 18.87 |
|        ashcan       | 11.83 | 13.02 |
|         fan         |  49.7 | 60.33 |
|         pier        | 12.92 | 15.49 |
|      crt screen     |  5.8  | 12.85 |
|        plate        | 39.11 | 48.53 |
|       monitor       | 26.32 |  29.8 |
|    bulletin board   | 18.74 | 23.93 |
|        shower       |  0.89 |  1.08 |
|       radiator      | 46.83 | 50.04 |
|        glass        |  9.94 | 10.76 |
|        clock        | 21.45 | 28.13 |
|         flag        | 19.81 | 21.49 |
+---------------------+-------+-------+
07/14 08:07:52 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 69.1200  mIoU: 31.6500  mAcc: 39.0300  data_time: 0.0024  time: 3.1977
Runtime: 58744

============================= JOB FEEDBACK =============================

NodeName=uc2n487
Job ID: 23861456
Array Job ID: 23860916_4
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 14:54:16
CPU Efficiency: 5.71% of 10-21:12:48 core-walltime
Job Wall-clock time: 16:19:33
Memory Utilized: 4.07 GB
Memory Efficiency: 4.07% of 100.00 GB
