Started at Sun Oct  6 01:02:50 CEST 2024
Processing corruption type: gaussian_noise
10/06 01:04:31 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1540597239
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1540597239
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:04:33 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/gaussian_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:05:29,579 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:05:29,579 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:05:29,579 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:05:29,579 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:05:29,579 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:05:29,579 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:05:29,579 - mmseg - INFO - res_post_norm: False
2024-10-06 01:05:29,579 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:05:36 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:05:36 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:05:37 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:05:41 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:06:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:43:26  time: 0.5098  data_time: 0.0018  memory: 21922  
10/06 01:07:15 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:29:47  time: 0.6466  data_time: 0.0020  memory: 15329  
10/06 01:07:33 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:22:50  time: 0.3221  data_time: 0.0027  memory: 11667  
10/06 01:07:56 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:11  time: 0.4257  data_time: 0.0017  memory: 15333  
10/06 01:08:19 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:24  time: 0.2685  data_time: 0.0017  memory: 15306  
10/06 01:08:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:16:45  time: 0.1571  data_time: 0.0018  memory: 15338  
10/06 01:09:00 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:15:37  time: 0.2955  data_time: 0.0017  memory: 15346  
10/06 01:09:18 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:14:27  time: 0.3048  data_time: 0.0016  memory: 15309  
10/06 01:09:29 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:03  time: 0.2473  data_time: 0.0016  memory: 10302  
10/06 01:09:39 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:11:53  time: 0.1463  data_time: 0.0017  memory: 11649  
10/06 01:09:50 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:56  time: 0.3060  data_time: 0.0018  memory: 10676  
10/06 01:10:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:04  time: 0.3042  data_time: 0.0018  memory: 10485  
10/06 01:10:15 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:27  time: 0.3396  data_time: 0.0016  memory: 11697  
10/06 01:10:32 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:58  time: 0.1752  data_time: 0.0037  memory: 15344  
10/06 01:10:49 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:33  time: 0.6544  data_time: 0.0018  memory: 11701  
10/06 01:10:58 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:54  time: 0.1500  data_time: 0.0018  memory: 10487  
10/06 01:11:06 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:18  time: 0.1531  data_time: 0.0019  memory: 1477  
10/06 01:11:16 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:49  time: 0.2400  data_time: 0.0016  memory: 9741  
10/06 01:11:33 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:28  time: 0.4109  data_time: 0.0017  memory: 11651  
10/06 01:11:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:02  time: 0.1437  data_time: 0.0017  memory: 11612  
10/06 01:11:59 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:41  time: 0.4948  data_time: 0.0017  memory: 11701  
10/06 01:12:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:19  time: 0.1465  data_time: 0.0017  memory: 11669  
10/06 01:12:22 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:56  time: 0.2789  data_time: 0.0017  memory: 11656  
10/06 01:12:30 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:32  time: 0.1487  data_time: 0.0018  memory: 2651  
10/06 01:12:41 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:11  time: 0.2741  data_time: 0.0017  memory: 15334  
10/06 01:12:48 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:49  time: 0.1513  data_time: 0.0017  memory: 1480  
10/06 01:12:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:29  time: 0.1415  data_time: 0.0017  memory: 8056  
10/06 01:13:11 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:12  time: 0.3358  data_time: 0.0016  memory: 11681  
10/06 01:13:21 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:54  time: 0.2990  data_time: 0.0016  memory: 9742  
10/06 01:13:28 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:35  time: 0.1393  data_time: 0.0016  memory: 1478  
10/06 01:13:37 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:18  time: 0.1548  data_time: 0.0017  memory: 11422  
10/06 01:13:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:00  time: 0.1574  data_time: 0.0021  memory: 1476  
10/06 01:13:58 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:45  time: 0.1369  data_time: 0.0016  memory: 15346  
10/06 01:14:10 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:29  time: 0.1505  data_time: 0.0018  memory: 9929  
10/06 01:14:20 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:14  time: 0.1516  data_time: 0.0016  memory: 11052  
10/06 01:14:29 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:58  time: 0.1520  data_time: 0.0018  memory: 8427  
10/06 01:14:36 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:43  time: 0.1523  data_time: 0.0018  memory: 1424  
10/06 01:14:45 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:28  time: 0.1503  data_time: 0.0017  memory: 5786  
10/06 01:14:56 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.1460  data_time: 0.0017  memory: 11659  
10/06 01:15:07 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1369  data_time: 0.0016  memory: 9367  
10/06 01:15:08 - mmengine - INFO - per class results:
10/06 01:15:08 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.69 | 86.25 |
|       building      | 81.75 | 90.37 |
|         sky         | 93.75 | 96.54 |
|        floor        | 80.34 |  90.1 |
|         tree        | 73.48 | 89.03 |
|       ceiling       |  83.1 | 91.75 |
|         road        | 83.51 | 90.46 |
|         bed         | 88.24 | 96.18 |
|      windowpane     | 61.98 | 78.26 |
|        grass        | 64.79 | 81.43 |
|       cabinet       | 58.37 | 69.34 |
|       sidewalk      | 63.73 | 78.66 |
|        person       | 79.17 | 89.53 |
|        earth        | 35.89 | 51.54 |
|         door        | 50.93 | 65.54 |
|        table        | 61.59 | 75.97 |
|       mountain      |  58.3 | 70.44 |
|        plant        |  51.1 | 59.01 |
|       curtain       |  73.2 | 86.61 |
|        chair        | 56.05 | 67.86 |
|         car         | 82.83 | 93.33 |
|        water        | 48.43 |  55.8 |
|       painting      | 69.19 | 88.93 |
|         sofa        | 70.48 | 85.92 |
|        shelf        | 43.94 | 61.38 |
|        house        | 46.97 | 81.24 |
|         sea         | 61.71 | 84.11 |
|        mirror       |  66.9 | 75.56 |
|         rug         | 55.49 | 63.04 |
|        field        | 30.57 | 45.52 |
|       armchair      | 46.92 | 65.34 |
|         seat        | 56.05 | 76.73 |
|        fence        | 47.03 | 62.37 |
|         desk        | 47.34 | 67.63 |
|         rock        | 49.13 | 75.06 |
|       wardrobe      | 47.59 | 74.96 |
|         lamp        | 59.96 |  75.4 |
|       bathtub       | 77.35 |  85.5 |
|       railing       | 33.91 | 43.94 |
|       cushion       | 61.47 | 77.72 |
|         base        | 36.32 | 45.26 |
|         box         | 23.79 | 30.36 |
|        column       |  49.5 | 62.43 |
|      signboard      | 36.82 | 48.59 |
|   chest of drawers  | 33.54 | 61.42 |
|       counter       | 29.76 |  38.8 |
|         sand        | 48.59 | 64.91 |
|         sink        | 70.85 | 79.65 |
|      skyscraper     |  65.0 | 89.57 |
|      fireplace      | 72.58 | 90.82 |
|     refrigerator    | 69.54 | 87.98 |
|      grandstand     | 42.47 | 82.62 |
|         path        | 21.98 | 35.83 |
|        stairs       | 15.55 | 19.03 |
|        runway       | 71.55 | 94.76 |
|         case        | 58.03 | 79.02 |
|      pool table     | 90.04 | 96.41 |
|        pillow       |  51.7 |  57.5 |
|     screen door     |  52.7 | 64.71 |
|       stairway      | 32.64 | 54.56 |
|        river        | 13.92 | 43.05 |
|        bridge       | 44.45 | 55.93 |
|       bookcase      |  37.4 | 59.12 |
|        blind        | 40.46 | 48.66 |
|     coffee table    | 56.83 | 81.03 |
|        toilet       |  82.0 | 89.77 |
|        flower       | 45.84 | 60.54 |
|         book        |  48.5 | 70.28 |
|         hill        | 10.17 |  17.4 |
|        bench        | 51.91 | 60.77 |
|      countertop     | 57.31 | 75.62 |
|        stove        | 74.87 | 88.28 |
|         palm        | 52.67 | 74.27 |
|    kitchen island   | 34.65 | 69.28 |
|       computer      | 73.48 | 90.76 |
|     swivel chair    |  49.9 | 61.49 |
|         boat        | 59.11 | 85.36 |
|         bar         | 48.72 | 68.71 |
|    arcade machine   | 87.61 | 96.91 |
|        hovel        | 51.88 | 59.31 |
|         bus         | 86.04 | 96.38 |
|        towel        | 63.96 | 78.76 |
|        light        | 48.77 | 57.32 |
|        truck        | 37.17 | 50.89 |
|        tower        | 31.49 | 64.67 |
|      chandelier     | 65.88 | 86.31 |
|        awning       | 31.28 | 35.94 |
|     streetlight     | 27.02 | 33.83 |
|        booth        | 55.64 | 69.85 |
| television receiver | 67.47 | 83.45 |
|       airplane      | 63.76 | 78.09 |
|      dirt track     | 13.35 | 18.62 |
|       apparel       | 40.59 | 52.72 |
|         pole        | 18.91 | 24.49 |
|         land        |  1.29 |  2.16 |
|      bannister      | 12.95 | 16.57 |
|      escalator      | 53.22 | 80.87 |
|       ottoman       | 50.85 | 67.84 |
|        bottle       | 36.67 | 62.83 |
|        buffet       | 42.61 | 51.29 |
|        poster       | 20.25 | 24.38 |
|        stage        | 13.29 | 24.13 |
|         van         | 41.85 | 54.71 |
|         ship        | 76.78 |  95.6 |
|       fountain      | 27.77 | 28.26 |
|    conveyer belt    | 72.66 | 94.12 |
|        canopy       | 36.94 | 59.96 |
|        washer       | 80.08 | 86.29 |
|      plaything      | 27.83 | 38.98 |
|    swimming pool    |  47.5 | 77.81 |
|        stool        | 42.54 | 49.34 |
|        barrel       | 52.83 | 84.21 |
|        basket       | 33.39 | 40.63 |
|      waterfall      |  60.1 |  74.6 |
|         tent        |  88.3 | 99.58 |
|         bag         | 12.82 | 14.42 |
|       minibike      | 70.28 |  82.8 |
|        cradle       | 81.04 | 97.29 |
|         oven        | 49.02 | 59.12 |
|         ball        | 43.79 | 54.76 |
|         food        | 55.26 | 66.03 |
|         step        |  8.78 |  9.36 |
|         tank        | 59.96 |  65.6 |
|      trade name     | 18.94 | 20.62 |
|      microwave      | 80.07 | 93.33 |
|         pot         |  49.3 | 60.44 |
|        animal       | 64.16 |  66.3 |
|       bicycle       | 53.34 | 74.27 |
|         lake        |  41.3 | 63.47 |
|      dishwasher     | 52.29 | 67.12 |
|        screen       | 59.86 | 89.54 |
|       blanket       | 15.06 | 16.25 |
|      sculpture      | 60.43 | 80.33 |
|         hood        | 53.36 | 63.99 |
|        sconce       |  41.8 |  53.2 |
|         vase        | 37.82 | 49.94 |
|    traffic light    | 30.57 | 48.26 |
|         tray        |  7.83 |  9.89 |
|        ashcan       | 35.36 | 44.44 |
|         fan         | 57.61 | 78.17 |
|         pier        | 36.89 | 45.94 |
|      crt screen     |  3.84 |  12.8 |
|        plate        | 53.91 | 70.94 |
|       monitor       | 10.13 | 10.98 |
|    bulletin board   | 42.57 | 55.38 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 55.08 | 64.81 |
|        glass        | 12.55 | 13.43 |
|        clock        | 39.23 | 44.38 |
|         flag        | 62.46 |  77.2 |
+---------------------+-------+-------+
10/06 01:15:08 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.6000  mIoU: 50.0100  mAcc: 63.7000  data_time: 0.0021  time: 0.2830
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
10/06 01:15:15 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1666699675
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1666699675
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:15:16 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/shot_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:15:21,457 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:15:21,457 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:15:21,457 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:15:21,457 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:15:21,457 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:15:21,457 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:15:21,457 - mmseg - INFO - res_post_norm: False
2024-10-06 01:15:21,457 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:15:27 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:15:27 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:15:29 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:15:32 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:16:26 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:34:39  time: 0.6005  data_time: 0.0028  memory: 21922  
10/06 01:16:57 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:52  time: 0.7435  data_time: 0.0025  memory: 15329  
10/06 01:17:19 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:21:50  time: 0.4109  data_time: 0.0018  memory: 11667  
10/06 01:17:47 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:07  time: 0.5156  data_time: 0.0018  memory: 15333  
10/06 01:18:14 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:18:51  time: 0.3530  data_time: 0.0017  memory: 15306  
10/06 01:18:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:17:31  time: 0.2458  data_time: 0.0019  memory: 15338  
10/06 01:19:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:35  time: 0.3780  data_time: 0.0017  memory: 15346  
10/06 01:19:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:34  time: 0.3914  data_time: 0.0016  memory: 15309  
10/06 01:19:41 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:15  time: 0.3378  data_time: 0.0031  memory: 10302  
10/06 01:19:55 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:13:08  time: 0.2305  data_time: 0.0017  memory: 11649  
10/06 01:20:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:14  time: 0.3979  data_time: 0.0018  memory: 10676  
10/06 01:20:26 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:23  time: 0.3951  data_time: 0.0019  memory: 10485  
10/06 01:20:44 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:46  time: 0.4232  data_time: 0.0017  memory: 11697  
10/06 01:21:05 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:10:17  time: 0.2507  data_time: 0.0019  memory: 15344  
10/06 01:21:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:50  time: 0.7326  data_time: 0.0017  memory: 11701  
10/06 01:21:40 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:09:11  time: 0.2362  data_time: 0.0019  memory: 10487  
10/06 01:21:52 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:33  time: 0.2471  data_time: 0.0051  memory: 1477  
10/06 01:22:07 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:01  time: 0.3199  data_time: 0.0017  memory: 9741  
10/06 01:22:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:38  time: 0.4986  data_time: 0.0018  memory: 11651  
10/06 01:22:43 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:10  time: 0.2235  data_time: 0.0017  memory: 11612  
10/06 01:23:03 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:47  time: 0.5825  data_time: 0.0017  memory: 11701  
10/06 01:23:20 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:22  time: 0.2299  data_time: 0.0018  memory: 11669  
10/06 01:23:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:56  time: 0.3641  data_time: 0.0018  memory: 11656  
10/06 01:23:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:29  time: 0.2366  data_time: 0.0018  memory: 2651  
10/06 01:24:01 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:05  time: 0.3552  data_time: 0.0018  memory: 15334  
10/06 01:24:12 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:39  time: 0.2365  data_time: 0.0018  memory: 1480  
10/06 01:24:25 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:16  time: 0.2238  data_time: 0.0017  memory: 8056  
10/06 01:24:44 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:56  time: 0.4269  data_time: 0.0017  memory: 11681  
10/06 01:24:58 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:34  time: 0.3940  data_time: 0.0017  memory: 9742  
10/06 01:25:09 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:12  time: 0.2150  data_time: 0.0016  memory: 1478  
10/06 01:25:23 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:51  time: 0.2448  data_time: 0.0017  memory: 11422  
10/06 01:25:35 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:30  time: 0.2330  data_time: 0.0018  memory: 1476  
10/06 01:25:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:11  time: 0.2181  data_time: 0.0016  memory: 15346  
10/06 01:26:08 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:52  time: 0.2388  data_time: 0.0019  memory: 9929  
10/06 01:26:23 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:32  time: 0.2370  data_time: 0.0016  memory: 11052  
10/06 01:26:36 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:13  time: 0.2410  data_time: 0.0018  memory: 8427  
10/06 01:26:48 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:54  time: 0.2249  data_time: 0.0017  memory: 1424  
10/06 01:27:00 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:36  time: 0.2232  data_time: 0.0016  memory: 5786  
10/06 01:27:15 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:18  time: 0.2309  data_time: 0.0017  memory: 11659  
10/06 01:27:30 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2078  data_time: 0.0016  memory: 9367  
10/06 01:27:30 - mmengine - INFO - per class results:
10/06 01:27:30 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.31 | 85.86 |
|       building      | 81.41 | 89.93 |
|         sky         | 93.65 | 96.48 |
|        floor        | 80.35 | 89.95 |
|         tree        | 73.38 | 89.27 |
|       ceiling       | 82.52 | 91.81 |
|         road        | 82.65 | 90.76 |
|         bed         | 88.37 | 96.28 |
|      windowpane     | 62.21 | 78.46 |
|        grass        | 64.98 | 81.89 |
|       cabinet       | 59.13 | 69.47 |
|       sidewalk      |  63.2 | 76.97 |
|        person       | 79.48 | 90.13 |
|        earth        | 35.21 | 50.23 |
|         door        | 49.93 | 64.18 |
|        table        |  61.9 |  76.3 |
|       mountain      | 58.96 | 70.19 |
|        plant        | 51.22 | 59.51 |
|       curtain       | 72.43 | 86.51 |
|        chair        | 56.26 | 68.61 |
|         car         |  83.1 | 93.35 |
|        water        | 50.36 | 58.11 |
|       painting      | 69.33 | 88.85 |
|         sofa        | 70.74 |  86.7 |
|        shelf        | 44.92 |  61.9 |
|        house        | 46.98 | 81.57 |
|         sea         | 63.36 | 84.35 |
|        mirror       | 66.92 | 75.11 |
|         rug         | 54.57 | 61.71 |
|        field        | 30.59 | 44.29 |
|       armchair      | 46.54 | 65.97 |
|         seat        | 57.63 | 78.15 |
|        fence        | 47.12 |  63.8 |
|         desk        | 47.15 | 67.29 |
|         rock        | 48.27 |  75.5 |
|       wardrobe      | 48.74 | 76.21 |
|         lamp        | 59.21 | 75.18 |
|       bathtub       | 76.91 | 85.13 |
|       railing       | 33.77 |  44.1 |
|       cushion       | 60.94 | 76.68 |
|         base        | 39.79 | 51.62 |
|         box         | 24.63 | 31.45 |
|        column       | 49.62 | 63.26 |
|      signboard      | 36.71 | 48.46 |
|   chest of drawers  | 33.96 | 63.41 |
|       counter       | 29.14 | 38.71 |
|         sand        | 42.97 | 57.56 |
|         sink        | 70.52 | 79.07 |
|      skyscraper     | 64.58 | 89.52 |
|      fireplace      |  69.5 |  89.7 |
|     refrigerator    | 67.29 | 86.96 |
|      grandstand     | 43.69 | 80.85 |
|         path        | 21.68 | 35.23 |
|        stairs       | 16.56 | 21.03 |
|        runway       | 71.74 | 95.02 |
|         case        | 53.95 | 72.84 |
|      pool table     | 90.63 | 96.52 |
|        pillow       | 51.22 | 56.57 |
|     screen door     | 57.41 | 69.12 |
|       stairway      | 33.41 | 54.92 |
|        river        | 13.57 |  43.1 |
|        bridge       | 47.54 | 59.77 |
|       bookcase      | 38.42 |  60.4 |
|        blind        | 40.77 | 49.58 |
|     coffee table    | 56.72 | 81.09 |
|        toilet       | 81.99 | 89.01 |
|        flower       | 45.89 | 59.91 |
|         book        | 49.05 | 70.69 |
|         hill        | 10.06 | 17.23 |
|        bench        | 54.11 | 63.65 |
|      countertop     | 53.41 | 71.81 |
|        stove        | 75.75 | 89.22 |
|         palm        | 50.88 | 77.79 |
|    kitchen island   | 35.39 | 68.17 |
|       computer      | 73.55 | 90.52 |
|     swivel chair    | 47.16 | 61.92 |
|         boat        | 63.45 | 86.37 |
|         bar         | 51.37 | 71.13 |
|    arcade machine   | 85.84 |  94.3 |
|        hovel        | 52.63 | 60.47 |
|         bus         | 87.31 | 96.27 |
|        towel        | 64.82 | 77.85 |
|        light        | 47.35 | 55.28 |
|        truck        | 37.55 |  51.7 |
|        tower        | 30.04 | 62.41 |
|      chandelier     |  64.0 | 85.16 |
|        awning       | 30.63 | 34.89 |
|     streetlight     | 27.24 | 34.33 |
|        booth        | 55.45 | 69.89 |
| television receiver | 71.63 | 85.42 |
|       airplane      |  63.3 | 77.46 |
|      dirt track     |  8.79 | 11.66 |
|       apparel       | 36.68 | 47.02 |
|         pole        | 18.33 | 23.76 |
|         land        |  1.03 |  1.82 |
|      bannister      | 13.44 | 18.33 |
|      escalator      | 51.06 | 81.46 |
|       ottoman       | 52.56 | 69.07 |
|        bottle       | 37.48 | 64.13 |
|        buffet       | 44.01 | 53.07 |
|        poster       |  22.6 | 28.43 |
|        stage        |  15.6 | 28.79 |
|         van         | 42.36 | 54.12 |
|         ship        |  79.0 | 95.55 |
|       fountain      | 27.92 |  28.4 |
|    conveyer belt    | 68.95 | 93.21 |
|        canopy       | 36.68 | 58.47 |
|        washer       | 81.05 | 91.86 |
|      plaything      | 25.67 | 35.83 |
|    swimming pool    | 48.59 | 77.78 |
|        stool        | 45.92 |  54.0 |
|        barrel       | 50.58 |  91.4 |
|        basket       | 31.77 | 39.08 |
|      waterfall      | 48.02 |  61.6 |
|         tent        | 89.81 | 99.44 |
|         bag         | 12.45 |  14.1 |
|       minibike      | 71.58 |  84.2 |
|        cradle       | 82.56 | 97.48 |
|         oven        |  52.7 | 63.72 |
|         ball        | 45.16 | 53.59 |
|         food        | 54.32 | 65.67 |
|         step        |  8.13 |  8.67 |
|         tank        | 61.11 | 65.31 |
|      trade name     | 18.65 | 20.19 |
|      microwave      | 80.41 | 94.03 |
|         pot         | 50.91 | 62.48 |
|        animal       | 63.88 | 65.95 |
|       bicycle       | 54.22 |  76.3 |
|         lake        | 43.12 | 63.32 |
|      dishwasher     | 54.84 | 69.12 |
|        screen       | 56.13 | 86.55 |
|       blanket       | 16.34 | 17.77 |
|      sculpture      | 61.21 | 80.25 |
|         hood        | 51.65 | 63.28 |
|        sconce       |  42.1 | 53.19 |
|         vase        | 36.55 |  48.7 |
|    traffic light    | 29.01 | 46.85 |
|         tray        |  7.26 |  9.48 |
|        ashcan       | 38.79 | 48.81 |
|         fan         | 57.79 | 78.44 |
|         pier        | 39.34 | 49.95 |
|      crt screen     |  4.9  | 16.02 |
|        plate        | 54.33 | 70.48 |
|       monitor       |  3.99 |  4.45 |
|    bulletin board   | 45.72 | 58.16 |
|        shower       |  0.06 |  0.21 |
|       radiator      | 50.46 | 57.81 |
|        glass        | 12.47 | 13.37 |
|        clock        | 40.39 | 45.52 |
|         flag        | 62.76 | 76.29 |
+---------------------+-------+-------+
10/06 01:27:30 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.5000  mIoU: 50.0000  mAcc: 63.7600  data_time: 0.0021  time: 0.3587
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
10/06 01:28:13 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1666727674
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1666727674
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:28:14 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/impulse_noise'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:28:38,076 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:28:38,076 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:28:38,076 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:28:38,076 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:28:38,076 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:28:38,076 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:28:38,076 - mmseg - INFO - res_post_norm: False
2024-10-06 01:28:38,076 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:28:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:28:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:28:48 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:28:51 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:29:44 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:34:12  time: 0.4841  data_time: 0.0018  memory: 21922  
10/06 01:30:10 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:24:54  time: 0.6224  data_time: 0.0018  memory: 15329  
10/06 01:30:26 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:24  time: 0.2969  data_time: 0.0019  memory: 11667  
10/06 01:30:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:30  time: 0.4017  data_time: 0.0018  memory: 15333  
10/06 01:31:10 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:16:10  time: 0.2450  data_time: 0.0016  memory: 15306  
10/06 01:31:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:50  time: 0.1342  data_time: 0.0018  memory: 15338  
10/06 01:31:49 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:55  time: 0.2730  data_time: 0.0017  memory: 15346  
10/06 01:32:05 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:55  time: 0.2816  data_time: 0.0017  memory: 15309  
10/06 01:32:15 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:41  time: 0.2287  data_time: 0.0017  memory: 10302  
10/06 01:32:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:37  time: 0.1263  data_time: 0.0017  memory: 11649  
10/06 01:32:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:46  time: 0.2844  data_time: 0.0018  memory: 10676  
10/06 01:32:43 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:00  time: 0.2818  data_time: 0.0018  memory: 10485  
10/06 01:32:56 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:28  time: 0.3171  data_time: 0.0016  memory: 11697  
10/06 01:33:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:03  time: 0.1370  data_time: 0.0019  memory: 15344  
10/06 01:33:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:41  time: 0.6272  data_time: 0.0017  memory: 11701  
10/06 01:33:36 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:06  time: 0.1283  data_time: 0.0019  memory: 10487  
10/06 01:33:42 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:33  time: 0.1283  data_time: 0.0019  memory: 1477  
10/06 01:33:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:07  time: 0.2215  data_time: 0.0017  memory: 9741  
10/06 01:34:07 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:49  time: 0.3906  data_time: 0.0017  memory: 11651  
10/06 01:34:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:26  time: 0.1222  data_time: 0.0017  memory: 11612  
10/06 01:34:31 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:07  time: 0.4727  data_time: 0.0017  memory: 11701  
10/06 01:34:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:47  time: 0.1254  data_time: 0.0018  memory: 11669  
10/06 01:34:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:26  time: 0.2550  data_time: 0.0016  memory: 11656  
10/06 01:34:59 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:04  time: 0.1263  data_time: 0.0018  memory: 2651  
10/06 01:35:09 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:46  time: 0.2516  data_time: 0.0017  memory: 15334  
10/06 01:35:15 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:26  time: 0.1291  data_time: 0.0017  memory: 1480  
10/06 01:35:22 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:08  time: 0.1206  data_time: 0.0017  memory: 8056  
10/06 01:35:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:53  time: 0.3122  data_time: 0.0017  memory: 11681  
10/06 01:35:44 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:36  time: 0.2760  data_time: 0.0016  memory: 9742  
10/06 01:35:50 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:19  time: 0.1181  data_time: 0.0016  memory: 1478  
10/06 01:35:59 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:04  time: 0.1329  data_time: 0.0017  memory: 11422  
10/06 01:36:05 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:48  time: 0.1253  data_time: 0.0018  memory: 1476  
10/06 01:36:17 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:34  time: 0.1180  data_time: 0.0017  memory: 15346  
10/06 01:36:27 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:20  time: 0.1284  data_time: 0.0018  memory: 9929  
10/06 01:36:37 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:06  time: 0.1280  data_time: 0.0015  memory: 11052  
10/06 01:36:44 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:52  time: 0.1300  data_time: 0.0019  memory: 8427  
10/06 01:36:51 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:38  time: 0.1287  data_time: 0.0018  memory: 1424  
10/06 01:36:58 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:25  time: 0.1268  data_time: 0.0017  memory: 5786  
10/06 01:37:08 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:12  time: 0.1220  data_time: 0.0016  memory: 11659  
10/06 01:37:18 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1141  data_time: 0.0016  memory: 9367  
10/06 01:37:18 - mmengine - INFO - per class results:
10/06 01:37:18 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.91 | 87.56 |
|       building      | 82.28 | 91.27 |
|         sky         | 94.14 | 96.81 |
|        floor        | 80.05 | 89.74 |
|         tree        | 73.04 | 89.92 |
|       ceiling       | 82.95 | 90.93 |
|         road        | 82.83 | 88.43 |
|         bed         | 88.34 | 96.05 |
|      windowpane     |  62.1 | 77.37 |
|        grass        | 65.49 |  80.5 |
|       cabinet       | 59.13 | 69.85 |
|       sidewalk      | 63.27 | 80.43 |
|        person       | 79.55 | 89.33 |
|        earth        | 38.15 | 55.19 |
|         door        | 52.07 | 66.57 |
|        table        | 60.33 | 74.19 |
|       mountain      | 58.46 | 70.02 |
|        plant        | 51.06 | 59.61 |
|       curtain       | 73.47 | 86.23 |
|        chair        | 55.78 | 67.01 |
|         car         | 83.26 | 92.74 |
|        water        | 49.59 |  56.4 |
|       painting      | 69.43 | 87.36 |
|         sofa        | 71.33 | 89.48 |
|        shelf        | 44.62 | 63.82 |
|        house        | 50.07 | 79.59 |
|         sea         | 61.38 | 85.07 |
|        mirror       | 67.59 | 75.54 |
|         rug         | 52.88 | 59.12 |
|        field        | 29.45 | 43.01 |
|       armchair      | 46.06 | 64.13 |
|         seat        | 57.91 | 78.62 |
|        fence        | 45.69 | 57.87 |
|         desk        | 46.49 | 67.12 |
|         rock        | 51.33 | 76.81 |
|       wardrobe      | 48.19 | 71.86 |
|         lamp        | 60.22 | 73.58 |
|       bathtub       | 77.42 | 85.19 |
|       railing       | 31.42 | 39.13 |
|       cushion       | 60.81 | 74.01 |
|         base        | 33.51 | 43.86 |
|         box         | 24.18 |  29.7 |
|        column       | 49.48 | 62.84 |
|      signboard      | 37.17 |  48.2 |
|   chest of drawers  | 36.98 | 65.15 |
|       counter       | 26.82 | 34.28 |
|         sand        | 46.69 | 64.01 |
|         sink        | 70.23 |  77.7 |
|      skyscraper     | 67.29 | 92.09 |
|      fireplace      | 69.42 | 88.75 |
|     refrigerator    | 72.01 | 84.02 |
|      grandstand     | 42.89 | 79.77 |
|         path        | 21.55 | 40.83 |
|        stairs       | 14.87 |  18.5 |
|        runway       | 70.94 |  95.1 |
|         case        |  60.8 | 77.03 |
|      pool table     | 90.18 | 96.23 |
|        pillow       | 53.06 | 58.91 |
|     screen door     | 61.35 | 70.78 |
|       stairway      |  30.5 | 51.74 |
|        river        | 16.27 | 42.75 |
|        bridge       | 51.76 | 59.12 |
|       bookcase      | 40.41 |  59.8 |
|        blind        | 38.73 | 46.48 |
|     coffee table    | 56.66 | 81.09 |
|        toilet       | 81.39 | 89.75 |
|        flower       | 44.13 | 60.98 |
|         book        | 49.12 | 66.05 |
|         hill        | 10.11 | 15.57 |
|        bench        | 49.76 | 57.99 |
|      countertop     | 52.56 | 72.57 |
|        stove        | 75.37 | 88.68 |
|         palm        | 53.63 | 76.47 |
|    kitchen island   | 36.41 | 70.71 |
|       computer      | 74.28 | 91.02 |
|     swivel chair    | 50.09 | 61.64 |
|         boat        | 59.49 | 84.54 |
|         bar         | 50.19 | 74.08 |
|    arcade machine   | 85.95 | 96.37 |
|        hovel        | 49.06 | 54.89 |
|         bus         | 87.38 | 95.77 |
|        towel        | 63.83 | 76.88 |
|        light        | 47.45 | 53.25 |
|        truck        | 37.32 | 50.35 |
|        tower        | 34.28 | 71.57 |
|      chandelier     | 65.86 | 84.89 |
|        awning       |  30.5 | 34.31 |
|     streetlight     |  26.4 | 32.92 |
|        booth        | 51.54 | 74.09 |
| television receiver | 69.24 | 82.51 |
|       airplane      | 61.85 | 75.06 |
|      dirt track     | 23.01 |  31.3 |
|       apparel       | 41.61 | 49.78 |
|         pole        | 19.82 | 26.56 |
|         land        |  0.35 |  0.57 |
|      bannister      | 14.27 | 17.96 |
|      escalator      | 52.27 | 81.49 |
|       ottoman       | 50.23 | 66.93 |
|        bottle       | 36.82 | 62.21 |
|        buffet       | 45.54 | 55.41 |
|        poster       | 24.15 | 29.98 |
|        stage        | 11.27 | 20.15 |
|         van         | 40.83 | 54.99 |
|         ship        | 80.27 | 95.68 |
|       fountain      | 21.98 | 22.29 |
|    conveyer belt    | 71.02 | 94.75 |
|        canopy       | 37.67 | 60.22 |
|        washer       | 80.91 | 86.32 |
|      plaything      | 35.79 | 46.31 |
|    swimming pool    | 47.91 | 72.51 |
|        stool        | 42.16 | 48.99 |
|        barrel       | 50.56 | 92.84 |
|        basket       | 32.82 | 42.81 |
|      waterfall      | 64.59 | 79.07 |
|         tent        | 90.02 | 99.42 |
|         bag         | 10.91 | 11.87 |
|       minibike      | 71.38 | 81.67 |
|        cradle       | 78.84 | 97.31 |
|         oven        | 43.09 | 59.11 |
|         ball        |  48.1 | 62.38 |
|         food        | 56.23 | 66.21 |
|         step        |  4.39 |  4.63 |
|         tank        | 61.74 | 66.37 |
|      trade name     | 16.69 | 18.74 |
|      microwave      |  77.6 | 89.66 |
|         pot         |  47.2 | 56.16 |
|        animal       | 63.64 | 65.82 |
|       bicycle       | 53.62 | 72.81 |
|         lake        | 35.85 | 63.63 |
|      dishwasher     | 56.97 | 66.38 |
|        screen       |  59.3 | 81.41 |
|       blanket       | 10.78 | 11.26 |
|      sculpture      | 60.51 | 78.29 |
|         hood        | 55.31 | 64.72 |
|        sconce       | 43.16 | 54.04 |
|         vase        | 37.08 | 46.64 |
|    traffic light    | 30.96 | 44.42 |
|         tray        |  6.9  |  8.93 |
|        ashcan       | 34.52 | 42.64 |
|         fan         | 57.64 | 76.15 |
|         pier        | 32.64 | 48.76 |
|      crt screen     |  3.1  |  9.51 |
|        plate        | 54.14 | 70.68 |
|       monitor       | 12.39 | 13.18 |
|    bulletin board   | 43.35 | 55.75 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 57.14 | 68.14 |
|        glass        | 12.14 | 12.88 |
|        clock        | 37.36 |  42.0 |
|         flag        |  61.8 | 73.11 |
+---------------------+-------+-------+
10/06 01:37:18 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.7800  mIoU: 50.1200  mAcc: 63.4200  data_time: 0.0022  time: 0.2534
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
10/06 01:37:37 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 427374210
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 427374210
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:37:38 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/defocus_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:37:47,860 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:37:47,861 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:37:47,861 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:37:47,861 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:37:47,861 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:37:47,861 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:37:47,861 - mmseg - INFO - res_post_norm: False
2024-10-06 01:37:47,861 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:37:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:37:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:37:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:38:02 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:38:54 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:27  time: 0.4970  data_time: 0.0017  memory: 21922  
10/06 01:39:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:24:47  time: 0.6356  data_time: 0.0019  memory: 15329  
10/06 01:39:37 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:28  time: 0.3116  data_time: 0.0018  memory: 11667  
10/06 01:40:00 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:39  time: 0.4237  data_time: 0.0071  memory: 15333  
10/06 01:40:23 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:16:24  time: 0.2591  data_time: 0.0018  memory: 15306  
10/06 01:40:42 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:04  time: 0.1457  data_time: 0.0018  memory: 15338  
10/06 01:41:03 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:10  time: 0.2870  data_time: 0.0017  memory: 15346  
10/06 01:41:20 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:11  time: 0.2928  data_time: 0.0017  memory: 15309  
10/06 01:41:30 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:56  time: 0.2420  data_time: 0.0017  memory: 10302  
10/06 01:41:40 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:53  time: 0.1382  data_time: 0.0017  memory: 11649  
10/06 01:41:51 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:10:02  time: 0.2964  data_time: 0.0018  memory: 10676  
10/06 01:42:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:09:16  time: 0.2934  data_time: 0.0018  memory: 10485  
10/06 01:42:14 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:43  time: 0.3305  data_time: 0.0016  memory: 11697  
10/06 01:42:30 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:08:17  time: 0.1477  data_time: 0.0018  memory: 15344  
10/06 01:42:48 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:55  time: 0.6377  data_time: 0.0016  memory: 11701  
10/06 01:42:56 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:20  time: 0.1398  data_time: 0.0018  memory: 10487  
10/06 01:43:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:46  time: 0.1409  data_time: 0.0018  memory: 1477  
10/06 01:43:13 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:19  time: 0.2310  data_time: 0.0016  memory: 9741  
10/06 01:43:29 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:01  time: 0.4017  data_time: 0.0018  memory: 11651  
10/06 01:43:40 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:37  time: 0.1335  data_time: 0.0017  memory: 11612  
10/06 01:43:54 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:18  time: 0.4853  data_time: 0.0017  memory: 11701  
10/06 01:44:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:58  time: 0.1383  data_time: 0.0017  memory: 11669  
10/06 01:44:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:36  time: 0.2766  data_time: 0.0024  memory: 11656  
10/06 01:44:24 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:14  time: 0.1365  data_time: 0.0017  memory: 2651  
10/06 01:44:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:54  time: 0.2627  data_time: 0.0016  memory: 15334  
10/06 01:44:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:34  time: 0.1401  data_time: 0.0017  memory: 1480  
10/06 01:44:49 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:15  time: 0.1304  data_time: 0.0017  memory: 8056  
10/06 01:45:02 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:59  time: 0.3242  data_time: 0.0017  memory: 11681  
10/06 01:45:12 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:42  time: 0.2892  data_time: 0.0017  memory: 9742  
10/06 01:45:19 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:25  time: 0.1332  data_time: 0.0022  memory: 1478  
10/06 01:45:28 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:09  time: 0.1445  data_time: 0.0017  memory: 11422  
10/06 01:45:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:53  time: 0.1365  data_time: 0.0018  memory: 1476  
10/06 01:45:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:38  time: 0.1290  data_time: 0.0016  memory: 15346  
10/06 01:45:58 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:23  time: 0.1390  data_time: 0.0018  memory: 9929  
10/06 01:46:08 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:09  time: 0.1427  data_time: 0.0016  memory: 11052  
10/06 01:46:16 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:54  time: 0.1425  data_time: 0.0019  memory: 8427  
10/06 01:46:23 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:40  time: 0.1455  data_time: 0.0046  memory: 1424  
10/06 01:46:31 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:26  time: 0.1376  data_time: 0.0017  memory: 5786  
10/06 01:46:42 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1337  data_time: 0.0016  memory: 11659  
10/06 01:46:53 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1260  data_time: 0.0015  memory: 9367  
10/06 01:46:53 - mmengine - INFO - per class results:
10/06 01:46:53 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.45 | 87.08 |
|       building      | 81.76 |  93.1 |
|         sky         | 94.28 | 97.34 |
|        floor        |  81.4 | 89.66 |
|         tree        | 74.17 | 85.77 |
|       ceiling       | 84.01 | 92.28 |
|         road        | 82.67 | 90.55 |
|         bed         | 88.45 | 96.39 |
|      windowpane     | 61.22 | 77.02 |
|        grass        | 63.79 | 78.97 |
|       cabinet       |  59.7 |  72.0 |
|       sidewalk      | 66.08 | 81.36 |
|        person       | 78.91 | 88.07 |
|        earth        | 35.33 | 47.56 |
|         door        | 51.84 | 66.01 |
|        table        |  60.3 | 77.12 |
|       mountain      | 60.88 | 75.41 |
|        plant        | 51.13 | 64.44 |
|       curtain       |  73.4 | 88.22 |
|        chair        | 55.34 |  68.6 |
|         car         | 82.22 | 92.65 |
|        water        | 57.42 | 71.15 |
|       painting      | 70.87 | 86.72 |
|         sofa        |  70.3 | 88.35 |
|        shelf        |  43.5 | 63.86 |
|        house        | 47.88 | 65.42 |
|         sea         | 58.85 | 71.85 |
|        mirror       | 68.96 | 77.32 |
|         rug         | 62.97 | 73.43 |
|        field        | 26.21 | 43.21 |
|       armchair      | 46.03 |  63.8 |
|         seat        |  56.5 | 76.72 |
|        fence        | 46.79 | 60.71 |
|         desk        |  47.0 | 61.21 |
|         rock        |  44.6 | 71.16 |
|       wardrobe      | 51.13 | 74.28 |
|         lamp        | 59.56 | 75.91 |
|       bathtub       | 78.28 | 85.87 |
|       railing       | 36.08 | 50.68 |
|       cushion       | 59.88 | 70.09 |
|         base        | 35.46 | 48.94 |
|         box         | 24.34 |  30.6 |
|        column       | 50.77 | 64.04 |
|      signboard      | 34.48 | 43.29 |
|   chest of drawers  | 35.75 | 56.45 |
|       counter       | 26.62 | 35.57 |
|         sand        | 44.12 | 58.62 |
|         sink        |  69.7 | 78.46 |
|      skyscraper     | 49.25 | 60.08 |
|      fireplace      | 67.54 | 91.59 |
|     refrigerator    | 71.93 | 80.83 |
|      grandstand     | 42.03 | 78.53 |
|         path        | 23.17 | 36.23 |
|        stairs       | 20.08 | 24.58 |
|        runway       | 63.64 | 85.96 |
|         case        | 63.47 | 79.46 |
|      pool table     | 90.42 | 96.79 |
|        pillow       | 52.97 | 59.66 |
|     screen door     | 66.21 | 71.79 |
|       stairway      | 35.39 | 55.33 |
|        river        |  9.82 | 19.76 |
|        bridge       | 64.28 | 76.76 |
|       bookcase      | 36.25 | 68.47 |
|        blind        | 39.36 | 43.93 |
|     coffee table    | 56.31 | 81.81 |
|        toilet       | 82.57 | 88.63 |
|        flower       | 39.42 | 54.82 |
|         book        |  45.0 | 63.42 |
|         hill        | 10.03 |  17.4 |
|        bench        | 50.78 | 58.47 |
|      countertop     | 55.01 | 76.23 |
|        stove        | 74.38 | 87.37 |
|         palm        | 46.77 | 74.78 |
|    kitchen island   | 34.98 | 61.32 |
|       computer      | 73.45 | 88.34 |
|     swivel chair    | 47.09 | 68.03 |
|         boat        | 61.62 | 84.42 |
|         bar         | 48.09 |  71.3 |
|    arcade machine   | 85.69 | 97.69 |
|        hovel        | 43.51 | 48.14 |
|         bus         | 87.05 | 96.17 |
|        towel        | 65.26 | 80.32 |
|        light        | 52.48 | 62.32 |
|        truck        | 32.44 | 48.97 |
|        tower        | 33.75 | 66.94 |
|      chandelier     | 65.35 | 81.65 |
|        awning       |  23.8 | 26.75 |
|     streetlight     | 25.03 | 32.97 |
|        booth        | 48.41 | 58.23 |
| television receiver | 67.63 | 81.39 |
|       airplane      | 68.18 | 80.97 |
|      dirt track     |  5.85 |  8.5  |
|       apparel       | 35.23 | 43.72 |
|         pole        |  12.1 |  16.1 |
|         land        |  2.82 |  5.11 |
|      bannister      | 13.77 | 19.28 |
|      escalator      |  50.8 | 80.96 |
|       ottoman       | 48.68 | 63.67 |
|        bottle       | 35.77 | 57.72 |
|        buffet       | 42.39 |  52.4 |
|        poster       | 29.17 | 36.78 |
|        stage        | 18.19 | 39.49 |
|         van         |  35.4 |  43.1 |
|         ship        | 74.92 | 91.33 |
|       fountain      | 28.95 | 29.73 |
|    conveyer belt    | 83.44 |  91.6 |
|        canopy       | 31.44 | 48.56 |
|        washer       | 73.86 | 80.93 |
|      plaything      | 25.64 | 43.79 |
|    swimming pool    | 53.93 | 70.53 |
|        stool        | 41.86 | 51.26 |
|        barrel       | 59.55 | 92.37 |
|        basket       | 25.99 | 33.08 |
|      waterfall      | 66.64 | 93.21 |
|         tent        | 89.46 | 99.35 |
|         bag         |  7.58 |  8.12 |
|       minibike      | 70.32 | 81.96 |
|        cradle       | 77.84 | 97.03 |
|         oven        | 38.73 | 46.12 |
|         ball        | 52.36 | 69.57 |
|         food        | 47.88 | 52.41 |
|         step        |  7.25 |  7.76 |
|         tank        | 60.77 | 65.84 |
|      trade name     | 17.64 | 19.52 |
|      microwave      | 81.06 | 91.76 |
|         pot         | 49.26 | 60.26 |
|        animal       | 62.83 |  64.4 |
|       bicycle       | 53.02 | 70.41 |
|         lake        | 35.16 | 69.99 |
|      dishwasher     | 57.47 | 63.29 |
|        screen       | 61.95 | 87.75 |
|       blanket       |  9.76 |  10.7 |
|      sculpture      | 61.37 | 82.67 |
|         hood        | 52.85 | 65.63 |
|        sconce       |  42.9 | 56.42 |
|         vase        | 34.52 |  44.6 |
|    traffic light    | 27.51 | 45.08 |
|         tray        |  6.78 |  8.13 |
|        ashcan       | 33.83 | 43.28 |
|         fan         | 57.76 | 78.31 |
|         pier        | 33.07 | 48.14 |
|      crt screen     |  5.94 |  19.7 |
|        plate        | 51.94 | 66.74 |
|       monitor       | 13.01 |  14.1 |
|    bulletin board   | 42.03 | 51.46 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 51.91 | 57.35 |
|        glass        | 10.13 | 10.67 |
|        clock        | 37.33 | 44.43 |
|         flag        | 59.44 | 65.98 |
+---------------------+-------+-------+
10/06 01:46:53 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.8900  mIoU: 49.5800  mAcc: 62.5900  data_time: 0.0021  time: 0.2651
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
10/06 01:47:37 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2009776003
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2009776003
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 01:47:38 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/glass_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 01:47:59,053 - mmseg - INFO - using core type: DCNv3
2024-10-06 01:47:59,054 - mmseg - INFO - using activation layer: GELU
2024-10-06 01:47:59,054 - mmseg - INFO - using main norm layer: LN
2024-10-06 01:47:59,054 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 01:47:59,054 - mmseg - INFO - level2_post_norm: False
2024-10-06 01:47:59,054 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 01:47:59,054 - mmseg - INFO - res_post_norm: False
2024-10-06 01:47:59,054 - mmseg - INFO - use_dcn_v4_op: False
10/06 01:48:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 01:48:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 01:48:09 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:48:12 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 01:55:56 - mmengine - INFO - Iter(test) [  50/2000]    eta: 5:01:40  time: 8.8365  data_time: 0.0034  memory: 21922  
10/06 02:02:56 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:40:04  time: 8.7773  data_time: 0.0059  memory: 15329  
10/06 02:09:43 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 4:25:29  time: 8.3428  data_time: 0.0020  memory: 11667  
10/06 02:16:47 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 4:17:16  time: 8.2421  data_time: 0.0024  memory: 15333  
10/06 02:23:30 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 4:07:09  time: 7.9282  data_time: 0.0021  memory: 15306  
10/06 02:30:11 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:57:56  time: 8.1217  data_time: 0.0026  memory: 15338  
10/06 02:37:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:50:13  time: 7.7841  data_time: 0.0040  memory: 15346  
10/06 02:43:47 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:42:20  time: 8.2515  data_time: 0.0022  memory: 15309  
10/06 02:49:46 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:32:05  time: 7.4304  data_time: 0.0037  memory: 10302  
10/06 02:56:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 3:24:41  time: 7.7224  data_time: 0.0020  memory: 11649  
10/06 03:03:32 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 3:18:37  time: 8.6314  data_time: 0.0027  memory: 10676  
10/06 03:10:13 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 3:11:23  time: 8.4553  data_time: 0.0036  memory: 10485  
10/06 03:17:00 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 3:04:25  time: 8.3352  data_time: 0.0025  memory: 11697  
10/06 03:24:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:58:17  time: 8.4102  data_time: 0.0025  memory: 15344  
10/06 03:31:11 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:51:38  time: 8.3826  data_time: 0.0036  memory: 11701  
10/06 03:37:23 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:43:47  time: 7.7741  data_time: 0.0019  memory: 10487  
10/06 03:43:59 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:36:39  time: 7.9270  data_time: 0.0019  memory: 1477  
10/06 03:50:11 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:29:06  time: 7.1990  data_time: 0.0027  memory: 9741  
10/06 03:57:10 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:22:32  time: 8.1678  data_time: 0.0036  memory: 11651  
10/06 04:03:43 - mmengine - INFO - Iter(test) [1000/2000]    eta: 2:15:31  time: 7.7761  data_time: 0.0037  memory: 11612  
10/06 04:10:41 - mmengine - INFO - Iter(test) [1050/2000]    eta: 2:08:55  time: 8.6924  data_time: 0.0028  memory: 11701  
10/06 04:17:29 - mmengine - INFO - Iter(test) [1100/2000]    eta: 2:02:08  time: 7.9374  data_time: 0.0032  memory: 11669  
10/06 04:24:04 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:55:12  time: 8.1791  data_time: 0.0028  memory: 11656  
10/06 04:30:50 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:48:25  time: 7.8802  data_time: 0.0037  memory: 2651  
10/06 04:37:15 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:41:26  time: 7.8107  data_time: 0.0038  memory: 15334  
10/06 04:43:32 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:34:24  time: 8.0803  data_time: 0.0035  memory: 1480  
10/06 04:50:09 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:27:36  time: 7.4701  data_time: 0.0057  memory: 8056  
10/06 04:56:54 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:20:52  time: 8.7185  data_time: 0.0043  memory: 11681  
10/06 05:03:16 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:13:59  time: 8.4443  data_time: 0.0039  memory: 9742  
10/06 05:09:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 1:07:10  time: 7.3511  data_time: 0.0026  memory: 1478  
10/06 05:16:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 1:00:31  time: 8.1892  data_time: 0.0025  memory: 11422  
10/06 05:23:08 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:53:43  time: 7.9197  data_time: 0.0029  memory: 1476  
10/06 05:29:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:46:57  time: 7.2693  data_time: 0.0017  memory: 15346  
10/06 05:36:13 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:40:14  time: 7.8123  data_time: 0.0020  memory: 9929  
10/06 05:42:55 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:33:31  time: 7.7206  data_time: 0.0034  memory: 11052  
10/06 05:49:13 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:26:46  time: 8.1273  data_time: 0.0030  memory: 8427  
10/06 05:55:53 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:20:04  time: 8.0290  data_time: 0.0027  memory: 1424  
10/06 06:02:10 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:13:22  time: 7.8711  data_time: 0.0052  memory: 5786  
10/06 06:08:56 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:06:41  time: 7.7063  data_time: 0.0036  memory: 11659  
10/06 06:15:25 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 7.2856  data_time: 0.0035  memory: 9367  
10/06 06:15:25 - mmengine - INFO - per class results:
10/06 06:15:25 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.76 | 87.52 |
|       building      | 82.12 | 90.91 |
|         sky         | 94.21 |  97.7 |
|        floor        | 80.67 | 89.72 |
|         tree        | 73.58 | 87.22 |
|       ceiling       | 83.31 | 93.72 |
|         road        | 84.84 | 89.61 |
|         bed         |  88.7 | 95.63 |
|      windowpane     | 61.16 | 77.66 |
|        grass        | 64.17 | 82.66 |
|       cabinet       | 58.37 | 66.65 |
|       sidewalk      | 64.05 |  78.3 |
|        person       | 79.08 | 88.03 |
|        earth        | 35.84 | 50.14 |
|         door        | 52.45 | 64.46 |
|        table        | 59.02 | 75.93 |
|       mountain      |  59.6 | 71.57 |
|        plant        | 50.92 | 66.45 |
|       curtain       | 70.09 | 89.62 |
|        chair        |  54.8 | 69.78 |
|         car         | 82.34 | 90.65 |
|        water        |  58.6 | 75.22 |
|       painting      | 69.96 | 86.17 |
|         sofa        | 70.49 | 87.94 |
|        shelf        | 45.82 | 67.41 |
|        house        | 51.73 |  83.9 |
|         sea         | 53.84 | 69.71 |
|        mirror       | 65.63 | 75.53 |
|         rug         |  65.2 | 79.92 |
|        field        | 29.82 | 55.27 |
|       armchair      | 44.42 | 59.09 |
|         seat        | 58.87 | 79.32 |
|        fence        | 41.62 | 59.61 |
|         desk        | 45.57 | 59.46 |
|         rock        | 39.87 | 56.23 |
|       wardrobe      | 46.88 | 69.59 |
|         lamp        |  58.9 | 71.15 |
|       bathtub       | 77.83 | 84.11 |
|       railing       | 35.44 | 46.61 |
|       cushion       | 57.68 | 77.46 |
|         base        | 27.23 | 39.64 |
|         box         | 20.94 | 25.27 |
|        column       | 49.22 |  64.7 |
|      signboard      | 31.77 |  38.7 |
|   chest of drawers  | 36.59 | 67.84 |
|       counter       | 26.44 | 35.06 |
|         sand        | 44.36 | 58.58 |
|         sink        | 70.05 | 76.01 |
|      skyscraper     | 65.42 | 83.43 |
|      fireplace      | 70.91 | 89.29 |
|     refrigerator    | 68.49 | 76.08 |
|      grandstand     | 42.88 | 87.19 |
|         path        | 18.26 | 24.92 |
|        stairs       | 27.23 |  35.5 |
|        runway       |  80.3 | 94.65 |
|         case        | 57.55 | 79.51 |
|      pool table     | 92.02 | 96.14 |
|        pillow       |  48.0 | 52.47 |
|     screen door     | 52.78 | 60.09 |
|       stairway      | 37.12 | 47.47 |
|        river        | 13.49 |  21.5 |
|        bridge       | 56.96 | 62.67 |
|       bookcase      | 45.99 | 62.96 |
|        blind        | 40.29 | 44.86 |
|     coffee table    | 56.66 | 82.04 |
|        toilet       | 81.62 | 87.93 |
|        flower       | 34.12 | 58.07 |
|         book        | 44.86 | 57.34 |
|         hill        | 11.11 | 22.82 |
|        bench        | 49.33 | 54.74 |
|      countertop     | 51.45 | 65.67 |
|        stove        | 76.76 | 85.33 |
|         palm        | 47.49 | 61.57 |
|    kitchen island   | 37.41 |  74.9 |
|       computer      | 73.38 | 85.28 |
|     swivel chair    | 48.57 | 63.83 |
|         boat        | 72.18 | 76.74 |
|         bar         | 48.97 | 66.61 |
|    arcade machine   | 84.15 | 96.47 |
|        hovel        | 48.36 | 54.43 |
|         bus         | 88.61 | 92.94 |
|        towel        | 64.45 | 76.74 |
|        light        | 48.56 | 55.46 |
|        truck        | 28.92 | 45.83 |
|        tower        |  34.3 | 67.91 |
|      chandelier     | 63.85 | 81.73 |
|        awning       |  27.1 | 30.84 |
|     streetlight     | 19.28 | 22.43 |
|        booth        | 45.69 | 54.12 |
| television receiver | 65.47 | 76.03 |
|       airplane      | 65.04 |  71.3 |
|      dirt track     |  3.49 |  4.57 |
|       apparel       | 40.55 | 52.65 |
|         pole        | 14.59 | 17.33 |
|         land        |  0.6  |  1.15 |
|      bannister      |  4.1  |  4.73 |
|      escalator      | 52.13 | 76.19 |
|       ottoman       | 48.27 | 65.13 |
|        bottle       | 32.49 | 45.07 |
|        buffet       |  48.3 | 58.57 |
|        poster       | 20.59 | 29.85 |
|        stage        | 15.71 | 30.68 |
|         van         | 38.44 | 51.93 |
|         ship        | 67.07 | 76.84 |
|       fountain      | 23.47 | 28.03 |
|    conveyer belt    | 80.32 | 84.07 |
|        canopy       |  35.1 | 44.94 |
|        washer       | 69.44 | 72.83 |
|      plaything      | 25.73 | 40.14 |
|    swimming pool    | 63.29 | 89.04 |
|        stool        |  40.7 | 49.23 |
|        barrel       | 45.92 | 72.47 |
|        basket       | 27.54 | 33.89 |
|      waterfall      | 62.34 | 86.87 |
|         tent        | 92.09 | 99.05 |
|         bag         |  5.01 |  5.33 |
|       minibike      | 68.26 |  78.4 |
|        cradle       |  80.5 | 97.44 |
|         oven        | 48.21 | 54.24 |
|         ball        |  50.8 | 69.95 |
|         food        | 42.99 | 48.97 |
|         step        |  5.84 |  6.1  |
|         tank        | 61.05 | 66.18 |
|      trade name     | 17.25 | 19.15 |
|      microwave      | 80.99 |  87.2 |
|         pot         | 47.85 | 56.21 |
|        animal       | 58.14 | 59.42 |
|       bicycle       | 50.96 | 63.25 |
|         lake        | 44.57 | 63.63 |
|      dishwasher     | 62.92 | 72.32 |
|        screen       | 67.15 | 90.48 |
|       blanket       |  15.5 | 18.11 |
|      sculpture      | 62.22 | 68.86 |
|         hood        | 53.01 | 60.13 |
|        sconce       | 37.72 | 44.86 |
|         vase        | 33.47 | 41.03 |
|    traffic light    | 25.51 | 33.11 |
|         tray        |  3.71 |  4.32 |
|        ashcan       | 33.86 | 39.46 |
|         fan         | 54.39 | 71.27 |
|         pier        | 32.42 | 34.95 |
|      crt screen     |  4.54 | 12.41 |
|        plate        |  47.6 | 57.08 |
|       monitor       | 13.38 | 14.36 |
|    bulletin board   | 41.87 | 52.55 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 46.69 | 53.48 |
|        glass        |  5.6  |  5.66 |
|        clock        | 31.46 |  35.1 |
|         flag        | 46.68 | 50.22 |
+---------------------+-------+-------+
10/06 06:15:25 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.7200  mIoU: 49.0000  mAcc: 60.6100  data_time: 0.0039  time: 8.0168
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
10/06 06:15:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 549969992
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 549969992
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:15:36 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/motion_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:15:42,008 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:15:42,008 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:15:42,008 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:15:42,008 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 06:15:42,008 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:15:42,008 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:15:42,008 - mmseg - INFO - res_post_norm: False
2024-10-06 06:15:42,008 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:15:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:15:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:15:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 06:15:55 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 06:17:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:59:29  time: 1.3675  data_time: 0.0019  memory: 21922  
10/06 06:18:36 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:51:00  time: 1.5167  data_time: 0.0024  memory: 15329  
10/06 06:19:34 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:44:57  time: 1.1421  data_time: 0.0018  memory: 11667  
10/06 06:20:40 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:42:44  time: 1.2784  data_time: 0.0019  memory: 15333  
10/06 06:21:45 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:40:45  time: 1.1217  data_time: 0.0028  memory: 15306  
10/06 06:22:45 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:38:42  time: 1.0335  data_time: 0.0019  memory: 15338  
10/06 06:23:47 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:37:03  time: 1.0957  data_time: 0.0061  memory: 15346  
10/06 06:24:46 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:35:24  time: 1.1623  data_time: 0.0017  memory: 15309  
10/06 06:25:34 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:33:13  time: 1.0347  data_time: 0.0017  memory: 10302  
10/06 06:26:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:31:29  time: 0.9019  data_time: 0.0017  memory: 11649  
10/06 06:27:18 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:30:00  time: 1.1603  data_time: 0.0018  memory: 10676  
10/06 06:28:06 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:28:25  time: 1.0884  data_time: 0.0036  memory: 10485  
10/06 06:29:01 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:27:12  time: 1.1601  data_time: 0.0017  memory: 11697  
10/06 06:30:01 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:26:10  time: 1.0065  data_time: 0.0020  memory: 15344  
10/06 06:31:02 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:25:11  time: 1.4628  data_time: 0.0017  memory: 11701  
10/06 06:31:48 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:23:49  time: 0.9211  data_time: 0.0027  memory: 10487  
10/06 06:32:35 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:22:32  time: 0.9461  data_time: 0.0026  memory: 1477  
10/06 06:33:24 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:21:21  time: 0.9758  data_time: 0.0017  memory: 9741  
10/06 06:34:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:20:23  time: 1.2337  data_time: 0.0018  memory: 11651  
10/06 06:35:14 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:19:18  time: 0.9398  data_time: 0.0018  memory: 11612  
10/06 06:36:11 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:18:20  time: 1.4400  data_time: 0.0033  memory: 11701  
10/06 06:37:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:20  time: 0.9709  data_time: 0.0018  memory: 11669  
10/06 06:37:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:17  time: 1.1137  data_time: 0.0017  memory: 11656  
10/06 06:38:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:14  time: 0.9766  data_time: 0.0027  memory: 2651  
10/06 06:39:39 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:13  time: 1.0957  data_time: 0.0029  memory: 15334  
10/06 06:40:24 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:10  time: 0.9541  data_time: 0.0017  memory: 1480  
10/06 06:41:14 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:11  time: 0.9002  data_time: 0.0022  memory: 8056  
10/06 06:42:09 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:14  time: 1.2295  data_time: 0.0024  memory: 11681  
10/06 06:42:59 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:15  time: 1.1993  data_time: 0.0017  memory: 9742  
10/06 06:43:47 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:17  time: 0.8812  data_time: 0.0018  memory: 1478  
10/06 06:44:40 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:20  time: 1.0064  data_time: 0.0024  memory: 11422  
10/06 06:45:25 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:22  time: 0.9025  data_time: 0.0025  memory: 1476  
10/06 06:46:18 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:26  time: 0.8963  data_time: 0.0016  memory: 15346  
10/06 06:47:11 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:30  time: 0.9820  data_time: 0.0018  memory: 9929  
10/06 06:48:03 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:35  time: 1.0042  data_time: 0.0016  memory: 11052  
10/06 06:48:50 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:39  time: 0.9493  data_time: 0.0019  memory: 8427  
10/06 06:49:36 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:43  time: 0.9157  data_time: 0.0018  memory: 1424  
10/06 06:50:22 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:48  time: 0.9474  data_time: 0.0017  memory: 5786  
10/06 06:51:15 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:54  time: 0.9630  data_time: 0.0022  memory: 11659  
10/06 06:52:04 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.8485  data_time: 0.0026  memory: 9367  
10/06 06:52:05 - mmengine - INFO - per class results:
10/06 06:52:05 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 76.98 | 86.26 |
|       building      | 80.57 | 92.13 |
|         sky         | 93.89 | 96.68 |
|        floor        | 81.31 | 89.82 |
|         tree        | 74.34 | 86.95 |
|       ceiling       |  83.8 | 93.58 |
|         road        | 82.81 | 89.09 |
|         bed         | 88.07 | 96.11 |
|      windowpane     | 61.94 | 75.68 |
|        grass        |  64.6 | 81.42 |
|       cabinet       | 59.34 | 71.01 |
|       sidewalk      | 64.45 | 83.89 |
|        person       | 78.36 | 88.43 |
|        earth        | 35.85 | 45.89 |
|         door        | 50.21 | 64.97 |
|        table        | 60.69 | 76.04 |
|       mountain      |  61.8 |  74.9 |
|        plant        | 50.56 | 66.39 |
|       curtain       |  72.8 | 86.72 |
|        chair        | 55.37 | 69.13 |
|         car         | 82.26 |  92.3 |
|        water        | 58.05 | 67.27 |
|       painting      |  71.7 | 85.87 |
|         sofa        | 71.27 | 88.53 |
|        shelf        | 43.97 | 64.33 |
|        house        | 42.21 | 66.12 |
|         sea         | 61.14 |  82.6 |
|        mirror       | 67.53 | 75.48 |
|         rug         | 58.28 | 68.41 |
|        field        |  23.7 | 40.67 |
|       armchair      | 48.04 |  65.8 |
|         seat        |  57.2 | 78.08 |
|        fence        | 44.93 | 62.68 |
|         desk        | 46.74 | 63.75 |
|         rock        | 52.45 | 77.28 |
|       wardrobe      | 51.64 | 72.97 |
|         lamp        | 57.86 | 73.74 |
|       bathtub       | 78.77 | 84.79 |
|       railing       | 36.28 |  52.8 |
|       cushion       | 60.33 | 71.62 |
|         base        | 37.05 | 48.57 |
|         box         | 25.02 | 31.97 |
|        column       | 50.86 |  64.2 |
|      signboard      | 34.66 | 46.21 |
|   chest of drawers  | 34.64 | 59.55 |
|       counter       | 26.76 | 37.42 |
|         sand        | 47.62 | 63.17 |
|         sink        | 70.17 | 77.86 |
|      skyscraper     | 44.92 | 56.71 |
|      fireplace      | 67.79 | 92.65 |
|     refrigerator    | 68.25 |  78.4 |
|      grandstand     | 47.42 | 80.54 |
|         path        | 24.42 | 37.94 |
|        stairs       | 18.46 | 23.81 |
|        runway       | 67.16 | 90.32 |
|         case        | 49.88 | 66.03 |
|      pool table     | 91.27 | 96.61 |
|        pillow       | 53.21 | 59.93 |
|     screen door     |  68.4 | 76.41 |
|       stairway      |  34.5 | 50.11 |
|        river        | 16.55 | 32.09 |
|        bridge       | 49.27 | 56.05 |
|       bookcase      | 37.64 | 62.87 |
|        blind        | 43.57 | 54.53 |
|     coffee table    | 56.26 | 80.69 |
|        toilet       | 81.76 | 88.95 |
|        flower       | 39.36 | 52.47 |
|         book        | 47.67 | 63.38 |
|         hill        | 12.02 | 21.96 |
|        bench        | 50.65 |  57.3 |
|      countertop     | 52.42 | 73.43 |
|        stove        | 77.17 | 88.91 |
|         palm        | 50.38 | 79.18 |
|    kitchen island   | 38.85 | 71.45 |
|       computer      | 73.38 | 88.36 |
|     swivel chair    | 49.72 | 67.44 |
|         boat        | 71.75 | 84.56 |
|         bar         |  45.6 | 66.55 |
|    arcade machine   | 86.26 | 97.06 |
|        hovel        | 11.97 | 12.85 |
|         bus         | 88.07 | 95.78 |
|        towel        | 67.12 | 78.69 |
|        light        | 51.14 | 60.25 |
|        truck        | 34.53 | 49.79 |
|        tower        | 36.48 | 74.44 |
|      chandelier     | 65.14 | 80.86 |
|        awning       | 26.05 | 28.82 |
|     streetlight     | 22.37 | 29.14 |
|        booth        | 47.54 | 60.11 |
| television receiver | 68.64 | 81.48 |
|       airplane      | 68.47 | 78.28 |
|      dirt track     | 23.59 | 44.45 |
|       apparel       | 32.76 | 44.36 |
|         pole        | 14.95 | 19.75 |
|         land        |  2.6  |  4.77 |
|      bannister      | 12.67 | 20.13 |
|      escalator      | 51.94 | 81.39 |
|       ottoman       | 47.24 | 64.32 |
|        bottle       | 36.07 | 60.63 |
|        buffet       | 42.88 | 53.62 |
|        poster       | 26.15 | 35.61 |
|        stage        | 17.35 | 34.36 |
|         van         | 44.67 | 53.85 |
|         ship        | 80.54 | 93.53 |
|       fountain      | 23.81 | 24.14 |
|    conveyer belt    | 82.21 | 91.25 |
|        canopy       |  32.8 | 48.84 |
|        washer       | 73.02 | 80.85 |
|      plaything      | 29.48 | 41.37 |
|    swimming pool    |  46.7 | 70.04 |
|        stool        | 39.14 | 50.94 |
|        barrel       | 51.61 | 85.14 |
|        basket       | 28.62 | 44.04 |
|      waterfall      | 72.05 | 93.67 |
|         tent        | 91.33 | 98.74 |
|         bag         | 12.62 | 14.17 |
|       minibike      | 68.96 | 83.28 |
|        cradle       | 79.23 | 95.43 |
|         oven        | 49.43 | 64.13 |
|         ball        | 50.85 | 66.55 |
|         food        | 56.43 | 61.93 |
|         step        |  6.43 |  7.51 |
|         tank        | 60.13 | 65.21 |
|      trade name     | 19.07 | 21.67 |
|      microwave      | 80.22 | 90.03 |
|         pot         | 51.14 | 60.75 |
|        animal       | 61.86 | 63.62 |
|       bicycle       | 52.55 | 74.89 |
|         lake        |  48.6 |  69.7 |
|      dishwasher     | 57.35 | 64.76 |
|        screen       | 58.07 | 86.11 |
|       blanket       | 15.64 | 17.47 |
|      sculpture      | 60.85 | 81.23 |
|         hood        | 53.89 | 67.54 |
|        sconce       | 43.46 | 57.37 |
|         vase        | 34.53 | 43.18 |
|    traffic light    | 28.96 | 44.91 |
|         tray        |  6.47 |  7.25 |
|        ashcan       | 35.11 |  46.3 |
|         fan         | 56.77 | 79.17 |
|         pier        |  43.2 | 57.87 |
|      crt screen     |  4.39 |  14.6 |
|        plate        | 54.39 |  72.3 |
|       monitor       | 11.48 | 12.08 |
|    bulletin board   | 43.83 | 60.01 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 55.13 |  63.6 |
|        glass        | 10.79 | 11.33 |
|        clock        | 39.27 | 46.13 |
|         flag        | 59.91 | 66.31 |
+---------------------+-------+-------+
10/06 06:52:05 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.6900  mIoU: 49.9800  mAcc: 63.2300  data_time: 0.0023  time: 1.0845
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
10/06 06:53:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2138202730
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2138202730
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 06:53:20 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/zoom_blur'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 06:53:34,331 - mmseg - INFO - using core type: DCNv3
2024-10-06 06:53:34,331 - mmseg - INFO - using activation layer: GELU
2024-10-06 06:53:34,332 - mmseg - INFO - using main norm layer: LN
2024-10-06 06:53:34,332 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 06:53:34,332 - mmseg - INFO - level2_post_norm: False
2024-10-06 06:53:34,332 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 06:53:34,332 - mmseg - INFO - res_post_norm: False
2024-10-06 06:53:34,332 - mmseg - INFO - use_dcn_v4_op: False
10/06 06:53:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 06:53:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 06:53:42 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 06:53:47 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 06:55:15 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:57:12  time: 1.2809  data_time: 0.0018  memory: 21922  
10/06 06:56:19 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:48:14  time: 1.4198  data_time: 0.0024  memory: 15329  
10/06 06:57:12 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:42:18  time: 1.0763  data_time: 0.0018  memory: 11667  
10/06 06:58:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:40:01  time: 1.1632  data_time: 0.0018  memory: 15333  
10/06 06:59:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:37:58  time: 0.9883  data_time: 0.0017  memory: 15306  
10/06 07:00:07 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:35:55  time: 0.9188  data_time: 0.0032  memory: 15338  
10/06 07:01:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:34:22  time: 0.9806  data_time: 0.0017  memory: 15346  
10/06 07:01:58 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:32:47  time: 1.0591  data_time: 0.0019  memory: 15309  
10/06 07:02:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:30:44  time: 0.9140  data_time: 0.0017  memory: 10302  
10/06 07:03:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:29:05  time: 0.8564  data_time: 0.0018  memory: 11649  
10/06 07:04:18 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:27:44  time: 1.0707  data_time: 0.0018  memory: 10676  
10/06 07:05:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:26:22  time: 1.0827  data_time: 0.0021  memory: 10485  
10/06 07:05:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:25:12  time: 1.0768  data_time: 0.0017  memory: 11697  
10/06 07:06:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:24:14  time: 0.9158  data_time: 0.0018  memory: 15344  
10/06 07:07:45 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:23:16  time: 1.3515  data_time: 0.0017  memory: 11701  
10/06 07:08:28 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:22:01  time: 0.9056  data_time: 0.0022  memory: 10487  
10/06 07:09:12 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:20:52  time: 0.9016  data_time: 0.0020  memory: 1477  
10/06 07:09:57 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:19:45  time: 0.8999  data_time: 0.0017  memory: 9741  
10/06 07:10:51 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:18:51  time: 1.1247  data_time: 0.0035  memory: 11651  
10/06 07:11:37 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:17:50  time: 0.8429  data_time: 0.0017  memory: 11612  
10/06 07:12:29 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:16:55  time: 1.2510  data_time: 0.0020  memory: 11701  
10/06 07:13:19 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:15:59  time: 0.8824  data_time: 0.0031  memory: 11669  
10/06 07:14:05 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:15:00  time: 1.0187  data_time: 0.0017  memory: 11656  
10/06 07:14:51 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:14:02  time: 0.8660  data_time: 0.0017  memory: 2651  
10/06 07:15:37 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:13:06  time: 1.0092  data_time: 0.0023  memory: 15334  
10/06 07:16:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:12:07  time: 0.8899  data_time: 0.0017  memory: 1480  
10/06 07:17:03 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:11:12  time: 0.8105  data_time: 0.0017  memory: 8056  
10/06 07:17:54 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:10:20  time: 1.1022  data_time: 0.0017  memory: 11681  
10/06 07:18:39 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:09:25  time: 1.0571  data_time: 0.0017  memory: 9742  
10/06 07:19:21 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:08:31  time: 0.8100  data_time: 0.0017  memory: 1478  
10/06 07:20:09 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:07:39  time: 0.8913  data_time: 0.0017  memory: 11422  
10/06 07:20:51 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:46  time: 0.8501  data_time: 0.0019  memory: 1476  
10/06 07:21:39 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:54  time: 0.8016  data_time: 0.0016  memory: 15346  
10/06 07:22:28 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:03  time: 0.8713  data_time: 0.0019  memory: 9929  
10/06 07:23:13 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:12  time: 0.8248  data_time: 0.0016  memory: 11052  
10/06 07:23:55 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:20  time: 0.8474  data_time: 0.0018  memory: 8427  
10/06 07:24:39 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:30  time: 0.8830  data_time: 0.0020  memory: 1424  
10/06 07:25:21 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:39  time: 0.8507  data_time: 0.0023  memory: 5786  
10/06 07:26:08 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:49  time: 0.8281  data_time: 0.0017  memory: 11659  
10/06 07:26:53 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7867  data_time: 0.0016  memory: 9367  
10/06 07:26:53 - mmengine - INFO - per class results:
10/06 07:26:53 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 63.44 | 82.48 |
|       building      | 73.19 | 87.99 |
|         sky         | 88.03 | 90.99 |
|        floor        | 65.48 | 84.13 |
|         tree        | 55.76 | 66.26 |
|       ceiling       | 67.51 | 90.82 |
|         road        | 57.84 | 62.04 |
|         bed         | 78.11 | 93.81 |
|      windowpane     | 50.22 | 64.66 |
|        grass        | 54.14 | 71.89 |
|       cabinet       | 49.98 | 62.53 |
|       sidewalk      | 38.08 | 69.83 |
|        person       | 63.93 |  76.5 |
|        earth        | 19.28 | 23.86 |
|         door        | 30.22 | 35.95 |
|        table        | 48.93 | 64.66 |
|       mountain      |  41.0 | 46.55 |
|        plant        | 32.81 | 48.23 |
|       curtain       |  46.6 | 65.26 |
|        chair        | 39.35 | 48.97 |
|         car         | 68.82 | 85.63 |
|        water        | 42.01 | 64.17 |
|       painting      |  53.2 | 77.76 |
|         sofa        | 55.96 | 73.77 |
|        shelf        |  34.5 | 50.14 |
|        house        | 43.77 | 75.47 |
|         sea         | 57.28 | 70.42 |
|        mirror       | 45.43 |  49.4 |
|         rug         | 22.32 | 24.03 |
|        field        | 22.34 | 64.76 |
|       armchair      | 33.48 | 51.13 |
|         seat        | 40.62 | 64.51 |
|        fence        | 23.21 | 36.39 |
|         desk        |  39.9 | 59.25 |
|         rock        | 28.14 | 38.08 |
|       wardrobe      | 42.22 | 57.91 |
|         lamp        |  43.6 | 59.84 |
|       bathtub       | 69.48 | 81.99 |
|       railing       | 22.18 | 31.01 |
|       cushion       | 34.85 | 38.17 |
|         base        | 15.33 | 22.67 |
|         box         |  7.48 |  7.87 |
|        column       | 27.99 | 34.06 |
|      signboard      | 24.12 |  29.4 |
|   chest of drawers  | 35.69 | 65.73 |
|       counter       |  28.1 | 52.25 |
|         sand        |  31.5 | 49.54 |
|         sink        | 59.65 | 67.13 |
|      skyscraper     | 64.37 |  87.4 |
|      fireplace      | 59.94 | 84.41 |
|     refrigerator    | 60.02 | 68.11 |
|      grandstand     | 29.23 | 68.78 |
|         path        | 15.81 | 23.09 |
|        stairs       |  6.21 |  6.91 |
|        runway       | 67.01 | 90.41 |
|         case        | 44.38 | 57.48 |
|      pool table     | 82.79 | 96.28 |
|        pillow       | 35.88 | 41.39 |
|     screen door     | 44.95 | 47.14 |
|       stairway      | 22.76 | 27.66 |
|        river        |  3.52 |  6.82 |
|        bridge       | 32.42 | 41.67 |
|       bookcase      | 28.39 | 61.27 |
|        blind        | 28.33 | 43.86 |
|     coffee table    |  48.0 | 65.65 |
|        toilet       | 74.05 | 83.93 |
|        flower       | 25.32 | 28.62 |
|         book        | 30.09 | 37.62 |
|         hill        |  4.83 |  9.95 |
|        bench        | 35.31 | 45.38 |
|      countertop     | 46.47 | 65.25 |
|        stove        | 64.19 | 79.54 |
|         palm        | 12.33 |  53.5 |
|    kitchen island   | 28.24 | 55.94 |
|       computer      | 51.52 | 60.28 |
|     swivel chair    | 25.19 | 32.87 |
|         boat        | 58.81 | 62.02 |
|         bar         | 17.88 | 22.54 |
|    arcade machine   | 42.07 | 79.06 |
|        hovel        |  6.55 |  8.61 |
|         bus         | 72.89 | 81.64 |
|        towel        | 30.89 | 34.88 |
|        light        | 22.86 | 29.29 |
|        truck        |  5.67 |  8.25 |
|        tower        | 35.19 | 66.33 |
|      chandelier     | 50.38 | 61.94 |
|        awning       | 21.39 | 23.55 |
|     streetlight     |  5.72 |  6.29 |
|        booth        | 35.08 | 39.45 |
| television receiver | 51.13 | 67.13 |
|       airplane      | 47.33 | 56.78 |
|      dirt track     |  3.43 | 11.92 |
|       apparel       | 15.84 | 17.84 |
|         pole        |  5.52 |  5.76 |
|         land        |  0.92 |  1.08 |
|      bannister      |  2.31 |  3.91 |
|      escalator      | 32.95 | 67.09 |
|       ottoman       | 32.72 | 37.91 |
|        bottle       | 24.76 | 32.73 |
|        buffet       | 41.19 | 49.35 |
|        poster       |  17.6 | 22.31 |
|        stage        | 13.04 | 24.88 |
|         van         | 31.73 | 39.75 |
|         ship        |  5.46 |  6.77 |
|       fountain      | 16.03 | 21.55 |
|    conveyer belt    | 52.23 | 62.65 |
|        canopy       | 13.41 | 14.72 |
|        washer       | 73.69 | 79.76 |
|      plaything      | 16.81 | 19.92 |
|    swimming pool    | 54.85 | 89.02 |
|        stool        | 28.81 | 39.74 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 13.33 | 15.14 |
|      waterfall      | 22.88 | 52.77 |
|         tent        | 75.68 | 99.89 |
|         bag         |  1.61 |  1.68 |
|       minibike      | 44.73 | 65.08 |
|        cradle       | 65.72 | 96.72 |
|         oven        | 35.41 | 48.69 |
|         ball        | 24.53 | 42.21 |
|         food        | 40.23 | 43.28 |
|         step        |  7.26 |  7.71 |
|         tank        | 49.45 | 53.09 |
|      trade name     | 18.41 | 21.85 |
|      microwave      | 32.66 | 37.88 |
|         pot         | 14.13 | 14.62 |
|        animal       | 48.82 | 55.44 |
|       bicycle       | 29.17 | 43.65 |
|         lake        | 27.93 | 67.53 |
|      dishwasher     | 42.01 | 54.02 |
|        screen       | 51.36 | 86.08 |
|       blanket       |  3.32 |  3.38 |
|      sculpture      | 45.13 | 50.28 |
|         hood        |  44.2 | 52.78 |
|        sconce       | 17.67 | 23.06 |
|         vase        | 22.13 | 27.49 |
|    traffic light    |  15.4 | 17.61 |
|         tray        |  2.23 |  2.42 |
|        ashcan       | 27.54 | 32.89 |
|         fan         | 32.92 |  59.3 |
|         pier        |  37.5 | 43.06 |
|      crt screen     |  5.26 | 10.85 |
|        plate        | 26.33 | 33.55 |
|       monitor       | 21.02 | 24.22 |
|    bulletin board   | 26.57 | 31.21 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 26.45 | 38.06 |
|        glass        |  1.68 |  1.69 |
|        clock        |  6.34 |  7.57 |
|         flag        | 33.43 | 40.03 |
+---------------------+-------+-------+
10/06 07:26:53 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 72.5100  mIoU: 34.7700  mAcc: 46.6300  data_time: 0.0022  time: 0.9931
Finished processing corruption type: zoom_blur
Processing corruption type: snow
10/06 07:27:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 913606737
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 913606737
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:27:15 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/snow'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:27:28,412 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:27:28,412 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:27:28,412 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:27:28,412 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:27:28,412 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:27:28,412 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:27:28,412 - mmseg - INFO - res_post_norm: False
2024-10-06 07:27:28,412 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:27:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:27:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:27:36 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 07:27:40 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 07:28:42 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:40:07  time: 0.7605  data_time: 0.0018  memory: 21922  
10/06 07:29:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:31:52  time: 0.8931  data_time: 0.0019  memory: 15329  
10/06 07:29:49 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:26:33  time: 0.5670  data_time: 0.0018  memory: 11667  
10/06 07:30:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:24:41  time: 0.6650  data_time: 0.0020  memory: 15333  
10/06 07:30:59 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:23:13  time: 0.5033  data_time: 0.0018  memory: 15306  
10/06 07:31:30 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:42  time: 0.3778  data_time: 0.0017  memory: 15338  
10/06 07:32:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:32  time: 0.4944  data_time: 0.0017  memory: 15346  
10/06 07:32:30 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:18  time: 0.5190  data_time: 0.0016  memory: 15309  
10/06 07:32:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:46  time: 0.4309  data_time: 0.0015  memory: 10302  
10/06 07:33:11 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:32  time: 0.3640  data_time: 0.0017  memory: 11649  
10/06 07:33:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:33  time: 0.5375  data_time: 0.0018  memory: 10676  
10/06 07:33:56 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:36  time: 0.5347  data_time: 0.0018  memory: 10485  
10/06 07:34:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:52  time: 0.5691  data_time: 0.0016  memory: 11697  
10/06 07:34:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:13:17  time: 0.3881  data_time: 0.0018  memory: 15344  
10/06 07:35:19 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:12:44  time: 0.8638  data_time: 0.0016  memory: 11701  
10/06 07:35:38 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:56  time: 0.3769  data_time: 0.0018  memory: 10487  
10/06 07:35:57 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:11  time: 0.3803  data_time: 0.0019  memory: 1477  
10/06 07:36:18 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:32  time: 0.4402  data_time: 0.0016  memory: 9741  
10/06 07:36:45 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:10:02  time: 0.6264  data_time: 0.0018  memory: 11651  
10/06 07:37:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:27  time: 0.3569  data_time: 0.0017  memory: 11612  
10/06 07:37:34 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:57  time: 0.7513  data_time: 0.0031  memory: 11701  
10/06 07:37:58 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:25  time: 0.3740  data_time: 0.0018  memory: 11669  
10/06 07:38:19 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:52  time: 0.5075  data_time: 0.0017  memory: 11656  
10/06 07:38:39 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:19  time: 0.3799  data_time: 0.0023  memory: 2651  
10/06 07:39:00 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:47  time: 0.4879  data_time: 0.0017  memory: 15334  
10/06 07:39:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:15  time: 0.3819  data_time: 0.0017  memory: 1480  
10/06 07:39:38 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:45  time: 0.3589  data_time: 0.0022  memory: 8056  
10/06 07:40:03 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:18  time: 0.5770  data_time: 0.0028  memory: 11681  
10/06 07:40:23 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:49  time: 0.5281  data_time: 0.0016  memory: 9742  
10/06 07:40:42 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:20  time: 0.3682  data_time: 0.0049  memory: 1478  
10/06 07:41:03 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:53  time: 0.3814  data_time: 0.0017  memory: 11422  
10/06 07:41:21 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:25  time: 0.3653  data_time: 0.0018  memory: 1476  
10/06 07:41:45 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:59  time: 0.3427  data_time: 0.0016  memory: 15346  
10/06 07:42:08 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:33  time: 0.3765  data_time: 0.0018  memory: 9929  
10/06 07:42:30 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:07  time: 0.3693  data_time: 0.0016  memory: 11052  
10/06 07:42:49 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:40  time: 0.3770  data_time: 0.0019  memory: 8427  
10/06 07:43:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:15  time: 0.3805  data_time: 0.0018  memory: 1424  
10/06 07:43:27 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:49  time: 0.3628  data_time: 0.0017  memory: 5786  
10/06 07:43:49 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:24  time: 0.3595  data_time: 0.0016  memory: 11659  
10/06 07:44:11 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.3342  data_time: 0.0016  memory: 9367  
10/06 07:44:11 - mmengine - INFO - per class results:
10/06 07:44:11 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.86 | 86.56 |
|       building      | 80.59 | 93.52 |
|         sky         | 93.13 | 96.21 |
|        floor        | 77.51 | 90.58 |
|         tree        | 73.04 |  86.5 |
|       ceiling       | 79.03 |  90.1 |
|         road        | 68.98 | 71.67 |
|         bed         | 86.81 | 94.01 |
|      windowpane     | 59.88 | 71.79 |
|        grass        | 61.31 | 85.62 |
|       cabinet       | 56.76 | 66.94 |
|       sidewalk      | 47.22 | 83.72 |
|        person       | 77.55 | 88.39 |
|        earth        | 32.43 | 41.65 |
|         door        |  43.8 | 53.66 |
|        table        | 57.06 |  74.5 |
|       mountain      |  55.6 | 66.27 |
|        plant        | 49.21 | 59.83 |
|       curtain       | 67.33 | 84.94 |
|        chair        | 52.78 | 66.88 |
|         car         | 82.33 | 91.88 |
|        water        | 46.94 | 66.76 |
|       painting      | 70.48 | 85.64 |
|         sofa        | 68.27 | 82.79 |
|        shelf        | 39.56 | 61.45 |
|        house        | 52.13 | 66.44 |
|         sea         | 48.61 |  75.3 |
|        mirror       | 64.94 | 75.41 |
|         rug         | 39.64 | 40.59 |
|        field        | 22.29 | 40.18 |
|       armchair      | 47.55 | 68.16 |
|         seat        | 57.92 | 77.26 |
|        fence        | 41.02 | 61.58 |
|         desk        | 41.59 | 52.45 |
|         rock        |  47.6 |  60.9 |
|       wardrobe      | 37.75 | 52.86 |
|         lamp        | 58.31 | 69.03 |
|       bathtub       | 74.52 | 84.73 |
|       railing       | 32.59 | 40.89 |
|       cushion       | 56.23 | 65.98 |
|         base        |  20.0 | 34.63 |
|         box         | 23.81 | 33.67 |
|        column       | 47.67 | 60.01 |
|      signboard      | 31.47 | 40.43 |
|   chest of drawers  | 41.03 | 79.32 |
|       counter       | 31.61 | 41.15 |
|         sand        | 25.64 | 34.33 |
|         sink        | 67.41 |  75.8 |
|      skyscraper     | 43.79 | 49.13 |
|      fireplace      | 69.94 | 86.27 |
|     refrigerator    | 62.77 | 70.27 |
|      grandstand     | 26.08 | 84.63 |
|         path        | 11.27 | 15.66 |
|        stairs       | 20.08 | 25.53 |
|        runway       | 68.03 |  82.9 |
|         case        | 49.22 | 63.71 |
|      pool table     | 90.48 | 96.57 |
|        pillow       | 50.44 | 58.31 |
|     screen door     | 56.78 | 69.51 |
|       stairway      | 32.05 | 44.38 |
|        river        | 19.24 | 32.65 |
|        bridge       |  35.5 | 46.82 |
|       bookcase      | 35.37 |  41.4 |
|        blind        | 44.25 | 55.25 |
|     coffee table    | 57.86 | 81.25 |
|        toilet       | 80.45 | 87.79 |
|        flower       | 36.85 | 46.26 |
|         book        | 41.86 | 51.65 |
|         hill        |  5.77 |  9.44 |
|        bench        | 48.91 | 58.73 |
|      countertop     | 52.67 | 75.83 |
|        stove        | 71.11 | 85.62 |
|         palm        |  51.0 | 76.44 |
|    kitchen island   | 32.53 | 61.96 |
|       computer      |  67.2 | 77.55 |
|     swivel chair    | 33.89 | 38.61 |
|         boat        | 62.25 | 77.66 |
|         bar         | 55.11 |  71.9 |
|    arcade machine   | 55.03 | 60.32 |
|        hovel        | 20.74 | 21.91 |
|         bus         | 86.55 | 95.65 |
|        towel        | 52.34 | 54.86 |
|        light        | 39.52 | 42.56 |
|        truck        | 36.09 | 52.37 |
|        tower        | 29.04 | 60.89 |
|      chandelier     | 63.87 | 78.79 |
|        awning       | 20.31 | 22.28 |
|     streetlight     | 23.26 | 28.27 |
|        booth        | 52.37 | 59.94 |
| television receiver | 66.77 | 74.87 |
|       airplane      | 55.82 | 63.56 |
|      dirt track     |  0.34 |  0.52 |
|       apparel       | 33.69 |  41.5 |
|         pole        | 17.23 | 20.37 |
|         land        |  0.19 |  0.2  |
|      bannister      | 12.73 |  15.9 |
|      escalator      | 50.11 | 78.78 |
|       ottoman       | 45.72 | 64.85 |
|        bottle       | 37.36 |  59.9 |
|        buffet       | 44.01 | 53.25 |
|        poster       |  24.5 | 32.53 |
|        stage        | 10.22 |  24.8 |
|         van         | 50.01 | 65.86 |
|         ship        |  77.6 | 95.61 |
|       fountain      | 24.44 | 27.06 |
|    conveyer belt    | 84.78 | 89.95 |
|        canopy       | 43.25 |  59.4 |
|        washer       | 71.17 | 74.59 |
|      plaything      | 26.09 | 30.86 |
|    swimming pool    | 52.21 | 64.67 |
|        stool        | 41.02 | 46.01 |
|        barrel       | 33.49 | 67.77 |
|        basket       | 26.86 | 40.19 |
|      waterfall      | 32.16 | 36.87 |
|         tent        | 94.03 | 99.28 |
|         bag         |  4.87 |  5.38 |
|       minibike      | 66.18 | 80.74 |
|        cradle       | 77.05 | 95.67 |
|         oven        | 31.52 | 40.34 |
|         ball        | 43.25 | 64.18 |
|         food        | 59.07 | 64.67 |
|         step        |  7.0  |  7.43 |
|         tank        | 52.79 | 55.63 |
|      trade name     | 15.12 | 16.52 |
|      microwave      | 70.77 | 77.75 |
|         pot         | 45.29 | 52.64 |
|        animal       | 59.52 | 63.64 |
|       bicycle       | 51.77 | 72.71 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     | 52.95 | 62.54 |
|        screen       | 61.68 | 78.83 |
|       blanket       |  3.89 |  3.95 |
|      sculpture      | 54.93 | 76.36 |
|         hood        | 53.81 | 56.62 |
|        sconce       | 40.65 | 48.64 |
|         vase        | 35.38 | 47.68 |
|    traffic light    | 30.92 | 44.39 |
|         tray        |  8.48 | 12.04 |
|        ashcan       | 33.56 | 40.56 |
|         fan         | 53.52 | 72.46 |
|         pier        | 52.32 | 86.85 |
|      crt screen     |  4.89 | 21.11 |
|        plate        | 48.92 | 62.43 |
|       monitor       |  2.94 |  3.01 |
|    bulletin board   | 39.05 | 46.25 |
|        shower       |  0.01 |  0.04 |
|       radiator      | 45.13 | 49.21 |
|        glass        | 11.51 | 12.56 |
|        clock        | 28.29 | 35.43 |
|         flag        | 46.07 | 54.27 |
+---------------------+-------+-------+
10/06 07:44:11 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.2700  mIoU: 45.6900  mAcc: 57.4400  data_time: 0.0020  time: 0.4954
Finished processing corruption type: snow
Processing corruption type: frost
10/06 07:44:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1104508184
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1104508184
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:44:27 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/frost'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:44:42,636 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:44:42,636 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:44:42,636 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:44:42,636 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:44:42,636 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:44:42,636 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:44:42,636 - mmseg - INFO - res_post_norm: False
2024-10-06 07:44:42,636 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:44:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:44:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:44:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 07:44:53 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 07:45:44 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:32:38  time: 0.4806  data_time: 0.0017  memory: 21922  
10/06 07:46:09 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:24:07  time: 0.6182  data_time: 0.0018  memory: 15329  
10/06 07:46:25 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:53  time: 0.2951  data_time: 0.0017  memory: 11667  
10/06 07:46:47 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:06  time: 0.4012  data_time: 0.0023  memory: 15333  
10/06 07:47:09 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:51  time: 0.2505  data_time: 0.0023  memory: 15306  
10/06 07:47:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:34  time: 0.1311  data_time: 0.0018  memory: 15338  
10/06 07:47:48 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:42  time: 0.2755  data_time: 0.0016  memory: 15346  
10/06 07:48:05 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:44  time: 0.2774  data_time: 0.0016  memory: 15309  
10/06 07:48:14 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:31  time: 0.2271  data_time: 0.0017  memory: 10302  
10/06 07:48:23 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:28  time: 0.1238  data_time: 0.0017  memory: 11649  
10/06 07:48:33 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:38  time: 0.2798  data_time: 0.0018  memory: 10676  
10/06 07:48:42 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:53  time: 0.2818  data_time: 0.0027  memory: 10485  
10/06 07:48:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:21  time: 0.3118  data_time: 0.0015  memory: 11697  
10/06 07:49:10 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:56  time: 0.1379  data_time: 0.0025  memory: 15344  
10/06 07:49:26 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:35  time: 0.6235  data_time: 0.0016  memory: 11701  
10/06 07:49:34 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:00  time: 0.1264  data_time: 0.0018  memory: 10487  
10/06 07:49:40 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:28  time: 0.1268  data_time: 0.0033  memory: 1477  
10/06 07:49:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:02  time: 0.2182  data_time: 0.0016  memory: 9741  
10/06 07:50:05 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:44  time: 0.3880  data_time: 0.0017  memory: 11651  
10/06 07:50:16 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:22  time: 0.1225  data_time: 0.0016  memory: 11612  
10/06 07:50:29 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:03  time: 0.4695  data_time: 0.0017  memory: 11701  
10/06 07:50:40 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:43  time: 0.1225  data_time: 0.0022  memory: 11669  
10/06 07:50:50 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:23  time: 0.2534  data_time: 0.0017  memory: 11656  
10/06 07:50:56 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:01  time: 0.1241  data_time: 0.0017  memory: 2651  
10/06 07:51:05 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:43  time: 0.2505  data_time: 0.0017  memory: 15334  
10/06 07:51:11 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:23  time: 0.1266  data_time: 0.0016  memory: 1480  
10/06 07:51:19 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:05  time: 0.1179  data_time: 0.0017  memory: 8056  
10/06 07:51:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:50  time: 0.3105  data_time: 0.0016  memory: 11681  
10/06 07:51:40 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:34  time: 0.2715  data_time: 0.0016  memory: 9742  
10/06 07:51:46 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:17  time: 0.1179  data_time: 0.0016  memory: 1478  
10/06 07:51:55 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:02  time: 0.1289  data_time: 0.0017  memory: 11422  
10/06 07:52:01 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:46  time: 0.1230  data_time: 0.0018  memory: 1476  
10/06 07:52:12 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:33  time: 0.1130  data_time: 0.0015  memory: 15346  
10/06 07:52:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:20  time: 0.9938  data_time: 0.8717  memory: 9929  
10/06 07:52:50 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:08  time: 0.1244  data_time: 0.0015  memory: 11052  
10/06 07:52:57 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:53  time: 0.1261  data_time: 0.0018  memory: 8427  
10/06 07:53:03 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:39  time: 0.1236  data_time: 0.0018  memory: 1424  
10/06 07:53:11 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:26  time: 0.1252  data_time: 0.0017  memory: 5786  
10/06 07:53:21 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1202  data_time: 0.0016  memory: 11659  
10/06 07:53:40 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0125  data_time: 0.3214  memory: 9367  
10/06 07:53:41 - mmengine - INFO - per class results:
10/06 07:53:41 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.48 | 86.87 |
|       building      | 81.52 | 90.63 |
|         sky         | 65.19 | 67.01 |
|        floor        | 76.97 | 90.41 |
|         tree        | 70.86 | 87.12 |
|       ceiling       | 77.57 | 88.61 |
|         road        | 78.68 |  85.9 |
|         bed         | 87.42 | 94.87 |
|      windowpane     | 58.92 | 74.69 |
|        grass        | 65.77 | 82.02 |
|       cabinet       | 56.95 | 65.53 |
|       sidewalk      | 58.05 | 72.87 |
|        person       |  78.5 | 88.21 |
|        earth        | 36.12 | 51.68 |
|         door        | 41.29 | 54.71 |
|        table        | 57.28 | 74.06 |
|       mountain      | 22.49 | 73.41 |
|        plant        | 47.51 | 58.06 |
|       curtain       | 63.33 |  80.1 |
|        chair        | 55.35 | 67.95 |
|         car         | 81.78 | 90.03 |
|        water        | 48.76 | 66.04 |
|       painting      | 68.88 | 85.63 |
|         sofa        | 68.85 | 82.47 |
|        shelf        | 41.79 | 57.84 |
|        house        | 49.54 | 82.75 |
|         sea         | 42.99 | 55.19 |
|        mirror       | 63.73 |  71.7 |
|         rug         | 48.98 | 53.91 |
|        field        | 32.08 | 46.09 |
|       armchair      | 46.73 | 65.39 |
|         seat        | 58.27 | 76.66 |
|        fence        | 42.28 | 55.03 |
|         desk        | 44.02 | 61.63 |
|         rock        | 49.69 | 66.89 |
|       wardrobe      | 42.91 | 60.38 |
|         lamp        | 58.34 | 71.82 |
|       bathtub       |  71.3 | 78.34 |
|       railing       | 35.25 |  47.3 |
|       cushion       | 56.64 |  69.9 |
|         base        | 23.57 | 29.83 |
|         box         | 23.14 | 28.87 |
|        column       |  45.9 | 60.46 |
|      signboard      | 34.22 | 43.71 |
|   chest of drawers  | 42.42 | 62.75 |
|       counter       | 30.84 | 38.99 |
|         sand        | 45.74 | 53.05 |
|         sink        | 67.83 | 73.82 |
|      skyscraper     | 66.17 | 82.65 |
|      fireplace      | 68.07 | 89.59 |
|     refrigerator    | 77.32 | 84.38 |
|      grandstand     | 39.12 |  74.5 |
|         path        | 22.41 | 39.84 |
|        stairs       | 24.73 | 33.95 |
|        runway       | 59.23 | 77.51 |
|         case        | 50.13 | 81.36 |
|      pool table     | 89.85 | 96.17 |
|        pillow       | 49.94 | 56.36 |
|     screen door     | 48.72 |  75.7 |
|       stairway      | 36.71 | 52.79 |
|        river        |  14.2 | 36.54 |
|        bridge       | 35.62 | 45.61 |
|       bookcase      | 42.74 | 62.77 |
|        blind        | 37.67 | 44.45 |
|     coffee table    | 55.54 | 79.34 |
|        toilet       | 78.11 | 83.12 |
|        flower       | 44.46 | 57.27 |
|         book        | 45.41 | 62.12 |
|         hill        |  5.47 |  8.08 |
|        bench        |  59.4 | 73.18 |
|      countertop     | 50.82 | 77.53 |
|        stove        | 74.88 | 81.95 |
|         palm        | 50.53 | 73.92 |
|    kitchen island   | 33.61 | 71.57 |
|       computer      | 58.57 | 66.47 |
|     swivel chair    | 47.17 | 54.53 |
|         boat        | 68.08 | 82.22 |
|         bar         | 50.37 | 64.94 |
|    arcade machine   | 60.36 | 63.98 |
|        hovel        | 44.64 | 49.03 |
|         bus         | 88.57 | 95.13 |
|        towel        | 53.31 | 64.13 |
|        light        | 48.27 | 56.57 |
|        truck        | 32.14 | 41.48 |
|        tower        |  21.3 | 42.17 |
|      chandelier     | 62.27 | 79.06 |
|        awning       | 23.77 | 25.91 |
|     streetlight     | 24.89 | 29.34 |
|        booth        |  54.0 | 68.95 |
| television receiver | 64.32 | 71.45 |
|       airplane      | 61.08 | 69.09 |
|      dirt track     |  8.63 | 17.92 |
|       apparel       | 24.44 | 29.01 |
|         pole        | 21.48 | 27.26 |
|         land        |  0.3  |  0.54 |
|      bannister      | 14.19 | 18.15 |
|      escalator      | 51.64 | 81.04 |
|       ottoman       | 47.61 | 63.51 |
|        bottle       | 38.18 | 64.38 |
|        buffet       | 42.53 | 52.76 |
|        poster       | 20.97 |  25.8 |
|        stage        | 12.33 | 23.49 |
|         van         |  37.4 |  51.8 |
|         ship        | 38.62 |  41.6 |
|       fountain      | 20.91 | 21.51 |
|    conveyer belt    | 82.78 | 88.58 |
|        canopy       | 37.38 | 62.16 |
|        washer       | 71.01 | 73.96 |
|      plaything      | 38.63 | 51.07 |
|    swimming pool    | 63.38 | 71.49 |
|        stool        | 39.57 | 47.13 |
|        barrel       |  36.0 | 56.65 |
|        basket       | 30.37 | 42.72 |
|      waterfall      | 53.88 |  65.1 |
|         tent        | 91.98 | 99.23 |
|         bag         |  8.17 |  8.74 |
|       minibike      | 68.12 | 80.12 |
|        cradle       | 80.05 | 95.23 |
|         oven        | 42.69 | 56.87 |
|         ball        | 43.79 | 59.68 |
|         food        | 57.18 | 65.04 |
|         step        |  3.63 |  3.94 |
|         tank        | 59.36 | 60.88 |
|      trade name     | 18.32 | 19.97 |
|      microwave      | 78.74 | 84.51 |
|         pot         |  47.5 | 55.69 |
|        animal       | 60.41 | 63.27 |
|       bicycle       | 52.77 | 67.63 |
|         lake        | 53.36 | 63.51 |
|      dishwasher     | 54.23 | 61.54 |
|        screen       | 76.77 | 81.78 |
|       blanket       | 15.59 | 17.25 |
|      sculpture      | 56.47 | 81.33 |
|         hood        | 45.67 | 51.69 |
|        sconce       | 39.86 | 50.69 |
|         vase        | 36.34 | 48.45 |
|    traffic light    | 30.07 | 39.94 |
|         tray        |  8.99 | 10.51 |
|        ashcan       | 30.21 | 34.38 |
|         fan         | 56.78 | 72.23 |
|         pier        | 36.29 | 47.52 |
|      crt screen     |  0.29 |  0.77 |
|        plate        | 54.31 | 67.55 |
|       monitor       |  2.93 |  3.04 |
|    bulletin board   | 41.16 | 50.31 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 37.13 | 40.34 |
|        glass        |  11.9 | 12.56 |
|        clock        | 22.56 | 25.33 |
|         flag        | 61.38 | 69.22 |
+---------------------+-------+-------+
10/06 07:53:41 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.3700  mIoU: 47.0700  mAcc: 58.8400  data_time: 0.0126  time: 0.2631
Finished processing corruption type: frost
Processing corruption type: fog
10/06 07:55:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 643337073
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 643337073
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 07:55:11 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/fog'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 07:55:51,998 - mmseg - INFO - using core type: DCNv3
2024-10-06 07:55:51,998 - mmseg - INFO - using activation layer: GELU
2024-10-06 07:55:51,998 - mmseg - INFO - using main norm layer: LN
2024-10-06 07:55:51,998 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 07:55:51,998 - mmseg - INFO - level2_post_norm: False
2024-10-06 07:55:51,998 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 07:55:51,998 - mmseg - INFO - res_post_norm: False
2024-10-06 07:55:51,998 - mmseg - INFO - use_dcn_v4_op: False
10/06 07:56:04 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 07:56:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 07:56:06 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 07:56:10 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 07:57:42 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:00:02  time: 0.6254  data_time: 0.0017  memory: 21922  
10/06 07:58:15 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:36  time: 0.7520  data_time: 0.0017  memory: 15329  
10/06 07:58:38 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:20  time: 0.4287  data_time: 0.0018  memory: 11667  
10/06 07:59:10 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:26:56  time: 0.8302  data_time: 0.0377  memory: 15333  
10/06 07:59:38 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:24:17  time: 0.3799  data_time: 0.0016  memory: 15306  
10/06 08:00:03 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:03  time: 0.2648  data_time: 0.0018  memory: 15338  
10/06 08:00:31 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:28  time: 0.4053  data_time: 0.0016  memory: 15346  
10/06 08:00:54 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:55  time: 0.4192  data_time: 0.0015  memory: 15309  
10/06 08:01:10 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:14  time: 0.3700  data_time: 0.0016  memory: 10302  
10/06 08:01:26 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:47  time: 0.2602  data_time: 0.0017  memory: 11649  
10/06 08:01:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:36  time: 0.4133  data_time: 0.0017  memory: 10676  
10/06 08:01:59 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:33  time: 0.4168  data_time: 0.0018  memory: 10485  
10/06 08:02:18 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:44  time: 0.4544  data_time: 0.0016  memory: 11697  
10/06 08:02:40 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:04  time: 0.2675  data_time: 0.0017  memory: 15344  
10/06 08:03:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:29  time: 0.7588  data_time: 0.0016  memory: 11701  
10/06 08:03:18 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:41  time: 0.2573  data_time: 0.0017  memory: 10487  
10/06 08:03:31 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:56  time: 0.2612  data_time: 0.0039  memory: 1477  
10/06 08:03:47 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:18  time: 0.3527  data_time: 0.0015  memory: 9741  
10/06 08:04:09 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:49  time: 0.5595  data_time: 0.0038  memory: 11651  
10/06 08:04:26 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:16  time: 0.2570  data_time: 0.0016  memory: 11612  
10/06 08:04:46 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:47  time: 0.6039  data_time: 0.0017  memory: 11701  
10/06 08:05:05 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:17  time: 0.2576  data_time: 0.0017  memory: 11669  
10/06 08:05:21 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:46  time: 0.3902  data_time: 0.0016  memory: 11656  
10/06 08:05:34 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:15  time: 0.2570  data_time: 0.0016  memory: 2651  
10/06 08:05:50 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:47  time: 0.3808  data_time: 0.0016  memory: 15334  
10/06 08:06:03 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:19  time: 0.2601  data_time: 0.0017  memory: 1480  
10/06 08:06:17 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:52  time: 0.2544  data_time: 0.0016  memory: 8056  
10/06 08:06:36 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:28  time: 0.4439  data_time: 0.0016  memory: 11681  
10/06 08:06:52 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:03  time: 0.4080  data_time: 0.0016  memory: 9742  
10/06 08:07:05 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:38  time: 0.2531  data_time: 0.0016  memory: 1478  
10/06 08:07:20 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:14  time: 0.2644  data_time: 0.0016  memory: 11422  
10/06 08:07:33 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:50  time: 0.2583  data_time: 0.0018  memory: 1476  
10/06 08:07:52 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:28  time: 0.2502  data_time: 0.0015  memory: 15346  
10/06 08:08:09 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:06  time: 0.2606  data_time: 0.0018  memory: 9929  
10/06 08:08:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:45  time: 0.2635  data_time: 0.0015  memory: 11052  
10/06 08:08:39 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:23  time: 0.2614  data_time: 0.0018  memory: 8427  
10/06 08:08:53 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:01  time: 0.2612  data_time: 0.0018  memory: 1424  
10/06 08:09:07 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:40  time: 0.2635  data_time: 0.0016  memory: 5786  
10/06 08:09:24 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:20  time: 0.2574  data_time: 0.0016  memory: 11659  
10/06 08:09:41 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2521  data_time: 0.0015  memory: 9367  
10/06 08:09:42 - mmengine - INFO - per class results:
10/06 08:09:42 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.22 | 87.91 |
|       building      | 83.43 | 91.97 |
|         sky         | 94.48 | 97.53 |
|        floor        | 81.56 | 90.68 |
|         tree        | 74.57 | 88.06 |
|       ceiling       | 84.55 | 92.79 |
|         road        | 84.01 | 91.13 |
|         bed         | 89.53 | 96.35 |
|      windowpane     | 62.48 | 76.74 |
|        grass        | 67.14 | 81.69 |
|       cabinet       |  60.3 | 71.69 |
|       sidewalk      | 66.05 |  81.9 |
|        person       | 80.62 |  89.9 |
|        earth        | 35.55 | 49.62 |
|         door        | 54.42 | 70.92 |
|        table        | 62.41 | 77.25 |
|       mountain      | 57.91 | 72.74 |
|        plant        | 51.19 | 60.87 |
|       curtain       | 75.25 | 87.22 |
|        chair        | 59.31 | 72.16 |
|         car         | 84.45 | 92.37 |
|        water        | 52.21 |  63.4 |
|       painting      | 72.67 |  89.1 |
|         sofa        | 73.02 | 87.92 |
|        shelf        | 43.63 |  61.6 |
|        house        | 51.38 | 79.48 |
|         sea         | 61.19 | 82.41 |
|        mirror       | 68.41 | 76.64 |
|         rug         | 56.41 | 64.35 |
|        field        | 30.07 | 42.02 |
|       armchair      | 49.31 | 66.96 |
|         seat        | 59.66 | 78.63 |
|        fence        | 46.88 | 59.45 |
|         desk        | 49.43 | 65.28 |
|         rock        | 52.92 | 75.49 |
|       wardrobe      | 51.38 | 75.06 |
|         lamp        | 63.13 | 76.94 |
|       bathtub       | 78.23 | 85.67 |
|       railing       | 34.59 | 47.73 |
|       cushion       | 63.59 | 78.16 |
|         base        | 35.03 | 43.92 |
|         box         | 27.97 |  35.8 |
|        column       | 50.79 |  64.3 |
|      signboard      | 37.17 | 50.18 |
|   chest of drawers  | 37.16 | 63.52 |
|       counter       | 32.69 | 40.59 |
|         sand        | 55.95 | 77.53 |
|         sink        | 71.58 | 78.96 |
|      skyscraper     | 65.62 | 83.59 |
|      fireplace      | 70.16 |  89.9 |
|     refrigerator    | 74.87 |  86.2 |
|      grandstand     | 47.11 |  81.6 |
|         path        | 24.85 | 37.63 |
|        stairs       | 22.83 |  30.7 |
|        runway       | 67.43 | 89.79 |
|         case        | 55.12 | 81.21 |
|      pool table     | 92.12 |  96.6 |
|        pillow       | 56.32 | 62.91 |
|     screen door     | 71.19 | 82.87 |
|       stairway      | 32.75 |  47.6 |
|        river        | 10.79 | 28.06 |
|        bridge       | 51.45 | 63.24 |
|       bookcase      | 41.66 | 67.92 |
|        blind        | 45.92 | 56.22 |
|     coffee table    | 57.32 |  81.9 |
|        toilet       | 82.31 | 89.79 |
|        flower       | 39.89 | 51.12 |
|         book        | 49.68 | 69.34 |
|         hill        |  8.32 |  13.6 |
|        bench        | 52.78 |  60.4 |
|      countertop     | 56.69 | 76.63 |
|        stove        | 81.46 | 89.22 |
|         palm        | 50.86 | 79.06 |
|    kitchen island   | 37.45 | 72.33 |
|       computer      | 74.59 | 89.35 |
|     swivel chair    | 49.73 | 63.84 |
|         boat        | 64.83 | 85.41 |
|         bar         | 50.39 | 68.46 |
|    arcade machine   | 86.96 | 96.58 |
|        hovel        |  46.5 | 50.84 |
|         bus         | 90.07 | 96.72 |
|        towel        | 70.07 | 81.53 |
|        light        | 52.69 | 59.64 |
|        truck        | 38.34 | 50.58 |
|        tower        | 34.77 | 72.55 |
|      chandelier     | 69.07 | 83.03 |
|        awning       | 28.23 |  31.4 |
|     streetlight     | 28.19 | 37.25 |
|        booth        | 47.59 | 65.72 |
| television receiver | 74.94 | 85.01 |
|       airplane      | 69.36 | 78.89 |
|      dirt track     | 20.59 | 32.47 |
|       apparel       | 44.25 | 56.53 |
|         pole        | 18.68 |  23.9 |
|         land        |  2.1  |  3.73 |
|      bannister      | 15.97 |  21.5 |
|      escalator      |  53.0 | 84.18 |
|       ottoman       | 51.05 | 69.85 |
|        bottle       | 38.98 | 64.13 |
|        buffet       | 44.77 | 53.54 |
|        poster       |  27.2 | 38.11 |
|        stage        | 15.58 |  27.2 |
|         van         | 44.81 | 58.34 |
|         ship        | 78.49 | 94.98 |
|       fountain      | 23.38 | 23.62 |
|    conveyer belt    | 80.78 | 93.31 |
|        canopy       | 35.89 | 52.88 |
|        washer       | 78.11 | 82.49 |
|      plaything      | 41.56 | 58.68 |
|    swimming pool    | 54.51 | 63.99 |
|        stool        | 43.26 | 51.85 |
|        barrel       |  59.4 | 93.14 |
|        basket       | 30.65 | 43.68 |
|      waterfall      | 51.26 | 60.09 |
|         tent        | 93.49 | 98.97 |
|         bag         | 13.38 | 14.63 |
|       minibike      | 71.99 | 82.92 |
|        cradle       |  80.5 | 96.52 |
|         oven        | 48.93 | 62.88 |
|         ball        | 50.84 | 61.49 |
|         food        | 55.85 | 60.26 |
|         step        |  8.19 |  9.12 |
|         tank        | 60.47 | 65.99 |
|      trade name     |  20.4 | 22.33 |
|      microwave      | 80.28 |  92.0 |
|         pot         | 47.24 | 57.49 |
|        animal       | 60.42 | 62.31 |
|       bicycle       |  56.0 | 72.77 |
|         lake        | 43.95 | 69.88 |
|      dishwasher     | 66.09 | 76.54 |
|        screen       | 57.08 | 85.53 |
|       blanket       | 14.38 | 16.36 |
|      sculpture      | 69.34 | 83.94 |
|         hood        | 57.32 | 67.27 |
|        sconce       | 46.51 | 57.11 |
|         vase        | 38.95 | 49.88 |
|    traffic light    | 31.32 | 49.24 |
|         tray        |  7.9  |  9.18 |
|        ashcan       | 36.28 | 46.22 |
|         fan         | 61.35 | 76.59 |
|         pier        | 41.99 | 56.34 |
|      crt screen     |  4.5  | 13.15 |
|        plate        | 55.58 | 71.44 |
|       monitor       | 13.87 | 15.34 |
|    bulletin board   | 48.83 |  65.1 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 57.03 | 70.38 |
|        glass        | 13.15 | 14.32 |
|        clock        | 36.96 | 41.84 |
|         flag        | 56.39 | 63.62 |
+---------------------+-------+-------+
10/06 08:09:42 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.6500  mIoU: 51.8500  mAcc: 64.7300  data_time: 0.0027  time: 0.4055
Finished processing corruption type: fog
Processing corruption type: brightness
10/06 08:11:27 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1818283014
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1818283014
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:11:28 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/brightness'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:12:15,875 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:12:15,875 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:12:15,875 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:12:15,875 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 08:12:15,875 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:12:15,875 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:12:15,875 - mmseg - INFO - res_post_norm: False
2024-10-06 08:12:15,875 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:12:28 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:12:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:12:30 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 08:12:34 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 08:14:01 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:56:08  time: 0.6459  data_time: 0.0019  memory: 21922  
10/06 08:14:34 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:37:58  time: 0.7712  data_time: 0.0021  memory: 15329  
10/06 08:14:58 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:29:26  time: 0.4517  data_time: 0.0017  memory: 11667  
10/06 08:15:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:25:58  time: 0.5505  data_time: 0.0018  memory: 15333  
10/06 08:15:57 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:23:37  time: 0.4011  data_time: 0.0031  memory: 15306  
10/06 08:16:23 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:32  time: 0.2860  data_time: 0.0033  memory: 15338  
10/06 08:16:50 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:20:05  time: 0.4235  data_time: 0.0019  memory: 15346  
10/06 08:17:14 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:18:39  time: 0.4335  data_time: 0.0017  memory: 15309  
10/06 08:17:31 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:01  time: 0.3647  data_time: 0.0017  memory: 10302  
10/06 08:17:47 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:38  time: 0.2733  data_time: 0.0017  memory: 11649  
10/06 08:18:05 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:31  time: 0.4376  data_time: 0.0018  memory: 10676  
10/06 08:18:22 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:30  time: 0.4368  data_time: 0.0019  memory: 10485  
10/06 08:18:42 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:42  time: 0.4632  data_time: 0.0016  memory: 11697  
10/06 08:19:05 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:05  time: 0.2950  data_time: 0.0019  memory: 15344  
10/06 08:19:29 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:31  time: 0.7877  data_time: 0.0022  memory: 11701  
10/06 08:19:44 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:44  time: 0.2785  data_time: 0.0018  memory: 10487  
10/06 08:19:58 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:00  time: 0.2835  data_time: 0.0019  memory: 1477  
10/06 08:20:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:22  time: 0.3526  data_time: 0.0017  memory: 9741  
10/06 08:20:38 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:53  time: 0.5368  data_time: 0.0018  memory: 11651  
10/06 08:20:55 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:20  time: 0.2658  data_time: 0.0017  memory: 11612  
10/06 08:21:16 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:51  time: 0.6281  data_time: 0.0017  memory: 11701  
10/06 08:21:36 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:22  time: 0.2708  data_time: 0.0017  memory: 11669  
10/06 08:21:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:51  time: 0.4061  data_time: 0.0017  memory: 11656  
10/06 08:22:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:20  time: 0.2687  data_time: 0.0017  memory: 2651  
10/06 08:22:22 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:52  time: 0.3915  data_time: 0.0017  memory: 15334  
10/06 08:22:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:23  time: 0.2869  data_time: 0.0030  memory: 1480  
10/06 08:22:50 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:56  time: 0.2548  data_time: 0.0017  memory: 8056  
10/06 08:23:10 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:32  time: 0.4659  data_time: 0.0017  memory: 11681  
10/06 08:23:26 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:07  time: 0.4283  data_time: 0.0016  memory: 9742  
10/06 08:23:40 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:41  time: 0.2555  data_time: 0.0016  memory: 1478  
10/06 08:23:56 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:17  time: 0.2826  data_time: 0.0017  memory: 11422  
10/06 08:24:09 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:53  time: 0.2716  data_time: 0.0018  memory: 1476  
10/06 08:24:28 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:31  time: 0.2541  data_time: 0.0016  memory: 15346  
10/06 08:24:47 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:09  time: 0.2821  data_time: 0.0019  memory: 9929  
10/06 08:25:04 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:47  time: 0.2896  data_time: 0.0028  memory: 11052  
10/06 08:25:18 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:24  time: 0.2797  data_time: 0.0018  memory: 8427  
10/06 08:25:32 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:03  time: 0.2864  data_time: 0.0024  memory: 1424  
10/06 08:25:47 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:41  time: 0.2741  data_time: 0.0021  memory: 5786  
10/06 08:26:04 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:20  time: 0.2631  data_time: 0.0016  memory: 11659  
10/06 08:26:22 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2485  data_time: 0.0016  memory: 9367  
10/06 08:26:22 - mmengine - INFO - per class results:
10/06 08:26:22 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.48 | 87.84 |
|       building      | 83.29 | 91.63 |
|         sky         | 94.21 | 97.53 |
|        floor        | 82.53 | 90.64 |
|         tree        | 74.68 | 88.42 |
|       ceiling       | 84.75 | 92.71 |
|         road        | 84.33 | 90.26 |
|         bed         | 89.49 | 96.36 |
|      windowpane     |  62.4 | 76.81 |
|        grass        |  66.8 |  83.3 |
|       cabinet       | 60.52 | 71.74 |
|       sidewalk      | 66.13 | 82.63 |
|        person       | 81.05 | 90.75 |
|        earth        | 38.59 | 53.04 |
|         door        | 53.91 | 71.16 |
|        table        | 62.45 | 77.33 |
|       mountain      |  60.3 | 73.39 |
|        plant        | 51.84 | 61.21 |
|       curtain       | 75.03 | 88.08 |
|        chair        |  58.9 |  72.2 |
|         car         | 84.82 | 92.89 |
|        water        | 54.55 | 64.99 |
|       painting      | 72.35 | 87.92 |
|         sofa        | 74.06 | 87.35 |
|        shelf        | 45.25 | 63.05 |
|        house        |  51.7 | 79.45 |
|         sea         | 64.03 | 84.34 |
|        mirror       | 68.78 | 77.35 |
|         rug         | 61.63 | 71.06 |
|        field        | 31.12 | 43.67 |
|       armchair      | 50.67 | 69.87 |
|         seat        | 61.42 | 79.12 |
|        fence        | 48.15 |  61.2 |
|         desk        | 49.78 | 66.12 |
|         rock        | 52.54 | 74.11 |
|       wardrobe      | 52.48 | 74.94 |
|         lamp        | 62.47 | 77.05 |
|       bathtub       | 78.78 |  85.2 |
|       railing       | 34.04 | 46.26 |
|       cushion       | 62.64 | 79.08 |
|         base        | 36.92 | 44.81 |
|         box         | 28.78 | 36.73 |
|        column       | 50.82 | 64.61 |
|      signboard      |  37.6 | 50.32 |
|   chest of drawers  | 36.13 |  62.8 |
|       counter       | 34.58 | 43.18 |
|         sand        | 53.96 | 75.64 |
|         sink        | 71.32 | 79.11 |
|      skyscraper     | 65.18 | 83.52 |
|      fireplace      | 71.32 | 90.96 |
|     refrigerator    | 74.91 | 85.81 |
|      grandstand     | 47.07 | 78.73 |
|         path        | 24.46 | 37.99 |
|        stairs       | 20.93 | 28.49 |
|        runway       | 69.73 | 92.28 |
|         case        | 57.14 | 82.28 |
|      pool table     | 92.03 | 96.76 |
|        pillow       | 54.62 | 60.47 |
|     screen door     | 72.01 | 83.19 |
|       stairway      | 31.51 | 47.18 |
|        river        |  12.7 | 32.06 |
|        bridge       | 54.69 | 65.95 |
|       bookcase      | 39.92 | 64.66 |
|        blind        | 46.37 | 57.65 |
|     coffee table    | 57.38 |  82.4 |
|        toilet       | 82.75 | 89.91 |
|        flower       |  44.5 | 59.56 |
|         book        | 49.92 | 71.96 |
|         hill        |  8.3  | 13.46 |
|        bench        | 53.59 | 61.79 |
|      countertop     | 58.57 | 78.45 |
|        stove        | 80.11 | 88.45 |
|         palm        | 52.47 | 80.03 |
|    kitchen island   | 39.75 | 74.59 |
|       computer      | 74.87 | 89.85 |
|     swivel chair    | 48.41 |  63.7 |
|         boat        | 66.79 |  83.3 |
|         bar         | 53.07 | 71.38 |
|    arcade machine   | 86.78 | 94.93 |
|        hovel        | 58.55 |  64.9 |
|         bus         | 89.11 |  96.4 |
|        towel        | 69.71 | 82.83 |
|        light        | 53.61 | 61.87 |
|        truck        | 39.74 | 52.22 |
|        tower        | 32.44 | 66.65 |
|      chandelier     | 68.62 |  83.7 |
|        awning       | 32.09 | 35.88 |
|     streetlight     | 28.14 | 36.44 |
|        booth        | 41.89 | 59.75 |
| television receiver | 74.53 | 84.48 |
|       airplane      | 69.25 | 79.58 |
|      dirt track     |  23.6 | 37.68 |
|       apparel       | 41.79 | 52.84 |
|         pole        | 20.08 |  26.4 |
|         land        |  2.19 |  4.12 |
|      bannister      | 16.51 | 21.96 |
|      escalator      |  53.4 | 85.11 |
|       ottoman       | 51.38 | 70.02 |
|        bottle       | 38.49 | 64.32 |
|        buffet       | 44.21 | 53.61 |
|        poster       | 26.48 | 36.46 |
|        stage        | 16.99 |  29.2 |
|         van         |  46.8 |  62.0 |
|         ship        | 81.74 | 95.39 |
|       fountain      | 23.32 | 23.63 |
|    conveyer belt    | 79.77 |  92.9 |
|        canopy       | 35.37 | 53.71 |
|        washer       | 78.17 | 81.74 |
|      plaything      | 42.04 | 62.61 |
|    swimming pool    | 45.76 | 66.22 |
|        stool        | 44.15 | 53.49 |
|        barrel       | 58.86 | 91.58 |
|        basket       |  33.6 | 47.48 |
|      waterfall      |  57.3 | 71.28 |
|         tent        | 91.85 | 99.17 |
|         bag         | 14.96 | 16.81 |
|       minibike      | 72.67 | 84.06 |
|        cradle       | 81.23 | 96.79 |
|         oven        |  47.3 | 65.49 |
|         ball        | 51.52 | 64.93 |
|         food        | 57.43 | 62.71 |
|         step        |  11.8 | 13.21 |
|         tank        | 60.13 | 66.37 |
|      trade name     | 20.68 | 23.03 |
|      microwave      | 79.57 |  90.6 |
|         pot         |  47.9 | 57.81 |
|        animal       |  61.8 | 63.81 |
|       bicycle       | 56.93 | 73.78 |
|         lake        | 46.84 | 69.33 |
|      dishwasher     | 65.23 | 73.93 |
|        screen       | 56.66 | 83.12 |
|       blanket       | 17.41 | 19.99 |
|      sculpture      |  68.6 | 84.05 |
|         hood        | 54.31 | 66.82 |
|        sconce       | 49.03 | 59.49 |
|         vase        | 38.91 | 49.82 |
|    traffic light    | 32.01 | 49.34 |
|         tray        |  8.15 |  8.94 |
|        ashcan       | 39.78 | 50.85 |
|         fan         | 60.93 | 78.58 |
|         pier        | 43.09 |  56.6 |
|      crt screen     |  5.91 | 18.51 |
|        plate        | 55.37 | 72.28 |
|       monitor       | 13.09 | 13.75 |
|    bulletin board   | 47.67 | 64.13 |
|        shower       |  0.02 |  0.02 |
|       radiator      | 57.95 | 71.87 |
|        glass        | 13.05 | 14.12 |
|        clock        | 38.84 | 44.19 |
|         flag        | 59.86 | 68.69 |
+---------------------+-------+-------+
10/06 08:26:22 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.8900  mIoU: 52.4100  mAcc: 65.5800  data_time: 0.0022  time: 0.4134
Finished processing corruption type: brightness
Processing corruption type: contrast
10/06 08:26:36 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1728157077
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1728157077
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:26:37 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/contrast'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:26:47,342 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:26:47,342 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:26:47,342 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:26:47,342 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 08:26:47,342 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:26:47,342 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:26:47,342 - mmseg - INFO - res_post_norm: False
2024-10-06 08:26:47,342 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:26:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:26:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:26:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 08:26:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 08:27:46 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:31:25  time: 0.4785  data_time: 0.0018  memory: 21922  
10/06 08:28:12 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:29  time: 0.6198  data_time: 0.0027  memory: 15329  
10/06 08:28:28 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:18:26  time: 0.2910  data_time: 0.0017  memory: 11667  
10/06 08:28:50 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:45  time: 0.4043  data_time: 0.0024  memory: 15333  
10/06 08:29:11 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:15:34  time: 0.2405  data_time: 0.0017  memory: 15306  
10/06 08:29:30 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:19  time: 0.1274  data_time: 0.0018  memory: 15338  
10/06 08:29:50 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:29  time: 0.2735  data_time: 0.0023  memory: 15346  
10/06 08:30:06 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:32  time: 0.2755  data_time: 0.0016  memory: 15309  
10/06 08:30:15 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:20  time: 0.2228  data_time: 0.0016  memory: 10302  
10/06 08:30:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:18  time: 0.1205  data_time: 0.0016  memory: 11649  
10/06 08:30:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:29  time: 0.2763  data_time: 0.0018  memory: 10676  
10/06 08:30:43 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:44  time: 0.2764  data_time: 0.0018  memory: 10485  
10/06 08:30:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:08:13  time: 0.3105  data_time: 0.0015  memory: 11697  
10/06 08:31:11 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:49  time: 0.1298  data_time: 0.0018  memory: 15344  
10/06 08:31:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:27  time: 0.6204  data_time: 0.0016  memory: 11701  
10/06 08:31:34 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:54  time: 0.1208  data_time: 0.0018  memory: 10487  
10/06 08:31:40 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:21  time: 0.1242  data_time: 0.0027  memory: 1477  
10/06 08:31:50 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:56  time: 0.2160  data_time: 0.0016  memory: 9741  
10/06 08:32:05 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:39  time: 0.3833  data_time: 0.0017  memory: 11651  
10/06 08:32:15 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:16  time: 0.1162  data_time: 0.0017  memory: 11612  
10/06 08:32:28 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:58  time: 0.4691  data_time: 0.0017  memory: 11701  
10/06 08:32:40 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:39  time: 0.1180  data_time: 0.0017  memory: 11669  
10/06 08:32:48 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:18  time: 0.2540  data_time: 0.0021  memory: 11656  
10/06 08:32:55 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:57  time: 0.1196  data_time: 0.0016  memory: 2651  
10/06 08:33:04 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:39  time: 0.2488  data_time: 0.0016  memory: 15334  
10/06 08:33:10 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:20  time: 0.1224  data_time: 0.0016  memory: 1480  
10/06 08:33:17 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:02  time: 0.1141  data_time: 0.0016  memory: 8056  
10/06 08:33:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:47  time: 0.3063  data_time: 0.0016  memory: 11681  
10/06 08:33:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:31  time: 0.2713  data_time: 0.0016  memory: 9742  
10/06 08:33:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:15  time: 0.1126  data_time: 0.0016  memory: 1478  
10/06 08:33:52 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:00  time: 0.1267  data_time: 0.0016  memory: 11422  
10/06 08:33:58 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:45  time: 0.1195  data_time: 0.0018  memory: 1476  
10/06 08:34:10 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:31  time: 0.1115  data_time: 0.0016  memory: 15346  
10/06 08:34:20 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:18  time: 0.1230  data_time: 0.0019  memory: 9929  
10/06 08:34:30 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:04  time: 0.1307  data_time: 0.0020  memory: 11052  
10/06 08:34:37 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:50  time: 0.1229  data_time: 0.0018  memory: 8427  
10/06 08:34:43 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:37  time: 0.1225  data_time: 0.0018  memory: 1424  
10/06 08:34:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:24  time: 0.1206  data_time: 0.0018  memory: 5786  
10/06 08:35:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:12  time: 0.1165  data_time: 0.0016  memory: 11659  
10/06 08:35:09 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1100  data_time: 0.0015  memory: 9367  
10/06 08:35:09 - mmengine - INFO - per class results:
10/06 08:35:09 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.53 | 88.16 |
|       building      |  83.3 | 91.84 |
|         sky         | 94.39 | 97.51 |
|        floor        | 81.54 | 90.87 |
|         tree        | 74.61 | 88.69 |
|       ceiling       | 84.66 | 93.16 |
|         road        | 84.25 | 90.35 |
|         bed         | 89.45 | 96.34 |
|      windowpane     | 62.46 | 76.42 |
|        grass        | 65.59 |  79.7 |
|       cabinet       | 60.48 | 71.71 |
|       sidewalk      | 66.63 | 83.16 |
|        person       | 80.67 | 89.81 |
|        earth        | 36.33 | 50.83 |
|         door        | 53.61 | 69.26 |
|        table        | 62.43 | 77.31 |
|       mountain      | 58.91 | 72.57 |
|        plant        | 50.45 | 59.39 |
|       curtain       |  75.8 |  87.8 |
|        chair        | 58.77 | 72.33 |
|         car         | 84.67 | 92.53 |
|        water        | 51.56 | 63.27 |
|       painting      | 71.96 | 89.55 |
|         sofa        |  72.9 | 86.17 |
|        shelf        | 44.85 | 62.33 |
|        house        |  50.0 |  79.7 |
|         sea         | 59.27 | 78.73 |
|        mirror       | 68.39 | 76.37 |
|         rug         | 54.96 | 61.97 |
|        field        | 29.78 | 46.66 |
|       armchair      | 50.03 | 69.43 |
|         seat        | 59.83 | 78.24 |
|        fence        | 47.68 | 60.71 |
|         desk        | 48.17 | 63.13 |
|         rock        | 51.32 | 72.53 |
|       wardrobe      | 52.92 |  75.6 |
|         lamp        | 63.02 | 76.71 |
|       bathtub       | 78.35 | 85.47 |
|       railing       | 35.49 | 48.98 |
|       cushion       |  62.9 | 77.65 |
|         base        | 33.95 | 40.84 |
|         box         | 26.83 |  33.3 |
|        column       | 51.23 |  63.7 |
|      signboard      | 37.06 | 49.78 |
|   chest of drawers  | 35.29 | 64.09 |
|       counter       | 32.82 | 41.54 |
|         sand        | 56.35 | 75.93 |
|         sink        | 70.84 | 78.09 |
|      skyscraper     | 65.86 | 85.33 |
|      fireplace      | 71.94 | 89.64 |
|     refrigerator    | 75.28 | 84.39 |
|      grandstand     | 45.23 | 79.64 |
|         path        | 23.22 | 37.51 |
|        stairs       |  20.0 | 27.19 |
|        runway       | 70.37 |  94.1 |
|         case        | 54.13 | 83.18 |
|      pool table     | 92.06 | 96.59 |
|        pillow       | 55.74 | 61.93 |
|     screen door     | 70.26 | 81.58 |
|       stairway      | 32.93 | 47.88 |
|        river        | 12.71 | 33.42 |
|        bridge       | 50.48 | 62.71 |
|       bookcase      | 41.27 | 68.41 |
|        blind        | 47.06 | 58.69 |
|     coffee table    | 57.23 | 82.14 |
|        toilet       | 82.51 | 89.69 |
|        flower       | 43.57 |  55.8 |
|         book        | 49.47 | 69.18 |
|         hill        | 10.74 | 17.94 |
|        bench        | 52.44 | 61.21 |
|      countertop     | 56.69 | 76.81 |
|        stove        | 80.06 | 86.26 |
|         palm        | 52.98 | 78.52 |
|    kitchen island   | 37.49 | 71.79 |
|       computer      | 74.75 | 88.44 |
|     swivel chair    |  48.2 | 60.82 |
|         boat        |  63.5 | 82.88 |
|         bar         | 50.83 | 67.58 |
|    arcade machine   | 81.81 | 88.31 |
|        hovel        | 37.95 | 40.61 |
|         bus         | 90.14 | 96.46 |
|        towel        | 69.34 | 82.93 |
|        light        | 51.44 | 57.44 |
|        truck        | 38.61 | 50.91 |
|        tower        | 34.65 | 72.28 |
|      chandelier     | 69.38 |  83.3 |
|        awning       | 28.14 | 31.19 |
|     streetlight     | 28.13 | 36.73 |
|        booth        | 53.55 | 66.24 |
| television receiver |  73.1 | 81.57 |
|       airplane      | 73.38 |  83.5 |
|      dirt track     | 15.23 |  36.2 |
|       apparel       | 42.23 | 52.58 |
|         pole        | 18.25 | 23.41 |
|         land        |  2.36 |  4.47 |
|      bannister      | 14.11 | 19.32 |
|      escalator      | 52.66 | 83.96 |
|       ottoman       | 50.49 | 69.32 |
|        bottle       | 37.42 | 61.62 |
|        buffet       | 45.34 | 54.67 |
|        poster       | 23.89 |  33.4 |
|        stage        | 15.81 | 25.24 |
|         van         | 45.25 | 58.54 |
|         ship        | 77.68 |  95.0 |
|       fountain      | 22.84 |  23.1 |
|    conveyer belt    | 80.54 | 92.99 |
|        canopy       | 40.05 | 59.34 |
|        washer       | 77.25 | 81.42 |
|      plaything      | 41.11 | 59.83 |
|    swimming pool    |  55.2 | 64.93 |
|        stool        | 44.57 | 51.54 |
|        barrel       | 56.94 | 89.18 |
|        basket       | 32.62 | 45.79 |
|      waterfall      | 56.24 | 66.06 |
|         tent        | 90.89 | 99.02 |
|         bag         | 14.51 |  16.0 |
|       minibike      | 72.63 | 83.52 |
|        cradle       | 81.09 | 96.66 |
|         oven        | 48.72 |  62.8 |
|         ball        | 53.25 |  66.0 |
|         food        | 54.33 | 59.02 |
|         step        | 11.16 | 12.92 |
|         tank        | 60.86 | 66.05 |
|      trade name     | 19.73 | 21.68 |
|      microwave      | 80.97 | 92.09 |
|         pot         | 47.54 | 57.04 |
|        animal       | 60.03 | 61.86 |
|       bicycle       | 55.91 | 72.44 |
|         lake        | 45.39 | 68.56 |
|      dishwasher     |  68.1 | 75.54 |
|        screen       |  59.3 | 83.11 |
|       blanket       | 16.13 | 18.32 |
|      sculpture      | 67.61 | 80.35 |
|         hood        | 56.05 | 65.65 |
|        sconce       | 46.74 | 56.03 |
|         vase        |  38.7 | 49.28 |
|    traffic light    | 30.82 | 47.64 |
|         tray        |  6.43 |  7.16 |
|        ashcan       | 36.66 | 46.19 |
|         fan         | 60.48 | 76.46 |
|         pier        | 42.36 | 57.68 |
|      crt screen     |  3.08 |  9.71 |
|        plate        | 55.32 | 70.41 |
|       monitor       | 11.95 | 12.56 |
|    bulletin board   | 49.64 | 65.63 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 57.03 | 70.69 |
|        glass        | 13.03 | 14.05 |
|        clock        | 38.97 | 44.17 |
|         flag        | 57.34 |  64.7 |
+---------------------+-------+-------+
10/06 08:35:09 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.6300  mIoU: 51.7700  mAcc: 64.5100  data_time: 0.0020  time: 0.2457
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
10/06 08:35:16 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1208349053
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1208349053
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 08:35:18 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 08:35:22,874 - mmseg - INFO - using core type: DCNv3
2024-10-06 08:35:22,874 - mmseg - INFO - using activation layer: GELU
2024-10-06 08:35:22,874 - mmseg - INFO - using main norm layer: LN
2024-10-06 08:35:22,874 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 08:35:22,874 - mmseg - INFO - level2_post_norm: False
2024-10-06 08:35:22,874 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 08:35:22,874 - mmseg - INFO - res_post_norm: False
2024-10-06 08:35:22,874 - mmseg - INFO - use_dcn_v4_op: False
10/06 08:35:28 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 08:35:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 08:35:30 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 08:35:32 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 08:37:14 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:06:04  time: 1.5814  data_time: 0.0018  memory: 21922  
10/06 08:38:32 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:56:50  time: 1.6948  data_time: 0.0019  memory: 15329  
10/06 08:39:40 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:50:49  time: 1.3574  data_time: 0.0027  memory: 11667  
10/06 08:40:55 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:48:19  time: 1.4402  data_time: 0.0028  memory: 15333  
10/06 08:42:07 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:46:01  time: 1.2647  data_time: 0.0018  memory: 15306  
10/06 08:43:15 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:43:41  time: 1.1723  data_time: 0.0027  memory: 15338  
10/06 08:44:26 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:41:55  time: 1.2370  data_time: 0.0017  memory: 15346  
10/06 08:45:33 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:40:03  time: 1.3234  data_time: 0.0017  memory: 15309  
10/06 08:46:29 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:37:41  time: 1.1551  data_time: 0.0017  memory: 10302  
10/06 08:47:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:35:47  time: 1.1114  data_time: 0.0017  memory: 11649  
10/06 08:48:31 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:34:13  time: 1.3353  data_time: 0.0019  memory: 10676  
10/06 08:49:27 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:32:28  time: 1.2218  data_time: 0.0017  memory: 10485  
10/06 08:50:29 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:31:01  time: 1.3424  data_time: 0.0021  memory: 11697  
10/06 08:51:38 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:29:52  time: 1.1950  data_time: 0.0019  memory: 15344  
10/06 08:52:46 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:28:41  time: 1.6206  data_time: 0.0017  memory: 11701  
10/06 08:53:41 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:27:12  time: 1.1465  data_time: 0.0019  memory: 10487  
10/06 08:54:39 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:25:51  time: 1.1656  data_time: 0.0018  memory: 1477  
10/06 08:55:35 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:24:30  time: 1.1067  data_time: 0.0017  memory: 9741  
10/06 08:56:42 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:23:23  time: 1.3726  data_time: 0.0019  memory: 11651  
10/06 08:57:41 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:22:08  time: 1.0970  data_time: 0.0017  memory: 11612  
10/06 08:58:47 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:21:01  time: 1.5242  data_time: 0.0021  memory: 11701  
10/06 08:59:50 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:19:52  time: 1.1271  data_time: 0.0017  memory: 11669  
10/06 09:00:49 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:18:40  time: 1.2710  data_time: 0.0017  memory: 11656  
10/06 09:01:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:17:29  time: 1.1178  data_time: 0.0018  memory: 2651  
10/06 09:02:45 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:16:19  time: 1.2446  data_time: 0.0021  memory: 15334  
10/06 09:03:39 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:15:08  time: 1.1557  data_time: 0.0021  memory: 1480  
10/06 09:04:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:13:59  time: 1.0806  data_time: 0.0018  memory: 8056  
10/06 09:05:40 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:12:54  time: 1.3772  data_time: 0.0016  memory: 11681  
10/06 09:06:37 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:11:47  time: 1.3223  data_time: 0.0019  memory: 9742  
10/06 09:07:33 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:40  time: 1.0655  data_time: 0.0018  memory: 1478  
10/06 09:08:34 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:35  time: 1.1766  data_time: 0.0017  memory: 11422  
10/06 09:09:28 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:08:28  time: 1.1115  data_time: 0.0018  memory: 1476  
10/06 09:10:29 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:24  time: 1.0366  data_time: 0.0016  memory: 15346  
10/06 09:11:31 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:20  time: 1.1430  data_time: 0.0024  memory: 9929  
10/06 09:12:32 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:17  time: 1.1357  data_time: 0.0016  memory: 11052  
10/06 09:13:27 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:12  time: 1.1522  data_time: 0.0018  memory: 8427  
10/06 09:14:25 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:09  time: 1.1619  data_time: 0.0018  memory: 1424  
10/06 09:15:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:05  time: 1.1085  data_time: 0.0018  memory: 5786  
10/06 09:16:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:02  time: 1.1019  data_time: 0.0016  memory: 11659  
10/06 09:17:20 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 1.0362  data_time: 0.0016  memory: 9367  
10/06 09:17:20 - mmengine - INFO - per class results:
10/06 09:17:21 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 64.71 |  77.8 |
|       building      | 75.52 | 87.12 |
|         sky         | 84.64 | 91.74 |
|        floor        | 69.02 | 81.64 |
|         tree        | 63.99 | 80.42 |
|       ceiling       | 70.72 | 84.34 |
|         road        | 77.07 | 86.42 |
|         bed         | 76.98 | 88.78 |
|      windowpane     |  50.5 | 67.06 |
|        grass        | 59.56 | 77.15 |
|       cabinet       | 53.24 | 66.85 |
|       sidewalk      | 53.99 | 71.69 |
|        person       | 62.32 |  77.5 |
|        earth        | 37.24 | 49.86 |
|         door        | 42.99 | 58.49 |
|        table        | 46.41 | 64.85 |
|       mountain      | 54.33 |  67.5 |
|        plant        | 43.87 | 57.38 |
|       curtain       | 55.77 | 74.53 |
|        chair        | 42.83 | 58.56 |
|         car         | 63.34 | 79.47 |
|        water        | 52.17 | 64.22 |
|       painting      | 48.08 | 68.28 |
|         sofa        | 57.82 | 76.75 |
|        shelf        | 40.57 | 59.17 |
|        house        | 44.55 |  70.2 |
|         sea         | 57.46 | 79.22 |
|        mirror       | 57.65 | 69.81 |
|         rug         | 50.69 | 66.35 |
|        field        | 26.07 | 40.75 |
|       armchair      | 42.08 | 59.18 |
|         seat        | 56.82 |  77.4 |
|        fence        |  38.8 | 53.07 |
|         desk        | 39.73 | 55.92 |
|         rock        | 44.25 | 69.33 |
|       wardrobe      |  49.6 | 71.25 |
|         lamp        | 32.37 | 51.63 |
|       bathtub       | 64.51 | 75.37 |
|       railing       |  28.8 | 42.43 |
|       cushion       | 44.64 | 62.66 |
|         base        | 30.55 |  41.1 |
|         box         | 23.81 | 33.03 |
|        column       | 31.45 | 53.63 |
|      signboard      | 23.46 | 34.55 |
|   chest of drawers  | 32.17 | 52.43 |
|       counter       | 31.15 | 40.34 |
|         sand        | 51.49 | 73.15 |
|         sink        | 48.67 | 62.05 |
|      skyscraper     | 58.18 | 76.71 |
|      fireplace      |  56.4 | 84.21 |
|     refrigerator    | 64.38 |  75.3 |
|      grandstand     | 42.77 |  77.4 |
|         path        | 20.73 | 31.24 |
|        stairs       |  18.4 | 25.02 |
|        runway       | 63.16 | 84.95 |
|         case        | 57.61 | 77.56 |
|      pool table     | 77.91 | 88.35 |
|        pillow       | 41.16 | 50.87 |
|     screen door     | 58.55 | 73.48 |
|       stairway      | 23.71 | 37.89 |
|        river        | 14.78 | 31.12 |
|        bridge       | 46.46 | 57.62 |
|       bookcase      | 30.71 | 54.44 |
|        blind        | 38.28 | 49.61 |
|     coffee table    | 44.55 | 69.37 |
|        toilet       | 58.53 | 73.26 |
|        flower       | 30.64 | 46.45 |
|         book        | 34.74 | 54.82 |
|         hill        |  7.32 | 13.76 |
|        bench        | 43.83 | 53.45 |
|      countertop     | 37.57 | 58.91 |
|        stove        | 65.41 | 78.33 |
|         palm        | 38.45 | 65.73 |
|    kitchen island   | 31.92 | 64.44 |
|       computer      | 62.78 | 81.36 |
|     swivel chair    | 36.04 | 55.19 |
|         boat        | 52.01 | 76.02 |
|         bar         | 48.56 |  66.2 |
|    arcade machine   | 76.82 | 90.79 |
|        hovel        | 49.65 | 59.75 |
|         bus         | 75.19 | 91.18 |
|        towel        | 46.27 | 62.59 |
|        light        | 15.48 | 23.98 |
|        truck        | 29.13 | 45.39 |
|        tower        |  27.8 | 64.31 |
|      chandelier     | 46.36 | 66.68 |
|        awning       | 18.31 |  21.4 |
|     streetlight     |  9.87 | 16.67 |
|        booth        |  45.3 | 57.67 |
| television receiver | 52.12 | 67.91 |
|       airplane      | 54.88 | 70.57 |
|      dirt track     |  22.2 | 42.89 |
|       apparel       |  30.0 | 46.65 |
|         pole        |  7.81 | 11.57 |
|         land        |  3.28 |  5.96 |
|      bannister      |  6.71 |  9.51 |
|      escalator      | 50.16 | 81.16 |
|       ottoman       |  44.4 | 61.25 |
|        bottle       | 30.98 |  58.5 |
|        buffet       | 39.99 | 51.01 |
|        poster       | 21.89 | 30.86 |
|        stage        | 15.12 | 29.52 |
|         van         | 36.98 | 48.19 |
|         ship        | 73.28 | 91.97 |
|       fountain      | 21.79 | 23.15 |
|    conveyer belt    | 71.27 | 84.83 |
|        canopy       | 17.75 | 27.93 |
|        washer       | 67.19 | 72.09 |
|      plaything      | 27.79 | 47.41 |
|    swimming pool    | 55.56 | 71.33 |
|        stool        |  24.4 | 34.52 |
|        barrel       | 37.75 | 80.24 |
|        basket       | 23.37 | 34.99 |
|      waterfall      | 52.41 | 62.01 |
|         tent        | 76.21 | 88.02 |
|         bag         |  9.93 | 12.43 |
|       minibike      | 50.81 | 69.21 |
|        cradle       |  70.3 | 89.79 |
|         oven        | 38.33 | 50.41 |
|         ball        | 37.53 | 46.32 |
|         food        | 48.82 | 56.97 |
|         step        |  9.68 | 10.54 |
|         tank        | 55.66 | 63.53 |
|      trade name     | 10.39 | 12.05 |
|      microwave      | 65.58 | 80.91 |
|         pot         | 30.61 | 43.61 |
|        animal       | 55.57 | 61.95 |
|       bicycle       |  35.6 | 54.19 |
|         lake        | 46.27 |  66.1 |
|      dishwasher     | 50.44 | 58.06 |
|        screen       | 51.43 | 76.72 |
|       blanket       | 15.76 | 18.92 |
|      sculpture      | 45.59 | 68.89 |
|         hood        | 37.45 | 53.27 |
|        sconce       | 18.33 | 29.19 |
|         vase        | 16.94 | 29.04 |
|    traffic light    | 16.35 | 28.94 |
|         tray        |  6.83 |  8.72 |
|        ashcan       | 23.92 | 35.37 |
|         fan         | 30.52 | 50.44 |
|         pier        | 41.66 | 57.67 |
|      crt screen     |  5.75 | 18.53 |
|        plate        | 36.63 | 54.96 |
|       monitor       |  8.71 |  9.39 |
|    bulletin board   | 33.47 | 49.21 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 35.81 | 48.05 |
|        glass        |  7.66 |  8.65 |
|        clock        | 21.43 | 28.55 |
|         flag        | 36.61 | 49.31 |
+---------------------+-------+-------+
10/06 09:17:21 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 75.9300  mIoU: 41.4400  mAcc: 56.1300  data_time: 0.0023  time: 1.2537
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
10/06 09:19:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2054601518
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2054601518
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 09:19:08 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 09:19:59,599 - mmseg - INFO - using core type: DCNv3
2024-10-06 09:19:59,600 - mmseg - INFO - using activation layer: GELU
2024-10-06 09:19:59,600 - mmseg - INFO - using main norm layer: LN
2024-10-06 09:19:59,600 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 09:19:59,600 - mmseg - INFO - level2_post_norm: False
2024-10-06 09:19:59,600 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 09:19:59,600 - mmseg - INFO - res_post_norm: False
2024-10-06 09:19:59,600 - mmseg - INFO - use_dcn_v4_op: False
10/06 09:20:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 09:20:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 09:20:13 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 09:20:18 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 09:21:56 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:03:53  time: 0.4634  data_time: 0.0017  memory: 21922  
10/06 09:22:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:04  time: 0.6011  data_time: 0.0017  memory: 15329  
10/06 09:22:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:28:23  time: 0.2760  data_time: 0.0017  memory: 11667  
10/06 09:22:57 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:54  time: 0.3823  data_time: 0.0017  memory: 15333  
10/06 09:23:18 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:03  time: 0.2286  data_time: 0.0016  memory: 15306  
10/06 09:23:36 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:42  time: 0.1155  data_time: 0.0017  memory: 15338  
10/06 09:23:55 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:03  time: 0.2567  data_time: 0.0016  memory: 15346  
10/06 09:24:11 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:32  time: 0.2618  data_time: 0.0016  memory: 15309  
10/06 09:24:19 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:52  time: 0.2103  data_time: 0.0016  memory: 10302  
10/06 09:24:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:29  time: 0.1079  data_time: 0.0016  memory: 11649  
10/06 09:24:37 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:22  time: 0.2641  data_time: 0.0017  memory: 10676  
10/06 09:24:45 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:23  time: 0.2635  data_time: 0.0017  memory: 10485  
10/06 09:24:57 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:39  time: 0.2975  data_time: 0.0015  memory: 11697  
10/06 09:25:11 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:05  time: 0.1168  data_time: 0.0018  memory: 15344  
10/06 09:25:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:35  time: 0.6147  data_time: 0.0022  memory: 11701  
10/06 09:25:34 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:53  time: 0.1093  data_time: 0.0018  memory: 10487  
10/06 09:25:39 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:14  time: 0.1119  data_time: 0.0018  memory: 1477  
10/06 09:25:48 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:43  time: 0.2037  data_time: 0.0016  memory: 9741  
10/06 09:26:02 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:20  time: 0.3717  data_time: 0.0017  memory: 11651  
10/06 09:26:12 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:54  time: 0.1052  data_time: 0.0017  memory: 11612  
10/06 09:26:24 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:31  time: 0.4538  data_time: 0.0016  memory: 11701  
10/06 09:26:35 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:08  time: 0.1075  data_time: 0.0017  memory: 11669  
10/06 09:26:43 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:45  time: 0.2412  data_time: 0.0016  memory: 11656  
10/06 09:26:49 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:20  time: 0.1080  data_time: 0.0016  memory: 2651  
10/06 09:26:58 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:59  time: 0.2336  data_time: 0.0016  memory: 15334  
10/06 09:27:03 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:38  time: 0.1104  data_time: 0.0016  memory: 1480  
10/06 09:27:09 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:18  time: 0.1023  data_time: 0.0016  memory: 8056  
10/06 09:27:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:01  time: 0.2933  data_time: 0.0016  memory: 11681  
10/06 09:27:30 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:43  time: 0.2588  data_time: 0.0016  memory: 9742  
10/06 09:27:35 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:25  time: 0.1005  data_time: 0.0015  memory: 1478  
10/06 09:27:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:09  time: 0.1143  data_time: 0.0016  memory: 11422  
10/06 09:27:48 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:52  time: 0.1074  data_time: 0.0017  memory: 1476  
10/06 09:27:58 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:37  time: 0.0992  data_time: 0.0015  memory: 15346  
10/06 09:28:08 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:23  time: 0.1092  data_time: 0.0017  memory: 9929  
10/06 09:28:20 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:08  time: 0.1122  data_time: 0.0016  memory: 11052  
10/06 09:28:27 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:54  time: 0.1110  data_time: 0.0018  memory: 8427  
10/06 09:28:32 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:40  time: 0.1094  data_time: 0.0018  memory: 1424  
10/06 09:28:39 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:26  time: 0.1085  data_time: 0.0016  memory: 5786  
10/06 09:28:48 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1052  data_time: 0.0017  memory: 11659  
10/06 09:28:57 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0986  data_time: 0.0015  memory: 9367  
10/06 09:28:58 - mmengine - INFO - per class results:
10/06 09:28:58 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.38 | 87.47 |
|       building      | 82.52 | 92.97 |
|         sky         | 94.36 | 97.24 |
|        floor        | 81.51 | 90.96 |
|         tree        | 74.46 | 88.36 |
|       ceiling       | 84.53 | 92.98 |
|         road        | 83.29 |  89.1 |
|         bed         | 89.21 | 96.34 |
|      windowpane     | 62.55 | 77.55 |
|        grass        | 65.26 | 82.76 |
|       cabinet       | 59.54 | 71.56 |
|       sidewalk      | 65.55 |  83.7 |
|        person       | 79.43 | 88.71 |
|        earth        | 37.31 | 48.41 |
|         door        | 54.77 | 70.46 |
|        table        | 61.15 |  78.2 |
|       mountain      | 61.66 | 73.58 |
|        plant        | 52.07 | 64.99 |
|       curtain       |  74.2 | 88.42 |
|        chair        | 56.93 | 69.07 |
|         car         | 82.94 | 90.88 |
|        water        | 56.18 |  68.7 |
|       painting      | 71.88 | 87.57 |
|         sofa        | 70.81 | 88.19 |
|        shelf        | 45.84 | 65.58 |
|        house        | 49.48 | 74.58 |
|         sea         | 62.67 | 83.84 |
|        mirror       | 67.55 | 74.27 |
|         rug         | 60.73 | 69.58 |
|        field        | 27.37 | 44.49 |
|       armchair      | 45.98 | 63.53 |
|         seat        | 58.56 |  75.9 |
|        fence        | 46.29 | 59.19 |
|         desk        | 48.01 | 60.23 |
|         rock        | 49.24 | 72.59 |
|       wardrobe      | 52.38 | 73.62 |
|         lamp        | 61.18 | 75.04 |
|       bathtub       | 78.44 | 85.57 |
|       railing       |  34.7 | 46.93 |
|       cushion       | 61.81 | 75.92 |
|         base        | 34.74 | 46.56 |
|         box         | 26.95 | 34.88 |
|        column       | 49.64 | 63.71 |
|      signboard      | 36.53 | 46.32 |
|   chest of drawers  | 34.94 | 60.32 |
|       counter       |  29.5 | 36.94 |
|         sand        | 57.85 | 75.65 |
|         sink        | 70.46 | 77.79 |
|      skyscraper     | 51.26 |  61.5 |
|      fireplace      | 73.76 | 89.01 |
|     refrigerator    | 74.49 | 83.99 |
|      grandstand     |  43.5 | 82.19 |
|         path        | 26.12 | 36.52 |
|        stairs       | 27.72 | 37.87 |
|        runway       | 72.17 | 96.43 |
|         case        |  59.9 | 83.45 |
|      pool table     | 91.81 | 96.17 |
|        pillow       | 55.91 | 62.87 |
|     screen door     | 71.01 | 82.62 |
|       stairway      | 34.79 | 44.32 |
|        river        | 14.32 | 29.35 |
|        bridge       | 59.31 | 72.78 |
|       bookcase      | 41.08 | 64.78 |
|        blind        | 43.59 | 52.74 |
|     coffee table    | 59.19 | 81.81 |
|        toilet       | 83.25 | 89.25 |
|        flower       | 39.27 | 53.17 |
|         book        | 47.96 | 65.76 |
|         hill        | 14.79 | 20.44 |
|        bench        |  53.1 | 60.23 |
|      countertop     | 53.52 | 68.73 |
|        stove        | 77.62 | 87.48 |
|         palm        | 49.99 | 67.15 |
|    kitchen island   | 36.79 | 77.98 |
|       computer      | 75.65 | 90.24 |
|     swivel chair    | 49.02 |  64.6 |
|         boat        | 72.41 | 80.75 |
|         bar         | 46.74 | 66.91 |
|    arcade machine   | 85.81 | 97.17 |
|        hovel        | 24.48 |  24.9 |
|         bus         | 89.35 | 95.72 |
|        towel        | 69.69 | 78.85 |
|        light        | 51.08 | 56.91 |
|        truck        | 35.94 | 53.23 |
|        tower        | 33.46 |  66.4 |
|      chandelier     | 65.07 | 82.82 |
|        awning       | 26.77 | 29.64 |
|     streetlight     | 25.01 | 31.92 |
|        booth        | 43.53 | 52.82 |
| television receiver | 72.25 | 82.95 |
|       airplane      | 64.15 |  72.6 |
|      dirt track     | 27.98 | 35.36 |
|       apparel       | 40.44 |  50.9 |
|         pole        | 16.57 | 21.17 |
|         land        |  2.64 |  4.07 |
|      bannister      | 15.29 | 19.63 |
|      escalator      | 54.33 | 82.98 |
|       ottoman       | 51.23 | 66.51 |
|        bottle       | 38.04 | 60.25 |
|        buffet       | 44.44 | 54.45 |
|        poster       | 27.22 | 37.51 |
|        stage        | 16.03 | 29.41 |
|         van         | 41.44 | 54.67 |
|         ship        | 75.03 | 90.52 |
|       fountain      | 28.42 | 28.77 |
|    conveyer belt    | 80.53 | 88.86 |
|        canopy       | 33.71 | 48.66 |
|        washer       | 72.64 | 79.01 |
|      plaything      | 25.35 | 37.98 |
|    swimming pool    | 51.92 | 67.56 |
|        stool        | 43.11 | 50.67 |
|        barrel       | 57.21 | 95.11 |
|        basket       | 27.22 | 35.02 |
|      waterfall      | 61.37 | 84.94 |
|         tent        | 92.68 | 98.95 |
|         bag         | 10.03 | 10.97 |
|       minibike      | 70.67 | 81.08 |
|        cradle       | 81.36 | 96.64 |
|         oven        | 38.88 | 58.02 |
|         ball        |  49.7 | 63.81 |
|         food        | 56.94 | 65.12 |
|         step        | 13.54 | 14.94 |
|         tank        | 59.83 |  65.9 |
|      trade name     | 23.95 |  26.5 |
|      microwave      | 75.45 | 85.67 |
|         pot         |  50.8 | 61.42 |
|        animal       | 61.11 | 62.39 |
|       bicycle       | 54.36 | 69.09 |
|         lake        | 42.72 | 63.89 |
|      dishwasher     | 66.67 | 75.85 |
|        screen       | 57.39 | 85.05 |
|       blanket       |  13.7 | 14.37 |
|      sculpture      | 68.35 | 79.92 |
|         hood        |  56.0 | 67.54 |
|        sconce       | 46.46 | 58.37 |
|         vase        | 35.95 | 45.92 |
|    traffic light    | 29.23 | 44.93 |
|         tray        |  6.12 |  6.69 |
|        ashcan       | 38.64 | 48.75 |
|         fan         | 60.79 | 75.52 |
|         pier        | 38.17 | 49.35 |
|      crt screen     |  6.47 | 21.88 |
|        plate        | 51.74 | 69.53 |
|       monitor       | 13.28 | 14.03 |
|    bulletin board   |  52.6 | 68.65 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 59.16 | 68.36 |
|        glass        | 11.54 | 12.32 |
|        clock        | 36.05 | 42.22 |
|         flag        | 55.21 | 60.04 |
+---------------------+-------+-------+
10/06 09:28:58 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.5300  mIoU: 51.1700  mAcc: 63.6400  data_time: 0.0025  time: 0.2595
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
10/06 09:30:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 91541190
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 91541190
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 09:30:03 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 09:30:37,115 - mmseg - INFO - using core type: DCNv3
2024-10-06 09:30:37,115 - mmseg - INFO - using activation layer: GELU
2024-10-06 09:30:37,115 - mmseg - INFO - using main norm layer: LN
2024-10-06 09:30:37,115 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 09:30:37,115 - mmseg - INFO - level2_post_norm: False
2024-10-06 09:30:37,115 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 09:30:37,115 - mmseg - INFO - res_post_norm: False
2024-10-06 09:30:37,115 - mmseg - INFO - use_dcn_v4_op: False
10/06 09:30:45 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 09:30:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 09:30:48 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 09:30:51 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 09:32:23 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:59:47  time: 0.4714  data_time: 0.0018  memory: 21922  
10/06 09:32:49 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:37:13  time: 0.6148  data_time: 0.0022  memory: 15329  
10/06 09:33:04 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:27:16  time: 0.2841  data_time: 0.0017  memory: 11667  
10/06 09:33:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:23:08  time: 0.3909  data_time: 0.0016  memory: 15333  
10/06 09:33:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:31  time: 0.2389  data_time: 0.0017  memory: 15306  
10/06 09:34:05 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:18  time: 0.1235  data_time: 0.0017  memory: 15338  
10/06 09:34:24 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:16:46  time: 0.2666  data_time: 0.0017  memory: 15346  
10/06 09:34:41 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:18  time: 0.2694  data_time: 0.0016  memory: 15309  
10/06 09:34:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:13:42  time: 0.2178  data_time: 0.0016  memory: 10302  
10/06 09:34:58 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:21  time: 0.1156  data_time: 0.0017  memory: 11649  
10/06 09:35:08 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:16  time: 0.2721  data_time: 0.0018  memory: 10676  
10/06 09:35:17 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:19  time: 0.2959  data_time: 0.0198  memory: 10485  
10/06 09:35:29 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:37  time: 0.3047  data_time: 0.0015  memory: 11697  
10/06 09:35:44 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:04  time: 0.1339  data_time: 0.0020  memory: 15344  
10/06 09:36:00 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:34  time: 0.6175  data_time: 0.0016  memory: 11701  
10/06 09:36:07 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:07:53  time: 0.1172  data_time: 0.0017  memory: 10487  
10/06 09:36:13 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:15  time: 0.1212  data_time: 0.0027  memory: 1477  
10/06 09:36:22 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:44  time: 0.2095  data_time: 0.0016  memory: 9741  
10/06 09:36:37 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:22  time: 0.3776  data_time: 0.0017  memory: 11651  
10/06 09:36:47 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:55  time: 0.1121  data_time: 0.0017  memory: 11612  
10/06 09:37:01 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:35  time: 0.6500  data_time: 0.0368  memory: 11701  
10/06 09:37:13 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:12  time: 0.1130  data_time: 0.0017  memory: 11669  
10/06 09:37:21 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:48  time: 0.2446  data_time: 0.0016  memory: 11656  
10/06 09:37:27 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:23  time: 0.1149  data_time: 0.0016  memory: 2651  
10/06 09:37:36 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:02  time: 0.2390  data_time: 0.0016  memory: 15334  
10/06 09:37:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:40  time: 0.1171  data_time: 0.0016  memory: 1480  
10/06 09:37:49 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:21  time: 0.1109  data_time: 0.0016  memory: 8056  
10/06 09:38:01 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:04  time: 0.3006  data_time: 0.0016  memory: 11681  
10/06 09:38:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:46  time: 0.2650  data_time: 0.0016  memory: 9742  
10/06 09:38:15 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:27  time: 0.1087  data_time: 0.0015  memory: 1478  
10/06 09:38:23 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:11  time: 0.1220  data_time: 0.0016  memory: 11422  
10/06 09:38:28 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:54  time: 0.1142  data_time: 0.0017  memory: 1476  
10/06 09:38:40 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:39  time: 0.1062  data_time: 0.0015  memory: 15346  
10/06 09:38:52 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:24  time: 0.1165  data_time: 0.0017  memory: 9929  
10/06 09:39:00 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:09  time: 0.1182  data_time: 0.0016  memory: 11052  
10/06 09:39:07 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:55  time: 0.1186  data_time: 0.0018  memory: 8427  
10/06 09:39:13 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:40  time: 0.1184  data_time: 0.0018  memory: 1424  
10/06 09:39:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:26  time: 0.1148  data_time: 0.0016  memory: 5786  
10/06 09:39:30 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1119  data_time: 0.0016  memory: 11659  
10/06 09:39:39 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1052  data_time: 0.0015  memory: 9367  
10/06 09:39:40 - mmengine - INFO - per class results:
10/06 09:39:40 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.59 | 88.06 |
|       building      | 82.96 | 92.86 |
|         sky         | 94.11 | 97.25 |
|        floor        | 80.84 | 90.85 |
|         tree        |  73.7 | 88.76 |
|       ceiling       | 83.35 | 91.99 |
|         road        |  82.8 |  88.3 |
|         bed         | 88.85 | 95.85 |
|      windowpane     | 62.37 | 76.04 |
|        grass        | 68.23 | 83.23 |
|       cabinet       | 59.69 | 71.36 |
|       sidewalk      | 63.85 | 83.34 |
|        person       | 79.73 | 88.74 |
|        earth        | 36.47 | 54.47 |
|         door        | 51.89 | 67.97 |
|        table        | 61.12 |  77.1 |
|       mountain      | 58.62 | 71.26 |
|        plant        | 50.33 | 57.19 |
|       curtain       | 73.92 | 87.16 |
|        chair        | 56.12 | 65.68 |
|         car         | 84.27 | 92.07 |
|        water        | 58.41 | 70.48 |
|       painting      | 72.52 | 86.83 |
|         sofa        | 71.14 | 86.55 |
|        shelf        |  44.9 | 64.69 |
|        house        | 51.69 | 73.66 |
|         sea         |  64.6 | 83.29 |
|        mirror       | 67.62 | 74.78 |
|         rug         | 55.48 | 63.07 |
|        field        | 34.45 | 40.89 |
|       armchair      | 48.27 | 68.36 |
|         seat        | 57.55 | 76.93 |
|        fence        | 45.86 | 57.05 |
|         desk        | 49.29 | 66.78 |
|         rock        | 48.87 | 70.89 |
|       wardrobe      | 50.25 | 72.93 |
|         lamp        | 61.93 | 74.39 |
|       bathtub       | 79.08 | 85.28 |
|       railing       | 33.58 | 42.71 |
|       cushion       | 62.11 | 76.63 |
|         base        | 38.45 | 48.09 |
|         box         | 26.73 |  33.4 |
|        column       | 50.74 | 63.91 |
|      signboard      | 37.17 | 46.07 |
|   chest of drawers  | 36.59 |  66.5 |
|       counter       | 30.73 | 37.49 |
|         sand        | 49.68 |  68.4 |
|         sink        | 70.49 | 78.09 |
|      skyscraper     | 59.56 | 74.11 |
|      fireplace      | 73.85 | 90.72 |
|     refrigerator    | 77.65 | 90.11 |
|      grandstand     | 45.79 | 73.75 |
|         path        | 21.99 | 35.38 |
|        stairs       | 18.17 | 23.73 |
|        runway       | 71.88 | 94.94 |
|         case        | 60.84 | 81.61 |
|      pool table     | 90.13 | 96.13 |
|        pillow       | 52.45 | 57.61 |
|     screen door     |  69.7 | 80.39 |
|       stairway      |  36.1 | 54.71 |
|        river        |  8.79 |  19.9 |
|        bridge       | 51.96 | 63.41 |
|       bookcase      | 37.78 | 61.99 |
|        blind        |  40.1 | 46.66 |
|     coffee table    | 57.49 | 80.67 |
|        toilet       | 82.35 |  89.2 |
|        flower       | 43.87 | 55.53 |
|         book        | 49.23 | 66.48 |
|         hill        | 12.46 | 17.32 |
|        bench        | 51.83 | 60.08 |
|      countertop     | 53.06 | 68.25 |
|        stove        | 77.67 | 89.58 |
|         palm        | 49.57 | 69.22 |
|    kitchen island   | 33.42 | 65.52 |
|       computer      | 75.04 | 88.12 |
|     swivel chair    | 50.79 |  63.5 |
|         boat        | 59.73 | 79.34 |
|         bar         | 48.03 | 69.67 |
|    arcade machine   | 86.58 |  96.4 |
|        hovel        | 37.62 | 41.58 |
|         bus         | 89.43 | 96.23 |
|        towel        | 65.62 | 74.11 |
|        light        | 47.36 | 51.69 |
|        truck        | 37.67 | 52.76 |
|        tower        | 34.97 | 74.13 |
|      chandelier     | 67.34 | 82.35 |
|        awning       | 30.32 |  33.2 |
|     streetlight     | 23.92 | 29.98 |
|        booth        | 48.25 | 68.41 |
| television receiver | 71.03 | 80.35 |
|       airplane      | 61.27 |  74.3 |
|      dirt track     | 31.49 | 46.63 |
|       apparel       |  38.8 | 47.71 |
|         pole        | 17.57 | 22.64 |
|         land        |  2.21 |  4.78 |
|      bannister      | 14.97 | 20.48 |
|      escalator      | 52.07 | 81.55 |
|       ottoman       | 49.68 | 67.75 |
|        bottle       | 36.28 |  58.1 |
|        buffet       | 46.54 | 58.42 |
|        poster       | 27.71 | 38.39 |
|        stage        | 14.52 | 26.39 |
|         van         |  47.8 | 63.57 |
|         ship        | 77.48 | 96.51 |
|       fountain      | 24.29 | 24.68 |
|    conveyer belt    |  74.7 | 92.87 |
|        canopy       |  35.2 | 56.17 |
|        washer       | 76.77 | 81.82 |
|      plaything      | 39.69 | 53.24 |
|    swimming pool    |  53.0 | 66.94 |
|        stool        | 43.55 | 50.26 |
|        barrel       | 62.13 | 84.83 |
|        basket       | 33.83 | 44.68 |
|      waterfall      | 72.84 | 88.37 |
|         tent        | 89.63 | 99.27 |
|         bag         |  11.6 | 12.79 |
|       minibike      | 69.39 | 79.67 |
|        cradle       | 76.78 |  96.1 |
|         oven        | 43.94 |  57.0 |
|         ball        | 51.48 | 65.04 |
|         food        | 53.23 | 60.04 |
|         step        | 10.68 | 11.92 |
|         tank        | 60.98 | 65.97 |
|      trade name     | 20.14 | 22.83 |
|      microwave      | 79.49 | 90.04 |
|         pot         | 48.59 | 57.89 |
|        animal       | 63.34 | 65.04 |
|       bicycle       |  54.6 | 72.21 |
|         lake        | 56.83 | 63.45 |
|      dishwasher     | 60.38 | 67.84 |
|        screen       | 59.45 | 84.12 |
|       blanket       | 11.93 | 12.41 |
|      sculpture      | 61.47 | 78.28 |
|         hood        | 49.29 |  60.6 |
|        sconce       | 42.92 | 51.42 |
|         vase        | 36.86 | 44.76 |
|    traffic light    | 27.55 | 39.91 |
|         tray        |  8.01 |  8.93 |
|        ashcan       | 37.19 |  47.5 |
|         fan         |  57.6 | 76.16 |
|         pier        | 37.29 | 58.85 |
|      crt screen     |  3.46 |  11.3 |
|        plate        | 54.83 | 69.58 |
|       monitor       |  8.89 |  9.33 |
|    bulletin board   | 44.12 | 56.14 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 55.81 |  63.8 |
|        glass        | 11.13 | 11.71 |
|        clock        | 35.23 |  39.8 |
|         flag        | 61.42 | 66.87 |
+---------------------+-------+-------+
10/06 09:39:40 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.3100  mIoU: 51.0700  mAcc: 63.3700  data_time: 0.0024  time: 0.2641
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
10/06 09:41:05 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1747777353
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1747777353
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 09:41:06 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/elastic_transform'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 09:41:40,134 - mmseg - INFO - using core type: DCNv3
2024-10-06 09:41:40,134 - mmseg - INFO - using activation layer: GELU
2024-10-06 09:41:40,134 - mmseg - INFO - using main norm layer: LN
2024-10-06 09:41:40,134 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 09:41:40,134 - mmseg - INFO - level2_post_norm: False
2024-10-06 09:41:40,134 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 09:41:40,134 - mmseg - INFO - res_post_norm: False
2024-10-06 09:41:40,134 - mmseg - INFO - use_dcn_v4_op: False
10/06 09:41:50 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 09:41:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 09:41:52 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 09:41:56 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 09:44:28 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:38:30  time: 1.5736  data_time: 0.0017  memory: 21922  
10/06 09:45:45 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:12:29  time: 1.6742  data_time: 0.0017  memory: 15329  
10/06 09:46:52 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:00:52  time: 1.3568  data_time: 0.0029  memory: 11667  
10/06 09:48:07 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:55:39  time: 1.4371  data_time: 0.0023  memory: 15333  
10/06 09:49:19 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:51:37  time: 1.2488  data_time: 0.0016  memory: 15306  
10/06 09:50:31 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:48:36  time: 1.1922  data_time: 0.0048  memory: 15338  
10/06 09:51:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:45:58  time: 1.2397  data_time: 0.0022  memory: 15346  
10/06 09:52:48 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:43:29  time: 1.3237  data_time: 0.0016  memory: 15309  
10/06 09:53:44 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:40:38  time: 1.1489  data_time: 0.0016  memory: 10302  
10/06 09:54:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:38:20  time: 1.1082  data_time: 0.0017  memory: 11649  
10/06 09:55:47 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:36:30  time: 1.3538  data_time: 0.0018  memory: 10676  
10/06 09:56:46 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:34:36  time: 1.3104  data_time: 0.0018  memory: 10485  
10/06 09:57:48 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:32:57  time: 1.3054  data_time: 0.0016  memory: 11697  
10/06 09:58:56 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:31:34  time: 1.2069  data_time: 0.0039  memory: 15344  
10/06 10:00:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:30:13  time: 1.6234  data_time: 0.0020  memory: 11701  
10/06 10:01:00 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:28:35  time: 1.1506  data_time: 0.0018  memory: 10487  
10/06 10:01:58 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:27:05  time: 1.1693  data_time: 0.0018  memory: 1477  
10/06 10:02:54 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:25:37  time: 1.1139  data_time: 0.0016  memory: 9741  
10/06 10:04:01 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:24:24  time: 1.3947  data_time: 0.0020  memory: 11651  
10/06 10:05:00 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:23:03  time: 1.0879  data_time: 0.0018  memory: 11612  
10/06 10:06:05 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:21:51  time: 1.5310  data_time: 0.0017  memory: 11701  
10/06 10:07:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:20:37  time: 1.1210  data_time: 0.0017  memory: 11669  
10/06 10:08:07 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:19:20  time: 1.2695  data_time: 0.0016  memory: 11656  
10/06 10:09:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:18:06  time: 1.0959  data_time: 0.0016  memory: 2651  
10/06 10:10:03 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:16:52  time: 1.2236  data_time: 0.0017  memory: 15334  
10/06 10:10:57 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:15:37  time: 1.1464  data_time: 0.0016  memory: 1480  
10/06 10:11:59 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:14:28  time: 1.0525  data_time: 0.0016  memory: 8056  
10/06 10:13:02 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:13:19  time: 1.3644  data_time: 0.0016  memory: 11681  
10/06 10:14:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:12:09  time: 1.3212  data_time: 0.0017  memory: 9742  
10/06 10:14:55 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:59  time: 1.0396  data_time: 0.0015  memory: 1478  
10/06 10:15:59 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:53  time: 1.5400  data_time: 0.0206  memory: 11422  
10/06 10:16:54 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:08:44  time: 1.1068  data_time: 0.0018  memory: 1476  
10/06 10:17:54 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:37  time: 1.0363  data_time: 0.0021  memory: 15346  
10/06 10:18:56 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:31  time: 1.1278  data_time: 0.0018  memory: 9929  
10/06 10:19:56 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:25  time: 1.1161  data_time: 0.0016  memory: 11052  
10/06 10:20:54 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:19  time: 1.1261  data_time: 0.0017  memory: 8427  
10/06 10:21:47 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:13  time: 1.1150  data_time: 0.0018  memory: 1424  
10/06 10:22:56 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:09  time: 2.4099  data_time: 0.0893  memory: 5786  
10/06 10:23:59 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:04  time: 1.0847  data_time: 0.0016  memory: 11659  
10/06 10:24:57 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9931  data_time: 0.0015  memory: 9367  
10/06 10:24:57 - mmengine - INFO - per class results:
10/06 10:24:57 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 64.55 | 77.79 |
|       building      | 75.65 |  87.5 |
|         sky         | 84.58 | 91.32 |
|        floor        | 69.46 | 81.85 |
|         tree        | 64.82 |  80.9 |
|       ceiling       | 70.94 | 84.83 |
|         road        | 76.54 | 85.87 |
|         bed         |  77.9 | 88.99 |
|      windowpane     | 50.34 |  67.0 |
|        grass        | 59.04 | 76.32 |
|       cabinet       | 50.67 | 64.12 |
|       sidewalk      | 53.78 | 71.58 |
|        person       | 62.59 | 77.27 |
|        earth        | 36.34 |  49.2 |
|         door        |  43.1 | 58.77 |
|        table        | 45.82 | 64.49 |
|       mountain      | 54.07 | 67.89 |
|        plant        | 44.22 | 57.98 |
|       curtain       | 54.78 | 74.32 |
|        chair        | 41.74 | 57.73 |
|         car         | 62.61 | 78.26 |
|        water        | 53.58 | 65.68 |
|       painting      | 47.53 | 68.25 |
|         sofa        | 60.12 | 78.59 |
|        shelf        | 38.39 | 57.13 |
|        house        | 44.18 | 70.35 |
|         sea         | 59.44 | 78.66 |
|        mirror       |  56.2 |  69.5 |
|         rug         | 51.63 | 65.56 |
|        field        | 26.91 | 42.85 |
|       armchair      | 38.19 | 55.35 |
|         seat        | 54.59 | 75.62 |
|        fence        | 38.81 | 53.84 |
|         desk        |  40.1 | 56.22 |
|         rock        | 45.77 |  72.0 |
|       wardrobe      | 45.82 | 68.85 |
|         lamp        | 30.15 | 49.14 |
|       bathtub       | 66.68 | 77.62 |
|       railing       | 27.19 | 42.36 |
|       cushion       | 45.17 | 61.95 |
|         base        | 31.13 | 42.89 |
|         box         | 21.56 | 30.31 |
|        column       | 32.11 | 50.01 |
|      signboard      | 23.21 | 34.27 |
|   chest of drawers  | 30.51 | 49.89 |
|       counter       | 29.03 | 38.03 |
|         sand        | 51.93 | 74.15 |
|         sink        | 47.07 | 60.81 |
|      skyscraper     | 57.91 | 77.54 |
|      fireplace      | 59.73 | 86.83 |
|     refrigerator    | 65.35 | 76.13 |
|      grandstand     | 43.55 | 76.55 |
|         path        | 19.51 | 29.86 |
|        stairs       | 17.08 | 24.43 |
|        runway       | 61.27 | 83.46 |
|         case        | 52.74 | 69.51 |
|      pool table     |  70.7 | 83.32 |
|        pillow       | 41.46 |  50.6 |
|     screen door     | 64.17 | 78.49 |
|       stairway      | 30.43 |  48.0 |
|        river        | 13.87 | 30.95 |
|        bridge       | 42.14 | 54.19 |
|       bookcase      | 29.57 | 51.99 |
|        blind        |  35.8 | 44.79 |
|     coffee table    | 46.22 | 70.99 |
|        toilet       | 58.33 | 74.68 |
|        flower       | 29.52 | 43.88 |
|         book        | 35.16 | 55.67 |
|         hill        |  5.17 |  9.43 |
|        bench        |  44.1 | 53.04 |
|      countertop     | 39.61 | 58.49 |
|        stove        | 63.37 | 78.08 |
|         palm        | 40.55 |  69.3 |
|    kitchen island   |  31.6 | 67.38 |
|       computer      | 64.16 | 82.41 |
|     swivel chair    | 36.38 | 53.89 |
|         boat        | 48.22 | 77.88 |
|         bar         | 46.06 | 65.53 |
|    arcade machine   | 70.69 | 91.26 |
|        hovel        | 40.38 | 45.65 |
|         bus         | 74.43 | 86.49 |
|        towel        | 45.98 | 63.25 |
|        light        | 17.26 | 25.93 |
|        truck        | 29.35 | 47.88 |
|        tower        | 25.54 | 57.86 |
|      chandelier     | 46.11 | 66.68 |
|        awning       | 19.23 |  22.3 |
|     streetlight     | 11.53 | 19.54 |
|        booth        | 45.48 | 58.02 |
| television receiver | 47.57 | 62.02 |
|       airplane      | 52.41 | 66.44 |
|      dirt track     | 18.29 | 34.18 |
|       apparel       | 34.49 | 49.34 |
|         pole        |  5.56 |  8.2  |
|         land        |  2.58 |  4.62 |
|      bannister      |  6.74 | 10.59 |
|      escalator      | 50.41 | 81.58 |
|       ottoman       | 39.82 |  59.4 |
|        bottle       | 29.05 | 53.36 |
|        buffet       | 37.65 | 47.72 |
|        poster       | 21.07 | 32.05 |
|        stage        | 14.06 | 26.77 |
|         van         | 32.71 | 43.31 |
|         ship        | 73.19 |  90.3 |
|       fountain      | 20.56 | 21.95 |
|    conveyer belt    | 74.48 | 85.68 |
|        canopy       | 16.81 | 25.05 |
|        washer       | 66.65 | 73.35 |
|      plaything      | 26.99 | 47.54 |
|    swimming pool    | 47.94 | 65.49 |
|        stool        | 25.94 | 35.21 |
|        barrel       | 36.87 | 66.47 |
|        basket       | 23.79 | 36.36 |
|      waterfall      | 55.49 | 64.14 |
|         tent        | 72.07 | 92.46 |
|         bag         | 12.62 | 14.62 |
|       minibike      | 50.97 | 68.85 |
|        cradle       |  68.7 | 88.88 |
|         oven        | 39.04 | 47.28 |
|         ball        | 39.53 |  47.4 |
|         food        | 51.58 | 59.12 |
|         step        |  7.92 |  8.85 |
|         tank        | 56.77 | 64.06 |
|      trade name     | 13.74 | 15.38 |
|      microwave      | 67.38 | 83.08 |
|         pot         |  32.9 |  45.4 |
|        animal       | 50.63 | 57.69 |
|       bicycle       | 37.91 | 57.77 |
|         lake        | 44.31 | 63.79 |
|      dishwasher     | 46.15 |  55.2 |
|        screen       | 47.47 | 73.61 |
|       blanket       | 16.81 | 19.34 |
|      sculpture      | 51.22 |  73.2 |
|         hood        |  39.9 | 55.22 |
|        sconce       | 21.08 | 31.68 |
|         vase        | 19.42 | 32.02 |
|    traffic light    | 14.99 | 28.07 |
|         tray        |  5.25 |  6.32 |
|        ashcan       | 23.97 |  34.5 |
|         fan         | 21.69 | 38.76 |
|         pier        | 36.17 | 49.61 |
|      crt screen     |  6.84 |  21.5 |
|        plate        | 38.13 | 55.09 |
|       monitor       |  6.02 |  6.93 |
|    bulletin board   | 36.58 | 55.14 |
|        shower       |  0.17 |  0.22 |
|       radiator      | 35.86 | 49.69 |
|        glass        |  7.62 |  8.74 |
|        clock        | 15.35 |  21.4 |
|         flag        | 46.08 | 60.34 |
+---------------------+-------+-------+
10/06 10:24:57 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 75.7900  mIoU: 40.9600  mAcc: 55.5200  data_time: 0.0050  time: 1.2902
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
10/06 10:27:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1311460686
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1311460686
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 10:27:02 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/pixelate'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 10:27:49,963 - mmseg - INFO - using core type: DCNv3
2024-10-06 10:27:49,963 - mmseg - INFO - using activation layer: GELU
2024-10-06 10:27:49,963 - mmseg - INFO - using main norm layer: LN
2024-10-06 10:27:49,963 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 10:27:49,963 - mmseg - INFO - level2_post_norm: False
2024-10-06 10:27:49,963 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 10:27:49,963 - mmseg - INFO - res_post_norm: False
2024-10-06 10:27:49,963 - mmseg - INFO - use_dcn_v4_op: False
10/06 10:28:02 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 10:28:02 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 10:28:05 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 10:28:09 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 10:30:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:18:47  time: 0.4860  data_time: 0.0044  memory: 21922  
10/06 10:30:35 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:46:20  time: 0.6013  data_time: 0.0017  memory: 15329  
10/06 10:30:50 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:33:12  time: 0.2788  data_time: 0.0017  memory: 11667  
10/06 10:31:12 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:25  time: 0.3832  data_time: 0.0017  memory: 15333  
10/06 10:31:33 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:23:48  time: 0.2283  data_time: 0.0017  memory: 15306  
10/06 10:31:51 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:20:55  time: 0.1158  data_time: 0.0018  memory: 15338  
10/06 10:32:10 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:56  time: 0.2564  data_time: 0.0016  memory: 15346  
10/06 10:32:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:08  time: 0.2614  data_time: 0.0016  memory: 15309  
10/06 10:32:35 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:15  time: 0.2122  data_time: 0.0015  memory: 10302  
10/06 10:32:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:13:42  time: 0.1094  data_time: 0.0016  memory: 11649  
10/06 10:32:52 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:26  time: 0.2644  data_time: 0.0018  memory: 10676  
10/06 10:33:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:20  time: 0.2636  data_time: 0.0017  memory: 10485  
10/06 10:33:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:30  time: 0.2993  data_time: 0.0015  memory: 11697  
10/06 10:33:27 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:50  time: 0.1182  data_time: 0.0018  memory: 15344  
10/06 10:33:43 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:16  time: 0.6101  data_time: 0.0016  memory: 11701  
10/06 10:33:49 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:30  time: 0.1093  data_time: 0.0017  memory: 10487  
10/06 10:33:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:48  time: 0.1120  data_time: 0.0018  memory: 1477  
10/06 10:34:04 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:13  time: 0.2031  data_time: 0.0015  memory: 9741  
10/06 10:34:18 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:48  time: 0.3729  data_time: 0.0017  memory: 11651  
10/06 10:34:30 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:21  time: 0.1053  data_time: 0.0017  memory: 11612  
10/06 10:34:43 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:56  time: 0.4536  data_time: 0.0016  memory: 11701  
10/06 10:34:54 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:31  time: 0.1074  data_time: 0.0016  memory: 11669  
10/06 10:35:02 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:05  time: 0.2960  data_time: 0.0041  memory: 11656  
10/06 10:35:08 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:39  time: 0.1091  data_time: 0.0017  memory: 2651  
10/06 10:35:17 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:16  time: 0.2336  data_time: 0.0016  memory: 15334  
10/06 10:35:22 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:53  time: 0.1107  data_time: 0.0017  memory: 1480  
10/06 10:35:28 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:31  time: 0.1021  data_time: 0.0016  memory: 8056  
10/06 10:35:40 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:13  time: 0.2933  data_time: 0.0015  memory: 11681  
10/06 10:35:49 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:54  time: 0.2574  data_time: 0.0016  memory: 9742  
10/06 10:35:54 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:35  time: 0.1019  data_time: 0.0016  memory: 1478  
10/06 10:36:02 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:17  time: 0.1143  data_time: 0.0016  memory: 11422  
10/06 10:36:07 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:59  time: 0.1073  data_time: 0.0017  memory: 1476  
10/06 10:36:18 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:43  time: 0.0995  data_time: 0.0015  memory: 15346  
10/06 10:36:28 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:27  time: 0.1106  data_time: 0.0018  memory: 9929  
10/06 10:36:36 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:12  time: 0.1108  data_time: 0.0016  memory: 11052  
10/06 10:36:43 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:57  time: 0.1111  data_time: 0.0017  memory: 8427  
10/06 10:36:48 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:42  time: 0.1098  data_time: 0.0018  memory: 1424  
10/06 10:36:55 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:27  time: 0.1074  data_time: 0.0017  memory: 5786  
10/06 10:37:04 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1060  data_time: 0.0016  memory: 11659  
10/06 10:37:13 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0987  data_time: 0.0015  memory: 9367  
10/06 10:37:14 - mmengine - INFO - per class results:
10/06 10:37:14 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 78.38 | 87.47 |
|       building      | 82.52 | 92.97 |
|         sky         | 94.36 | 97.24 |
|        floor        | 81.51 | 90.96 |
|         tree        | 74.46 | 88.36 |
|       ceiling       | 84.53 | 92.98 |
|         road        | 83.29 |  89.1 |
|         bed         | 89.21 | 96.34 |
|      windowpane     | 62.55 | 77.55 |
|        grass        | 65.26 | 82.76 |
|       cabinet       | 59.54 | 71.56 |
|       sidewalk      | 65.55 |  83.7 |
|        person       | 79.43 | 88.71 |
|        earth        | 37.31 | 48.41 |
|         door        | 54.77 | 70.46 |
|        table        | 61.15 |  78.2 |
|       mountain      | 61.66 | 73.58 |
|        plant        | 52.07 | 64.99 |
|       curtain       |  74.2 | 88.42 |
|        chair        | 56.93 | 69.07 |
|         car         | 82.94 | 90.88 |
|        water        | 56.18 |  68.7 |
|       painting      | 71.88 | 87.57 |
|         sofa        | 70.81 | 88.19 |
|        shelf        | 45.84 | 65.58 |
|        house        | 49.48 | 74.58 |
|         sea         | 62.67 | 83.84 |
|        mirror       | 67.55 | 74.27 |
|         rug         | 60.73 | 69.58 |
|        field        | 27.37 | 44.49 |
|       armchair      | 45.98 | 63.53 |
|         seat        | 58.56 |  75.9 |
|        fence        | 46.29 | 59.19 |
|         desk        | 48.01 | 60.23 |
|         rock        | 49.24 | 72.59 |
|       wardrobe      | 52.38 | 73.62 |
|         lamp        | 61.18 | 75.04 |
|       bathtub       | 78.44 | 85.57 |
|       railing       |  34.7 | 46.93 |
|       cushion       | 61.81 | 75.92 |
|         base        | 34.74 | 46.56 |
|         box         | 26.95 | 34.88 |
|        column       | 49.64 | 63.71 |
|      signboard      | 36.53 | 46.32 |
|   chest of drawers  | 34.94 | 60.32 |
|       counter       |  29.5 | 36.94 |
|         sand        | 57.85 | 75.65 |
|         sink        | 70.46 | 77.79 |
|      skyscraper     | 51.26 |  61.5 |
|      fireplace      | 73.76 | 89.01 |
|     refrigerator    | 74.49 | 83.99 |
|      grandstand     |  43.5 | 82.19 |
|         path        | 26.12 | 36.52 |
|        stairs       | 27.72 | 37.87 |
|        runway       | 72.17 | 96.43 |
|         case        |  59.9 | 83.45 |
|      pool table     | 91.81 | 96.17 |
|        pillow       | 55.91 | 62.87 |
|     screen door     | 71.01 | 82.62 |
|       stairway      | 34.79 | 44.32 |
|        river        | 14.32 | 29.35 |
|        bridge       | 59.31 | 72.78 |
|       bookcase      | 41.08 | 64.78 |
|        blind        | 43.59 | 52.74 |
|     coffee table    | 59.19 | 81.81 |
|        toilet       | 83.25 | 89.25 |
|        flower       | 39.27 | 53.17 |
|         book        | 47.96 | 65.76 |
|         hill        | 14.79 | 20.44 |
|        bench        |  53.1 | 60.23 |
|      countertop     | 53.52 | 68.73 |
|        stove        | 77.62 | 87.48 |
|         palm        | 49.99 | 67.15 |
|    kitchen island   | 36.79 | 77.98 |
|       computer      | 75.65 | 90.24 |
|     swivel chair    | 49.02 |  64.6 |
|         boat        | 72.41 | 80.75 |
|         bar         | 46.74 | 66.91 |
|    arcade machine   | 85.81 | 97.17 |
|        hovel        | 24.48 |  24.9 |
|         bus         | 89.35 | 95.72 |
|        towel        | 69.69 | 78.85 |
|        light        | 51.08 | 56.91 |
|        truck        | 35.94 | 53.23 |
|        tower        | 33.46 |  66.4 |
|      chandelier     | 65.07 | 82.82 |
|        awning       | 26.77 | 29.64 |
|     streetlight     | 25.01 | 31.92 |
|        booth        | 43.53 | 52.82 |
| television receiver | 72.25 | 82.95 |
|       airplane      | 64.15 |  72.6 |
|      dirt track     | 27.98 | 35.36 |
|       apparel       | 40.44 |  50.9 |
|         pole        | 16.57 | 21.17 |
|         land        |  2.64 |  4.07 |
|      bannister      | 15.29 | 19.63 |
|      escalator      | 54.33 | 82.98 |
|       ottoman       | 51.23 | 66.51 |
|        bottle       | 38.04 | 60.25 |
|        buffet       | 44.44 | 54.45 |
|        poster       | 27.22 | 37.51 |
|        stage        | 16.03 | 29.41 |
|         van         | 41.44 | 54.67 |
|         ship        | 75.03 | 90.52 |
|       fountain      | 28.42 | 28.77 |
|    conveyer belt    | 80.53 | 88.86 |
|        canopy       | 33.71 | 48.66 |
|        washer       | 72.64 | 79.01 |
|      plaything      | 25.35 | 37.98 |
|    swimming pool    | 51.92 | 67.56 |
|        stool        | 43.11 | 50.67 |
|        barrel       | 57.21 | 95.11 |
|        basket       | 27.22 | 35.02 |
|      waterfall      | 61.37 | 84.94 |
|         tent        | 92.68 | 98.95 |
|         bag         | 10.03 | 10.97 |
|       minibike      | 70.67 | 81.08 |
|        cradle       | 81.36 | 96.64 |
|         oven        | 38.88 | 58.02 |
|         ball        |  49.7 | 63.81 |
|         food        | 56.94 | 65.12 |
|         step        | 13.54 | 14.94 |
|         tank        | 59.83 |  65.9 |
|      trade name     | 23.95 |  26.5 |
|      microwave      | 75.45 | 85.67 |
|         pot         |  50.8 | 61.42 |
|        animal       | 61.11 | 62.39 |
|       bicycle       | 54.36 | 69.09 |
|         lake        | 42.72 | 63.89 |
|      dishwasher     | 66.67 | 75.85 |
|        screen       | 57.39 | 85.05 |
|       blanket       |  13.7 | 14.37 |
|      sculpture      | 68.35 | 79.92 |
|         hood        |  56.0 | 67.54 |
|        sconce       | 46.46 | 58.37 |
|         vase        | 35.95 | 45.92 |
|    traffic light    | 29.23 | 44.93 |
|         tray        |  6.12 |  6.69 |
|        ashcan       | 38.64 | 48.75 |
|         fan         | 60.79 | 75.52 |
|         pier        | 38.17 | 49.35 |
|      crt screen     |  6.47 | 21.88 |
|        plate        | 51.74 | 69.53 |
|       monitor       | 13.28 | 14.03 |
|    bulletin board   |  52.6 | 68.65 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 59.16 | 68.36 |
|        glass        | 11.54 | 12.32 |
|        clock        | 36.05 | 42.22 |
|         flag        | 55.21 | 60.04 |
+---------------------+-------+-------+
10/06 10:37:14 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.5300  mIoU: 51.1700  mAcc: 63.6400  data_time: 0.0030  time: 0.2722
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
10/06 10:38:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1864435301
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1864435301
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

10/06 10:38:46 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
crop_size = (
    640,
    640,
)
data = dict(
    samples_per_gpu=2,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            2560,
            640,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            640,
            640,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            640,
            640,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                2560,
                640,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=640,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        channels=160,
        core_op='DCNv3',
        depths=[
            5,
            5,
            22,
            5,
        ],
        drop_path_rate=0.4,
        groups=[
            10,
            20,
            40,
            80,
        ],
        init_cfg=dict(
            checkpoint=
            'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth',
            type='Pretrained'),
        layer_scale=1.0,
        mlp_ratio=4.0,
        norm_layer='LN',
        offset_scale=2.0,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        post_norm=True,
        type='InternImage',
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            640,
            640,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            160,
            320,
            640,
            1280,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            5,
            5,
            22,
            5,
        ],
        layer_decay_rate=0.94,
        num_layers=37,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_l_22k_192to384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            2560,
            640,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        2560,
        640,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        640,
        640,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/internimage/upernet_internimage_l_640_160k_ade20k/jpeg_compression'

/pfs/work7/workspace/scratch/ma_mkacar-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
2024-10-06 10:39:26,548 - mmseg - INFO - using core type: DCNv3
2024-10-06 10:39:26,548 - mmseg - INFO - using activation layer: GELU
2024-10-06 10:39:26,548 - mmseg - INFO - using main norm layer: LN
2024-10-06 10:39:26,548 - mmseg - INFO - using dpr: linear, 0.4
2024-10-06 10:39:26,548 - mmseg - INFO - level2_post_norm: False
2024-10-06 10:39:26,548 - mmseg - INFO - level2_post_norm_block_ids: None
2024-10-06 10:39:26,549 - mmseg - INFO - res_post_norm: False
2024-10-06 10:39:26,549 - mmseg - INFO - use_dcn_v4_op: False
10/06 10:39:37 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
10/06 10:39:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
10/06 10:39:40 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 10:39:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/internimage/upernet_internimage_l_640_160k_ade20k.pth
10/06 10:41:25 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:05:50  time: 0.4697  data_time: 0.0017  memory: 21922  
10/06 10:41:51 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:40:09  time: 0.6079  data_time: 0.0018  memory: 15329  
10/06 10:42:06 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:29:10  time: 0.2831  data_time: 0.0017  memory: 11667  
10/06 10:42:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:24:32  time: 0.3908  data_time: 0.0017  memory: 15333  
10/06 10:42:50 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:21:45  time: 0.2355  data_time: 0.0017  memory: 15306  
10/06 10:43:08 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:17  time: 0.1217  data_time: 0.0018  memory: 15338  
10/06 10:43:28 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:35  time: 0.2635  data_time: 0.0017  memory: 15346  
10/06 10:43:44 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:16:00  time: 0.2693  data_time: 0.0016  memory: 15309  
10/06 10:43:53 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:18  time: 0.2177  data_time: 0.0016  memory: 10302  
10/06 10:44:02 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:53  time: 0.1157  data_time: 0.0016  memory: 11649  
10/06 10:44:11 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:11:44  time: 0.2716  data_time: 0.0017  memory: 10676  
10/06 10:44:20 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:10:43  time: 0.2701  data_time: 0.0017  memory: 10485  
10/06 10:44:32 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:09:59  time: 0.3066  data_time: 0.0023  memory: 11697  
10/06 10:44:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:27  time: 0.1242  data_time: 0.0018  memory: 15344  
10/06 10:45:06 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:08:55  time: 0.6155  data_time: 0.0016  memory: 11701  
10/06 10:45:13 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:13  time: 0.1167  data_time: 0.0017  memory: 10487  
10/06 10:45:19 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:32  time: 0.1185  data_time: 0.0018  memory: 1477  
10/06 10:45:28 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:00  time: 0.2101  data_time: 0.0016  memory: 9741  
10/06 10:45:43 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:36  time: 0.3778  data_time: 0.0017  memory: 11651  
10/06 10:45:53 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:08  time: 0.1123  data_time: 0.0016  memory: 11612  
10/06 10:46:05 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:44  time: 0.4604  data_time: 0.0016  memory: 11701  
10/06 10:46:20 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:23  time: 0.1139  data_time: 0.0016  memory: 11669  
10/06 10:46:29 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:58  time: 0.2452  data_time: 0.0016  memory: 11656  
10/06 10:46:35 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:33  time: 0.1162  data_time: 0.0016  memory: 2651  
10/06 10:46:44 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:11  time: 0.2387  data_time: 0.0016  memory: 15334  
10/06 10:46:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:48  time: 0.1184  data_time: 0.0016  memory: 1480  
10/06 10:46:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:27  time: 0.1172  data_time: 0.0030  memory: 8056  
10/06 10:47:08 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:10  time: 0.3010  data_time: 0.0016  memory: 11681  
10/06 10:47:17 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:51  time: 0.2651  data_time: 0.0016  memory: 9742  
10/06 10:47:23 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:32  time: 0.1075  data_time: 0.0016  memory: 1478  
10/06 10:47:30 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:15  time: 0.1221  data_time: 0.0016  memory: 11422  
10/06 10:47:40 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:58  time: 0.1135  data_time: 0.0018  memory: 1476  
10/06 10:47:51 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:43  time: 0.1063  data_time: 0.0015  memory: 15346  
10/06 10:48:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:27  time: 0.1164  data_time: 0.0018  memory: 9929  
10/06 10:48:10 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:12  time: 0.1176  data_time: 0.0015  memory: 11052  
10/06 10:48:17 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:56  time: 0.1200  data_time: 0.0018  memory: 8427  
10/06 10:48:23 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:42  time: 0.1174  data_time: 0.0018  memory: 1424  
10/06 10:48:30 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:27  time: 0.1152  data_time: 0.0016  memory: 5786  
10/06 10:48:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:13  time: 0.1122  data_time: 0.0016  memory: 11659  
10/06 10:48:49 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1045  data_time: 0.0015  memory: 9367  
10/06 10:48:50 - mmengine - INFO - per class results:
10/06 10:48:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 77.59 | 88.06 |
|       building      | 82.96 | 92.86 |
|         sky         | 94.11 | 97.25 |
|        floor        | 80.84 | 90.85 |
|         tree        |  73.7 | 88.76 |
|       ceiling       | 83.35 | 91.99 |
|         road        |  82.8 |  88.3 |
|         bed         | 88.85 | 95.85 |
|      windowpane     | 62.37 | 76.04 |
|        grass        | 68.23 | 83.23 |
|       cabinet       | 59.69 | 71.36 |
|       sidewalk      | 63.85 | 83.34 |
|        person       | 79.73 | 88.74 |
|        earth        | 36.47 | 54.47 |
|         door        | 51.89 | 67.97 |
|        table        | 61.12 |  77.1 |
|       mountain      | 58.62 | 71.26 |
|        plant        | 50.33 | 57.19 |
|       curtain       | 73.92 | 87.16 |
|        chair        | 56.12 | 65.68 |
|         car         | 84.27 | 92.07 |
|        water        | 58.41 | 70.48 |
|       painting      | 72.52 | 86.83 |
|         sofa        | 71.14 | 86.55 |
|        shelf        |  44.9 | 64.69 |
|        house        | 51.69 | 73.66 |
|         sea         |  64.6 | 83.29 |
|        mirror       | 67.62 | 74.78 |
|         rug         | 55.48 | 63.07 |
|        field        | 34.45 | 40.89 |
|       armchair      | 48.27 | 68.36 |
|         seat        | 57.55 | 76.93 |
|        fence        | 45.86 | 57.05 |
|         desk        | 49.29 | 66.78 |
|         rock        | 48.87 | 70.89 |
|       wardrobe      | 50.25 | 72.93 |
|         lamp        | 61.93 | 74.39 |
|       bathtub       | 79.08 | 85.28 |
|       railing       | 33.58 | 42.71 |
|       cushion       | 62.11 | 76.63 |
|         base        | 38.45 | 48.09 |
|         box         | 26.73 |  33.4 |
|        column       | 50.74 | 63.91 |
|      signboard      | 37.17 | 46.07 |
|   chest of drawers  | 36.59 |  66.5 |
|       counter       | 30.73 | 37.49 |
|         sand        | 49.68 |  68.4 |
|         sink        | 70.49 | 78.09 |
|      skyscraper     | 59.56 | 74.11 |
|      fireplace      | 73.85 | 90.72 |
|     refrigerator    | 77.65 | 90.11 |
|      grandstand     | 45.79 | 73.75 |
|         path        | 21.99 | 35.38 |
|        stairs       | 18.17 | 23.73 |
|        runway       | 71.88 | 94.94 |
|         case        | 60.84 | 81.61 |
|      pool table     | 90.13 | 96.13 |
|        pillow       | 52.45 | 57.61 |
|     screen door     |  69.7 | 80.39 |
|       stairway      |  36.1 | 54.71 |
|        river        |  8.79 |  19.9 |
|        bridge       | 51.96 | 63.41 |
|       bookcase      | 37.78 | 61.99 |
|        blind        |  40.1 | 46.66 |
|     coffee table    | 57.49 | 80.67 |
|        toilet       | 82.35 |  89.2 |
|        flower       | 43.87 | 55.53 |
|         book        | 49.23 | 66.48 |
|         hill        | 12.46 | 17.32 |
|        bench        | 51.83 | 60.08 |
|      countertop     | 53.06 | 68.25 |
|        stove        | 77.67 | 89.58 |
|         palm        | 49.57 | 69.22 |
|    kitchen island   | 33.42 | 65.52 |
|       computer      | 75.04 | 88.12 |
|     swivel chair    | 50.79 |  63.5 |
|         boat        | 59.73 | 79.34 |
|         bar         | 48.03 | 69.67 |
|    arcade machine   | 86.58 |  96.4 |
|        hovel        | 37.62 | 41.58 |
|         bus         | 89.43 | 96.23 |
|        towel        | 65.62 | 74.11 |
|        light        | 47.36 | 51.69 |
|        truck        | 37.67 | 52.76 |
|        tower        | 34.97 | 74.13 |
|      chandelier     | 67.34 | 82.35 |
|        awning       | 30.32 |  33.2 |
|     streetlight     | 23.92 | 29.98 |
|        booth        | 48.25 | 68.41 |
| television receiver | 71.03 | 80.35 |
|       airplane      | 61.27 |  74.3 |
|      dirt track     | 31.49 | 46.63 |
|       apparel       |  38.8 | 47.71 |
|         pole        | 17.57 | 22.64 |
|         land        |  2.21 |  4.78 |
|      bannister      | 14.97 | 20.48 |
|      escalator      | 52.07 | 81.55 |
|       ottoman       | 49.68 | 67.75 |
|        bottle       | 36.28 |  58.1 |
|        buffet       | 46.54 | 58.42 |
|        poster       | 27.71 | 38.39 |
|        stage        | 14.52 | 26.39 |
|         van         |  47.8 | 63.57 |
|         ship        | 77.48 | 96.51 |
|       fountain      | 24.29 | 24.68 |
|    conveyer belt    |  74.7 | 92.87 |
|        canopy       |  35.2 | 56.17 |
|        washer       | 76.77 | 81.82 |
|      plaything      | 39.69 | 53.24 |
|    swimming pool    |  53.0 | 66.94 |
|        stool        | 43.55 | 50.26 |
|        barrel       | 62.13 | 84.83 |
|        basket       | 33.83 | 44.68 |
|      waterfall      | 72.84 | 88.37 |
|         tent        | 89.63 | 99.27 |
|         bag         |  11.6 | 12.79 |
|       minibike      | 69.39 | 79.67 |
|        cradle       | 76.78 |  96.1 |
|         oven        | 43.94 |  57.0 |
|         ball        | 51.48 | 65.04 |
|         food        | 53.23 | 60.04 |
|         step        | 10.68 | 11.92 |
|         tank        | 60.98 | 65.97 |
|      trade name     | 20.14 | 22.83 |
|      microwave      | 79.49 | 90.04 |
|         pot         | 48.59 | 57.89 |
|        animal       | 63.34 | 65.04 |
|       bicycle       |  54.6 | 72.21 |
|         lake        | 56.83 | 63.45 |
|      dishwasher     | 60.38 | 67.84 |
|        screen       | 59.45 | 84.12 |
|       blanket       | 11.93 | 12.41 |
|      sculpture      | 61.47 | 78.28 |
|         hood        | 49.29 |  60.6 |
|        sconce       | 42.92 | 51.42 |
|         vase        | 36.86 | 44.76 |
|    traffic light    | 27.55 | 39.91 |
|         tray        |  8.01 |  8.93 |
|        ashcan       | 37.19 |  47.5 |
|         fan         |  57.6 | 76.16 |
|         pier        | 37.29 | 58.85 |
|      crt screen     |  3.46 |  11.3 |
|        plate        | 54.83 | 69.58 |
|       monitor       |  8.89 |  9.33 |
|    bulletin board   | 44.12 | 56.14 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 55.81 |  63.8 |
|        glass        | 11.13 | 11.71 |
|        clock        | 35.23 |  39.8 |
|         flag        | 61.42 | 66.87 |
+---------------------+-------+-------+
10/06 10:48:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 83.3100  mIoU: 51.0700  mAcc: 63.3700  data_time: 0.0032  time: 0.2723
Finished processing corruption type: jpeg_compression
Runtime: 1728204548

============================= JOB FEEDBACK =============================

NodeName=uc2n487
Job ID: 24369578
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 08:03:00
CPU Efficiency: 5.14% of 6-12:29:04 core-walltime
Job Wall-clock time: 09:46:49
Memory Utilized: 3.72 GB
Memory Efficiency: 3.72% of 100.00 GB
