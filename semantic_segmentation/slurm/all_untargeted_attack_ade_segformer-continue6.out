Started at Wed Jul 17 00:09:35 CEST 2024
07/17 00:10:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 450305346
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 450305346
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/17 00:10:24 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=4,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B5'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
07/17 00:10:51 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/17 00:10:51 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/17 00:10:52 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
07/17 00:10:53 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
07/17 00:17:49 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:30:21  time: 6.2240  data_time: 0.0021  memory: 26887  
07/17 00:22:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 3:49:41  time: 6.6975  data_time: 0.0046  memory: 28387  
07/17 00:27:32 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:25:20  time: 5.6160  data_time: 0.0019  memory: 27017  
07/17 00:32:43 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:16:28  time: 6.2003  data_time: 0.0019  memory: 27184  
07/17 00:37:42 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:07:37  time: 5.6660  data_time: 0.0017  memory: 28117  
07/17 00:42:37 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 2:59:47  time: 5.4197  data_time: 0.0019  memory: 28220  
07/17 00:47:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:53:27  time: 5.5141  data_time: 0.0018  memory: 28125  
07/17 00:52:32 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:46:32  time: 5.7188  data_time: 0.0044  memory: 28225  
07/17 00:56:51 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:38:16  time: 5.2936  data_time: 0.0017  memory: 26761  
07/17 01:01:20 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:31:19  time: 5.0990  data_time: 0.0016  memory: 25071  
07/17 01:06:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:25:31  time: 5.7705  data_time: 0.0017  memory: 28168  
07/17 01:10:41 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:19:29  time: 5.7107  data_time: 0.0031  memory: 28269  
07/17 01:15:15 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:13:40  time: 5.5747  data_time: 0.0169  memory: 27052  
07/17 01:20:14 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:08:45  time: 5.3944  data_time: 0.0018  memory: 27964  
07/17 01:25:01 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:03:31  time: 6.6744  data_time: 0.0016  memory: 27006  
07/17 01:29:22 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:57:41  time: 5.3430  data_time: 0.0017  memory: 27029  
07/17 01:33:51 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:52:14  time: 5.4099  data_time: 0.0018  memory: 11067  
07/17 01:38:08 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:46:37  time: 5.1162  data_time: 0.0015  memory: 26259  
07/17 01:42:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:41:39  time: 5.6799  data_time: 0.0017  memory: 28020  
07/17 01:47:20 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:36:25  time: 5.1407  data_time: 0.0015  memory: 28046  
07/17 01:52:01 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:31:28  time: 6.1360  data_time: 0.0016  memory: 27622  
07/17 01:56:33 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:26:26  time: 5.0765  data_time: 0.0016  memory: 27048  
07/17 02:00:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:21:18  time: 5.3240  data_time: 0.0016  memory: 25770  
07/17 02:05:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:16:21  time: 5.3203  data_time: 0.0016  memory: 13085  
07/17 02:09:44 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:11:17  time: 4.9942  data_time: 0.0016  memory: 27182  
07/17 02:13:36 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:06:04  time: 4.8502  data_time: 0.0023  memory: 11210  
07/17 02:17:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:01:00  time: 4.5777  data_time: 0.0016  memory: 24853  
07/17 02:22:06 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:56:13  time: 5.6980  data_time: 0.0053  memory: 27592  
07/17 02:26:19 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:51:21  time: 5.5189  data_time: 0.0015  memory: 26289  
07/17 02:30:30 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:46:31  time: 4.8400  data_time: 0.0014  memory: 11062  
07/17 02:34:53 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:41:47  time: 5.0860  data_time: 0.0015  memory: 27830  
07/17 02:39:07 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:37:03  time: 5.1190  data_time: 0.0017  memory: 10966  
07/17 02:43:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:32:21  time: 4.8191  data_time: 0.0014  memory: 28067  
07/17 02:47:52 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:27:41  time: 5.1582  data_time: 0.0017  memory: 26513  
07/17 02:52:17 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:23:03  time: 5.0374  data_time: 0.0014  memory: 27515  
07/17 02:56:30 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:18:23  time: 5.3031  data_time: 0.0016  memory: 25070  
07/17 03:00:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:13:47  time: 5.2398  data_time: 0.0018  memory: 9784  
07/17 03:05:13 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:09:10  time: 4.9287  data_time: 0.0030  memory: 24318  
07/17 03:09:36 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:04:34  time: 5.0155  data_time: 0.0015  memory: 25545  
07/17 03:13:51 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 4.8120  data_time: 0.0014  memory: 25992  
07/17 03:13:51 - mmengine - INFO - per class results:
07/17 03:13:51 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 24.47 |  69.2 |
|       building      |  8.42 |  9.11 |
|         sky         | 38.36 | 58.53 |
|        floor        |  8.45 | 10.68 |
|         tree        |  13.8 |  45.5 |
|       ceiling       | 15.82 | 21.82 |
|         road        |  1.93 |  1.97 |
|         bed         |  0.23 |  0.23 |
|      windowpane     |  1.86 |  3.81 |
|        grass        |  1.09 |  1.18 |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.01 |  0.01 |
|        person       |  18.9 | 27.35 |
|        earth        |  4.1  | 30.55 |
|         door        |  2.73 |  6.94 |
|        table        |  3.89 |  4.13 |
|       mountain      |  7.74 | 22.34 |
|        plant        |  0.32 |  0.52 |
|       curtain       |  0.68 |  0.74 |
|        chair        |  2.31 |  2.52 |
|         car         | 21.32 | 33.16 |
|        water        |  3.17 |  3.43 |
|       painting      |  1.04 |  1.14 |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.26 |  0.28 |
|        house        | 11.27 | 30.91 |
|         sea         |  0.51 |  0.52 |
|        mirror       |  0.0  |  0.0  |
|         rug         |  0.16 |  0.16 |
|        field        |  1.75 |  2.93 |
|       armchair      |  0.11 |  0.11 |
|         seat        |  5.82 |  6.3  |
|        fence        |  1.99 |  2.05 |
|         desk        |  0.0  |  0.0  |
|         rock        |  0.39 |  0.42 |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  1.11 |  1.13 |
|       bathtub       |  0.26 |  0.26 |
|       railing       |  8.51 | 12.39 |
|       cushion       |  0.17 |  0.17 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  3.17 |  4.03 |
|      signboard      |  0.0  |  0.0  |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.0  |  0.0  |
|         sink        |  3.1  |  3.36 |
|      skyscraper     |  2.82 |  2.97 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.16 |  0.18 |
|        stairs       |  2.21 |  2.41 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  1.57 |  1.57 |
|        pillow       |  0.0  |  0.0  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  3.43 |  6.85 |
|        river        |  0.0  |  0.0  |
|        bridge       |  3.15 |  3.41 |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.11 |  0.18 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  4.74 |  5.23 |
|        stove        |  0.02 |  0.02 |
|         palm        |  0.77 |  0.77 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.05 |  0.05 |
|         boat        |  0.0  |  0.0  |
|         bar         |  9.47 | 10.93 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         | 31.16 | 34.42 |
|        towel        |  0.0  |  0.0  |
|        light        |  0.03 |  0.03 |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.31 |  0.32 |
|      chandelier     |  0.08 |  0.08 |
|        awning       |  0.22 |  0.22 |
|     streetlight     |  0.14 |  0.14 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.09 |  0.1  |
|         land        |  0.89 |  8.85 |
|      bannister      |  6.72 | 10.26 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  1.06 |  1.06 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  5.61 |  6.35 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.0  |  0.0  |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.39 |  0.39 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  8.72 |  8.75 |
|       bicycle       |  1.98 |  2.99 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.03 |  0.03 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.01 |  0.02 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/17 03:13:51 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 24.7600  mIoU: 2.0300  mAcc: 3.5200  data_time: 0.0033  time: 5.4879
07/17 03:15:35 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 108899157
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 108899157
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/17 03:15:35 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05,
        epsilon=8,
        iterations=20,
        name='segpgd',
        norm='linf'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B5'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
07/17 03:16:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/17 03:16:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/17 03:16:40 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
07/17 03:16:42 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
07/17 03:24:10 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:51:22  time: 6.6145  data_time: 0.0020  memory: 26887  
07/17 03:29:37 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:05:40  time: 7.1247  data_time: 0.0022  memory: 28387  
07/17 03:34:32 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:39:56  time: 5.9279  data_time: 0.0020  memory: 27017  
07/17 03:39:44 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:27:20  time: 6.1959  data_time: 0.0019  memory: 27184  
07/17 03:44:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:16:09  time: 5.6193  data_time: 0.0018  memory: 28117  
07/17 03:49:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:06:45  time: 5.4014  data_time: 0.0019  memory: 28220  
07/17 03:54:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:59:03  time: 5.4793  data_time: 0.0018  memory: 28125  
07/17 03:59:39 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:51:49  time: 5.8017  data_time: 0.0017  memory: 28225  
07/17 04:03:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:42:22  time: 5.0215  data_time: 0.0017  memory: 26761  
07/17 04:08:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:34:16  time: 4.8753  data_time: 0.0017  memory: 25071  
07/17 04:12:40 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:27:34  time: 5.8759  data_time: 0.0017  memory: 28168  
07/17 04:17:12 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:21:10  time: 5.7573  data_time: 0.0018  memory: 28269  
07/17 04:21:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:15:27  time: 6.1278  data_time: 0.0090  memory: 27052  
07/17 04:26:52 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:10:17  time: 5.4482  data_time: 0.0029  memory: 27964  
07/17 04:31:41 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:04:57  time: 6.7011  data_time: 0.0015  memory: 27006  
07/17 04:36:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:58:58  time: 5.3760  data_time: 0.0017  memory: 27029  
07/17 04:40:30 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:53:22  time: 5.3799  data_time: 0.0017  memory: 11067  
07/17 04:44:44 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:47:35  time: 5.0538  data_time: 0.0014  memory: 26259  
07/17 04:49:26 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:42:29  time: 5.5926  data_time: 0.0015  memory: 28020  
07/17 04:53:50 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:37:07  time: 5.1013  data_time: 0.0016  memory: 28046  
07/17 04:58:36 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:32:11  time: 6.1762  data_time: 0.0016  memory: 27622  
07/17 05:03:16 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:27:11  time: 5.1859  data_time: 0.0016  memory: 27048  
07/17 05:07:39 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:22:00  time: 5.3922  data_time: 0.0015  memory: 25770  
07/17 05:12:06 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:16:55  time: 5.1396  data_time: 0.0016  memory: 13085  
07/17 05:16:27 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:11:50  time: 5.3074  data_time: 0.0015  memory: 27182  
07/17 05:20:34 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:06:41  time: 5.2175  data_time: 0.0015  memory: 11210  
07/17 05:24:54 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:01:43  time: 4.9183  data_time: 0.0035  memory: 24853  
07/17 05:29:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:56:55  time: 5.6977  data_time: 0.0016  memory: 27592  
07/17 05:33:44 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:51:58  time: 5.5241  data_time: 0.0016  memory: 26289  
07/17 05:37:58 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:47:05  time: 4.9307  data_time: 0.0016  memory: 11062  
07/17 05:42:23 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:42:17  time: 5.1336  data_time: 0.0016  memory: 27830  
07/17 05:46:35 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:37:28  time: 5.1889  data_time: 0.0018  memory: 10966  
07/17 05:50:53 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:32:42  time: 4.9079  data_time: 0.0015  memory: 28067  
07/17 05:55:15 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:27:58  time: 4.9481  data_time: 0.0017  memory: 26513  
07/17 05:59:33 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:23:15  time: 4.8472  data_time: 0.0015  memory: 27515  
07/17 06:03:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:18:32  time: 5.3334  data_time: 0.0017  memory: 25070  
07/17 06:08:04 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:13:53  time: 5.3276  data_time: 0.0017  memory: 9784  
07/17 06:12:15 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:09:14  time: 5.0187  data_time: 0.0015  memory: 24318  
07/17 06:16:43 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:04:36  time: 5.1339  data_time: 0.0021  memory: 25545  
07/17 06:21:01 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 4.9029  data_time: 0.0028  memory: 25992  
07/17 06:21:02 - mmengine - INFO - per class results:
07/17 06:21:02 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 21.03 | 57.96 |
|       building      |  0.0  |  0.0  |
|         sky         |  4.0  |  4.13 |
|        floor        |  0.01 |  0.01 |
|         tree        |  0.43 |  0.46 |
|       ceiling       |  0.0  |  0.0  |
|         road        |  0.0  |  0.0  |
|         bed         |  0.0  |  0.0  |
|      windowpane     |  1.54 | 23.38 |
|        grass        |  0.0  |  0.0  |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       |  0.0  |  0.0  |
|        earth        |  0.03 |  0.03 |
|         door        |  0.54 |  0.86 |
|        table        |  0.0  |  0.0  |
|       mountain      |  0.0  |  0.0  |
|        plant        |  1.9  | 39.53 |
|       curtain       |  0.0  |  0.0  |
|        chair        |  0.0  |  0.0  |
|         car         |  0.0  |  0.0  |
|        water        |  0.0  |  0.0  |
|       painting      |  0.0  |  0.0  |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  0.0  |  0.0  |
|         sea         |  0.0  |  0.0  |
|        mirror       |  0.0  |  0.0  |
|         rug         |  0.0  |  0.0  |
|        field        |  0.0  |  0.0  |
|       armchair      |  0.0  |  0.0  |
|         seat        |  0.0  |  0.0  |
|        fence        |  0.0  |  0.0  |
|         desk        |  0.0  |  0.0  |
|         rock        |  0.0  |  0.0  |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.0  |  0.0  |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  0.0  |  0.0  |
|       cushion       |  0.0  |  0.0  |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.0  |  0.0  |
|      signboard      |  0.0  |  0.0  |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.0  |  0.0  |
|         sink        |  0.0  |  0.0  |
|      skyscraper     |  0.0  |  0.0  |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  0.0  |  0.0  |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.0  |  0.0  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.0  |  0.0  |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.0  |  0.0  |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.0  |  0.0  |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.0  |  0.0  |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.0  |  0.0  |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.0  |  0.0  |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
07/17 06:21:02 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 11.5900  mIoU: 0.2000  mAcc: 0.8400  data_time: 0.0033  time: 5.5292
07/17 06:22:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, Mar 21 2024, 16:24:04) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1855676322
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: None
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1855676322
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

07/17 06:22:54 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    attack_cfg=dict(
        alpha=3.92157e-05, epsilon=64, iterations=20, name='segpgd',
        norm='l2'),
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b5_20220624-658746d9.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            3,
            6,
            40,
            3,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0,
            reduction='none',
            type='CrossEntropyLoss',
            use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    perform_attack=True,
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../aa_workdir/ade/MIT-B5'

/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/ops_dcnv3/modules/dcnv3.py:20: UserWarning: Now, we support DCNv4 in InternImage.
  warnings.warn('Now, we support DCNv4 in InternImage.')
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
07/17 06:23:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
07/17 06:23:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/pfs/work7/workspace/scratch/ma_dschader-team_project_fss2024/benchmarking_robustness/semantic_segmentation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
07/17 06:23:55 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
07/17 06:23:57 - mmengine - INFO - Load checkpoint from ../aa_workdir/ade/MIT-B5/segformer_mit-b5_512x512_160k_ade20k_20210726_145235-94cedf59.pth
07/17 06:31:20 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:47:59  time: 6.5179  data_time: 0.0021  memory: 26887  
07/17 06:36:45 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:03:12  time: 7.0123  data_time: 0.0021  memory: 28387  
07/17 06:41:35 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:37:27  time: 5.8793  data_time: 0.0019  memory: 27017  
07/17 06:46:43 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:24:48  time: 6.1335  data_time: 0.0019  memory: 27184  
07/17 06:51:45 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:14:30  time: 5.7153  data_time: 0.0018  memory: 28117  
07/17 06:56:44 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:05:45  time: 5.7459  data_time: 0.0020  memory: 28220  
07/17 07:01:50 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 2:58:31  time: 5.5438  data_time: 0.0019  memory: 28125  
07/17 07:06:39 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 2:50:45  time: 5.7082  data_time: 0.0017  memory: 28225  
07/17 07:10:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:41:48  time: 5.3446  data_time: 0.0017  memory: 26761  
07/17 07:15:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:34:32  time: 5.2090  data_time: 0.0017  memory: 25071  
07/17 07:20:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:28:01  time: 5.7545  data_time: 0.0017  memory: 28168  
07/17 07:24:36 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:21:29  time: 5.6886  data_time: 0.0017  memory: 28269  
07/17 07:29:23 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:15:52  time: 6.7451  data_time: 0.0026  memory: 27052  
07/17 07:34:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:10:26  time: 5.2561  data_time: 0.0028  memory: 27964  
07/17 07:38:55 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:04:54  time: 6.7164  data_time: 0.0016  memory: 27006  
07/17 07:43:10 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 1:58:48  time: 5.3632  data_time: 0.0017  memory: 27029  
07/17 07:47:28 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 1:52:58  time: 5.0265  data_time: 0.0017  memory: 11068  
07/17 07:51:28 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 1:46:56  time: 4.7782  data_time: 0.0015  memory: 26259  
07/17 07:56:10 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:41:53  time: 6.0375  data_time: 0.0017  memory: 28020  
07/17 08:00:33 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:36:34  time: 5.0673  data_time: 0.0017  memory: 28046  
07/17 08:05:11 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:31:34  time: 6.1546  data_time: 0.0016  memory: 27622  
07/17 08:09:46 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:26:33  time: 5.1451  data_time: 0.0017  memory: 27048  
07/17 08:14:10 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:21:27  time: 5.4654  data_time: 0.0016  memory: 25770  
07/17 08:18:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:16:25  time: 5.0690  data_time: 0.0016  memory: 13089  
07/17 08:22:53 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:11:20  time: 5.2571  data_time: 0.0015  memory: 27182  
07/17 08:26:59 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:06:14  time: 5.0969  data_time: 0.0015  memory: 11210  
07/17 08:31:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:01:17  time: 4.9189  data_time: 0.0015  memory: 24853  
07/17 08:35:55 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:56:32  time: 5.6953  data_time: 0.0015  memory: 27592  
07/17 08:40:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:51:38  time: 5.5741  data_time: 0.0015  memory: 26289  
07/17 08:44:27 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:46:49  time: 4.9778  data_time: 0.0016  memory: 11062  
07/17 08:48:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:42:02  time: 5.1743  data_time: 0.0015  memory: 27830  
07/17 08:53:07 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:37:17  time: 5.5033  data_time: 0.0018  memory: 10964  
07/17 08:57:28 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:32:33  time: 4.8648  data_time: 0.0015  memory: 28067  
07/17 09:01:56 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:27:52  time: 5.2269  data_time: 0.0017  memory: 26513  
07/17 09:06:22 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:23:11  time: 5.0576  data_time: 0.0015  memory: 27515  
07/17 09:10:37 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:18:30  time: 5.3222  data_time: 0.0113  memory: 25070  
07/17 09:14:58 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:13:51  time: 5.2482  data_time: 0.0016  memory: 9784  
07/17 09:19:06 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:09:12  time: 4.9968  data_time: 0.0016  memory: 24318  
07/17 09:23:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:04:36  time: 4.9632  data_time: 0.0015  memory: 25545  
07/17 09:27:38 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 4.6953  data_time: 0.0014  memory: 25992  
07/17 09:27:39 - mmengine - INFO - per class results:
07/17 09:27:39 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 54.64 | 87.29 |
|       building      | 67.79 | 79.62 |
|         sky         | 90.98 | 95.67 |
|        floor        | 50.63 | 62.63 |
|         tree        | 54.78 | 68.95 |
|       ceiling       | 72.83 | 81.54 |
|         road        | 61.05 | 69.29 |
|         bed         | 73.48 | 82.99 |
|      windowpane     | 48.49 | 69.58 |
|        grass        | 42.16 | 49.08 |
|       cabinet       | 41.25 | 57.15 |
|       sidewalk      | 49.44 |  61.6 |
|        person       | 44.67 |  70.5 |
|        earth        | 27.07 | 43.21 |
|         door        | 32.06 | 47.65 |
|        table        | 28.12 | 54.89 |
|       mountain      | 44.02 | 66.05 |
|        plant        | 32.65 | 40.68 |
|       curtain       | 55.83 |  64.6 |
|        chair        | 34.36 | 46.92 |
|         car         | 67.09 |  79.2 |
|        water        | 38.82 | 50.24 |
|       painting      | 58.84 |  74.0 |
|         sofa        |  47.2 | 60.71 |
|        shelf        | 31.58 | 42.78 |
|        house        | 28.96 | 49.99 |
|         sea         | 36.94 | 57.59 |
|        mirror       | 53.01 | 61.86 |
|         rug         | 32.95 | 36.84 |
|        field        | 23.06 | 41.97 |
|       armchair      | 25.01 | 32.51 |
|         seat        | 42.79 | 59.19 |
|        fence        |  29.9 | 40.25 |
|         desk        | 31.19 | 47.01 |
|         rock        |  31.9 | 42.19 |
|       wardrobe      | 35.61 | 41.96 |
|         lamp        | 54.69 | 64.27 |
|       bathtub       | 67.42 | 75.57 |
|       railing       | 23.44 | 35.98 |
|       cushion       | 38.43 | 44.82 |
|         base        |  4.06 |  5.0  |
|         box         | 10.38 | 19.87 |
|        column       | 30.92 | 35.12 |
|      signboard      | 27.85 | 38.36 |
|   chest of drawers  | 26.18 | 32.92 |
|       counter       | 13.81 | 19.43 |
|         sand        | 27.58 | 47.85 |
|         sink        | 57.19 | 71.23 |
|      skyscraper     | 21.89 | 32.66 |
|      fireplace      | 47.97 | 51.17 |
|     refrigerator    | 55.24 | 61.63 |
|      grandstand     | 37.23 | 60.66 |
|         path        | 18.77 | 25.34 |
|        stairs       | 14.16 | 17.81 |
|        runway       |  44.5 | 58.69 |
|         case        |  28.2 | 34.48 |
|      pool table     | 52.92 | 55.05 |
|        pillow       | 46.81 | 57.05 |
|     screen door     | 39.39 | 44.67 |
|       stairway      |  14.2 | 18.94 |
|        river        | 11.76 | 19.31 |
|        bridge       | 12.55 | 13.31 |
|       bookcase      | 34.87 | 47.22 |
|        blind        | 37.29 | 39.72 |
|     coffee table    | 36.49 | 42.51 |
|        toilet       | 71.98 | 76.97 |
|        flower       | 36.34 |  42.8 |
|         book        | 37.85 | 47.71 |
|         hill        |  8.03 |  10.3 |
|        bench        | 29.72 | 34.96 |
|      countertop     | 34.01 | 46.15 |
|        stove        | 43.04 | 46.31 |
|         palm        | 37.06 | 51.92 |
|    kitchen island   | 32.89 | 47.87 |
|       computer      | 49.08 | 53.82 |
|     swivel chair    |  2.59 |  2.76 |
|         boat        | 33.46 | 35.22 |
|         bar         | 13.36 | 16.06 |
|    arcade machine   |  8.05 |  8.21 |
|        hovel        | 25.62 | 31.15 |
|         bus         | 80.69 | 84.52 |
|        towel        | 58.25 | 67.84 |
|        light        | 44.36 | 49.29 |
|        truck        | 12.99 | 16.02 |
|        tower        |  6.34 |  8.72 |
|      chandelier     |  61.3 | 69.88 |
|        awning       |  8.98 |  9.78 |
|     streetlight     | 16.77 | 18.78 |
|        booth        | 35.87 |  37.5 |
| television receiver | 19.53 | 20.93 |
|       airplane      |  47.6 | 60.19 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       | 22.96 | 34.91 |
|         pole        |  9.83 | 12.33 |
|         land        |  8.44 | 13.86 |
|      bannister      |  10.5 | 14.03 |
|      escalator      |  2.7  |  2.9  |
|       ottoman       | 36.03 | 43.42 |
|        bottle       | 32.71 | 51.51 |
|        buffet       | 13.44 | 14.16 |
|        poster       | 18.33 |  22.2 |
|        stage        | 10.88 | 14.12 |
|         van         | 35.38 | 42.93 |
|         ship        |  63.0 | 66.76 |
|       fountain      |  21.0 | 21.27 |
|    conveyer belt    | 62.17 | 71.75 |
|        canopy       | 11.25 | 11.82 |
|        washer       | 45.33 |  46.9 |
|      plaything      | 17.14 | 21.34 |
|    swimming pool    |  9.27 | 10.24 |
|        stool        | 16.12 | 20.06 |
|        barrel       | 20.09 | 27.72 |
|        basket       | 15.44 | 19.94 |
|      waterfall      | 56.85 | 82.71 |
|         tent        | 76.73 | 96.27 |
|         bag         |  6.56 |  7.02 |
|       minibike      | 34.03 | 41.08 |
|        cradle       | 68.89 | 78.47 |
|         oven        |  6.82 |  8.04 |
|         ball        | 40.15 | 55.21 |
|         food        | 31.14 | 34.77 |
|         step        |  4.13 |  4.76 |
|         tank        | 44.38 | 49.98 |
|      trade name     | 22.89 | 26.81 |
|      microwave      |  23.6 | 24.59 |
|         pot         | 12.22 | 13.29 |
|        animal       | 27.67 | 28.19 |
|       bicycle       | 31.37 |  39.4 |
|         lake        | 53.05 | 56.42 |
|      dishwasher     | 39.69 | 41.15 |
|        screen       | 36.73 | 49.02 |
|       blanket       | 14.72 | 15.78 |
|      sculpture      | 33.26 | 43.27 |
|         hood        | 33.09 | 38.47 |
|        sconce       | 37.13 | 49.72 |
|         vase        | 29.17 | 40.87 |
|    traffic light    | 21.75 | 30.34 |
|         tray        |  12.4 | 20.21 |
|        ashcan       |  13.0 | 14.19 |
|         fan         | 53.87 | 63.85 |
|         pier        | 14.55 | 16.49 |
|      crt screen     |  4.23 | 12.55 |
|        plate        | 41.69 | 50.39 |
|       monitor       |  8.93 |  9.84 |
|    bulletin board   | 20.49 |  28.2 |
|        shower       |  8.34 | 11.95 |
|       radiator      | 46.63 | 50.75 |
|        glass        | 12.91 | 14.98 |
|        clock        |  22.4 | 24.66 |
|         flag        | 27.02 |  28.9 |
+---------------------+-------+-------+
07/17 09:27:39 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 69.2200  mIoU: 33.1200  mAcc: 41.1400  data_time: 0.0033  time: 5.5098
Runtime: 33506

============================= JOB FEEDBACK =============================

NodeName=uc2n484
Job ID: 23864952
Array Job ID: 23864952_6
Cluster: uc2
User/Group: ma_dschader/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 08:43:01
CPU Efficiency: 5.85% of 6-05:03:44 core-walltime
Job Wall-clock time: 09:18:59
Memory Utilized: 4.34 GB
Memory Efficiency: 4.34% of 100.00 GB
