Started at Sun Sep 15 13:16:33 CEST 2024
/var/spool/slurmd/job24235235/slurm_script: line 15: activate: No such file or directory
Processing corruption type: gaussian_noise
09/15 13:18:49 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 3356662
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 3356662
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:18:50 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/gaussian_noise'

09/15 13:19:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:19:55 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:19:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:19:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:22:15 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:29:19  time: 0.4685  data_time: 0.0017  memory: 19720  
09/15 13:22:38 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:50:52  time: 0.6226  data_time: 0.0018  memory: 19715  
09/15 13:22:51 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:35:41  time: 0.2399  data_time: 0.0017  memory: 19689  
09/15 13:23:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:29:22  time: 0.3849  data_time: 0.0064  memory: 19717  
09/15 13:23:32 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:02  time: 0.1803  data_time: 0.0016  memory: 19712  
09/15 13:23:48 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:21:46  time: 0.0755  data_time: 0.0018  memory: 19713  
09/15 13:24:05 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:19:25  time: 0.1685  data_time: 0.0016  memory: 19712  
09/15 13:24:19 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:17:25  time: 0.2464  data_time: 0.0016  memory: 19713  
09/15 13:24:26 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:22  time: 0.1450  data_time: 0.0016  memory: 19686  
09/15 13:24:32 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:13:41  time: 0.0705  data_time: 0.0017  memory: 19653  
09/15 13:24:38 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:19  time: 0.2121  data_time: 0.0018  memory: 19712  
09/15 13:24:45 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:10  time: 0.2228  data_time: 0.0018  memory: 19714  
09/15 13:24:58 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:24  time: 0.5878  data_time: 0.0043  memory: 19722  
09/15 13:25:11 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:41  time: 0.0784  data_time: 0.0018  memory: 19721  
09/15 13:25:25 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:05  time: 0.5432  data_time: 0.0041  memory: 19727  
09/15 13:25:30 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:18  time: 0.0718  data_time: 0.0019  memory: 19690  
09/15 13:25:34 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:07:34  time: 0.0761  data_time: 0.0018  memory: 512  
09/15 13:25:40 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:58  time: 0.1740  data_time: 0.0016  memory: 19678  
09/15 13:25:53 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:32  time: 0.2856  data_time: 0.0017  memory: 19709  
09/15 13:26:00 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:02  time: 0.0695  data_time: 0.0016  memory: 19710  
09/15 13:26:13 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:39  time: 0.4205  data_time: 0.0041  memory: 19729  
09/15 13:26:21 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:13  time: 0.0717  data_time: 0.0018  memory: 19692  
09/15 13:26:27 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:47  time: 0.1447  data_time: 0.0017  memory: 19666  
09/15 13:26:31 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:22  time: 0.0694  data_time: 0.0017  memory: 1709  
09/15 13:26:38 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:59  time: 0.1507  data_time: 0.0016  memory: 19695  
09/15 13:26:41 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:37  time: 0.0718  data_time: 0.0016  memory: 513  
09/15 13:26:45 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:16  time: 0.0706  data_time: 0.0016  memory: 19649  
09/15 13:26:55 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:58  time: 0.2394  data_time: 0.0016  memory: 19701  
09/15 13:27:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:40  time: 0.1793  data_time: 0.0016  memory: 19678  
09/15 13:27:04 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:22  time: 0.0686  data_time: 0.0016  memory: 512  
09/15 13:27:09 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:05  time: 0.0749  data_time: 0.0016  memory: 19706  
09/15 13:27:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:48  time: 0.0702  data_time: 0.0017  memory: 503  
09/15 13:27:23 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:34  time: 0.0684  data_time: 0.0015  memory: 19711  
09/15 13:27:30 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:19  time: 0.0718  data_time: 0.0018  memory: 19681  
09/15 13:27:36 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:05  time: 0.0728  data_time: 0.0016  memory: 19700  
09/15 13:27:41 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:51  time: 0.0728  data_time: 0.0018  memory: 19653  
09/15 13:27:44 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:37  time: 0.0713  data_time: 0.0018  memory: 461  
09/15 13:27:49 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:24  time: 0.0757  data_time: 0.0016  memory: 19721  
09/15 13:27:57 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:12  time: 0.0695  data_time: 0.0016  memory: 19661  
09/15 13:28:05 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1031  data_time: 0.0063  memory: 19724  
09/15 13:28:05 - mmengine - INFO - per class results:
09/15 13:28:05 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 61.83 | 85.74 |
|       building      | 74.29 | 89.96 |
|         sky         | 90.23 | 94.31 |
|        floor        | 65.72 | 83.81 |
|         tree        | 66.01 | 87.47 |
|       ceiling       | 69.34 | 79.59 |
|         road        | 69.89 | 84.94 |
|         bed         | 73.73 | 84.66 |
|      windowpane     | 48.82 | 64.29 |
|        grass        | 65.05 | 83.54 |
|       cabinet       |  43.5 | 55.07 |
|       sidewalk      | 37.48 | 45.51 |
|        person       | 66.96 | 85.26 |
|        earth        | 23.59 | 42.76 |
|         door        | 19.62 | 24.59 |
|        table        | 38.47 | 55.13 |
|       mountain      | 45.13 |  54.3 |
|        plant        | 40.59 | 51.94 |
|       curtain       | 50.56 | 61.77 |
|        chair        | 39.49 |  53.1 |
|         car         |  75.7 | 84.43 |
|        water        | 35.92 | 43.76 |
|       painting      | 56.79 | 66.25 |
|         sofa        |  44.1 | 63.17 |
|        shelf        | 32.16 | 43.12 |
|        house        | 34.05 | 43.55 |
|         sea         | 37.88 | 66.43 |
|        mirror       | 36.17 | 44.97 |
|         rug         | 29.34 | 33.96 |
|        field        | 22.46 |  35.4 |
|       armchair      | 25.68 | 43.36 |
|         seat        | 50.71 | 66.59 |
|        fence        | 30.17 | 45.71 |
|         desk        | 27.83 | 44.16 |
|         rock        | 39.45 | 69.29 |
|       wardrobe      | 36.61 | 42.62 |
|         lamp        | 40.19 |  50.2 |
|       bathtub       | 20.58 | 22.55 |
|       railing       | 23.75 | 33.39 |
|       cushion       | 28.16 | 32.75 |
|         base        |  7.79 |  10.7 |
|         box         |  9.53 | 11.64 |
|        column       | 21.58 | 32.63 |
|      signboard      |  25.0 | 37.36 |
|   chest of drawers  | 27.53 | 50.28 |
|       counter       | 21.49 | 29.93 |
|         sand        | 12.39 | 21.51 |
|         sink        | 40.59 | 64.19 |
|      skyscraper     | 57.63 | 70.45 |
|      fireplace      | 42.43 | 50.91 |
|     refrigerator    | 46.56 | 55.85 |
|      grandstand     | 37.44 |  64.0 |
|         path        | 13.14 |  22.3 |
|        stairs       | 22.63 | 30.01 |
|        runway       | 25.82 |  26.2 |
|         case        | 31.84 | 37.89 |
|      pool table     | 79.03 | 88.23 |
|        pillow       | 34.43 | 44.64 |
|     screen door     | 22.39 |  27.8 |
|       stairway      | 26.58 | 37.27 |
|        river        |  6.31 | 10.05 |
|        bridge       | 21.18 | 24.27 |
|       bookcase      |  27.4 | 36.95 |
|        blind        |  7.64 |  7.89 |
|     coffee table    | 42.07 | 57.23 |
|        toilet       |  46.3 | 50.59 |
|        flower       | 29.83 |  39.9 |
|         book        | 42.28 | 55.53 |
|         hill        | 11.03 | 18.26 |
|        bench        | 25.17 | 30.55 |
|      countertop     | 38.28 | 55.95 |
|        stove        | 32.53 | 35.05 |
|         palm        | 36.33 | 44.67 |
|    kitchen island   |  21.2 | 35.53 |
|       computer      | 33.51 | 35.33 |
|     swivel chair    | 23.29 | 31.47 |
|         boat        | 27.59 | 29.13 |
|         bar         | 27.72 |  37.7 |
|    arcade machine   | 20.04 | 20.16 |
|        hovel        | 32.98 |  36.9 |
|         bus         | 58.07 | 60.41 |
|        towel        | 22.77 | 29.48 |
|        light        | 22.39 | 23.44 |
|        truck        | 11.52 | 13.53 |
|        tower        |  7.44 | 10.09 |
|      chandelier     | 44.24 | 56.45 |
|        awning       |  8.5  |  9.37 |
|     streetlight     | 10.91 | 12.26 |
|        booth        | 32.21 | 36.19 |
| television receiver | 29.78 | 35.85 |
|       airplane      | 32.42 | 47.09 |
|      dirt track     |  0.04 |  0.11 |
|       apparel       | 22.59 | 31.88 |
|         pole        | 11.58 | 17.17 |
|         land        |  0.0  |  0.0  |
|      bannister      |  1.74 |  1.98 |
|      escalator      |  1.86 |  1.89 |
|       ottoman       | 16.09 | 22.35 |
|        bottle       | 24.16 | 41.84 |
|        buffet       | 14.08 | 14.47 |
|        poster       |  7.95 |  9.35 |
|        stage        | 11.81 | 13.25 |
|         van         | 31.56 | 36.74 |
|         ship        |  1.68 |  2.14 |
|       fountain      | 18.27 | 20.38 |
|    conveyer belt    | 56.55 | 61.28 |
|        canopy       |  0.93 |  0.96 |
|        washer       | 43.03 | 43.52 |
|      plaything      | 11.68 | 13.95 |
|    swimming pool    | 46.86 | 62.28 |
|        stool        | 21.45 | 34.62 |
|        barrel       |  1.79 |  4.7  |
|        basket       | 12.85 | 15.23 |
|      waterfall      |  56.0 | 70.59 |
|         tent        | 42.49 | 50.02 |
|         bag         |  3.43 |  3.82 |
|       minibike      |  34.7 | 41.05 |
|        cradle       | 63.16 | 78.15 |
|         oven        | 16.24 | 20.96 |
|         ball        | 37.77 | 46.31 |
|         food        | 24.97 |  27.5 |
|         step        |  0.52 |  0.57 |
|         tank        | 28.41 | 31.47 |
|      trade name     | 20.81 | 23.96 |
|      microwave      | 23.08 | 24.41 |
|         pot         | 16.08 | 16.62 |
|        animal       | 48.93 | 56.28 |
|       bicycle       | 37.51 | 64.41 |
|         lake        |  2.14 |  2.47 |
|      dishwasher     | 36.59 | 43.81 |
|        screen       |  52.4 | 63.33 |
|       blanket       |  5.38 |  6.46 |
|      sculpture      | 16.38 | 24.12 |
|         hood        | 13.74 | 14.83 |
|        sconce       | 13.47 | 13.97 |
|         vase        | 21.28 | 28.67 |
|    traffic light    | 16.67 | 18.82 |
|         tray        |  2.17 |  2.94 |
|        ashcan       | 15.61 | 17.48 |
|         fan         | 35.04 | 39.66 |
|         pier        | 12.74 | 13.25 |
|      crt screen     |  8.51 | 12.21 |
|        plate        | 39.57 | 47.38 |
|       monitor       |  12.3 | 13.27 |
|    bulletin board   | 17.58 | 20.96 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 13.68 | 14.67 |
|        glass        |  5.54 |  5.69 |
|        clock        | 15.71 | 17.28 |
|         flag        | 24.34 | 26.35 |
+---------------------+-------+-------+
09/15 13:28:05 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 72.7400  mIoU: 29.6700  mAcc: 37.5900  data_time: 0.0035  time: 0.2434
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
09/15 13:29:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 195721424
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 195721424
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:29:47 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/shot_noise'

09/15 13:30:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:30:26 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:30:27 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:30:28 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:32:16 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:10:28  time: 0.8297  data_time: 0.0186  memory: 19720  
09/15 13:32:52 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:45:41  time: 1.0184  data_time: 0.0196  memory: 19715  
09/15 13:33:22 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:35:48  time: 0.6308  data_time: 0.0212  memory: 19689  
09/15 13:33:54 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:30:59  time: 0.7391  data_time: 0.0186  memory: 19717  
09/15 13:34:24 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:27:33  time: 0.5071  data_time: 0.0178  memory: 19712  
09/15 13:34:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:24:42  time: 0.3456  data_time: 0.0094  memory: 19713  
09/15 13:35:20 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:22:58  time: 0.4007  data_time: 0.0107  memory: 19712  
09/15 13:35:46 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:21:13  time: 0.4332  data_time: 0.0065  memory: 19713  
09/15 13:36:03 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:19:15  time: 0.4156  data_time: 0.0156  memory: 19686  
09/15 13:36:22 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:17:40  time: 0.2503  data_time: 0.0079  memory: 19653  
09/15 13:36:49 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:16:45  time: 0.5286  data_time: 0.0180  memory: 19712  
09/15 13:37:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:15:25  time: 0.4661  data_time: 0.0086  memory: 19714  
09/15 13:37:28 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:14:32  time: 0.5287  data_time: 0.0136  memory: 19722  
09/15 13:37:57 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:13:53  time: 0.3246  data_time: 0.0080  memory: 19721  
09/15 13:38:24 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:13:12  time: 0.7045  data_time: 0.0097  memory: 19727  
09/15 13:38:37 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:12:13  time: 0.1560  data_time: 0.0018  memory: 19690  
09/15 13:38:46 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:13  time: 0.2382  data_time: 0.0098  memory: 512  
09/15 13:39:02 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:27  time: 0.3600  data_time: 0.0085  memory: 19678  
09/15 13:39:28 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:56  time: 0.5448  data_time: 0.0121  memory: 19709  
09/15 13:39:45 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:16  time: 0.2336  data_time: 0.0040  memory: 19710  
09/15 13:40:06 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:42  time: 0.5994  data_time: 0.0068  memory: 19729  
09/15 13:40:25 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:08  time: 0.3184  data_time: 0.0098  memory: 19692  
09/15 13:40:44 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:35  time: 0.4366  data_time: 0.0119  memory: 19666  
09/15 13:41:01 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:01  time: 0.2713  data_time: 0.0114  memory: 1709  
09/15 13:41:21 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:31  time: 0.3912  data_time: 0.0115  memory: 19695  
09/15 13:41:35 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:59  time: 0.2756  data_time: 0.0091  memory: 513  
09/15 13:41:54 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:29  time: 0.1549  data_time: 0.0017  memory: 19649  
09/15 13:42:14 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:02  time: 0.5408  data_time: 0.0129  memory: 19701  
09/15 13:42:28 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:32  time: 0.4287  data_time: 0.0098  memory: 19678  
09/15 13:42:39 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:03  time: 0.1430  data_time: 0.0016  memory: 512  
09/15 13:43:02 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:38  time: 0.3067  data_time: 0.0092  memory: 19706  
09/15 13:43:12 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:10  time: 0.2484  data_time: 0.0053  memory: 503  
09/15 13:43:33 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:46  time: 0.2130  data_time: 0.0041  memory: 19711  
09/15 13:43:53 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:21  time: 0.3026  data_time: 0.0104  memory: 19681  
09/15 13:44:12 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:57  time: 0.3301  data_time: 0.0143  memory: 19700  
09/15 13:44:25 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:32  time: 0.2401  data_time: 0.0065  memory: 19653  
09/15 13:44:33 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:08  time: 0.1584  data_time: 0.0018  memory: 461  
09/15 13:44:47 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:45  time: 0.3425  data_time: 0.0164  memory: 19721  
09/15 13:45:04 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:22  time: 0.2009  data_time: 0.0044  memory: 19661  
09/15 13:45:21 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1808  data_time: 0.0062  memory: 19724  
09/15 13:45:21 - mmengine - INFO - per class results:
09/15 13:45:21 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 60.69 | 85.32 |
|       building      | 74.76 | 90.35 |
|         sky         | 89.59 | 93.79 |
|        floor        | 66.98 |  84.2 |
|         tree        | 67.13 | 87.74 |
|       ceiling       |  65.6 |  75.3 |
|         road        | 71.39 | 86.12 |
|         bed         | 73.27 |  84.9 |
|      windowpane     | 47.11 | 62.47 |
|        grass        | 62.13 | 82.34 |
|       cabinet       | 41.52 |  52.6 |
|       sidewalk      | 37.41 |  45.9 |
|        person       | 68.05 | 85.87 |
|        earth        | 25.06 | 45.61 |
|         door        | 19.26 | 24.51 |
|        table        | 39.02 | 57.71 |
|       mountain      | 44.35 | 53.39 |
|        plant        |  42.8 | 53.78 |
|       curtain       | 49.19 | 60.16 |
|        chair        | 40.36 | 54.99 |
|         car         | 76.34 | 84.99 |
|        water        | 36.24 | 44.06 |
|       painting      | 55.21 | 64.86 |
|         sofa        | 44.09 | 63.08 |
|        shelf        | 30.39 | 40.45 |
|        house        | 33.05 | 44.49 |
|         sea         | 39.32 | 66.78 |
|        mirror       |  33.1 | 41.52 |
|         rug         |  31.1 | 36.09 |
|        field        | 20.16 | 33.34 |
|       armchair      | 25.01 | 45.22 |
|         seat        | 49.21 | 70.22 |
|        fence        | 29.59 |  45.2 |
|         desk        | 24.98 | 36.93 |
|         rock        | 39.84 | 65.18 |
|       wardrobe      | 37.87 | 43.96 |
|         lamp        | 36.39 | 44.82 |
|       bathtub       | 16.44 | 17.98 |
|       railing       | 24.55 | 33.71 |
|       cushion       | 28.15 | 32.92 |
|         base        |  8.47 | 11.26 |
|         box         |  9.81 | 11.97 |
|        column       | 22.33 | 31.04 |
|      signboard      |  25.2 |  36.4 |
|   chest of drawers  | 31.16 | 53.21 |
|       counter       | 20.22 | 26.98 |
|         sand        |  11.6 | 19.71 |
|         sink        | 37.89 | 60.51 |
|      skyscraper     | 61.64 |  75.6 |
|      fireplace      | 45.63 | 54.31 |
|     refrigerator    | 45.28 | 53.07 |
|      grandstand     | 38.63 | 65.49 |
|         path        | 11.79 |  21.2 |
|        stairs       | 18.52 | 25.45 |
|        runway       | 22.76 | 22.87 |
|         case        | 29.15 | 35.39 |
|      pool table     | 82.37 | 88.79 |
|        pillow       | 29.71 | 37.62 |
|     screen door     | 17.43 |  21.6 |
|       stairway      | 25.64 | 35.01 |
|        river        |  4.85 |  8.04 |
|        bridge       | 17.16 | 20.04 |
|       bookcase      | 27.65 | 38.05 |
|        blind        |  5.31 |  5.41 |
|     coffee table    | 41.39 | 57.32 |
|        toilet       |  39.9 | 43.09 |
|        flower       | 28.89 | 40.25 |
|         book        | 42.26 | 55.48 |
|         hill        | 10.71 | 18.34 |
|        bench        | 26.65 | 32.78 |
|      countertop     | 38.59 | 56.37 |
|        stove        | 32.89 | 34.54 |
|         palm        | 35.48 | 45.91 |
|    kitchen island   | 18.19 | 29.77 |
|       computer      | 25.75 | 26.86 |
|     swivel chair    | 28.97 |  40.3 |
|         boat        | 26.59 | 27.93 |
|         bar         | 28.48 | 39.66 |
|    arcade machine   | 25.39 | 25.75 |
|        hovel        | 33.04 | 36.53 |
|         bus         | 49.83 | 52.24 |
|        towel        |  21.9 | 26.52 |
|        light        | 18.45 | 19.18 |
|        truck        |  8.13 |  9.34 |
|        tower        |  13.1 | 17.02 |
|      chandelier     | 42.34 | 56.49 |
|        awning       |  8.19 |  9.08 |
|     streetlight     | 11.75 | 13.53 |
|        booth        | 32.42 | 36.63 |
| television receiver | 44.59 | 54.63 |
|       airplane      | 31.55 | 41.85 |
|      dirt track     |  0.22 |  0.45 |
|       apparel       | 21.32 | 28.78 |
|         pole        | 13.19 | 19.26 |
|         land        |  0.0  |  0.0  |
|      bannister      |  2.28 |  2.72 |
|      escalator      |  4.01 |  4.03 |
|       ottoman       |  13.9 | 18.42 |
|        bottle       |  23.3 |  40.8 |
|        buffet       | 29.45 | 30.73 |
|        poster       |  3.03 |  3.41 |
|        stage        |  7.4  |  8.18 |
|         van         | 31.08 | 34.85 |
|         ship        |  1.38 |  1.84 |
|       fountain      | 16.57 | 18.92 |
|    conveyer belt    | 65.34 |  69.2 |
|        canopy       |  3.04 |  3.11 |
|        washer       | 40.08 |  40.5 |
|      plaything      |  9.76 | 11.69 |
|    swimming pool    | 55.37 | 67.46 |
|        stool        | 23.17 | 37.62 |
|        barrel       |  4.21 |  7.29 |
|        basket       |  11.0 | 13.53 |
|      waterfall      | 53.07 | 61.95 |
|         tent        |  25.8 | 29.41 |
|         bag         |  4.2  |  4.52 |
|       minibike      |  42.2 | 47.85 |
|        cradle       | 60.52 | 76.47 |
|         oven        |  23.2 |  30.6 |
|         ball        | 36.47 | 45.02 |
|         food        |  31.3 | 36.27 |
|         step        |  0.27 |  0.29 |
|         tank        | 29.72 | 31.81 |
|      trade name     | 21.25 | 24.29 |
|      microwave      |  38.9 |  41.0 |
|         pot         |  20.6 | 21.52 |
|        animal       | 48.01 | 55.55 |
|       bicycle       | 37.84 | 68.19 |
|         lake        |  1.12 |  1.3  |
|      dishwasher     | 31.15 | 34.19 |
|        screen       | 47.73 | 59.37 |
|       blanket       |  6.78 |  8.03 |
|      sculpture      | 17.89 | 29.83 |
|         hood        |  9.74 | 10.08 |
|        sconce       | 10.19 |  10.5 |
|         vase        | 21.27 | 29.05 |
|    traffic light    | 15.79 | 17.68 |
|         tray        |  2.03 |  2.81 |
|        ashcan       |  18.0 | 21.28 |
|         fan         | 34.09 | 37.99 |
|         pier        | 11.03 |  12.2 |
|      crt screen     |  4.82 |  9.47 |
|        plate        | 35.91 | 42.84 |
|       monitor       |  9.22 |  9.98 |
|    bulletin board   | 13.24 |  14.7 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  10.3 | 10.91 |
|        glass        |  4.69 |  4.79 |
|        clock        | 15.79 | 18.02 |
|         flag        | 23.07 | 24.77 |
+---------------------+-------+-------+
09/15 13:45:21 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 72.4400  mIoU: 29.3900  mAcc: 37.1800  data_time: 0.0119  time: 0.4462
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
09/15 13:45:43 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 433634313
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 433634313
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:45:43 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/impulse_noise'

09/15 13:45:52 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:45:52 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:45:53 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:45:53 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:47:00 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:43:29  time: 0.6844  data_time: 0.0136  memory: 19720  
09/15 13:47:32 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:31:02  time: 0.8915  data_time: 0.0188  memory: 19715  
09/15 13:47:56 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:25:04  time: 0.4993  data_time: 0.0178  memory: 19689  
09/15 13:48:23 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:28  time: 0.5918  data_time: 0.0132  memory: 19717  
09/15 13:48:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:16  time: 0.3936  data_time: 0.0136  memory: 19712  
09/15 13:49:09 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:18:24  time: 0.2109  data_time: 0.0084  memory: 19713  
09/15 13:49:31 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:17:06  time: 0.2936  data_time: 0.0086  memory: 19712  
09/15 13:49:51 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:15:49  time: 0.3049  data_time: 0.0044  memory: 19713  
09/15 13:50:02 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:14:15  time: 0.2909  data_time: 0.0115  memory: 19686  
09/15 13:50:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:12:57  time: 0.1377  data_time: 0.0063  memory: 19653  
09/15 13:50:30 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:12:08  time: 0.3874  data_time: 0.0116  memory: 19712  
09/15 13:50:40 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:11:07  time: 0.3194  data_time: 0.0063  memory: 19714  
09/15 13:50:56 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:10:26  time: 0.4029  data_time: 0.0075  memory: 19722  
09/15 13:51:17 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:09:59  time: 0.1869  data_time: 0.0062  memory: 19721  
09/15 13:51:38 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:09:33  time: 0.6549  data_time: 0.0105  memory: 19727  
09/15 13:51:47 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:08:48  time: 0.0489  data_time: 0.0018  memory: 19690  
09/15 13:51:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:08:02  time: 0.1166  data_time: 0.0075  memory: 512  
09/15 13:52:00 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:07:27  time: 0.2530  data_time: 0.0073  memory: 19678  
09/15 13:52:33 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:07:21  time: 1.7576  data_time: 0.0546  memory: 19709  
09/15 13:52:41 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:06:46  time: 0.0497  data_time: 0.0016  memory: 19710  
09/15 13:52:50 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:16  time: 0.3747  data_time: 0.0017  memory: 19729  
09/15 13:52:58 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:46  time: 0.0521  data_time: 0.0017  memory: 19692  
09/15 13:53:02 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:16  time: 0.1251  data_time: 0.0016  memory: 19666  
09/15 13:53:05 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:47  time: 0.0503  data_time: 0.0016  memory: 1709  
09/15 13:53:16 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:25  time: 0.2780  data_time: 0.0092  memory: 19695  
09/15 13:53:24 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:01  time: 0.1507  data_time: 0.0074  memory: 513  
09/15 13:53:35 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:41  time: 0.0506  data_time: 0.0017  memory: 19649  
09/15 13:53:50 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:23  time: 0.3873  data_time: 0.0120  memory: 19701  
09/15 13:54:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:04  time: 0.3914  data_time: 0.0167  memory: 19678  
09/15 13:54:04 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:43  time: 0.0481  data_time: 0.0016  memory: 512  
09/15 13:54:19 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:26  time: 0.1464  data_time: 0.0071  memory: 19706  
09/15 13:54:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:07  time: 0.1093  data_time: 0.0042  memory: 503  
09/15 13:54:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:50  time: 0.0769  data_time: 0.0016  memory: 19711  
09/15 13:54:48 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:34  time: 0.1217  data_time: 0.0065  memory: 19681  
09/15 13:54:59 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:17  time: 0.2173  data_time: 0.0136  memory: 19700  
09/15 13:55:06 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:01  time: 0.0920  data_time: 0.0041  memory: 19653  
09/15 13:55:09 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:44  time: 0.0506  data_time: 0.0018  memory: 461  
09/15 13:55:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:29  time: 0.2192  data_time: 0.0145  memory: 19721  
09/15 13:55:27 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.1441  data_time: 0.0072  memory: 19661  
09/15 13:55:38 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0818  data_time: 0.0074  memory: 19724  
09/15 13:55:38 - mmengine - INFO - per class results:
09/15 13:55:38 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 54.75 | 88.52 |
|       building      | 70.33 | 89.79 |
|         sky         | 82.11 | 85.55 |
|        floor        | 59.14 | 82.25 |
|         tree        | 59.88 | 86.69 |
|       ceiling       | 61.41 | 69.57 |
|         road        | 64.37 | 71.28 |
|         bed         | 59.78 | 65.32 |
|      windowpane     | 42.56 | 52.87 |
|        grass        |  61.9 | 81.91 |
|       cabinet       | 28.46 | 34.55 |
|       sidewalk      | 41.87 | 58.24 |
|        person       | 64.35 | 81.41 |
|        earth        | 25.13 | 44.13 |
|         door        | 13.97 | 16.34 |
|        table        | 34.77 | 46.47 |
|       mountain      | 40.04 | 50.17 |
|        plant        | 37.08 | 45.47 |
|       curtain       | 47.27 | 56.83 |
|        chair        | 36.21 | 47.18 |
|         car         | 72.76 | 83.32 |
|        water        |  28.9 | 49.87 |
|       painting      | 51.44 | 60.07 |
|         sofa        | 38.91 | 53.94 |
|        shelf        | 29.09 | 42.56 |
|        house        |  17.6 | 19.63 |
|         sea         | 26.45 | 38.27 |
|        mirror       | 24.11 | 27.38 |
|         rug         | 18.91 | 20.14 |
|        field        | 12.63 | 16.62 |
|       armchair      | 20.69 | 33.32 |
|         seat        | 34.15 | 47.62 |
|        fence        | 23.68 | 38.14 |
|         desk        | 20.05 | 23.62 |
|         rock        | 36.93 |  69.0 |
|       wardrobe      | 15.93 | 18.15 |
|         lamp        | 27.99 | 31.02 |
|       bathtub       |  4.87 |  5.01 |
|       railing       | 19.17 | 25.43 |
|       cushion       | 26.64 | 31.53 |
|         base        |  1.27 |  1.56 |
|         box         |  6.94 |  9.31 |
|        column       | 17.17 | 25.26 |
|      signboard      | 23.73 | 36.87 |
|   chest of drawers  | 20.74 |  26.0 |
|       counter       | 13.02 | 14.55 |
|         sand        |  9.21 | 12.49 |
|         sink        | 31.22 | 51.84 |
|      skyscraper     | 48.95 | 71.59 |
|      fireplace      | 25.67 | 27.55 |
|     refrigerator    | 32.88 | 34.42 |
|      grandstand     |  38.4 | 58.02 |
|         path        |  9.32 | 14.81 |
|        stairs       | 12.67 | 31.62 |
|        runway       |  17.5 | 17.57 |
|         case        | 26.08 | 29.59 |
|      pool table     | 64.32 | 66.54 |
|        pillow       | 34.35 | 45.55 |
|     screen door     | 13.29 | 16.45 |
|       stairway      | 19.78 | 38.56 |
|        river        |  0.76 |  0.91 |
|        bridge       | 14.78 |  16.3 |
|       bookcase      | 14.47 | 15.87 |
|        blind        |  1.6  |  1.6  |
|     coffee table    |  27.9 | 32.36 |
|        toilet       | 40.88 | 48.08 |
|        flower       | 21.06 | 24.91 |
|         book        | 26.33 | 32.81 |
|         hill        | 10.01 |  13.4 |
|        bench        |  14.3 | 16.62 |
|      countertop     | 30.33 | 40.48 |
|        stove        | 28.37 | 36.33 |
|         palm        | 37.16 |  52.1 |
|    kitchen island   |  8.88 | 11.41 |
|       computer      |  22.6 | 23.24 |
|     swivel chair    | 13.52 | 14.24 |
|         boat        | 21.76 | 22.61 |
|         bar         | 12.48 | 12.82 |
|    arcade machine   |  9.65 |  9.72 |
|        hovel        | 24.65 | 26.81 |
|         bus         |  24.9 | 25.24 |
|        towel        | 14.77 | 17.09 |
|        light        |  14.2 | 14.66 |
|        truck        |  4.87 |  5.34 |
|        tower        |  7.75 |  9.52 |
|      chandelier     | 30.97 | 36.03 |
|        awning       |  2.79 |  2.94 |
|     streetlight     |  8.73 |  9.36 |
|        booth        | 20.16 | 20.38 |
| television receiver | 14.08 | 15.84 |
|       airplane      | 23.78 |  39.8 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       | 21.56 | 28.31 |
|         pole        |  8.92 |  13.3 |
|         land        |  0.0  |  0.0  |
|      bannister      |  1.83 |  2.23 |
|      escalator      |  3.81 |  4.72 |
|       ottoman       | 10.87 | 13.32 |
|        bottle       | 19.29 | 31.92 |
|        buffet       |  0.68 |  0.68 |
|        poster       |  0.7  |  0.82 |
|        stage        |  3.87 |  4.19 |
|         van         | 25.93 | 29.58 |
|         ship        |  1.52 |  1.61 |
|       fountain      | 16.42 |  21.3 |
|    conveyer belt    | 49.13 | 51.12 |
|        canopy       |  0.08 |  0.08 |
|        washer       | 37.06 | 38.04 |
|      plaything      |  9.69 |  10.8 |
|    swimming pool    |  69.3 | 79.33 |
|        stool        | 18.53 | 23.66 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 16.06 | 17.47 |
|      waterfall      | 36.07 | 58.55 |
|         tent        | 17.25 |  17.6 |
|         bag         |  1.32 |  1.45 |
|       minibike      |  33.4 | 39.89 |
|        cradle       | 57.26 | 67.68 |
|         oven        | 20.26 | 24.94 |
|         ball        |  33.6 | 42.78 |
|         food        | 27.24 | 31.81 |
|         step        |  0.0  |  0.0  |
|         tank        | 29.41 | 34.19 |
|      trade name     | 14.37 | 15.82 |
|      microwave      | 15.58 | 16.44 |
|         pot         | 14.11 | 14.68 |
|        animal       | 49.05 | 63.03 |
|       bicycle       | 34.41 | 64.28 |
|         lake        | 26.49 | 35.03 |
|      dishwasher     | 11.47 | 11.52 |
|        screen       | 26.35 | 27.93 |
|       blanket       |  5.18 |  5.79 |
|      sculpture      | 21.24 | 33.62 |
|         hood        |  7.13 |  7.75 |
|        sconce       |  5.8  |  6.07 |
|         vase        | 17.56 | 24.12 |
|    traffic light    | 14.58 | 16.02 |
|         tray        |  2.24 |  3.85 |
|        ashcan       | 12.11 | 13.41 |
|         fan         | 17.61 | 18.04 |
|         pier        |  0.87 |  0.87 |
|      crt screen     |  2.8  |  4.21 |
|        plate        | 32.03 | 36.62 |
|       monitor       |  1.07 |  1.1  |
|    bulletin board   |  8.79 |  9.23 |
|        shower       |  0.06 |  0.9  |
|       radiator      | 18.64 | 20.52 |
|        glass        |  3.78 |  3.85 |
|        clock        | 12.76 | 14.44 |
|         flag        | 16.64 | 18.68 |
+---------------------+-------+-------+
09/15 13:55:38 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 67.8400  mIoU: 23.4300  mAcc: 29.6500  data_time: 0.0088  time: 0.2917
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
09/15 13:55:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1628940729
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1628940729
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 13:55:46 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/defocus_blur'

09/15 13:55:51 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 13:55:51 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 13:55:52 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:55:52 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 13:56:52 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:38:41  time: 0.5078  data_time: 0.0018  memory: 19720  
09/15 13:57:16 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:26:43  time: 0.6653  data_time: 0.0070  memory: 19715  
09/15 13:57:29 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:52  time: 0.2270  data_time: 0.0017  memory: 19689  
09/15 13:57:52 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:17:59  time: 0.5580  data_time: 0.0153  memory: 19717  
09/15 13:58:11 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:16:13  time: 0.1727  data_time: 0.0017  memory: 19712  
09/15 13:58:28 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:14:44  time: 0.1869  data_time: 0.0080  memory: 19713  
09/15 13:58:45 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:35  time: 0.1571  data_time: 0.0017  memory: 19712  
09/15 13:59:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:31  time: 0.2819  data_time: 0.0016  memory: 19713  
09/15 13:59:07 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:12  time: 0.1353  data_time: 0.0017  memory: 19686  
09/15 13:59:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:01  time: 0.0589  data_time: 0.0016  memory: 19653  
09/15 13:59:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:09  time: 0.3358  data_time: 0.0067  memory: 19712  
09/15 13:59:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:22  time: 0.2085  data_time: 0.0018  memory: 19714  
09/15 13:59:39 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:50  time: 0.3897  data_time: 0.0042  memory: 19722  
09/15 13:59:52 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:26  time: 0.0988  data_time: 0.0034  memory: 19721  
09/15 14:00:06 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:03  time: 0.5368  data_time: 0.0042  memory: 19727  
09/15 14:00:11 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:28  time: 0.0600  data_time: 0.0018  memory: 19690  
09/15 14:00:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:54  time: 0.0605  data_time: 0.0018  memory: 512  
09/15 14:00:20 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:27  time: 0.1647  data_time: 0.0015  memory: 19678  
09/15 14:00:33 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:10  time: 0.2749  data_time: 0.0017  memory: 19709  
09/15 14:00:41 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:48  time: 0.0586  data_time: 0.0016  memory: 19710  
09/15 14:00:53 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:31  time: 0.4181  data_time: 0.0041  memory: 19729  
09/15 14:01:01 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:12  time: 0.0614  data_time: 0.0017  memory: 19692  
09/15 14:01:06 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:52  time: 0.1341  data_time: 0.0017  memory: 19666  
09/15 14:01:11 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:32  time: 0.0646  data_time: 0.0040  memory: 1709  
09/15 14:01:17 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:15  time: 0.1453  data_time: 0.0016  memory: 19695  
09/15 14:01:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:56  time: 0.0602  data_time: 0.0016  memory: 513  
09/15 14:01:24 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:39  time: 0.0617  data_time: 0.0017  memory: 19649  
09/15 14:01:35 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:26  time: 0.3815  data_time: 0.0066  memory: 19701  
09/15 14:01:40 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:12  time: 0.1689  data_time: 0.0016  memory: 19678  
09/15 14:01:43 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:57  time: 0.0629  data_time: 0.0015  memory: 512  
09/15 14:01:49 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:43  time: 0.0637  data_time: 0.0016  memory: 19706  
09/15 14:01:52 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:29  time: 0.0599  data_time: 0.0018  memory: 503  
09/15 14:02:02 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:18  time: 0.0574  data_time: 0.0016  memory: 19711  
09/15 14:02:11 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:06  time: 0.0598  data_time: 0.0018  memory: 19681  
09/15 14:02:17 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:55  time: 0.1111  data_time: 0.0065  memory: 19700  
09/15 14:02:21 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:43  time: 0.0609  data_time: 0.0018  memory: 19653  
09/15 14:02:24 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:31  time: 0.0601  data_time: 0.0018  memory: 461  
09/15 14:02:31 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:21  time: 0.1516  data_time: 0.0089  memory: 19721  
09/15 14:02:39 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:10  time: 0.0600  data_time: 0.0016  memory: 19661  
09/15 14:02:46 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0962  data_time: 0.0064  memory: 19724  
09/15 14:02:46 - mmengine - INFO - per class results:
09/15 14:02:46 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 70.47 | 86.41 |
|       building      |  77.2 | 91.26 |
|         sky         | 92.94 | 96.69 |
|        floor        | 74.57 |  87.0 |
|         tree        | 69.36 | 84.78 |
|       ceiling       | 78.44 | 86.91 |
|         road        | 77.45 | 88.04 |
|         bed         | 81.01 | 92.12 |
|      windowpane     | 52.84 | 70.12 |
|        grass        | 67.81 | 84.55 |
|       cabinet       | 51.93 |  66.4 |
|       sidewalk      | 54.11 | 67.65 |
|        person       |  69.8 | 87.97 |
|        earth        | 29.54 | 41.12 |
|         door        | 36.01 | 44.66 |
|        table        | 45.86 |  64.4 |
|       mountain      | 48.78 | 66.33 |
|        plant        | 44.69 | 58.45 |
|       curtain       |  65.3 | 77.68 |
|        chair        | 43.91 | 59.44 |
|         car         | 77.07 | 89.09 |
|        water        | 49.85 |  65.8 |
|       painting      | 64.56 | 79.63 |
|         sofa        | 52.89 | 67.97 |
|        shelf        | 34.54 | 51.37 |
|        house        | 31.47 | 40.16 |
|         sea         | 52.04 | 69.36 |
|        mirror       | 51.14 | 65.18 |
|         rug         | 47.69 | 58.05 |
|        field        | 32.91 | 49.69 |
|       armchair      | 33.65 | 53.88 |
|         seat        | 55.37 | 73.79 |
|        fence        | 33.15 | 43.39 |
|         desk        | 35.97 | 52.91 |
|         rock        |  38.5 | 63.22 |
|       wardrobe      | 49.43 | 67.94 |
|         lamp        | 47.92 | 63.18 |
|       bathtub       | 55.93 | 63.23 |
|       railing       | 26.93 | 39.63 |
|       cushion       | 43.36 |  52.7 |
|         base        |  23.9 | 36.23 |
|         box         | 16.72 |  22.5 |
|        column       | 33.39 | 50.21 |
|      signboard      | 27.05 | 34.92 |
|   chest of drawers  | 34.23 | 48.55 |
|       counter       | 26.31 | 35.04 |
|         sand        | 26.56 | 43.43 |
|         sink        |  51.0 | 67.09 |
|      skyscraper     | 48.55 | 54.89 |
|      fireplace      | 64.02 | 80.15 |
|     refrigerator    |  57.7 | 68.84 |
|      grandstand     | 29.17 | 55.54 |
|         path        | 19.16 | 31.14 |
|        stairs       | 25.12 |  28.7 |
|        runway       | 70.12 | 91.49 |
|         case        | 40.99 | 52.96 |
|      pool table     | 83.33 | 93.24 |
|        pillow       | 40.97 | 51.25 |
|     screen door     | 52.87 | 58.16 |
|       stairway      | 31.35 | 39.69 |
|        river        |  8.28 | 14.14 |
|        bridge       | 28.54 | 37.58 |
|       bookcase      | 36.55 |  53.5 |
|        blind        | 20.84 | 21.38 |
|     coffee table    | 47.74 |  73.6 |
|        toilet       | 72.61 | 82.12 |
|        flower       | 32.11 | 48.41 |
|         book        | 38.97 |  53.3 |
|         hill        |  5.65 |  8.29 |
|        bench        | 34.64 | 46.78 |
|      countertop     | 46.37 | 66.57 |
|        stove        | 52.51 | 64.03 |
|         palm        |  39.9 | 45.53 |
|    kitchen island   | 19.47 | 35.17 |
|       computer      | 49.84 | 61.06 |
|     swivel chair    | 36.03 | 50.92 |
|         boat        |  41.2 | 57.54 |
|         bar         | 22.69 | 25.77 |
|    arcade machine   | 44.58 |  47.7 |
|        hovel        | 23.65 |  26.8 |
|         bus         | 67.45 | 81.03 |
|        towel        | 39.29 | 51.08 |
|        light        | 44.92 | 53.08 |
|        truck        | 15.84 | 19.14 |
|        tower        |  9.36 | 11.72 |
|      chandelier     | 48.85 | 60.91 |
|        awning       | 18.87 |  22.4 |
|     streetlight     |  15.3 | 19.86 |
|        booth        |  42.7 | 47.74 |
| television receiver | 50.48 |  67.3 |
|       airplane      | 43.97 | 62.66 |
|      dirt track     |  2.62 |  8.99 |
|       apparel       | 18.99 | 26.51 |
|         pole        |  8.71 |  9.82 |
|         land        |  1.05 |  1.89 |
|      bannister      |  3.13 |  4.84 |
|      escalator      | 18.56 | 23.02 |
|       ottoman       | 22.03 | 29.82 |
|        bottle       | 25.85 | 40.03 |
|        buffet       | 36.28 | 41.83 |
|        poster       | 20.78 | 25.73 |
|        stage        |  6.5  | 18.05 |
|         van         | 29.57 | 36.54 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  4.43 |  4.55 |
|    conveyer belt    | 75.18 | 78.77 |
|        canopy       | 13.53 | 16.07 |
|        washer       | 59.97 | 63.09 |
|      plaything      | 14.34 | 29.66 |
|    swimming pool    | 44.93 | 60.12 |
|        stool        | 28.04 | 34.75 |
|        barrel       | 35.79 | 56.27 |
|        basket       | 14.36 | 17.26 |
|      waterfall      | 65.67 |  84.5 |
|         tent        | 78.54 | 97.84 |
|         bag         |  1.69 |  1.97 |
|       minibike      | 58.76 | 71.28 |
|        cradle       | 71.14 | 88.89 |
|         oven        | 15.91 | 23.41 |
|         ball        | 40.99 | 48.69 |
|         food        | 38.55 | 45.61 |
|         step        |  2.79 |  3.18 |
|         tank        |  37.6 | 44.39 |
|      trade name     | 14.64 | 15.76 |
|      microwave      | 28.83 | 32.51 |
|         pot         | 36.48 | 43.38 |
|        animal       | 53.02 | 57.44 |
|       bicycle       | 40.77 | 51.62 |
|         lake        |  37.7 | 61.68 |
|      dishwasher     | 39.18 | 44.41 |
|        screen       |  57.6 | 82.69 |
|       blanket       |  5.96 |  7.0  |
|      sculpture      | 12.17 | 14.97 |
|         hood        | 38.55 | 44.15 |
|        sconce       | 28.16 | 37.69 |
|         vase        | 16.87 | 23.63 |
|    traffic light    | 18.27 | 28.38 |
|         tray        |  1.99 |  2.61 |
|        ashcan       | 30.62 | 40.78 |
|         fan         | 40.43 | 44.97 |
|         pier        |  27.0 | 35.37 |
|      crt screen     |  6.54 | 17.69 |
|        plate        | 31.51 | 38.89 |
|       monitor       |  28.4 | 34.21 |
|    bulletin board   | 31.12 | 43.81 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 31.38 | 32.75 |
|        glass        |  3.07 |  3.15 |
|        clock        | 25.02 | 28.76 |
|         flag        | 21.39 | 24.16 |
+---------------------+-------+-------+
09/15 14:02:46 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.9400  mIoU: 37.6700  mAcc: 48.0200  data_time: 0.0033  time: 0.2068
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
09/15 14:02:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 803622627
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 803622627
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 14:02:53 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/glass_blur'

09/15 14:02:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 14:02:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 14:02:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 14:03:00 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 14:10:06 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:36:52  time: 8.3958  data_time: 0.0031  memory: 19720  
09/15 14:16:38 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:19:16  time: 8.2644  data_time: 0.0035  memory: 19715  
09/15 14:22:59 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 4:06:32  time: 7.7555  data_time: 0.0038  memory: 19689  
09/15 14:29:27 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:58:06  time: 7.6071  data_time: 0.0036  memory: 19717  
09/15 14:35:35 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:48:06  time: 7.2852  data_time: 0.0039  memory: 19712  
09/15 14:41:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:39:05  time: 7.4575  data_time: 0.0038  memory: 19713  
09/15 14:47:51 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:31:29  time: 6.9461  data_time: 0.0032  memory: 19712  
09/15 14:54:01 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:24:05  time: 7.5367  data_time: 0.0026  memory: 19713  
09/15 14:59:30 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 3:14:39  time: 6.6601  data_time: 0.0031  memory: 19686  
09/15 15:05:27 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 3:07:22  time: 6.9065  data_time: 0.0036  memory: 19653  
09/15 15:11:25 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 3:00:23  time: 6.9684  data_time: 0.0023  memory: 19712  
09/15 15:16:49 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:52:16  time: 6.8496  data_time: 0.0017  memory: 19714  
09/15 15:22:50 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:45:49  time: 7.3543  data_time: 0.0063  memory: 19722  
09/15 15:29:12 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:40:05  time: 7.3337  data_time: 0.0033  memory: 19721  
09/15 15:35:23 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:33:58  time: 7.4358  data_time: 0.0030  memory: 19727  
09/15 15:41:11 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:27:16  time: 7.1936  data_time: 0.0031  memory: 19690  
09/15 15:47:15 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:21:03  time: 7.3077  data_time: 0.0040  memory: 512  
09/15 15:53:01 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:14:28  time: 7.4396  data_time: 0.0445  memory: 19678  
09/15 15:59:21 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 2:08:35  time: 7.4146  data_time: 0.0031  memory: 19709  
09/15 16:05:11 - mmengine - INFO - Iter(test) [1000/2000]    eta: 2:02:11  time: 6.9177  data_time: 0.0044  memory: 19710  
09/15 16:11:27 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:56:13  time: 7.8377  data_time: 0.0036  memory: 19729  
09/15 16:17:34 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:50:06  time: 7.0653  data_time: 0.0029  memory: 19692  
09/15 16:23:34 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:43:54  time: 7.5248  data_time: 0.0060  memory: 19666  
09/15 16:29:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:37:51  time: 7.1487  data_time: 0.0042  memory: 1709  
09/15 16:35:41 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:31:36  time: 7.1292  data_time: 0.0036  memory: 19695  
09/15 16:41:17 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:25:14  time: 7.2073  data_time: 0.0027  memory: 513  
09/15 16:47:13 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:19:04  time: 6.6020  data_time: 0.0030  memory: 19649  
09/15 16:53:15 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:12:58  time: 7.5926  data_time: 0.0040  memory: 19701  
09/15 16:58:58 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:06:44  time: 7.4995  data_time: 0.0024  memory: 19678  
09/15 17:04:38 - mmengine - INFO - Iter(test) [1500/2000]    eta: 1:00:32  time: 6.1013  data_time: 0.0015  memory: 512  
09/15 17:10:18 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:54:22  time: 6.5944  data_time: 0.0016  memory: 19706  
09/15 17:15:49 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:48:12  time: 6.9812  data_time: 0.0028  memory: 503  
09/15 17:21:36 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:42:07  time: 6.6029  data_time: 0.0020  memory: 19711  
09/15 17:27:42 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:36:07  time: 7.2030  data_time: 0.0031  memory: 19681  
09/15 17:33:52 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:30:07  time: 7.1382  data_time: 0.0021  memory: 19700  
09/15 17:40:41 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:24:11  time: 7.3351  data_time: 0.0030  memory: 19653  
09/15 17:46:50 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:18:08  time: 7.3937  data_time: 0.0037  memory: 461  
09/15 17:52:36 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:12:05  time: 7.0468  data_time: 0.0039  memory: 19721  
09/15 17:58:44 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:06:02  time: 7.0587  data_time: 0.0027  memory: 19661  
09/15 18:04:34 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 6.5617  data_time: 0.0033  memory: 19724  
09/15 18:04:34 - mmengine - INFO - per class results:
09/15 18:04:34 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 70.42 | 87.67 |
|       building      | 77.97 | 91.21 |
|         sky         | 92.96 | 97.36 |
|        floor        |  74.8 | 87.15 |
|         tree        | 69.02 | 86.22 |
|       ceiling       | 79.03 | 88.26 |
|         road        |  77.9 |  88.3 |
|         bed         | 81.74 | 90.77 |
|      windowpane     | 53.31 | 69.17 |
|        grass        | 66.79 | 83.88 |
|       cabinet       | 51.71 |  64.9 |
|       sidewalk      | 52.96 | 64.62 |
|        person       | 70.92 | 89.35 |
|        earth        | 28.92 | 43.86 |
|         door        | 31.35 | 37.08 |
|        table        |  45.5 | 63.43 |
|       mountain      | 50.96 |  68.7 |
|        plant        | 44.83 | 55.89 |
|       curtain       | 61.78 | 80.67 |
|        chair        | 44.93 | 60.46 |
|         car         | 77.26 | 87.75 |
|        water        | 48.67 | 63.67 |
|       painting      | 65.28 | 76.29 |
|         sofa        | 53.84 | 74.68 |
|        shelf        | 35.85 | 52.32 |
|        house        | 22.53 | 29.28 |
|         sea         | 53.01 | 75.77 |
|        mirror       | 51.38 | 63.96 |
|         rug         |  49.7 | 63.67 |
|        field        | 32.67 | 51.06 |
|       armchair      |  29.1 | 39.73 |
|         seat        | 54.34 | 73.01 |
|        fence        | 32.56 | 46.63 |
|         desk        | 36.27 | 45.78 |
|         rock        | 35.75 | 55.59 |
|       wardrobe      | 47.72 | 63.07 |
|         lamp        | 48.83 | 61.74 |
|       bathtub       | 55.57 | 62.72 |
|       railing       | 28.55 | 33.76 |
|       cushion       | 43.32 | 56.96 |
|         base        | 17.88 | 24.57 |
|         box         | 15.65 | 22.67 |
|        column       | 33.65 | 49.77 |
|      signboard      | 26.24 | 33.59 |
|   chest of drawers  | 34.62 |  51.9 |
|       counter       | 18.64 | 24.44 |
|         sand        | 28.51 | 42.94 |
|         sink        | 52.77 | 66.01 |
|      skyscraper     | 60.88 | 70.41 |
|      fireplace      | 64.59 | 81.12 |
|     refrigerator    |  55.0 | 68.77 |
|      grandstand     | 31.75 | 64.96 |
|         path        | 18.99 | 28.08 |
|        stairs       | 27.06 | 34.65 |
|        runway       | 69.34 | 87.94 |
|         case        | 40.78 | 57.48 |
|      pool table     | 82.58 | 92.54 |
|        pillow       | 41.04 | 51.71 |
|     screen door     | 48.05 | 53.19 |
|       stairway      | 27.07 | 32.86 |
|        river        |  7.38 | 10.53 |
|        bridge       | 31.05 |  37.7 |
|       bookcase      | 35.31 | 46.46 |
|        blind        | 20.25 | 22.39 |
|     coffee table    |  47.8 | 74.66 |
|        toilet       | 73.97 | 80.16 |
|        flower       | 34.54 | 52.32 |
|         book        | 40.81 | 53.55 |
|         hill        |  7.87 | 15.49 |
|        bench        | 32.65 |  41.7 |
|      countertop     |  43.7 | 60.12 |
|        stove        | 49.38 |  61.3 |
|         palm        | 34.31 | 38.18 |
|    kitchen island   | 22.02 | 31.76 |
|       computer      | 48.14 | 55.97 |
|     swivel chair    | 34.68 | 44.04 |
|         boat        |  49.0 | 53.29 |
|         bar         | 21.92 | 24.83 |
|    arcade machine   | 38.07 | 42.42 |
|        hovel        | 16.04 | 19.72 |
|         bus         | 67.84 | 71.81 |
|        towel        | 41.81 | 57.78 |
|        light        | 41.59 | 46.76 |
|        truck        | 24.03 | 30.22 |
|        tower        |  31.8 |  41.3 |
|      chandelier     | 49.47 |  62.8 |
|        awning       | 19.93 | 23.61 |
|     streetlight     | 13.35 | 16.36 |
|        booth        |  26.0 | 27.36 |
| television receiver | 51.68 | 62.44 |
|       airplane      |  46.7 | 56.24 |
|      dirt track     |  0.47 |  1.76 |
|       apparel       |  25.6 | 40.14 |
|         pole        | 11.92 | 14.46 |
|         land        |  1.48 |  2.84 |
|      bannister      |  1.6  |  1.97 |
|      escalator      | 19.68 | 20.96 |
|       ottoman       | 24.25 | 30.32 |
|        bottle       | 27.62 |  39.2 |
|        buffet       | 32.24 | 35.79 |
|        poster       |  21.7 | 28.27 |
|        stage        |  9.36 |  17.7 |
|         van         | 32.16 |  38.1 |
|         ship        |  3.02 |  3.63 |
|       fountain      |  7.55 |  8.7  |
|    conveyer belt    | 72.83 | 75.05 |
|        canopy       |  8.9  |  9.34 |
|        washer       | 61.02 | 62.88 |
|      plaything      | 13.59 |  25.7 |
|    swimming pool    | 53.86 | 75.36 |
|        stool        | 26.58 | 33.62 |
|        barrel       | 22.98 |  49.2 |
|        basket       |  16.3 | 19.63 |
|      waterfall      |  62.2 | 85.77 |
|         tent        |  94.4 | 97.14 |
|         bag         |  2.32 |  2.59 |
|       minibike      |  59.6 | 71.89 |
|        cradle       | 68.72 | 89.35 |
|         oven        | 19.12 | 27.46 |
|         ball        |  41.7 | 51.25 |
|         food        | 44.37 | 55.56 |
|         step        |  5.09 |  5.58 |
|         tank        | 36.63 | 43.24 |
|      trade name     | 10.59 | 11.02 |
|      microwave      | 28.88 | 31.14 |
|         pot         | 32.05 |  36.8 |
|        animal       | 51.29 | 55.74 |
|       bicycle       | 40.97 | 57.53 |
|         lake        | 36.43 | 60.85 |
|      dishwasher     | 25.66 | 28.55 |
|        screen       | 59.16 | 81.36 |
|       blanket       |  6.48 |  7.81 |
|      sculpture      |  8.39 |  9.65 |
|         hood        | 31.63 | 36.46 |
|        sconce       | 29.95 |  35.3 |
|         vase        | 16.69 | 21.04 |
|    traffic light    | 20.75 | 26.62 |
|         tray        |  1.98 |  2.66 |
|        ashcan       | 33.36 | 42.82 |
|         fan         | 36.43 | 40.22 |
|         pier        | 13.64 | 14.66 |
|      crt screen     |  7.29 | 18.17 |
|        plate        | 31.11 |  34.9 |
|       monitor       | 39.46 | 43.11 |
|    bulletin board   | 28.49 | 39.77 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 37.67 | 42.72 |
|        glass        |  2.65 |  2.68 |
|        clock        | 22.48 |  24.6 |
|         flag        | 28.07 | 29.25 |
+---------------------+-------+-------+
09/15 18:04:34 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.0300  mIoU: 37.5900  mAcc: 47.1900  data_time: 0.0049  time: 7.2470
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
09/15 18:04:42 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1979261497
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1979261497
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:04:42 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/motion_blur'

09/15 18:04:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:04:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:04:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 18:04:49 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 18:06:21 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:59:54  time: 1.2993  data_time: 0.0017  memory: 19720  
09/15 18:07:26 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:49:46  time: 1.4727  data_time: 0.0018  memory: 19715  
09/15 18:08:19 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:43:13  time: 1.0456  data_time: 0.0017  memory: 19689  
09/15 18:09:20 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:40:36  time: 1.1878  data_time: 0.0018  memory: 19717  
09/15 18:10:16 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:38:09  time: 1.0019  data_time: 0.0017  memory: 19712  
09/15 18:11:11 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:36:06  time: 0.9318  data_time: 0.0019  memory: 19713  
09/15 18:12:08 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:34:27  time: 0.9511  data_time: 0.0029  memory: 19712  
09/15 18:13:03 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:32:54  time: 1.1058  data_time: 0.0016  memory: 19713  
09/15 18:13:45 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:30:45  time: 0.8927  data_time: 0.0016  memory: 19686  
09/15 18:14:31 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:29:05  time: 0.8194  data_time: 0.0017  memory: 19653  
09/15 18:15:19 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:27:40  time: 1.0682  data_time: 0.0023  memory: 19712  
09/15 18:16:03 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:26:13  time: 1.0035  data_time: 0.0019  memory: 19714  
09/15 18:16:54 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:25:05  time: 1.0939  data_time: 0.0016  memory: 19722  
09/15 18:17:48 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:24:06  time: 0.9173  data_time: 0.0019  memory: 19721  
09/15 18:18:44 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:23:10  time: 1.3448  data_time: 0.0033  memory: 19727  
09/15 18:19:26 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:21:55  time: 0.8354  data_time: 0.0018  memory: 19690  
09/15 18:20:08 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:20:43  time: 0.8509  data_time: 0.0024  memory: 512  
09/15 18:20:52 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:19:37  time: 0.8999  data_time: 0.0020  memory: 19678  
09/15 18:21:45 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:18:42  time: 1.1023  data_time: 0.0027  memory: 19709  
09/15 18:22:31 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:17:42  time: 0.8354  data_time: 0.0017  memory: 19710  
09/15 18:23:22 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:16:47  time: 1.2600  data_time: 0.0017  memory: 19729  
09/15 18:24:11 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:15:50  time: 0.8730  data_time: 0.0019  memory: 19692  
09/15 18:24:57 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:14:52  time: 0.9556  data_time: 0.0018  memory: 19666  
09/15 18:25:41 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:13:54  time: 0.8608  data_time: 0.0017  memory: 1709  
09/15 18:26:27 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:58  time: 0.9360  data_time: 0.0016  memory: 19695  
09/15 18:27:08 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:12:01  time: 0.8692  data_time: 0.0042  memory: 513  
09/15 18:27:53 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:11:06  time: 0.8042  data_time: 0.0016  memory: 19649  
09/15 18:28:43 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:10:14  time: 1.1113  data_time: 0.0016  memory: 19701  
09/15 18:29:27 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:09:20  time: 1.0605  data_time: 0.0022  memory: 19678  
09/15 18:30:09 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:08:26  time: 0.7836  data_time: 0.0016  memory: 512  
09/15 18:30:56 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:07:34  time: 0.8910  data_time: 0.0017  memory: 19706  
09/15 18:31:36 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:41  time: 0.8163  data_time: 0.0029  memory: 503  
09/15 18:32:23 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:50  time: 0.8257  data_time: 0.0022  memory: 19711  
09/15 18:33:11 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:00  time: 0.8936  data_time: 0.0018  memory: 19681  
09/15 18:33:57 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:09  time: 0.9104  data_time: 0.0016  memory: 19700  
09/15 18:34:39 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:18  time: 0.8512  data_time: 0.0019  memory: 19653  
09/15 18:35:21 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:28  time: 0.8217  data_time: 0.0019  memory: 461  
09/15 18:36:03 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:38  time: 0.8643  data_time: 0.0018  memory: 19721  
09/15 18:36:50 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:49  time: 0.8771  data_time: 0.0017  memory: 19661  
09/15 18:37:34 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7865  data_time: 0.0015  memory: 19724  
09/15 18:37:34 - mmengine - INFO - per class results:
09/15 18:37:34 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 70.58 | 84.51 |
|       building      | 76.78 | 91.03 |
|         sky         | 92.58 | 96.04 |
|        floor        |  75.0 |  87.5 |
|         tree        | 68.75 | 84.24 |
|       ceiling       | 78.67 | 90.21 |
|         road        |  77.4 | 85.76 |
|         bed         |  80.5 | 92.44 |
|      windowpane     | 53.07 | 70.91 |
|        grass        | 65.16 | 86.87 |
|       cabinet       | 52.48 | 66.12 |
|       sidewalk      | 55.95 | 74.87 |
|        person       | 69.35 | 88.71 |
|        earth        |  25.5 | 34.14 |
|         door        | 35.29 | 46.17 |
|        table        | 46.14 | 64.27 |
|       mountain      | 48.06 | 64.02 |
|        plant        | 44.42 | 58.08 |
|       curtain       | 63.19 | 76.14 |
|        chair        | 44.23 | 61.22 |
|         car         | 76.92 | 89.68 |
|        water        | 43.85 | 60.58 |
|       painting      | 64.16 |  78.8 |
|         sofa        | 52.95 | 73.16 |
|        shelf        | 34.28 |  51.9 |
|        house        | 30.85 | 44.67 |
|         sea         | 50.73 | 73.95 |
|        mirror       | 52.06 | 64.82 |
|         rug         | 54.69 | 66.73 |
|        field        | 30.46 |  42.1 |
|       armchair      | 32.39 | 45.34 |
|         seat        | 56.01 | 73.29 |
|        fence        |  28.3 |  39.9 |
|         desk        | 36.21 | 50.11 |
|         rock        | 32.98 |  54.8 |
|       wardrobe      | 45.05 | 60.06 |
|         lamp        | 48.54 | 65.26 |
|       bathtub       | 58.22 |  64.0 |
|       railing       | 29.87 | 44.17 |
|       cushion       |  41.8 | 54.53 |
|         base        |  21.4 | 30.04 |
|         box         | 17.21 | 24.52 |
|        column       | 32.67 | 51.17 |
|      signboard      | 28.17 | 38.79 |
|   chest of drawers  | 33.21 | 51.16 |
|       counter       | 27.19 | 35.72 |
|         sand        | 27.74 | 46.57 |
|         sink        | 52.28 | 69.72 |
|      skyscraper     | 41.77 | 46.74 |
|      fireplace      | 66.48 | 83.79 |
|     refrigerator    | 57.67 | 69.65 |
|      grandstand     | 31.62 | 56.35 |
|         path        | 16.55 | 25.21 |
|        stairs       | 22.18 | 26.52 |
|        runway       | 68.96 | 89.37 |
|         case        |  39.0 | 56.61 |
|      pool table     |  83.7 | 92.94 |
|        pillow       | 42.97 | 55.92 |
|     screen door     | 53.06 | 62.27 |
|       stairway      | 30.18 | 34.71 |
|        river        | 12.36 |  20.7 |
|        bridge       | 26.78 |  30.4 |
|       bookcase      | 36.79 | 54.87 |
|        blind        | 37.33 | 44.01 |
|     coffee table    | 45.84 | 72.48 |
|        toilet       | 73.55 | 83.31 |
|        flower       | 29.82 |  38.4 |
|         book        | 40.46 | 58.02 |
|         hill        |  3.42 |  5.41 |
|        bench        | 32.87 | 47.54 |
|      countertop     | 43.99 | 67.69 |
|        stove        | 52.69 | 65.56 |
|         palm        | 35.22 |  42.7 |
|    kitchen island   |  25.0 | 44.84 |
|       computer      |  51.7 |  61.9 |
|     swivel chair    | 38.06 |  51.4 |
|         boat        | 52.02 | 65.46 |
|         bar         | 22.43 | 25.34 |
|    arcade machine   | 40.82 | 43.01 |
|        hovel        | 26.17 | 30.12 |
|         bus         | 69.65 | 83.86 |
|        towel        | 38.76 | 56.68 |
|        light        |  47.2 | 57.35 |
|        truck        | 17.35 | 22.12 |
|        tower        | 10.54 | 14.93 |
|      chandelier     | 44.81 | 51.28 |
|        awning       | 21.35 | 26.39 |
|     streetlight     | 13.31 | 16.68 |
|        booth        | 29.79 | 30.64 |
| television receiver | 55.42 | 66.49 |
|       airplane      | 46.23 | 64.01 |
|      dirt track     |  8.03 | 35.38 |
|       apparel       | 18.71 | 27.04 |
|         pole        | 11.91 | 15.19 |
|         land        |  1.43 |  2.16 |
|      bannister      |  2.83 |  3.93 |
|      escalator      | 28.83 | 32.83 |
|       ottoman       | 24.14 |  34.2 |
|        bottle       | 22.98 | 31.99 |
|        buffet       | 36.08 | 38.96 |
|        poster       | 24.13 | 29.91 |
|        stage        |  9.14 | 17.47 |
|         van         | 28.23 |  34.3 |
|         ship        |  3.1  |  3.29 |
|       fountain      |  2.1  |  2.13 |
|    conveyer belt    | 72.32 | 80.77 |
|        canopy       |  9.14 |  9.65 |
|        washer       | 63.96 | 67.08 |
|      plaything      | 12.92 |  20.7 |
|    swimming pool    |  48.7 | 67.31 |
|        stool        | 25.74 | 35.01 |
|        barrel       | 29.76 | 47.49 |
|        basket       | 14.01 | 23.04 |
|      waterfall      | 64.62 | 79.24 |
|         tent        | 90.91 | 97.37 |
|         bag         |  6.15 |  8.1  |
|       minibike      | 55.75 | 70.92 |
|        cradle       | 76.26 | 86.77 |
|         oven        | 18.58 | 30.91 |
|         ball        | 40.77 |  51.3 |
|         food        | 38.94 | 46.72 |
|         step        |  4.28 |  5.1  |
|         tank        | 35.99 |  42.6 |
|      trade name     | 20.64 | 22.72 |
|      microwave      | 32.78 | 36.57 |
|         pot         | 31.35 | 39.55 |
|        animal       | 49.02 |  55.0 |
|       bicycle       | 40.88 | 64.63 |
|         lake        | 39.72 | 62.24 |
|      dishwasher     |  41.8 | 50.79 |
|        screen       | 58.12 | 82.05 |
|       blanket       | 10.24 | 12.85 |
|      sculpture      |  7.75 |  8.92 |
|         hood        | 44.17 | 51.96 |
|        sconce       | 29.19 | 40.18 |
|         vase        |  16.8 | 23.23 |
|    traffic light    | 18.68 | 29.21 |
|         tray        |  2.47 |  3.13 |
|        ashcan       | 26.82 | 42.05 |
|         fan         | 48.07 | 58.52 |
|         pier        | 26.52 | 36.03 |
|      crt screen     |  4.95 |  8.92 |
|        plate        |  40.2 |  52.3 |
|       monitor       | 23.32 | 28.99 |
|    bulletin board   | 24.96 | 42.58 |
|        shower       |  0.43 |  1.45 |
|       radiator      | 40.41 | 45.14 |
|        glass        |  3.07 |  3.2  |
|        clock        | 24.71 | 27.59 |
|         flag        | 24.66 | 26.27 |
+---------------------+-------+-------+
09/15 18:37:34 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.7500  mIoU: 38.0100  mAcc: 48.8500  data_time: 0.0023  time: 0.9826
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
09/15 18:37:42 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 555573731
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 555573731
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 18:37:42 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/zoom_blur'

09/15 18:37:51 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 18:37:51 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 18:37:52 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 18:37:52 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 18:39:21 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:57:52  time: 1.2245  data_time: 0.0018  memory: 19720  
09/15 18:40:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:46:57  time: 1.3747  data_time: 0.0039  memory: 19715  
09/15 18:41:09 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:40:35  time: 0.9821  data_time: 0.0018  memory: 19689  
09/15 18:42:05 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:37:57  time: 1.1017  data_time: 0.0018  memory: 19717  
09/15 18:42:56 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:35:30  time: 0.8937  data_time: 0.0017  memory: 19712  
09/15 18:43:47 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:33:28  time: 0.8192  data_time: 0.0036  memory: 19713  
09/15 18:44:39 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:31:57  time: 0.8601  data_time: 0.0027  memory: 19712  
09/15 18:45:29 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:30:26  time: 0.9765  data_time: 0.0016  memory: 19713  
09/15 18:46:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:28:26  time: 0.8069  data_time: 0.0017  memory: 19686  
09/15 18:46:49 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:26:51  time: 0.7654  data_time: 0.0016  memory: 19653  
09/15 18:47:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:25:33  time: 0.9630  data_time: 0.0019  memory: 19712  
09/15 18:48:16 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:24:16  time: 0.9729  data_time: 0.0019  memory: 19714  
09/15 18:49:02 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:23:11  time: 1.0040  data_time: 0.0016  memory: 19722  
09/15 18:49:51 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:22:15  time: 0.8142  data_time: 0.0018  memory: 19721  
09/15 18:50:40 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:21:20  time: 1.2347  data_time: 0.0018  memory: 19727  
09/15 18:51:19 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:20:10  time: 0.7841  data_time: 0.0019  memory: 19690  
09/15 18:51:59 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:19:05  time: 0.7883  data_time: 0.0019  memory: 512  
09/15 18:52:38 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:18:03  time: 0.8150  data_time: 0.0016  memory: 19678  
09/15 18:53:26 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:17:12  time: 0.9876  data_time: 0.0018  memory: 19709  
09/15 18:54:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:16:15  time: 0.7531  data_time: 0.0017  memory: 19710  
09/15 18:54:55 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:15:25  time: 1.1254  data_time: 0.0017  memory: 19729  
09/15 18:55:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:14:32  time: 0.7665  data_time: 0.0018  memory: 19692  
09/15 18:56:20 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:13:38  time: 0.8625  data_time: 0.0017  memory: 19666  
09/15 18:57:00 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:12:45  time: 0.7770  data_time: 0.0018  memory: 1709  
09/15 18:57:41 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:11:53  time: 0.8384  data_time: 0.0017  memory: 19695  
09/15 18:58:17 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:10:59  time: 0.7834  data_time: 0.0017  memory: 513  
09/15 18:58:57 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:09  time: 0.7216  data_time: 0.0016  memory: 19649  
09/15 18:59:42 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:09:21  time: 0.9822  data_time: 0.0016  memory: 19701  
09/15 19:00:17 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:08:30  time: 0.8100  data_time: 0.0015  memory: 19678  
09/15 19:00:54 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:07:40  time: 0.7273  data_time: 0.0018  memory: 512  
09/15 19:01:33 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:06:52  time: 0.7347  data_time: 0.0016  memory: 19706  
09/15 19:02:08 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:03  time: 0.7125  data_time: 0.0017  memory: 503  
09/15 19:02:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:17  time: 0.6606  data_time: 0.0015  memory: 19711  
09/15 19:03:26 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:30  time: 0.7240  data_time: 0.0017  memory: 19681  
09/15 19:04:05 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:03:44  time: 0.7257  data_time: 0.0017  memory: 19700  
09/15 19:04:40 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:58  time: 0.7238  data_time: 0.0018  memory: 19653  
09/15 19:05:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:13  time: 0.7188  data_time: 0.0018  memory: 461  
09/15 19:05:51 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:28  time: 0.6958  data_time: 0.0016  memory: 19721  
09/15 19:06:29 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:44  time: 0.6983  data_time: 0.0016  memory: 19661  
09/15 19:07:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.6496  data_time: 0.0014  memory: 19724  
09/15 19:07:06 - mmengine - INFO - per class results:
09/15 19:07:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 53.66 | 83.72 |
|       building      | 63.97 | 83.31 |
|         sky         | 84.75 | 90.14 |
|        floor        | 53.77 | 78.97 |
|         tree        |  27.4 | 30.61 |
|       ceiling       | 60.64 | 84.19 |
|         road        | 59.77 | 77.04 |
|         bed         | 63.14 |  86.4 |
|      windowpane     | 39.68 | 56.69 |
|        grass        | 46.84 | 67.14 |
|       cabinet       | 38.55 | 46.78 |
|       sidewalk      |  27.7 | 34.56 |
|        person       | 48.13 | 71.55 |
|        earth        |  7.26 |  9.24 |
|         door        | 13.24 | 15.44 |
|        table        | 29.48 |  38.6 |
|       mountain      |  32.5 | 39.74 |
|        plant        | 20.84 | 53.64 |
|       curtain       | 36.67 | 46.01 |
|        chair        | 27.39 | 37.53 |
|         car         | 58.82 | 72.96 |
|        water        | 28.68 | 43.03 |
|       painting      | 41.69 | 63.54 |
|         sofa        | 33.81 | 53.56 |
|        shelf        | 24.17 | 39.98 |
|        house        | 22.83 | 31.39 |
|         sea         | 30.37 | 47.68 |
|        mirror       | 37.16 | 44.58 |
|         rug         |  14.3 | 15.15 |
|        field        | 19.86 | 34.45 |
|       armchair      | 15.72 | 20.93 |
|         seat        | 21.87 | 32.26 |
|        fence        | 15.86 | 21.13 |
|         desk        | 17.49 | 20.56 |
|         rock        | 22.76 | 28.42 |
|       wardrobe      | 31.57 | 36.22 |
|         lamp        | 30.03 | 40.79 |
|       bathtub       |  45.0 | 52.89 |
|       railing       |  7.89 |  9.65 |
|       cushion       | 22.83 |  27.5 |
|         base        |  2.23 |  2.45 |
|         box         |  2.1  |  2.5  |
|        column       | 15.32 | 17.34 |
|      signboard      | 16.39 | 20.65 |
|   chest of drawers  | 29.49 |  41.1 |
|       counter       |  5.65 |  8.98 |
|         sand        | 10.09 | 21.64 |
|         sink        | 34.09 | 42.76 |
|      skyscraper     | 24.47 | 32.91 |
|      fireplace      | 41.62 | 51.18 |
|     refrigerator    | 31.92 | 34.93 |
|      grandstand     | 33.21 | 43.52 |
|         path        |  2.67 |  2.86 |
|        stairs       |  0.06 |  0.07 |
|        runway       | 52.05 | 69.83 |
|         case        | 14.43 | 15.64 |
|      pool table     |  82.8 | 88.75 |
|        pillow       | 33.95 | 45.35 |
|     screen door     | 32.73 | 40.53 |
|       stairway      | 11.23 | 12.28 |
|        river        | 10.41 | 22.36 |
|        bridge       | 34.04 | 36.61 |
|       bookcase      | 20.07 | 23.74 |
|        blind        | 10.19 | 11.23 |
|     coffee table    | 27.38 | 33.19 |
|        toilet       | 55.89 | 76.75 |
|        flower       | 15.16 | 20.76 |
|         book        |  15.1 |  19.3 |
|         hill        |  7.58 |  18.0 |
|        bench        | 10.99 | 15.66 |
|      countertop     | 30.51 | 44.41 |
|        stove        | 38.65 | 45.89 |
|         palm        |  8.6  | 40.03 |
|    kitchen island   | 21.46 | 27.81 |
|       computer      | 31.96 | 35.25 |
|     swivel chair    |  7.47 |  8.08 |
|         boat        |  0.22 |  0.24 |
|         bar         | 13.62 | 14.64 |
|    arcade machine   |  5.93 |  6.33 |
|        hovel        |  13.7 | 14.69 |
|         bus         | 48.83 | 51.97 |
|        towel        | 15.66 | 28.67 |
|        light        | 16.76 | 20.14 |
|        truck        |  1.44 |  1.64 |
|        tower        |  3.11 |  3.44 |
|      chandelier     |  8.48 |  8.78 |
|        awning       |  9.63 | 10.21 |
|     streetlight     |  1.5  |  1.56 |
|        booth        |  1.42 |  1.51 |
| television receiver | 32.03 | 39.55 |
|       airplane      | 30.84 | 58.04 |
|      dirt track     |  2.76 | 20.33 |
|       apparel       |  0.77 |  0.88 |
|         pole        |  1.81 |  1.95 |
|         land        |  0.78 |  1.17 |
|      bannister      |  0.18 |  0.24 |
|      escalator      |  5.75 | 12.18 |
|       ottoman       | 15.65 | 20.76 |
|        bottle       | 14.77 | 25.29 |
|        buffet       | 14.98 | 14.98 |
|        poster       |  4.32 |  6.34 |
|        stage        |  7.44 | 10.33 |
|         van         |  9.42 |  9.65 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    | 36.57 | 44.58 |
|        canopy       |  0.81 |  0.81 |
|        washer       | 47.71 | 53.34 |
|      plaything      |  4.01 |  4.51 |
|    swimming pool    | 30.34 | 39.09 |
|        stool        | 12.86 | 15.48 |
|        barrel       |  0.5  |  1.82 |
|        basket       |  7.83 | 11.32 |
|      waterfall      | 21.91 | 44.69 |
|         tent        | 73.63 |  84.5 |
|         bag         |  0.76 |  1.24 |
|       minibike      |  5.86 |  5.94 |
|        cradle       | 29.88 | 31.36 |
|         oven        | 15.23 | 19.75 |
|         ball        | 10.68 | 17.26 |
|         food        | 14.74 | 17.02 |
|         step        |  3.99 |  5.77 |
|         tank        | 27.71 | 32.58 |
|      trade name     |  2.41 |  2.43 |
|      microwave      | 18.97 | 21.87 |
|         pot         |  8.21 |  9.4  |
|        animal       | 17.17 | 17.63 |
|       bicycle       |  2.14 |  3.01 |
|         lake        |  0.83 |  1.43 |
|      dishwasher     | 12.01 | 14.41 |
|        screen       | 50.96 | 74.25 |
|       blanket       |  3.78 |  6.33 |
|      sculpture      |  2.37 |  4.07 |
|         hood        | 20.21 | 22.78 |
|        sconce       |  11.1 | 16.27 |
|         vase        |  9.06 | 17.32 |
|    traffic light    |  6.98 |  7.46 |
|         tray        |  0.89 |  1.2  |
|        ashcan       | 13.06 | 16.59 |
|         fan         | 16.54 | 19.46 |
|         pier        |  2.85 |  2.86 |
|      crt screen     | 10.46 | 10.75 |
|        plate        | 19.81 | 24.05 |
|       monitor       |  0.87 |  0.89 |
|    bulletin board   | 11.11 | 12.27 |
|        shower       |  0.12 |  0.54 |
|       radiator      | 21.41 | 26.94 |
|        glass        |  0.7  |  0.87 |
|        clock        |  3.45 |  3.53 |
|         flag        |  8.15 |  8.56 |
+---------------------+-------+-------+
09/15 19:07:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 63.6900  mIoU: 20.6800  mAcc: 27.3700  data_time: 0.0021  time: 0.8771
Finished processing corruption type: zoom_blur
Processing corruption type: snow
09/15 19:07:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1817480769
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1817480769
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:07:33 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/snow'

09/15 19:07:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:07:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:07:44 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:07:44 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:08:48 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:41:46  time: 0.6701  data_time: 0.0017  memory: 19720  
09/15 19:09:22 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:30:56  time: 0.8364  data_time: 0.0017  memory: 19715  
09/15 19:09:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:24:49  time: 0.4477  data_time: 0.0017  memory: 19689  
09/15 19:10:14 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:27  time: 0.5810  data_time: 0.0017  memory: 19717  
09/15 19:10:40 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:20:28  time: 0.3804  data_time: 0.0016  memory: 19712  
09/15 19:11:06 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:19:03  time: 0.3144  data_time: 0.0025  memory: 19713  
09/15 19:11:34 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:18:02  time: 0.3875  data_time: 0.0017  memory: 19712  
09/15 19:11:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:16:59  time: 0.4679  data_time: 0.0017  memory: 19713  
09/15 19:12:16 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:15:36  time: 0.3546  data_time: 0.0017  memory: 19686  
09/15 19:12:34 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:14:28  time: 0.2976  data_time: 0.0017  memory: 19653  
09/15 19:12:56 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:13:42  time: 0.7755  data_time: 0.0043  memory: 19712  
09/15 19:13:15 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:12:50  time: 0.4783  data_time: 0.0018  memory: 19714  
09/15 19:13:37 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:11  time: 0.5280  data_time: 0.0016  memory: 19722  
09/15 19:14:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:38  time: 0.3199  data_time: 0.0018  memory: 19721  
09/15 19:14:25 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:08  time: 0.7628  data_time: 0.0017  memory: 19727  
09/15 19:14:42 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:26  time: 0.3264  data_time: 0.0026  memory: 19690  
09/15 19:14:57 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:45  time: 0.3070  data_time: 0.0018  memory: 512  
09/15 19:15:14 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:10  time: 0.3924  data_time: 0.0017  memory: 19678  
09/15 19:15:38 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:43  time: 0.5150  data_time: 0.0018  memory: 19709  
09/15 19:15:56 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:12  time: 0.2906  data_time: 0.0017  memory: 19710  
09/15 19:16:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:45  time: 0.6212  data_time: 0.0017  memory: 19729  
09/15 19:16:39 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:17  time: 0.3092  data_time: 0.0021  memory: 19692  
09/15 19:16:56 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:47  time: 0.3728  data_time: 0.0017  memory: 19666  
09/15 19:17:11 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:18  time: 0.3102  data_time: 0.0017  memory: 1709  
09/15 19:17:29 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:51  time: 0.3689  data_time: 0.0016  memory: 19695  
09/15 19:17:44 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:22  time: 0.3029  data_time: 0.0017  memory: 513  
09/15 19:18:00 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:56  time: 0.2856  data_time: 0.0017  memory: 19649  
09/15 19:18:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:32  time: 0.4729  data_time: 0.0016  memory: 19701  
09/15 19:18:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:07  time: 0.4089  data_time: 0.0016  memory: 19678  
09/15 19:18:52 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:42  time: 0.2944  data_time: 0.0016  memory: 512  
09/15 19:19:10 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:19  time: 0.3132  data_time: 0.0017  memory: 19706  
09/15 19:19:25 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:55  time: 0.3025  data_time: 0.0017  memory: 503  
09/15 19:19:48 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:33  time: 0.2826  data_time: 0.0017  memory: 19711  
09/15 19:20:06 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:10  time: 0.3022  data_time: 0.0018  memory: 19681  
09/15 19:20:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:48  time: 0.3061  data_time: 0.0016  memory: 19700  
09/15 19:20:40 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:26  time: 0.3015  data_time: 0.0018  memory: 19653  
09/15 19:20:55 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:04  time: 0.3142  data_time: 0.0018  memory: 461  
09/15 19:21:11 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:42  time: 0.3013  data_time: 0.0017  memory: 19721  
09/15 19:21:32 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:21  time: 0.2974  data_time: 0.0016  memory: 19661  
09/15 19:21:50 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2764  data_time: 0.0015  memory: 19724  
09/15 19:21:50 - mmengine - INFO - per class results:
09/15 19:21:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 57.04 | 87.01 |
|       building      | 69.57 | 90.38 |
|         sky         | 76.82 | 80.14 |
|        floor        |  62.1 | 83.51 |
|         tree        | 66.07 | 82.07 |
|       ceiling       | 59.82 | 69.67 |
|         road        | 55.95 | 60.05 |
|         bed         | 67.79 | 75.04 |
|      windowpane     | 46.67 | 58.43 |
|        grass        | 59.68 | 86.95 |
|       cabinet       | 35.67 | 43.66 |
|       sidewalk      | 42.01 | 66.36 |
|        person       | 66.08 | 83.23 |
|        earth        | 24.17 | 31.71 |
|         door        |  7.77 |  8.29 |
|        table        |  34.8 | 46.72 |
|       mountain      | 34.75 | 56.58 |
|        plant        | 40.07 | 45.91 |
|       curtain       |  45.8 | 53.69 |
|        chair        | 39.97 | 56.74 |
|         car         | 72.79 | 83.41 |
|        water        | 33.85 | 61.54 |
|       painting      | 52.17 | 61.87 |
|         sofa        | 39.77 | 52.59 |
|        shelf        | 28.23 | 44.65 |
|        house        | 17.65 | 19.26 |
|         sea         | 30.98 |  51.0 |
|        mirror       | 32.69 | 46.01 |
|         rug         |  34.5 | 39.34 |
|        field        | 18.25 | 31.15 |
|       armchair      | 22.71 | 35.03 |
|         seat        | 33.94 | 51.95 |
|        fence        | 19.16 | 44.14 |
|         desk        | 21.73 | 24.75 |
|         rock        | 36.85 | 51.79 |
|       wardrobe      | 33.27 | 36.58 |
|         lamp        | 38.09 | 43.61 |
|       bathtub       | 18.31 | 23.36 |
|       railing       |  18.7 | 25.65 |
|       cushion       | 30.56 | 36.97 |
|         base        |  7.73 | 20.32 |
|         box         | 11.45 | 27.88 |
|        column       | 23.88 | 39.28 |
|      signboard      | 24.96 | 40.22 |
|   chest of drawers  | 24.94 | 35.08 |
|       counter       | 15.13 | 17.89 |
|         sand        |  7.24 | 10.68 |
|         sink        | 37.09 | 45.51 |
|      skyscraper     | 45.25 | 61.88 |
|      fireplace      | 41.78 | 49.96 |
|     refrigerator    | 42.46 | 47.49 |
|      grandstand     | 18.32 | 57.81 |
|         path        | 14.55 |  21.1 |
|        stairs       | 15.14 | 22.51 |
|        runway       | 32.57 | 34.48 |
|         case        | 35.62 | 47.46 |
|      pool table     | 69.36 | 72.17 |
|        pillow       | 30.39 | 37.79 |
|     screen door     | 24.26 | 31.01 |
|       stairway      | 21.96 |  33.2 |
|        river        |  2.91 |  4.72 |
|        bridge       |  50.3 | 64.44 |
|       bookcase      | 14.54 | 15.48 |
|        blind        |  3.9  |  4.02 |
|     coffee table    | 32.09 | 41.07 |
|        toilet       | 46.78 |  52.4 |
|        flower       | 23.36 | 36.59 |
|         book        | 31.94 | 40.81 |
|         hill        | 12.03 | 15.39 |
|        bench        | 16.51 | 17.45 |
|      countertop     | 32.33 | 50.49 |
|        stove        | 39.61 | 46.31 |
|         palm        |  39.3 | 56.58 |
|    kitchen island   | 15.23 | 25.06 |
|       computer      | 22.25 | 23.14 |
|     swivel chair    |  8.45 |  9.02 |
|         boat        | 17.15 | 21.87 |
|         bar         | 17.11 | 18.59 |
|    arcade machine   | 20.95 | 23.03 |
|        hovel        | 30.55 | 37.27 |
|         bus         |  62.2 | 83.39 |
|        towel        | 22.08 | 27.98 |
|        light        | 12.97 | 13.27 |
|        truck        |  7.71 | 11.18 |
|        tower        | 23.96 | 35.42 |
|      chandelier     | 39.87 | 47.99 |
|        awning       |  7.21 |  7.95 |
|     streetlight     | 11.24 | 11.85 |
|        booth        | 26.43 |  29.2 |
| television receiver | 19.35 | 20.74 |
|       airplane      | 32.66 | 50.34 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  20.6 |  34.9 |
|         pole        |  8.61 |  10.8 |
|         land        |  0.0  |  0.0  |
|      bannister      |  1.56 |  1.84 |
|      escalator      |  13.1 | 17.84 |
|       ottoman       | 11.15 | 11.94 |
|        bottle       | 20.51 | 42.18 |
|        buffet       |  4.36 |  4.85 |
|        poster       | 13.59 | 26.03 |
|        stage        |  9.19 | 10.52 |
|         van         | 32.15 | 46.66 |
|         ship        |  1.77 |  2.56 |
|       fountain      | 15.95 | 18.09 |
|    conveyer belt    | 23.66 | 25.67 |
|        canopy       |  2.48 |  2.62 |
|        washer       | 47.99 | 49.98 |
|      plaything      |  8.3  | 11.06 |
|    swimming pool    |  49.8 |  79.1 |
|        stool        | 17.97 |  22.9 |
|        barrel       |  0.0  |  0.0  |
|        basket       | 20.68 | 26.55 |
|      waterfall      | 49.67 | 73.58 |
|         tent        | 73.99 | 97.67 |
|         bag         |  2.18 |  3.14 |
|       minibike      | 37.43 | 50.54 |
|        cradle       | 38.99 | 44.06 |
|         oven        |  4.13 |  4.76 |
|         ball        | 38.97 | 51.08 |
|         food        | 38.56 | 43.55 |
|         step        |  0.35 |  0.41 |
|         tank        | 21.51 | 25.15 |
|      trade name     |  5.69 |  5.89 |
|      microwave      |  15.0 | 15.94 |
|         pot         | 24.51 | 27.42 |
|        animal       | 48.26 | 55.97 |
|       bicycle       | 39.28 | 59.47 |
|         lake        | 39.28 | 39.94 |
|      dishwasher     | 21.99 | 22.34 |
|        screen       |  43.2 | 53.37 |
|       blanket       |  1.56 |  1.58 |
|      sculpture      |  8.48 | 15.77 |
|         hood        | 15.36 | 16.82 |
|        sconce       | 12.82 | 14.81 |
|         vase        | 20.04 | 32.07 |
|    traffic light    | 19.19 | 24.32 |
|         tray        |  1.72 |  2.21 |
|        ashcan       | 16.77 | 20.55 |
|         fan         | 18.73 | 19.74 |
|         pier        |  6.22 |  6.56 |
|      crt screen     |  7.35 | 20.98 |
|        plate        | 36.73 | 42.42 |
|       monitor       |  25.3 | 37.73 |
|    bulletin board   | 17.96 | 19.77 |
|        shower       |  0.11 |  1.0  |
|       radiator      |  5.89 |  6.04 |
|        glass        |  4.79 |  5.32 |
|        clock        |  13.3 |  17.9 |
|         flag        | 18.97 | 25.98 |
+---------------------+-------+-------+
09/15 19:21:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 68.5300  mIoU: 26.8800  mAcc: 35.2000  data_time: 0.0022  time: 0.4228
Finished processing corruption type: snow
Processing corruption type: frost
09/15 19:22:43 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 466148073
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 466148073
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:22:43 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/frost'

09/15 19:23:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:23:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:23:14 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:23:15 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:24:37 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:19  time: 0.4437  data_time: 0.0018  memory: 19720  
09/15 19:24:59 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:32:58  time: 0.6029  data_time: 0.0031  memory: 19715  
09/15 19:25:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:51  time: 0.2162  data_time: 0.0018  memory: 19689  
09/15 19:25:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:20:02  time: 0.3520  data_time: 0.0019  memory: 19717  
09/15 19:25:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:21  time: 0.1624  data_time: 0.0037  memory: 19712  
09/15 19:25:58 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:23  time: 0.0548  data_time: 0.0018  memory: 19713  
09/15 19:26:13 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:14:01  time: 0.1533  data_time: 0.0033  memory: 19712  
09/15 19:26:26 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:45  time: 0.2261  data_time: 0.0016  memory: 19713  
09/15 19:26:32 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:18  time: 0.1235  data_time: 0.0016  memory: 19686  
09/15 19:26:36 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:05  time: 0.0552  data_time: 0.0017  memory: 19653  
09/15 19:26:42 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:06  time: 0.1903  data_time: 0.0017  memory: 19712  
09/15 19:26:47 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:16  time: 0.1930  data_time: 0.0018  memory: 19714  
09/15 19:26:57 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:41  time: 0.2647  data_time: 0.0015  memory: 19722  
09/15 19:27:07 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:12  time: 0.0530  data_time: 0.0018  memory: 19721  
09/15 19:27:19 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:47  time: 0.5211  data_time: 0.0017  memory: 19727  
09/15 19:27:24 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:13  time: 0.0488  data_time: 0.0018  memory: 19690  
09/15 19:27:26 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:40  time: 0.0492  data_time: 0.0018  memory: 512  
09/15 19:27:31 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:13  time: 0.1543  data_time: 0.0016  memory: 19678  
09/15 19:27:42 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:55  time: 0.2661  data_time: 0.0018  memory: 19709  
09/15 19:27:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:33  time: 0.0483  data_time: 0.0016  memory: 19710  
09/15 19:27:57 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:15  time: 0.3680  data_time: 0.0017  memory: 19729  
09/15 19:28:05 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:57  time: 0.0475  data_time: 0.0017  memory: 19692  
09/15 19:28:10 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:37  time: 0.1222  data_time: 0.0016  memory: 19666  
09/15 19:28:12 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:18  time: 0.0488  data_time: 0.0016  memory: 1709  
09/15 19:28:18 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:01  time: 0.1367  data_time: 0.0017  memory: 19695  
09/15 19:28:20 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:44  time: 0.0491  data_time: 0.0017  memory: 513  
09/15 19:28:24 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:28  time: 0.0514  data_time: 0.0017  memory: 19649  
09/15 19:28:32 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:16  time: 0.2131  data_time: 0.0017  memory: 19701  
09/15 19:28:37 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:02  time: 0.1525  data_time: 0.0016  memory: 19678  
09/15 19:28:39 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:48  time: 0.0466  data_time: 0.0016  memory: 512  
09/15 19:28:43 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:35  time: 0.0482  data_time: 0.0017  memory: 19706  
09/15 19:28:45 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:22  time: 0.0480  data_time: 0.0018  memory: 503  
09/15 19:28:55 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:12  time: 0.0471  data_time: 0.0016  memory: 19711  
09/15 19:29:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:01  time: 0.0475  data_time: 0.0018  memory: 19681  
09/15 19:29:06 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:50  time: 0.0489  data_time: 0.0016  memory: 19700  
09/15 19:29:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:39  time: 0.0502  data_time: 0.0018  memory: 19653  
09/15 19:29:11 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:28  time: 0.0540  data_time: 0.0018  memory: 461  
09/15 19:29:15 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0511  data_time: 0.0017  memory: 19721  
09/15 19:29:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:09  time: 0.0484  data_time: 0.0016  memory: 19661  
09/15 19:29:27 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0444  data_time: 0.0015  memory: 19724  
09/15 19:29:27 - mmengine - INFO - per class results:
09/15 19:29:27 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 60.33 | 86.96 |
|       building      | 75.92 | 88.01 |
|         sky         | 75.63 | 78.68 |
|        floor        | 66.15 | 85.07 |
|         tree        | 65.53 | 85.81 |
|       ceiling       | 66.13 | 75.56 |
|         road        | 71.58 | 79.62 |
|         bed         | 72.89 | 82.43 |
|      windowpane     | 47.96 | 64.16 |
|        grass        | 61.08 | 81.12 |
|       cabinet       | 42.58 | 50.81 |
|       sidewalk      | 48.35 | 59.57 |
|        person       | 66.79 | 85.04 |
|        earth        |  27.7 | 48.46 |
|         door        | 19.82 | 25.58 |
|        table        | 38.81 | 58.44 |
|       mountain      | 28.86 | 63.54 |
|        plant        | 42.63 | 52.12 |
|       curtain       | 50.94 | 60.42 |
|        chair        | 41.53 | 56.02 |
|         car         | 76.54 | 86.09 |
|        water        | 42.65 | 61.31 |
|       painting      | 54.97 | 73.07 |
|         sofa        | 42.56 |  63.2 |
|        shelf        | 29.28 | 43.17 |
|        house        | 38.33 | 51.03 |
|         sea         | 32.19 | 45.53 |
|        mirror       | 40.96 | 52.66 |
|         rug         |  40.6 | 43.99 |
|        field        | 21.21 | 32.62 |
|       armchair      | 23.68 |  36.2 |
|         seat        |  39.6 | 45.29 |
|        fence        | 30.11 | 43.67 |
|         desk        | 23.51 | 27.66 |
|         rock        | 33.11 | 49.39 |
|       wardrobe      | 28.75 | 31.68 |
|         lamp        | 42.17 | 52.19 |
|       bathtub       | 30.26 | 38.81 |
|       railing       | 24.25 | 33.93 |
|       cushion       |  37.1 | 51.41 |
|         base        |  6.41 |  8.35 |
|         box         | 10.61 | 14.12 |
|        column       | 29.65 | 42.55 |
|      signboard      | 28.32 | 40.73 |
|   chest of drawers  | 30.37 | 35.51 |
|       counter       | 20.85 | 28.71 |
|         sand        | 11.82 | 16.76 |
|         sink        | 43.88 | 55.59 |
|      skyscraper     | 51.56 | 59.39 |
|      fireplace      | 44.11 | 61.98 |
|     refrigerator    | 35.79 | 39.14 |
|      grandstand     | 39.98 | 61.42 |
|         path        | 14.58 | 21.66 |
|        stairs       | 23.33 | 34.65 |
|        runway       | 44.07 | 50.67 |
|         case        | 29.19 | 40.57 |
|      pool table     | 80.88 | 85.32 |
|        pillow       | 33.33 | 39.08 |
|     screen door     | 26.27 | 61.09 |
|       stairway      | 28.41 | 41.96 |
|        river        |  2.26 |  3.63 |
|        bridge       | 29.08 | 35.22 |
|       bookcase      | 30.94 | 42.11 |
|        blind        | 16.86 | 17.73 |
|     coffee table    | 43.64 | 63.59 |
|        toilet       | 48.68 | 53.48 |
|        flower       | 29.23 | 41.65 |
|         book        | 41.31 | 58.25 |
|         hill        |  9.7  | 15.86 |
|        bench        | 24.26 |  34.8 |
|      countertop     | 38.66 | 59.16 |
|        stove        | 24.52 | 25.56 |
|         palm        | 41.82 | 56.85 |
|    kitchen island   | 17.11 | 26.55 |
|       computer      | 38.72 | 43.32 |
|     swivel chair    | 21.85 | 23.62 |
|         boat        | 53.69 | 61.47 |
|         bar         | 26.38 | 29.53 |
|    arcade machine   | 15.32 | 15.59 |
|        hovel        | 34.46 | 40.47 |
|         bus         | 59.42 | 64.49 |
|        towel        | 30.26 | 48.55 |
|        light        | 29.66 | 31.51 |
|        truck        | 18.24 |  22.6 |
|        tower        | 13.27 | 17.35 |
|      chandelier     | 46.75 |  60.6 |
|        awning       | 18.06 | 19.57 |
|     streetlight     | 13.03 | 14.42 |
|        booth        | 29.37 | 35.52 |
| television receiver | 21.47 | 23.67 |
|       airplane      | 42.67 | 54.71 |
|      dirt track     |  3.49 |  16.3 |
|       apparel       | 24.13 | 33.23 |
|         pole        | 11.07 | 14.65 |
|         land        |  0.16 |  0.2  |
|      bannister      |  3.75 |  5.41 |
|      escalator      |  4.98 |  5.4  |
|       ottoman       | 16.88 | 23.72 |
|        bottle       | 27.67 | 44.39 |
|        buffet       | 26.45 | 29.85 |
|        poster       |  9.13 | 11.36 |
|        stage        |  8.37 |  9.21 |
|         van         | 30.92 | 39.15 |
|         ship        |  1.74 |  1.9  |
|       fountain      |  3.36 |  4.28 |
|    conveyer belt    | 57.25 |  58.1 |
|        canopy       |  6.15 |  6.48 |
|        washer       | 59.18 | 64.47 |
|      plaything      | 10.55 | 12.21 |
|    swimming pool    | 48.83 | 66.44 |
|        stool        | 26.94 | 36.33 |
|        barrel       |  3.84 |  9.18 |
|        basket       | 20.37 | 26.24 |
|      waterfall      | 32.95 | 42.62 |
|         tent        | 57.35 |  64.6 |
|         bag         |  5.09 |  6.23 |
|       minibike      | 41.36 | 55.49 |
|        cradle       | 60.41 | 71.72 |
|         oven        | 22.98 | 33.42 |
|         ball        | 42.78 | 54.32 |
|         food        | 42.44 | 51.41 |
|         step        |  3.74 |  5.92 |
|         tank        | 23.74 | 25.98 |
|      trade name     | 17.27 | 19.08 |
|      microwave      | 22.88 | 23.85 |
|         pot         | 27.06 |  31.2 |
|        animal       | 49.87 | 60.09 |
|       bicycle       |  44.1 |  64.9 |
|         lake        | 47.11 | 58.86 |
|      dishwasher     | 33.98 |  37.7 |
|        screen       | 33.19 | 36.72 |
|       blanket       |  7.72 |  8.87 |
|      sculpture      | 18.02 | 38.27 |
|         hood        |  14.7 | 16.48 |
|        sconce       | 20.41 | 25.21 |
|         vase        | 23.95 |  38.8 |
|    traffic light    | 17.86 | 22.09 |
|         tray        |  1.44 |  2.03 |
|        ashcan       | 10.62 | 11.39 |
|         fan         | 37.29 | 41.73 |
|         pier        | 12.26 | 14.46 |
|      crt screen     |  1.26 |  2.47 |
|        plate        | 41.22 | 50.78 |
|       monitor       |  5.74 |  6.25 |
|    bulletin board   | 18.92 |  22.6 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 22.95 | 24.09 |
|        glass        |  6.64 |  7.08 |
|        clock        | 14.95 | 16.26 |
|         flag        |  25.2 | 27.27 |
+---------------------+-------+-------+
09/15 19:29:27 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 71.6400  mIoU: 31.0800  mAcc: 39.6600  data_time: 0.0022  time: 0.1861
Finished processing corruption type: frost
Processing corruption type: fog
09/15 19:29:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 252779779
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 252779779
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:29:34 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/fog'

09/15 19:29:39 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:29:39 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:29:40 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:29:40 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:31:14 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:01:03  time: 1.1157  data_time: 0.0314  memory: 19720  
09/15 19:32:06 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:46:07  time: 1.2373  data_time: 0.0274  memory: 19715  
09/15 19:32:49 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:38:44  time: 0.8559  data_time: 0.0267  memory: 19689  
09/15 19:33:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:37:05  time: 1.2608  data_time: 0.0298  memory: 19717  
09/15 19:34:48 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:35:53  time: 1.0853  data_time: 0.0275  memory: 19712  
09/15 19:35:48 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:34:42  time: 0.9693  data_time: 0.0288  memory: 19713  
09/15 19:36:49 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:33:38  time: 1.0754  data_time: 0.0282  memory: 19712  
09/15 19:37:48 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:32:28  time: 1.1545  data_time: 0.0288  memory: 19713  
09/15 19:38:39 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:30:55  time: 1.0595  data_time: 0.0277  memory: 19686  
09/15 19:39:24 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:29:08  time: 0.7099  data_time: 0.0170  memory: 19653  
09/15 19:40:16 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:27:53  time: 1.1421  data_time: 0.0286  memory: 19712  
09/15 19:40:54 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:26:09  time: 0.6232  data_time: 0.0160  memory: 19714  
09/15 19:41:25 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:24:21  time: 0.6432  data_time: 0.0159  memory: 19722  
09/15 19:41:56 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:22:45  time: 0.4084  data_time: 0.0143  memory: 19721  
09/15 19:42:24 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:21:11  time: 0.7608  data_time: 0.0110  memory: 19727  
09/15 19:42:45 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:19:35  time: 0.5093  data_time: 0.0280  memory: 19690  
09/15 19:43:10 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:18:14  time: 0.5096  data_time: 0.0277  memory: 512  
09/15 19:43:30 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:16:52  time: 0.3929  data_time: 0.0117  memory: 19678  
09/15 19:43:57 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:15:45  time: 0.5485  data_time: 0.0133  memory: 19709  
09/15 19:44:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:14:36  time: 0.4168  data_time: 0.0169  memory: 19710  
09/15 19:44:43 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:13:35  time: 0.7251  data_time: 0.0195  memory: 19729  
09/15 19:45:05 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:12:35  time: 0.3518  data_time: 0.0134  memory: 19692  
09/15 19:45:22 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:11:34  time: 0.4531  data_time: 0.0182  memory: 19666  
09/15 19:45:34 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:10:35  time: 0.2200  data_time: 0.0058  memory: 1709  
09/15 19:45:48 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:09:40  time: 0.3743  data_time: 0.0088  memory: 19695  
09/15 19:45:58 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:08:45  time: 0.1835  data_time: 0.0015  memory: 513  
09/15 19:46:17 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:07:59  time: 0.4150  data_time: 0.0211  memory: 19649  
09/15 19:46:36 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:07:14  time: 0.4557  data_time: 0.0088  memory: 19701  
09/15 19:46:55 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:06:32  time: 0.5816  data_time: 0.0245  memory: 19678  
09/15 19:47:14 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:05:50  time: 0.3082  data_time: 0.0086  memory: 512  
09/15 19:47:37 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:05:12  time: 0.4775  data_time: 0.0231  memory: 19706  
09/15 19:47:51 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:04:32  time: 0.1863  data_time: 0.0017  memory: 503  
09/15 19:48:10 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:55  time: 0.2423  data_time: 0.0042  memory: 19711  
09/15 19:48:32 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:03:19  time: 0.4782  data_time: 0.0267  memory: 19681  
09/15 19:48:53 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:44  time: 0.3610  data_time: 0.0186  memory: 19700  
09/15 19:49:06 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:02:09  time: 0.2361  data_time: 0.0043  memory: 19653  
09/15 19:49:15 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:35  time: 0.1866  data_time: 0.0018  memory: 461  
09/15 19:49:30 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:02  time: 0.3202  data_time: 0.0135  memory: 19721  
09/15 19:49:50 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:30  time: 0.3504  data_time: 0.0140  memory: 19661  
09/15 19:50:11 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.3075  data_time: 0.0099  memory: 19724  
09/15 19:50:11 - mmengine - INFO - per class results:
09/15 19:50:11 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 71.36 | 87.03 |
|       building      | 78.74 | 91.72 |
|         sky         | 93.07 | 96.66 |
|        floor        | 75.31 | 87.93 |
|         tree        |  70.6 | 87.09 |
|       ceiling       | 80.11 | 89.86 |
|         road        | 77.07 | 85.99 |
|         bed         | 81.94 | 92.59 |
|      windowpane     | 54.08 | 69.58 |
|        grass        | 64.62 | 83.34 |
|       cabinet       |  54.3 | 70.13 |
|       sidewalk      | 55.82 |  74.1 |
|        person       |  72.3 | 88.33 |
|        earth        | 30.92 | 46.49 |
|         door        | 33.85 | 42.67 |
|        table        | 47.67 | 67.05 |
|       mountain      | 50.66 | 68.96 |
|        plant        | 44.15 | 51.95 |
|       curtain       | 65.05 | 77.31 |
|        chair        | 45.48 | 63.02 |
|         car         | 79.03 | 88.19 |
|        water        | 45.41 | 64.14 |
|       painting      | 64.85 | 81.36 |
|         sofa        |  53.6 | 73.07 |
|        shelf        | 34.81 | 48.63 |
|        house        | 31.29 | 41.58 |
|         sea         | 45.85 | 64.45 |
|        mirror       | 49.61 | 60.75 |
|         rug         | 54.03 | 59.29 |
|        field        | 30.18 | 36.67 |
|       armchair      | 30.68 |  44.2 |
|         seat        | 56.07 | 74.78 |
|        fence        |  35.5 | 46.77 |
|         desk        | 32.98 | 43.47 |
|         rock        | 26.85 | 37.77 |
|       wardrobe      | 49.43 | 66.61 |
|         lamp        | 50.14 | 64.88 |
|       bathtub       |  61.5 | 70.66 |
|       railing       | 30.39 | 43.71 |
|       cushion       | 43.89 | 55.92 |
|         base        | 18.88 |  29.2 |
|         box         | 15.55 | 22.69 |
|        column       | 36.25 | 50.09 |
|      signboard      | 32.17 | 43.29 |
|   chest of drawers  | 36.95 |  50.3 |
|       counter       | 27.76 | 34.77 |
|         sand        |  31.4 |  46.1 |
|         sink        | 55.89 | 71.33 |
|      skyscraper     | 60.19 | 70.83 |
|      fireplace      | 58.53 | 68.28 |
|     refrigerator    | 60.13 | 71.22 |
|      grandstand     | 40.04 | 58.02 |
|         path        | 17.44 | 23.98 |
|        stairs       | 26.88 | 34.78 |
|        runway       | 72.45 | 95.89 |
|         case        | 43.62 | 65.08 |
|      pool table     | 86.74 | 91.37 |
|        pillow       | 46.32 |  62.0 |
|     screen door     | 45.59 | 59.69 |
|       stairway      |  31.7 | 38.83 |
|        river        |  7.29 |  13.0 |
|        bridge       | 39.96 | 48.79 |
|       bookcase      | 37.75 | 54.91 |
|        blind        |  38.8 | 47.04 |
|     coffee table    | 48.62 | 71.47 |
|        toilet       | 75.65 | 84.88 |
|        flower       | 31.22 | 44.22 |
|         book        | 41.02 |  58.6 |
|         hill        |  8.79 | 12.33 |
|        bench        | 32.91 | 44.14 |
|      countertop     |  46.7 | 64.09 |
|        stove        | 37.44 | 40.11 |
|         palm        | 44.38 | 59.57 |
|    kitchen island   | 26.05 | 44.55 |
|       computer      | 52.28 | 64.27 |
|     swivel chair    | 36.47 |  42.9 |
|         boat        | 42.82 | 51.52 |
|         bar         |  22.0 | 25.58 |
|    arcade machine   | 36.83 | 38.68 |
|        hovel        |  28.9 | 32.92 |
|         bus         |  69.2 | 81.59 |
|        towel        | 49.45 | 62.88 |
|        light        | 41.45 | 45.97 |
|        truck        |  8.19 |  9.83 |
|        tower        | 21.01 | 28.72 |
|      chandelier     | 54.49 | 65.55 |
|        awning       |  16.0 | 17.63 |
|     streetlight     | 16.84 | 20.12 |
|        booth        | 30.46 | 33.75 |
| television receiver | 55.62 | 64.38 |
|       airplane      | 48.79 | 59.81 |
|      dirt track     |  2.52 |  7.17 |
|       apparel       | 24.28 | 37.42 |
|         pole        | 15.39 | 20.12 |
|         land        |  0.73 |  1.06 |
|      bannister      |  4.99 |  7.38 |
|      escalator      |  23.4 | 25.99 |
|       ottoman       | 24.51 | 31.51 |
|        bottle       | 28.89 | 39.54 |
|        buffet       | 35.96 | 43.55 |
|        poster       | 17.66 | 22.59 |
|        stage        | 12.03 | 16.58 |
|         van         | 33.23 | 46.36 |
|         ship        |  1.49 |  2.0  |
|       fountain      | 14.76 | 14.89 |
|    conveyer belt    | 60.05 | 62.87 |
|        canopy       |  9.41 | 10.02 |
|        washer       |  60.0 | 66.86 |
|      plaything      | 16.57 | 26.43 |
|    swimming pool    | 57.05 | 76.89 |
|        stool        | 23.82 | 30.21 |
|        barrel       |  24.1 | 44.46 |
|        basket       | 16.19 | 21.86 |
|      waterfall      | 56.75 | 65.12 |
|         tent        |  87.2 | 98.09 |
|         bag         |  6.03 |  7.76 |
|       minibike      | 46.93 | 51.16 |
|        cradle       | 70.99 | 84.12 |
|         oven        | 15.59 | 33.58 |
|         ball        | 41.65 | 57.84 |
|         food        | 38.06 | 41.33 |
|         step        |  2.62 |  3.19 |
|         tank        | 29.98 | 35.16 |
|      trade name     | 16.35 | 17.52 |
|      microwave      |  36.0 | 40.09 |
|         pot         | 31.42 | 36.05 |
|        animal       | 50.92 | 55.68 |
|       bicycle       | 41.28 |  66.1 |
|         lake        | 49.27 |  61.1 |
|      dishwasher     | 30.83 | 51.94 |
|        screen       | 58.55 | 72.37 |
|       blanket       |  8.71 |  9.56 |
|      sculpture      |  31.1 | 45.96 |
|         hood        | 41.07 | 46.77 |
|        sconce       |  31.6 | 38.46 |
|         vase        | 22.44 | 38.77 |
|    traffic light    | 16.55 | 28.95 |
|         tray        |  1.05 |  1.37 |
|        ashcan       | 34.37 | 43.48 |
|         fan         | 49.46 | 59.84 |
|         pier        | 49.36 | 61.23 |
|      crt screen     |  2.81 |  8.36 |
|        plate        | 39.57 | 50.25 |
|       monitor       |  1.95 |  2.27 |
|    bulletin board   |  36.6 | 49.78 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 43.54 | 48.46 |
|        glass        |  9.98 | 11.06 |
|        clock        | 28.72 | 33.53 |
|         flag        | 25.93 |  28.1 |
+---------------------+-------+-------+
09/15 19:50:11 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.5900  mIoU: 38.9200  mAcc: 49.0000  data_time: 0.0175  time: 0.6143
Finished processing corruption type: fog
Processing corruption type: brightness
09/15 19:50:43 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2053929942
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2053929942
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 19:50:44 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/brightness'

09/15 19:50:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 19:50:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 19:50:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:50:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 19:52:25 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:56:46  time: 0.9749  data_time: 0.0278  memory: 19720  
09/15 19:53:11 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:42:21  time: 1.1357  data_time: 0.0278  memory: 19715  
09/15 19:53:46 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:34:34  time: 0.7025  data_time: 0.0260  memory: 19689  
09/15 19:54:28 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:31:30  time: 0.8222  data_time: 0.0252  memory: 19717  
09/15 19:55:03 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:28:38  time: 0.6293  data_time: 0.0261  memory: 19712  
09/15 19:55:39 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:26:33  time: 0.5486  data_time: 0.0283  memory: 19713  
09/15 19:56:17 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:25:04  time: 0.5491  data_time: 0.0218  memory: 19712  
09/15 19:56:52 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:23:37  time: 0.6936  data_time: 0.0259  memory: 19713  
09/15 19:57:15 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:21:38  time: 0.5157  data_time: 0.0231  memory: 19686  
09/15 19:57:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:20:14  time: 0.4746  data_time: 0.0221  memory: 19653  
09/15 19:58:14 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:19:07  time: 0.6746  data_time: 0.0256  memory: 19712  
09/15 19:58:42 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:18:02  time: 0.7128  data_time: 0.0283  memory: 19714  
09/15 19:59:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:17:07  time: 0.6739  data_time: 0.0207  memory: 19722  
09/15 19:59:49 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:16:25  time: 0.5737  data_time: 0.0280  memory: 19721  
09/15 20:00:25 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:15:44  time: 0.9520  data_time: 0.0230  memory: 19727  
09/15 20:00:49 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:14:45  time: 0.5579  data_time: 0.0290  memory: 19690  
09/15 20:01:17 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:13:57  time: 0.5657  data_time: 0.0288  memory: 512  
09/15 20:01:41 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:13:04  time: 0.4805  data_time: 0.0186  memory: 19678  
09/15 20:02:15 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:12:27  time: 0.6944  data_time: 0.0247  memory: 19709  
09/15 20:02:43 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:11:44  time: 0.5406  data_time: 0.0275  memory: 19710  
09/15 20:03:18 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:11:08  time: 0.8889  data_time: 0.0296  memory: 19729  
09/15 20:03:51 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:10:32  time: 0.5798  data_time: 0.0249  memory: 19692  
09/15 20:04:17 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:09:49  time: 0.5580  data_time: 0.0236  memory: 19666  
09/15 20:04:41 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:09:08  time: 0.4673  data_time: 0.0224  memory: 1709  
09/15 20:04:56 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:08:21  time: 0.2768  data_time: 0.0017  memory: 19695  
09/15 20:05:05 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:35  time: 0.1979  data_time: 0.0017  memory: 513  
09/15 20:05:16 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:52  time: 0.1815  data_time: 0.0016  memory: 19649  
09/15 20:05:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:06:13  time: 0.3639  data_time: 0.0016  memory: 19701  
09/15 20:05:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:35  time: 0.3037  data_time: 0.0015  memory: 19678  
09/15 20:05:52 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:57  time: 0.1834  data_time: 0.0015  memory: 512  
09/15 20:06:03 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:22  time: 0.1985  data_time: 0.0015  memory: 19706  
09/15 20:06:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:48  time: 0.1930  data_time: 0.0017  memory: 503  
09/15 20:06:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:16  time: 0.1778  data_time: 0.0014  memory: 19711  
09/15 20:06:39 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:45  time: 0.1933  data_time: 0.0017  memory: 19681  
09/15 20:06:52 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:16  time: 0.1917  data_time: 0.0015  memory: 19700  
09/15 20:07:02 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:46  time: 0.2099  data_time: 0.0024  memory: 19653  
09/15 20:07:12 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:18  time: 0.2013  data_time: 0.0017  memory: 461  
09/15 20:07:22 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:51  time: 0.1896  data_time: 0.0015  memory: 19721  
09/15 20:07:34 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:25  time: 0.1880  data_time: 0.0015  memory: 19661  
09/15 20:07:46 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1850  data_time: 0.0019  memory: 19724  
09/15 20:07:46 - mmengine - INFO - per class results:
09/15 20:07:46 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 72.33 | 86.83 |
|       building      | 79.19 | 91.38 |
|         sky         | 93.05 | 97.08 |
|        floor        | 76.38 | 88.37 |
|         tree        | 71.61 | 86.13 |
|       ceiling       | 80.46 | 89.93 |
|         road        | 77.99 | 85.89 |
|         bed         |  83.0 | 93.08 |
|      windowpane     | 55.31 | 72.28 |
|        grass        | 65.54 | 83.99 |
|       cabinet       | 55.35 | 70.62 |
|       sidewalk      | 57.95 | 75.64 |
|        person       | 73.49 | 89.41 |
|        earth        | 32.45 | 47.11 |
|         door        | 37.42 | 49.09 |
|        table        | 48.58 | 67.12 |
|       mountain      | 53.65 | 69.54 |
|        plant        | 47.65 | 58.19 |
|       curtain       | 65.32 | 78.49 |
|        chair        | 46.42 | 62.44 |
|         car         |  79.1 | 89.66 |
|        water        | 44.73 | 60.16 |
|       painting      |  66.1 | 81.14 |
|         sofa        | 54.96 | 75.18 |
|        shelf        | 37.29 | 51.89 |
|        house        | 32.57 | 45.01 |
|         sea         | 51.02 | 75.16 |
|        mirror       | 52.73 | 63.17 |
|         rug         | 57.05 | 64.66 |
|        field        | 29.11 | 41.29 |
|       armchair      | 31.64 | 45.91 |
|         seat        |  57.1 | 75.98 |
|        fence        | 38.69 | 53.43 |
|         desk        | 39.65 | 55.59 |
|         rock        | 31.88 | 46.93 |
|       wardrobe      | 48.27 | 63.23 |
|         lamp        | 51.09 | 64.68 |
|       bathtub       | 61.04 | 70.55 |
|       railing       | 31.61 | 44.55 |
|       cushion       | 45.62 | 58.61 |
|         base        | 21.88 | 30.05 |
|         box         | 16.22 | 23.65 |
|        column       | 36.35 | 51.22 |
|      signboard      | 31.97 | 44.01 |
|   chest of drawers  | 37.38 | 51.99 |
|       counter       | 24.44 | 33.98 |
|         sand        | 30.21 |  48.0 |
|         sink        | 56.75 | 72.69 |
|      skyscraper     |  60.5 | 72.36 |
|      fireplace      | 61.35 | 75.71 |
|     refrigerator    | 61.65 | 74.66 |
|      grandstand     | 38.41 | 54.11 |
|         path        | 17.18 | 26.24 |
|        stairs       | 26.01 |  33.2 |
|        runway       | 73.92 | 95.21 |
|         case        | 43.71 | 59.44 |
|      pool table     | 87.98 | 93.02 |
|        pillow       | 45.26 |  56.8 |
|     screen door     | 51.14 | 64.43 |
|       stairway      | 30.84 | 40.22 |
|        river        |  8.78 |  17.1 |
|        bridge       | 43.05 |  54.5 |
|       bookcase      | 40.63 | 56.81 |
|        blind        | 37.43 | 42.81 |
|     coffee table    | 48.73 | 73.69 |
|        toilet       | 77.05 | 84.94 |
|        flower       | 33.07 | 45.89 |
|         book        | 43.79 | 63.49 |
|         hill        | 12.65 | 16.86 |
|        bench        | 32.79 | 45.87 |
|      countertop     | 47.46 | 64.31 |
|        stove        | 52.15 | 57.29 |
|         palm        | 45.45 |  61.6 |
|    kitchen island   | 24.08 | 41.12 |
|       computer      | 52.23 | 62.92 |
|     swivel chair    | 36.35 | 48.28 |
|         boat        | 40.33 | 49.63 |
|         bar         | 22.56 | 27.72 |
|    arcade machine   | 36.41 | 37.94 |
|        hovel        | 30.05 | 36.27 |
|         bus         | 70.89 |  79.0 |
|        towel        | 46.47 | 60.16 |
|        light        | 46.09 |  52.2 |
|        truck        | 27.72 | 34.46 |
|        tower        | 16.97 | 20.51 |
|      chandelier     | 54.73 | 68.67 |
|        awning       | 19.33 | 22.54 |
|     streetlight     | 18.71 | 21.91 |
|        booth        | 39.19 | 43.92 |
| television receiver | 59.04 | 68.15 |
|       airplane      | 49.35 |  60.5 |
|      dirt track     |  3.18 |  8.82 |
|       apparel       | 24.14 | 36.51 |
|         pole        | 18.07 | 24.84 |
|         land        |  0.14 |  0.22 |
|      bannister      |  5.04 |  7.05 |
|      escalator      | 22.86 | 25.87 |
|       ottoman       | 22.71 | 30.48 |
|        bottle       | 31.11 | 46.71 |
|        buffet       | 33.66 | 38.59 |
|        poster       | 22.57 | 28.11 |
|        stage        | 12.72 | 16.77 |
|         van         | 34.66 | 44.93 |
|         ship        |  7.23 | 10.06 |
|       fountain      |  8.17 |  8.34 |
|    conveyer belt    | 73.17 | 78.67 |
|        canopy       | 10.42 | 11.57 |
|        washer       | 66.08 | 68.81 |
|      plaything      | 16.51 | 24.28 |
|    swimming pool    | 57.64 | 75.75 |
|        stool        | 25.35 | 33.56 |
|        barrel       | 30.17 |  47.4 |
|        basket       | 20.32 | 28.17 |
|      waterfall      | 62.27 | 72.89 |
|         tent        | 88.02 | 97.57 |
|         bag         |  8.32 |  10.6 |
|       minibike      | 48.86 | 58.47 |
|        cradle       |  73.0 | 87.56 |
|         oven        | 19.29 | 44.47 |
|         ball        | 41.25 | 51.05 |
|         food        | 47.87 | 55.95 |
|         step        |  5.16 |  5.81 |
|         tank        | 35.16 | 41.19 |
|      trade name     | 20.84 | 22.99 |
|      microwave      | 34.59 | 38.31 |
|         pot         | 32.42 | 38.13 |
|        animal       | 54.41 | 59.72 |
|       bicycle       | 42.96 | 67.47 |
|         lake        |  45.4 | 62.09 |
|      dishwasher     | 36.24 |  55.1 |
|        screen       | 62.88 | 79.07 |
|       blanket       | 10.11 | 11.41 |
|      sculpture      | 33.63 | 46.48 |
|         hood        | 42.92 | 48.85 |
|        sconce       | 32.97 | 39.52 |
|         vase        | 24.57 | 40.34 |
|    traffic light    | 19.62 |  30.7 |
|         tray        |  1.69 |  2.31 |
|        ashcan       | 34.88 | 45.69 |
|         fan         | 50.03 | 59.09 |
|         pier        | 48.16 | 57.87 |
|      crt screen     |  5.35 | 14.44 |
|        plate        | 42.33 | 54.47 |
|       monitor       |  6.01 |  7.2  |
|    bulletin board   | 29.41 | 42.28 |
|        shower       |  0.04 |  0.12 |
|       radiator      | 48.07 | 55.65 |
|        glass        |  9.36 | 10.15 |
|        clock        | 22.52 | 26.21 |
|         flag        | 26.71 | 30.06 |
+---------------------+-------+-------+
09/15 20:07:46 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 79.2900  mIoU: 40.5000  mAcc: 51.0500  data_time: 0.0154  time: 0.5036
Finished processing corruption type: brightness
Processing corruption type: contrast
09/15 20:09:16 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2053047290
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2053047290
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:09:17 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/contrast'

09/15 20:09:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:09:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:09:57 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 20:09:58 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 20:11:19 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:52:31  time: 0.4494  data_time: 0.0017  memory: 19720  
09/15 20:11:41 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:32:32  time: 0.5938  data_time: 0.0017  memory: 19715  
09/15 20:11:52 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:23:28  time: 0.2088  data_time: 0.0016  memory: 19689  
09/15 20:12:09 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:19:43  time: 0.3483  data_time: 0.0027  memory: 19717  
09/15 20:12:24 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:17:04  time: 0.1534  data_time: 0.0016  memory: 19712  
09/15 20:12:38 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:15:08  time: 0.0469  data_time: 0.0018  memory: 19713  
09/15 20:12:53 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:13:46  time: 0.1430  data_time: 0.0017  memory: 19712  
09/15 20:13:06 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:12:32  time: 0.2182  data_time: 0.0016  memory: 19713  
09/15 20:13:11 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:11:05  time: 0.1210  data_time: 0.0016  memory: 19686  
09/15 20:13:16 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:09:53  time: 0.0418  data_time: 0.0015  memory: 19653  
09/15 20:13:21 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:55  time: 0.1860  data_time: 0.0017  memory: 19712  
09/15 20:13:26 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:06  time: 0.1901  data_time: 0.0017  memory: 19714  
09/15 20:13:35 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:31  time: 0.2574  data_time: 0.0014  memory: 19722  
09/15 20:13:46 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:03  time: 0.0479  data_time: 0.0017  memory: 19721  
09/15 20:13:57 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:39  time: 0.5123  data_time: 0.0015  memory: 19727  
09/15 20:14:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:05  time: 0.0456  data_time: 0.0017  memory: 19690  
09/15 20:14:04 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:32  time: 0.0452  data_time: 0.0016  memory: 512  
09/15 20:14:09 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:06  time: 0.1530  data_time: 0.0018  memory: 19678  
09/15 20:14:19 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:48  time: 0.2574  data_time: 0.0016  memory: 19709  
09/15 20:14:25 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:26  time: 0.0430  data_time: 0.0015  memory: 19710  
09/15 20:14:34 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:09  time: 0.3660  data_time: 0.0015  memory: 19729  
09/15 20:14:41 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:51  time: 0.0423  data_time: 0.0016  memory: 19692  
09/15 20:14:45 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:32  time: 0.1181  data_time: 0.0016  memory: 19666  
09/15 20:14:47 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:12  time: 0.0418  data_time: 0.0015  memory: 1709  
09/15 20:14:53 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:56  time: 0.1329  data_time: 0.0015  memory: 19695  
09/15 20:14:55 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:39  time: 0.0417  data_time: 0.0016  memory: 513  
09/15 20:14:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:24  time: 0.0436  data_time: 0.0015  memory: 19649  
09/15 20:15:06 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:11  time: 0.2062  data_time: 0.0016  memory: 19701  
09/15 20:15:10 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:58  time: 0.1462  data_time: 0.0016  memory: 19678  
09/15 20:15:12 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:44  time: 0.0432  data_time: 0.0016  memory: 512  
09/15 20:15:16 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:32  time: 0.0438  data_time: 0.0016  memory: 19706  
09/15 20:15:18 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:20  time: 0.0423  data_time: 0.0016  memory: 503  
09/15 20:15:24 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:09  time: 0.0403  data_time: 0.0014  memory: 19711  
09/15 20:15:30 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:58  time: 0.0434  data_time: 0.0017  memory: 19681  
09/15 20:15:34 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:48  time: 0.0454  data_time: 0.0015  memory: 19700  
09/15 20:15:37 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:37  time: 0.0441  data_time: 0.0017  memory: 19653  
09/15 20:15:40 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:27  time: 0.0429  data_time: 0.0017  memory: 461  
09/15 20:15:43 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0472  data_time: 0.0015  memory: 19721  
09/15 20:15:47 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:08  time: 0.0414  data_time: 0.0015  memory: 19661  
09/15 20:15:52 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0395  data_time: 0.0015  memory: 19724  
09/15 20:15:52 - mmengine - INFO - per class results:
09/15 20:15:52 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 71.64 | 86.98 |
|       building      | 79.04 | 91.05 |
|         sky         | 93.18 | 96.92 |
|        floor        | 75.44 |  88.3 |
|         tree        | 70.52 | 87.37 |
|       ceiling       | 80.24 | 90.26 |
|         road        | 77.46 | 86.08 |
|         bed         | 81.51 | 92.55 |
|      windowpane     | 54.68 | 70.09 |
|        grass        | 64.55 | 84.77 |
|       cabinet       | 53.81 | 70.15 |
|       sidewalk      | 56.43 | 73.75 |
|        person       | 72.36 | 88.62 |
|        earth        | 31.61 | 46.89 |
|         door        | 34.85 | 44.93 |
|        table        | 48.18 |  68.1 |
|       mountain      | 49.95 | 65.69 |
|        plant        | 43.65 |  50.9 |
|       curtain       | 65.06 | 77.56 |
|        chair        | 45.33 | 61.93 |
|         car         | 78.97 | 88.49 |
|        water        | 45.08 | 63.81 |
|       painting      | 62.86 | 80.92 |
|         sofa        | 53.85 | 72.55 |
|        shelf        | 35.11 |  50.6 |
|        house        | 30.93 | 42.84 |
|         sea         | 46.62 | 66.88 |
|        mirror       | 49.95 | 60.27 |
|         rug         | 54.51 | 58.78 |
|        field        | 28.32 | 39.06 |
|       armchair      | 30.87 | 45.64 |
|         seat        | 56.29 | 72.69 |
|        fence        | 36.13 | 47.91 |
|         desk        | 34.35 | 46.44 |
|         rock        |  29.6 | 42.41 |
|       wardrobe      | 48.92 | 64.72 |
|         lamp        | 50.54 | 64.34 |
|       bathtub       | 60.96 | 70.01 |
|       railing       | 30.12 | 44.45 |
|       cushion       | 44.16 |  56.3 |
|         base        | 22.28 | 31.06 |
|         box         | 13.97 | 19.74 |
|        column       | 37.36 |  50.5 |
|      signboard      | 32.35 | 43.68 |
|   chest of drawers  | 36.88 | 50.42 |
|       counter       | 27.45 | 38.65 |
|         sand        | 26.57 | 43.14 |
|         sink        |  56.1 | 71.25 |
|      skyscraper     | 65.54 | 77.31 |
|      fireplace      | 58.63 | 68.45 |
|     refrigerator    | 60.58 | 70.86 |
|      grandstand     | 35.09 | 54.09 |
|         path        |  17.6 | 25.65 |
|        stairs       | 27.41 | 34.47 |
|        runway       | 69.94 | 93.86 |
|         case        | 40.57 | 64.35 |
|      pool table     | 87.15 | 91.66 |
|        pillow       | 44.84 | 57.93 |
|     screen door     | 49.95 |  64.1 |
|       stairway      | 30.04 | 36.88 |
|        river        |  7.96 | 14.84 |
|        bridge       | 30.09 | 37.69 |
|       bookcase      | 39.19 | 55.93 |
|        blind        | 36.31 | 43.53 |
|     coffee table    | 47.96 | 69.78 |
|        toilet       | 75.99 | 85.05 |
|        flower       | 32.02 | 44.22 |
|         book        | 42.21 | 59.96 |
|         hill        |  8.0  | 11.39 |
|        bench        | 32.53 | 44.78 |
|      countertop     | 46.65 | 64.33 |
|        stove        | 39.08 | 41.27 |
|         palm        | 45.18 | 59.29 |
|    kitchen island   | 19.94 | 31.79 |
|       computer      | 51.96 | 62.63 |
|     swivel chair    |  33.9 |  42.9 |
|         boat        | 33.16 | 39.75 |
|         bar         | 21.59 | 25.66 |
|    arcade machine   | 35.66 | 36.81 |
|        hovel        | 33.13 | 38.12 |
|         bus         | 71.35 |  82.3 |
|        towel        | 48.83 | 63.02 |
|        light        |  40.5 | 44.19 |
|        truck        | 15.25 | 18.89 |
|        tower        | 18.92 | 26.53 |
|      chandelier     | 54.73 | 65.91 |
|        awning       | 17.41 | 19.51 |
|     streetlight     | 17.04 |  20.4 |
|        booth        | 32.91 | 36.78 |
| television receiver | 56.49 | 62.39 |
|       airplane      | 46.83 |  59.9 |
|      dirt track     |  1.21 |  2.03 |
|       apparel       | 25.61 | 36.04 |
|         pole        | 17.64 |  23.8 |
|         land        |  2.03 |  2.83 |
|      bannister      |  4.92 |  6.93 |
|      escalator      |  18.3 |  20.5 |
|       ottoman       | 25.82 | 35.67 |
|        bottle       | 29.64 | 42.68 |
|        buffet       | 36.22 |  43.3 |
|        poster       | 21.28 | 25.41 |
|        stage        | 12.82 | 17.42 |
|         van         | 34.39 | 45.88 |
|         ship        |  3.14 |  4.82 |
|       fountain      |  6.43 |  6.46 |
|    conveyer belt    | 60.24 | 61.82 |
|        canopy       |  9.1  |  9.53 |
|        washer       | 60.44 |  66.3 |
|      plaything      | 16.78 | 23.01 |
|    swimming pool    | 55.75 | 75.94 |
|        stool        |  23.9 | 32.52 |
|        barrel       | 32.14 | 55.42 |
|        basket       | 17.87 | 22.49 |
|      waterfall      | 59.61 | 67.82 |
|         tent        | 89.39 | 97.88 |
|         bag         |  6.48 |  7.75 |
|       minibike      | 47.36 | 54.01 |
|        cradle       | 72.65 | 87.75 |
|         oven        | 15.11 |  35.7 |
|         ball        | 39.94 | 53.53 |
|         food        | 42.42 | 45.89 |
|         step        |  3.43 |  4.53 |
|         tank        | 32.79 | 38.36 |
|      trade name     | 17.38 | 18.68 |
|      microwave      | 35.19 | 39.27 |
|         pot         | 30.09 |  34.5 |
|        animal       | 55.54 |  61.2 |
|       bicycle       | 42.35 | 65.21 |
|         lake        | 51.97 | 62.28 |
|      dishwasher     | 34.09 | 52.64 |
|        screen       | 61.74 | 76.97 |
|       blanket       |  8.5  |  9.6  |
|      sculpture      | 29.49 | 43.31 |
|         hood        | 41.82 | 45.78 |
|        sconce       | 32.72 | 40.37 |
|         vase        | 22.93 | 39.39 |
|    traffic light    | 17.84 | 30.02 |
|         tray        |  1.09 |  1.47 |
|        ashcan       | 31.61 | 41.45 |
|         fan         |  47.8 | 57.28 |
|         pier        | 50.69 |  64.0 |
|      crt screen     |  4.34 | 11.86 |
|        plate        |  41.8 | 53.03 |
|       monitor       |  5.6  |  6.42 |
|    bulletin board   | 30.77 | 45.19 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 44.64 | 51.65 |
|        glass        | 10.38 | 11.69 |
|        clock        | 29.79 | 34.44 |
|         flag        |  26.5 | 28.51 |
+---------------------+-------+-------+
09/15 20:15:52 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.6500  mIoU: 39.0800  mAcc: 49.2000  data_time: 0.0021  time: 0.1772
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
09/15 20:16:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1849156140
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1849156140
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:16:02 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/elastic_transform'

09/15 20:16:09 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:16:09 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:16:10 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 20:16:10 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 20:17:53 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:06:27  time: 1.5353  data_time: 0.0032  memory: 19720  
09/15 20:19:06 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:55:47  time: 1.7076  data_time: 0.0018  memory: 19715  
09/15 20:20:12 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:49:41  time: 1.3216  data_time: 0.0017  memory: 19689  
09/15 20:21:23 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:46:52  time: 1.3681  data_time: 0.0016  memory: 19717  
09/15 20:22:27 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:43:58  time: 1.1592  data_time: 0.0017  memory: 19712  
09/15 20:23:30 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:41:30  time: 1.0935  data_time: 0.0029  memory: 19713  
09/15 20:24:35 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:39:40  time: 1.1022  data_time: 0.0016  memory: 19712  
09/15 20:25:39 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:37:56  time: 1.2687  data_time: 0.0016  memory: 19713  
09/15 20:26:32 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:35:40  time: 1.0705  data_time: 0.0016  memory: 19686  
09/15 20:27:28 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:33:51  time: 1.0528  data_time: 0.0016  memory: 19653  
09/15 20:28:28 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:32:25  time: 1.2595  data_time: 0.0029  memory: 19712  
09/15 20:29:24 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:30:51  time: 1.2318  data_time: 0.0018  memory: 19714  
09/15 20:30:22 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:29:28  time: 1.2738  data_time: 0.0032  memory: 19722  
09/15 20:31:25 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:18  time: 1.0862  data_time: 0.0017  memory: 19721  
09/15 20:32:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:09  time: 1.5054  data_time: 0.0019  memory: 19727  
09/15 20:33:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:44  time: 1.0734  data_time: 0.0028  memory: 19690  
09/15 20:34:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:25  time: 1.0935  data_time: 0.0018  memory: 512  
09/15 20:35:06 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:23:07  time: 1.0348  data_time: 0.0015  memory: 19678  
09/15 20:36:07 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:22:02  time: 1.2552  data_time: 0.0038  memory: 19709  
09/15 20:37:02 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:51  time: 1.0368  data_time: 0.0023  memory: 19710  
09/15 20:38:03 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:47  time: 1.4262  data_time: 0.0021  memory: 19729  
09/15 20:39:00 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:40  time: 1.0421  data_time: 0.0017  memory: 19692  
09/15 20:39:55 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:32  time: 1.1529  data_time: 0.0023  memory: 19666  
09/15 20:40:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:25  time: 1.0117  data_time: 0.0017  memory: 1709  
09/15 20:41:42 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:15:18  time: 1.1193  data_time: 0.0022  memory: 19695  
09/15 20:42:31 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:14:11  time: 1.0681  data_time: 0.0015  memory: 513  
09/15 20:43:24 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:13:06  time: 0.9840  data_time: 0.0016  memory: 19649  
09/15 20:44:23 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:12:05  time: 1.2828  data_time: 0.0034  memory: 19701  
09/15 20:45:15 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:11:01  time: 1.2023  data_time: 0.0032  memory: 19678  
09/15 20:46:06 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:58  time: 0.9783  data_time: 0.0015  memory: 512  
09/15 20:47:03 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:57  time: 1.0866  data_time: 0.0017  memory: 19706  
09/15 20:47:54 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:56  time: 1.0385  data_time: 0.0017  memory: 503  
09/15 20:48:50 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:55  time: 0.9733  data_time: 0.0015  memory: 19711  
09/15 20:49:47 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:55  time: 1.0695  data_time: 0.0018  memory: 19681  
09/15 20:50:43 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:56  time: 1.0373  data_time: 0.0015  memory: 19700  
09/15 20:51:35 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:56  time: 1.0765  data_time: 0.0017  memory: 19653  
09/15 20:52:28 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:56  time: 1.0598  data_time: 0.0017  memory: 461  
09/15 20:53:20 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:57  time: 1.0379  data_time: 0.0030  memory: 19721  
09/15 20:54:14 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:58  time: 1.0311  data_time: 0.0018  memory: 19661  
09/15 20:55:08 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9530  data_time: 0.0014  memory: 19724  
09/15 20:55:08 - mmengine - INFO - per class results:
09/15 20:55:08 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 61.49 | 78.42 |
|       building      | 72.53 | 87.64 |
|         sky         |  84.2 | 91.72 |
|        floor        | 65.88 | 80.77 |
|         tree        | 61.53 | 78.94 |
|       ceiling       | 68.84 | 82.74 |
|         road        | 72.07 | 83.02 |
|         bed         | 73.23 | 86.23 |
|      windowpane     | 45.84 |  63.2 |
|        grass        | 60.09 |  79.8 |
|       cabinet       | 46.99 | 62.06 |
|       sidewalk      | 47.82 | 64.78 |
|        person       | 57.87 | 78.63 |
|        earth        | 27.66 | 40.13 |
|         door        | 32.99 | 42.54 |
|        table        | 39.38 | 57.71 |
|       mountain      | 48.06 | 64.73 |
|        plant        |  39.3 | 52.25 |
|       curtain       |  53.0 | 70.98 |
|        chair        | 34.94 | 52.42 |
|         car         | 60.47 |  76.5 |
|        water        | 44.93 | 60.66 |
|       painting      |  47.3 | 66.67 |
|         sofa        | 45.62 | 65.42 |
|        shelf        | 31.91 | 47.49 |
|        house        | 29.71 | 36.25 |
|         sea         | 47.52 |  69.2 |
|        mirror       | 44.69 | 59.19 |
|         rug         | 41.75 | 53.79 |
|        field        | 24.68 | 35.38 |
|       armchair      | 26.74 | 40.24 |
|         seat        | 53.63 | 72.23 |
|        fence        | 27.99 | 40.59 |
|         desk        | 34.06 | 50.04 |
|         rock        | 28.15 | 44.59 |
|       wardrobe      | 43.43 | 58.37 |
|         lamp        | 27.64 | 44.33 |
|       bathtub       |  54.9 |  63.1 |
|       railing       | 23.51 | 37.27 |
|       cushion       |  35.5 | 48.82 |
|         base        | 17.18 | 24.11 |
|         box         | 14.32 | 21.98 |
|        column       | 23.91 | 40.54 |
|      signboard      |  21.3 | 32.16 |
|   chest of drawers  | 31.13 | 46.93 |
|       counter       | 27.74 | 33.26 |
|         sand        | 31.46 | 46.04 |
|         sink        | 42.26 | 57.38 |
|      skyscraper     | 39.54 | 48.21 |
|      fireplace      |  57.3 | 78.23 |
|     refrigerator    | 47.37 | 63.38 |
|      grandstand     | 32.84 | 51.49 |
|         path        |  15.1 | 23.61 |
|        stairs       | 22.42 |  27.7 |
|        runway       | 68.46 | 92.93 |
|         case        | 38.63 | 51.28 |
|      pool table     | 69.67 | 81.41 |
|        pillow       | 33.81 | 46.29 |
|     screen door     | 47.31 |  59.9 |
|       stairway      | 26.28 | 35.14 |
|        river        |  8.33 | 14.44 |
|        bridge       | 43.86 | 56.25 |
|       bookcase      | 32.38 | 49.15 |
|        blind        | 35.13 | 42.47 |
|     coffee table    | 41.96 | 65.95 |
|        toilet       | 54.62 | 70.68 |
|        flower       | 24.06 | 36.06 |
|         book        | 31.32 | 49.31 |
|         hill        |  8.89 | 14.72 |
|        bench        | 29.08 |  39.9 |
|      countertop     | 31.67 | 49.87 |
|        stove        | 46.88 | 57.63 |
|         palm        | 33.23 | 49.01 |
|    kitchen island   | 15.93 | 29.63 |
|       computer      | 45.14 | 57.25 |
|     swivel chair    | 27.36 | 40.75 |
|         boat        | 43.04 | 55.75 |
|         bar         | 25.53 | 30.66 |
|    arcade machine   | 31.71 | 34.74 |
|        hovel        | 28.44 | 35.84 |
|         bus         | 65.54 |  82.8 |
|        towel        | 35.72 | 51.71 |
|        light        | 13.62 | 20.64 |
|        truck        | 15.04 | 20.47 |
|        tower        | 22.73 | 30.43 |
|      chandelier     | 31.93 | 46.59 |
|        awning       | 14.16 |  17.8 |
|     streetlight     |  6.59 |  9.13 |
|        booth        | 30.92 | 33.26 |
| television receiver | 38.91 |  52.3 |
|       airplane      | 36.16 | 49.39 |
|      dirt track     |  7.77 | 30.58 |
|       apparel       | 19.96 | 33.24 |
|         pole        |  9.41 | 13.67 |
|         land        |  0.34 |  0.57 |
|      bannister      |  2.1  |  2.82 |
|      escalator      | 19.08 | 20.97 |
|       ottoman       | 21.48 | 27.68 |
|        bottle       | 26.02 | 44.54 |
|        buffet       | 35.61 | 42.04 |
|        poster       | 17.78 | 22.84 |
|        stage        |  8.91 | 13.73 |
|         van         | 27.42 |  37.3 |
|         ship        | 11.41 | 14.68 |
|       fountain      | 10.06 | 10.32 |
|    conveyer belt    | 52.94 | 61.21 |
|        canopy       | 11.71 | 13.27 |
|        washer       | 59.56 | 66.07 |
|      plaything      | 11.04 |  18.2 |
|    swimming pool    | 43.33 | 62.45 |
|        stool        | 15.48 | 20.94 |
|        barrel       | 28.12 | 59.82 |
|        basket       | 17.74 | 25.14 |
|      waterfall      | 64.51 | 78.88 |
|         tent        | 80.88 | 94.14 |
|         bag         |  4.59 |  6.63 |
|       minibike      | 36.78 | 47.49 |
|        cradle       | 61.04 | 73.25 |
|         oven        | 15.33 | 26.33 |
|         ball        | 34.74 | 46.59 |
|         food        | 39.13 | 49.74 |
|         step        |  4.26 |  4.96 |
|         tank        | 36.19 | 42.56 |
|      trade name     | 14.11 | 16.03 |
|      microwave      | 30.26 |  35.9 |
|         pot         | 20.84 | 27.25 |
|        animal       | 42.41 |  51.0 |
|       bicycle       | 34.93 |  58.9 |
|         lake        | 37.27 | 61.72 |
|      dishwasher     | 30.02 | 41.38 |
|        screen       | 55.25 | 78.86 |
|       blanket       |  9.98 | 13.14 |
|      sculpture      | 23.58 | 34.87 |
|         hood        | 33.12 | 40.32 |
|        sconce       | 18.43 | 25.81 |
|         vase        |  8.9  | 16.16 |
|    traffic light    | 11.26 |  18.3 |
|         tray        |  1.55 |  2.11 |
|        ashcan       |  21.4 | 37.87 |
|         fan         | 24.69 | 34.89 |
|         pier        | 42.64 | 55.47 |
|      crt screen     |  5.94 |  16.3 |
|        plate        | 26.04 | 34.56 |
|       monitor       |  8.35 |  9.67 |
|    bulletin board   | 20.11 |  33.6 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 36.46 | 44.52 |
|        glass        |  5.12 |  5.77 |
|        clock        |  13.9 | 17.32 |
|         flag        | 15.12 | 18.77 |
+---------------------+-------+-------+
09/15 20:55:08 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 72.5000  mIoU: 33.0100  mAcc: 44.4600  data_time: 0.0023  time: 1.1688
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/15 20:55:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 551718212
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 551718212
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 20:55:22 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/pixelate'

09/15 20:55:32 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 20:55:32 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 20:55:32 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 20:55:33 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 20:56:33 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:39:00  time: 0.4408  data_time: 0.0017  memory: 19720  
09/15 20:56:54 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:25:44  time: 0.5823  data_time: 0.0018  memory: 19715  
09/15 20:57:05 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:19:00  time: 0.2000  data_time: 0.0017  memory: 19689  
09/15 20:57:22 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:16:21  time: 0.3346  data_time: 0.0016  memory: 19717  
09/15 20:57:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:14:24  time: 0.1420  data_time: 0.0016  memory: 19712  
09/15 20:57:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:55  time: 0.0354  data_time: 0.0017  memory: 19713  
09/15 20:58:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:54  time: 0.1318  data_time: 0.0016  memory: 19712  
09/15 20:58:16 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:10:54  time: 0.2066  data_time: 0.0014  memory: 19713  
09/15 20:58:21 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:40  time: 0.1106  data_time: 0.0016  memory: 19686  
09/15 20:58:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:37  time: 0.0325  data_time: 0.0015  memory: 19653  
09/15 20:58:30 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:47  time: 0.1729  data_time: 0.0016  memory: 19712  
09/15 20:58:34 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:03  time: 0.1780  data_time: 0.0017  memory: 19714  
09/15 20:58:43 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:34  time: 0.2542  data_time: 0.0014  memory: 19722  
09/15 20:58:53 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:11  time: 0.0362  data_time: 0.0017  memory: 19721  
09/15 20:59:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:05:52  time: 0.5019  data_time: 0.0015  memory: 19727  
09/15 20:59:07 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:21  time: 0.0317  data_time: 0.0017  memory: 19690  
09/15 20:59:09 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:04:52  time: 0.0319  data_time: 0.0017  memory: 512  
09/15 20:59:13 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:29  time: 0.1390  data_time: 0.0031  memory: 19678  
09/15 20:59:23 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:14  time: 0.2462  data_time: 0.0016  memory: 19709  
09/15 20:59:28 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:03:55  time: 0.0322  data_time: 0.0014  memory: 19710  
09/15 20:59:37 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:03:40  time: 0.3554  data_time: 0.0016  memory: 19729  
09/15 20:59:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:24  time: 0.0309  data_time: 0.0016  memory: 19692  
09/15 20:59:47 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:07  time: 0.1040  data_time: 0.0014  memory: 19666  
09/15 20:59:49 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:02:50  time: 0.0311  data_time: 0.0015  memory: 1709  
09/15 20:59:53 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:36  time: 0.1267  data_time: 0.0015  memory: 19695  
09/15 20:59:55 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:21  time: 0.0309  data_time: 0.0014  memory: 513  
09/15 20:59:57 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:07  time: 0.0336  data_time: 0.0014  memory: 19649  
09/15 21:00:05 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:01:56  time: 0.1941  data_time: 0.0015  memory: 19701  
09/15 21:00:09 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:44  time: 0.1347  data_time: 0.0015  memory: 19678  
09/15 21:00:10 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:32  time: 0.0315  data_time: 0.0014  memory: 512  
09/15 21:00:13 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:21  time: 0.0322  data_time: 0.0018  memory: 19706  
09/15 21:00:15 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:10  time: 0.0311  data_time: 0.0016  memory: 503  
09/15 21:00:20 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:01  time: 0.0290  data_time: 0.0013  memory: 19711  
09/15 21:00:26 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:51  time: 0.0314  data_time: 0.0017  memory: 19681  
09/15 21:00:30 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:42  time: 0.0338  data_time: 0.0014  memory: 19700  
09/15 21:00:32 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:33  time: 0.0323  data_time: 0.0017  memory: 19653  
09/15 21:00:34 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:24  time: 0.0298  data_time: 0.0016  memory: 461  
09/15 21:00:37 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:15  time: 0.0331  data_time: 0.0015  memory: 19721  
09/15 21:00:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:07  time: 0.0312  data_time: 0.0015  memory: 19661  
09/15 21:00:45 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0279  data_time: 0.0013  memory: 19724  
09/15 21:00:45 - mmengine - INFO - per class results:
09/15 21:00:45 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 71.27 | 87.32 |
|       building      | 77.91 | 93.16 |
|         sky         | 93.43 | 96.86 |
|        floor        | 75.63 | 88.67 |
|         tree        | 69.54 | 83.99 |
|       ceiling       | 79.86 | 89.96 |
|         road        |  77.8 | 86.16 |
|         bed         | 81.83 | 91.39 |
|      windowpane     | 54.54 | 72.83 |
|        grass        | 64.57 | 81.75 |
|       cabinet       | 53.73 | 72.06 |
|       sidewalk      |  57.9 | 76.49 |
|        person       | 72.73 | 83.82 |
|        earth        | 31.97 | 45.76 |
|         door        | 35.78 | 48.29 |
|        table        | 46.31 | 67.37 |
|       mountain      |  51.1 | 62.79 |
|        plant        | 45.17 | 54.26 |
|       curtain       | 65.83 |  77.9 |
|        chair        |  45.2 | 59.15 |
|         car         | 77.21 | 86.36 |
|        water        | 44.49 | 61.45 |
|       painting      | 65.69 | 78.75 |
|         sofa        |  53.3 | 78.26 |
|        shelf        | 36.95 | 55.28 |
|        house        | 23.57 |  28.6 |
|         sea         | 52.05 | 73.09 |
|        mirror       | 49.84 | 59.13 |
|         rug         | 54.65 | 64.84 |
|        field        | 28.05 | 40.51 |
|       armchair      | 23.81 | 30.03 |
|         seat        | 57.56 | 75.43 |
|        fence        | 31.05 | 46.12 |
|         desk        |  37.3 | 49.16 |
|         rock        | 30.54 | 41.06 |
|       wardrobe      | 46.29 | 57.73 |
|         lamp        | 50.96 | 64.36 |
|       bathtub       | 63.09 | 70.53 |
|       railing       | 30.36 | 40.11 |
|       cushion       |  43.7 | 54.03 |
|         base        | 11.99 | 13.73 |
|         box         |  19.1 | 30.73 |
|        column       | 33.82 |  47.6 |
|      signboard      | 30.29 | 40.65 |
|   chest of drawers  | 35.58 | 53.32 |
|       counter       | 21.24 | 30.48 |
|         sand        | 26.77 | 41.29 |
|         sink        | 56.41 | 67.79 |
|      skyscraper     | 51.81 | 58.42 |
|      fireplace      | 59.23 | 68.36 |
|     refrigerator    | 59.88 |  72.4 |
|      grandstand     | 33.57 | 57.94 |
|         path        | 13.89 | 19.85 |
|        stairs       | 25.74 | 35.38 |
|        runway       | 72.12 | 94.05 |
|         case        | 37.89 | 52.16 |
|      pool table     | 87.19 | 92.13 |
|        pillow       | 43.25 | 53.49 |
|     screen door     | 49.66 | 62.66 |
|       stairway      | 27.55 |  39.7 |
|        river        |  7.91 | 18.22 |
|        bridge       | 47.67 | 65.67 |
|       bookcase      | 39.76 | 55.68 |
|        blind        | 34.67 | 40.09 |
|     coffee table    | 49.59 | 72.52 |
|        toilet       | 75.54 | 81.28 |
|        flower       | 32.22 | 42.79 |
|         book        | 42.71 | 60.32 |
|         hill        | 14.41 | 20.16 |
|        bench        | 33.14 | 43.93 |
|      countertop     | 43.03 | 57.68 |
|        stove        | 50.88 |  58.4 |
|         palm        | 39.43 | 48.44 |
|    kitchen island   | 21.97 | 37.56 |
|       computer      | 52.12 | 61.35 |
|     swivel chair    | 35.11 | 43.09 |
|         boat        | 34.13 | 37.69 |
|         bar         | 20.67 | 26.67 |
|    arcade machine   | 39.91 | 43.48 |
|        hovel        | 21.01 |  23.7 |
|         bus         | 68.38 | 75.83 |
|        towel        | 45.92 | 52.87 |
|        light        | 48.81 | 56.15 |
|        truck        | 24.95 | 35.44 |
|        tower        |  19.5 | 25.57 |
|      chandelier     | 53.59 |  68.7 |
|        awning       | 17.65 | 18.84 |
|     streetlight     | 15.91 |  18.6 |
|        booth        | 33.08 | 38.98 |
| television receiver | 58.17 |  69.4 |
|       airplane      | 49.91 | 54.52 |
|      dirt track     |  3.2  |  3.82 |
|       apparel       |  18.2 | 24.82 |
|         pole        | 15.86 | 22.46 |
|         land        |  0.28 |  0.62 |
|      bannister      |  3.65 |  4.92 |
|      escalator      |  5.42 |  5.86 |
|       ottoman       | 20.81 | 24.25 |
|        bottle       | 27.53 | 38.02 |
|        buffet       | 35.28 | 41.91 |
|        poster       | 19.81 | 24.72 |
|        stage        | 12.61 | 16.34 |
|         van         | 37.26 | 50.38 |
|         ship        |  3.29 |  4.82 |
|       fountain      |  6.67 |  7.01 |
|    conveyer belt    | 57.33 | 62.09 |
|        canopy       |  8.08 |  8.19 |
|        washer       | 62.53 | 64.48 |
|      plaything      | 13.86 | 17.42 |
|    swimming pool    | 55.12 | 79.69 |
|        stool        |  25.8 | 34.24 |
|        barrel       | 30.87 | 55.61 |
|        basket       | 19.39 | 23.64 |
|      waterfall      | 42.17 | 47.85 |
|         tent        | 94.05 | 95.64 |
|         bag         |  6.17 |  6.94 |
|       minibike      | 26.56 | 27.89 |
|        cradle       | 69.31 | 81.36 |
|         oven        |  14.5 |  29.6 |
|         ball        | 40.13 | 54.65 |
|         food        | 38.09 | 41.16 |
|         step        |  6.85 |  8.47 |
|         tank        | 33.71 | 40.72 |
|      trade name     |  21.3 | 23.37 |
|      microwave      |  32.5 | 35.95 |
|         pot         | 35.59 | 40.99 |
|        animal       | 50.23 | 56.55 |
|       bicycle       | 43.18 | 59.12 |
|         lake        | 51.04 |  61.8 |
|      dishwasher     | 34.65 | 50.23 |
|        screen       | 62.79 | 78.55 |
|       blanket       |  8.51 |  9.25 |
|      sculpture      | 26.32 | 31.19 |
|         hood        | 43.54 | 49.87 |
|        sconce       | 28.11 | 33.76 |
|         vase        | 22.54 | 35.96 |
|    traffic light    | 18.13 | 26.89 |
|         tray        |  1.77 |  2.51 |
|        ashcan       | 30.93 | 40.85 |
|         fan         | 48.49 | 55.73 |
|         pier        |  46.0 | 67.47 |
|      crt screen     |  6.82 | 16.92 |
|        plate        | 34.01 | 40.75 |
|       monitor       |  9.18 | 10.65 |
|    bulletin board   | 25.62 | 31.99 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 47.65 | 53.36 |
|        glass        |  6.5  |  6.9  |
|        clock        | 20.13 | 24.01 |
|         flag        | 25.15 | 26.35 |
+---------------------+-------+-------+
09/15 21:00:45 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.5000  mIoU: 38.3800  mAcc: 47.8700  data_time: 0.0018  time: 0.1560
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/15 21:00:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 203080473
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 203080473
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:00:53 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/jpeg_compression'

09/15 21:00:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:00:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:01:00 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:01:00 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:01:52 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:33:53  time: 0.4428  data_time: 0.0016  memory: 19720  
09/15 21:02:14 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:20  time: 0.5855  data_time: 0.0017  memory: 19715  
09/15 21:02:25 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:26  time: 0.2040  data_time: 0.0035  memory: 19689  
09/15 21:02:42 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:16  time: 0.3397  data_time: 0.0015  memory: 19717  
09/15 21:02:57 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:35  time: 0.1475  data_time: 0.0015  memory: 19712  
09/15 21:03:10 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:17  time: 0.0416  data_time: 0.0017  memory: 19713  
09/15 21:03:25 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:23  time: 0.1368  data_time: 0.0015  memory: 19712  
09/15 21:03:38 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:10:29  time: 0.2125  data_time: 0.0014  memory: 19713  
09/15 21:03:43 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:19  time: 0.1136  data_time: 0.0014  memory: 19686  
09/15 21:03:47 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:19  time: 0.0371  data_time: 0.0015  memory: 19653  
09/15 21:03:52 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:32  time: 0.1783  data_time: 0.0016  memory: 19712  
09/15 21:03:57 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:06:51  time: 0.1830  data_time: 0.0016  memory: 19714  
09/15 21:04:05 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:24  time: 0.2524  data_time: 0.0016  memory: 19722  
09/15 21:04:16 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:02  time: 0.0416  data_time: 0.0016  memory: 19721  
09/15 21:04:27 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:05:44  time: 0.5154  data_time: 0.0022  memory: 19727  
09/15 21:04:31 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:15  time: 0.0398  data_time: 0.0017  memory: 19690  
09/15 21:04:33 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:04:47  time: 0.0391  data_time: 0.0017  memory: 512  
09/15 21:04:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:25  time: 0.1416  data_time: 0.0014  memory: 19678  
09/15 21:04:47 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:10  time: 0.2511  data_time: 0.0015  memory: 19709  
09/15 21:04:53 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:03:52  time: 0.0381  data_time: 0.0014  memory: 19710  
09/15 21:05:02 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:03:38  time: 0.3591  data_time: 0.0016  memory: 19729  
09/15 21:05:08 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:23  time: 0.0369  data_time: 0.0016  memory: 19692  
09/15 21:05:12 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:06  time: 0.1091  data_time: 0.0015  memory: 19666  
09/15 21:05:14 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:02:49  time: 0.0323  data_time: 0.0013  memory: 1709  
09/15 21:05:19 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:35  time: 0.1290  data_time: 0.0014  memory: 19695  
09/15 21:05:21 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:20  time: 0.0338  data_time: 0.0013  memory: 513  
09/15 21:05:23 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:06  time: 0.0360  data_time: 0.0025  memory: 19649  
09/15 21:05:31 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:01:56  time: 0.1967  data_time: 0.0014  memory: 19701  
09/15 21:05:35 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:44  time: 0.1370  data_time: 0.0014  memory: 19678  
09/15 21:05:37 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:32  time: 0.0355  data_time: 0.0014  memory: 512  
09/15 21:05:40 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:21  time: 0.0357  data_time: 0.0015  memory: 19706  
09/15 21:05:42 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:10  time: 0.0347  data_time: 0.0015  memory: 503  
09/15 21:05:47 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:00  time: 0.0322  data_time: 0.0013  memory: 19711  
09/15 21:05:52 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:51  time: 0.0347  data_time: 0.0016  memory: 19681  
09/15 21:05:57 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:42  time: 0.0375  data_time: 0.0014  memory: 19700  
09/15 21:05:59 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:33  time: 0.0359  data_time: 0.0016  memory: 19653  
09/15 21:06:01 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:24  time: 0.0369  data_time: 0.0016  memory: 461  
09/15 21:06:04 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:15  time: 0.0364  data_time: 0.0014  memory: 19721  
09/15 21:06:08 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:07  time: 0.0340  data_time: 0.0014  memory: 19661  
09/15 21:06:12 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0308  data_time: 0.0012  memory: 19724  
09/15 21:06:12 - mmengine - INFO - per class results:
09/15 21:06:12 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 69.97 |  86.9 |
|       building      | 78.98 | 92.05 |
|         sky         |  93.2 | 96.85 |
|        floor        | 73.25 | 88.44 |
|         tree        | 70.18 | 84.43 |
|       ceiling       | 76.84 | 85.77 |
|         road        |  75.4 | 84.77 |
|         bed         | 80.22 | 90.56 |
|      windowpane     | 54.55 | 72.81 |
|        grass        | 66.11 | 82.69 |
|       cabinet       | 51.24 | 68.48 |
|       sidewalk      | 53.44 | 71.45 |
|        person       | 72.45 | 87.16 |
|        earth        | 31.88 | 50.48 |
|         door        | 33.48 |  43.7 |
|        table        | 46.02 | 65.45 |
|       mountain      | 52.04 | 68.21 |
|        plant        | 45.99 | 53.88 |
|       curtain       | 65.59 |  77.3 |
|        chair        | 44.76 | 58.13 |
|         car         | 77.74 | 88.99 |
|        water        | 42.91 | 57.42 |
|       painting      | 65.07 | 77.09 |
|         sofa        | 54.08 | 75.92 |
|        shelf        | 36.38 |  53.3 |
|        house        |  33.5 |  45.2 |
|         sea         | 48.52 | 71.48 |
|        mirror       | 46.19 | 52.81 |
|         rug         |  45.2 | 48.91 |
|        field        | 31.73 | 43.61 |
|       armchair      | 27.14 | 37.21 |
|         seat        | 56.07 | 75.43 |
|        fence        | 36.17 | 49.75 |
|         desk        | 37.12 | 51.87 |
|         rock        | 33.27 | 49.78 |
|       wardrobe      |  47.9 | 60.15 |
|         lamp        | 49.33 | 61.57 |
|       bathtub       |  53.5 | 63.15 |
|       railing       | 28.11 | 39.06 |
|       cushion       | 41.59 | 55.13 |
|         base        | 16.43 | 21.12 |
|         box         |  14.8 | 21.84 |
|        column       | 35.07 | 50.07 |
|      signboard      | 30.19 | 41.39 |
|   chest of drawers  | 35.31 | 48.23 |
|       counter       | 20.09 | 26.59 |
|         sand        | 28.14 | 43.44 |
|         sink        | 54.35 | 71.68 |
|      skyscraper     | 60.06 | 73.45 |
|      fireplace      | 63.93 | 77.51 |
|     refrigerator    | 57.21 | 74.07 |
|      grandstand     | 37.54 | 53.95 |
|         path        | 14.13 | 21.94 |
|        stairs       | 26.55 | 33.38 |
|        runway       | 62.21 | 81.79 |
|         case        | 40.06 | 53.82 |
|      pool table     | 85.19 | 92.24 |
|        pillow       | 39.11 | 48.43 |
|     screen door     | 29.46 |  37.6 |
|       stairway      | 27.17 | 35.56 |
|        river        |  7.36 |  16.5 |
|        bridge       | 35.96 | 47.98 |
|       bookcase      | 34.95 | 49.01 |
|        blind        | 24.41 | 25.79 |
|     coffee table    | 47.36 | 68.64 |
|        toilet       | 69.75 | 75.41 |
|        flower       | 30.94 |  41.6 |
|         book        |  43.1 | 58.37 |
|         hill        | 12.63 | 17.27 |
|        bench        | 35.17 | 44.58 |
|      countertop     | 42.53 | 56.64 |
|        stove        | 46.17 | 52.94 |
|         palm        |  43.5 | 58.73 |
|    kitchen island   | 21.78 | 33.21 |
|       computer      | 48.68 | 59.23 |
|     swivel chair    | 33.61 |  39.6 |
|         boat        | 40.37 | 51.09 |
|         bar         |  24.6 | 29.69 |
|    arcade machine   | 48.28 | 50.49 |
|        hovel        | 27.64 | 32.59 |
|         bus         |  67.5 |  79.5 |
|        towel        |  43.7 | 50.19 |
|        light        | 41.57 | 45.66 |
|        truck        | 13.58 | 18.35 |
|        tower        | 19.15 | 24.42 |
|      chandelier     |  51.7 | 64.13 |
|        awning       | 17.48 | 19.72 |
|     streetlight     | 15.36 | 17.19 |
|        booth        | 33.23 | 43.36 |
| television receiver | 53.71 | 67.75 |
|       airplane      |  49.7 | 57.92 |
|      dirt track     |  1.94 |  5.02 |
|       apparel       | 22.71 | 34.25 |
|         pole        | 17.08 | 23.26 |
|         land        |  0.44 |  0.65 |
|      bannister      |  4.14 |  5.71 |
|      escalator      | 16.81 | 17.59 |
|       ottoman       | 20.16 | 25.25 |
|        bottle       | 27.98 | 36.38 |
|        buffet       | 24.03 | 27.49 |
|        poster       | 20.79 | 26.42 |
|        stage        | 12.53 | 16.62 |
|         van         | 36.92 | 50.06 |
|         ship        | 12.31 | 16.76 |
|       fountain      |  8.97 |  9.21 |
|    conveyer belt    | 72.84 | 76.72 |
|        canopy       |  8.68 |  9.05 |
|        washer       | 63.36 | 68.63 |
|      plaything      | 15.64 | 20.76 |
|    swimming pool    | 52.45 | 71.69 |
|        stool        | 22.61 | 29.03 |
|        barrel       | 21.18 | 47.02 |
|        basket       | 19.94 |  24.2 |
|      waterfall      | 65.98 | 79.65 |
|         tent        | 81.11 | 96.39 |
|         bag         |  5.31 |  6.54 |
|       minibike      |  48.5 | 55.23 |
|        cradle       | 72.76 | 88.52 |
|         oven        | 12.28 | 19.29 |
|         ball        | 38.64 | 46.07 |
|         food        |  47.7 | 54.21 |
|         step        |  0.9  |  1.17 |
|         tank        | 34.79 | 42.23 |
|      trade name     | 16.37 | 17.51 |
|      microwave      | 50.35 | 57.73 |
|         pot         | 30.28 | 35.11 |
|        animal       | 51.54 | 55.27 |
|       bicycle       | 40.51 |  62.8 |
|         lake        | 46.56 | 61.07 |
|      dishwasher     | 36.22 |  49.2 |
|        screen       | 60.55 | 74.37 |
|       blanket       |  9.71 | 10.11 |
|      sculpture      | 24.44 | 35.17 |
|         hood        | 39.66 | 42.65 |
|        sconce       |  28.1 | 31.46 |
|         vase        | 23.76 | 34.05 |
|    traffic light    |  18.0 | 26.94 |
|         tray        |  2.32 |  3.44 |
|        ashcan       | 26.95 | 33.56 |
|         fan         | 46.93 | 55.54 |
|         pier        | 39.57 | 54.59 |
|      crt screen     |  5.65 | 15.52 |
|        plate        | 39.39 | 48.26 |
|       monitor       |  6.47 |  7.93 |
|    bulletin board   | 29.42 | 37.26 |
|        shower       |  0.56 |  7.98 |
|       radiator      | 44.99 | 50.44 |
|        glass        |  7.59 |  8.04 |
|        clock        | 21.05 | 24.06 |
|         flag        | 24.39 | 26.49 |
+---------------------+-------+-------+
09/15 21:06:13 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.9000  mIoU: 38.0800  mAcc: 47.8000  data_time: 0.0018  time: 0.1560
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
09/15 21:06:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2095101328
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2095101328
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:06:19 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/elastic_transform'

09/15 21:06:25 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:06:25 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:06:25 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:06:25 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:08:04 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:04:13  time: 1.4364  data_time: 0.0016  memory: 19720  
09/15 21:09:14 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:53:16  time: 1.5958  data_time: 0.0025  memory: 19715  
09/15 21:10:13 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:46:43  time: 1.2035  data_time: 0.0016  memory: 19689  
09/15 21:11:19 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:44:00  time: 1.3021  data_time: 0.0015  memory: 19717  
09/15 21:12:20 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:41:20  time: 1.0929  data_time: 0.0015  memory: 19712  
09/15 21:13:19 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:39:03  time: 1.0058  data_time: 0.0016  memory: 19713  
09/15 21:14:21 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:37:20  time: 1.0305  data_time: 0.0015  memory: 19712  
09/15 21:15:22 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:35:46  time: 1.3039  data_time: 0.0032  memory: 19713  
09/15 21:16:14 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:33:46  time: 1.0524  data_time: 0.0034  memory: 19686  
09/15 21:17:09 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:32:11  time: 1.0347  data_time: 0.0017  memory: 19653  
09/15 21:18:09 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:30:54  time: 1.2534  data_time: 0.0017  memory: 19712  
09/15 21:19:04 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:29:30  time: 1.2441  data_time: 0.0037  memory: 19714  
09/15 21:19:56 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:28:04  time: 1.2424  data_time: 0.0022  memory: 19722  
09/15 21:21:00 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:27:03  time: 1.0985  data_time: 0.0016  memory: 19721  
09/15 21:22:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:26:03  time: 1.5227  data_time: 0.0031  memory: 19727  
09/15 21:22:56 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:24:45  time: 1.0883  data_time: 0.0019  memory: 19690  
09/15 21:23:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:23:32  time: 1.0774  data_time: 0.0018  memory: 512  
09/15 21:24:42 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:20  time: 1.0651  data_time: 0.0015  memory: 19678  
09/15 21:25:44 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:20  time: 1.2570  data_time: 0.0032  memory: 19709  
09/15 21:26:39 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:13  time: 1.0387  data_time: 0.0016  memory: 19710  
09/15 21:27:40 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:13  time: 1.4133  data_time: 0.0016  memory: 19729  
09/15 21:28:38 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:18:10  time: 1.0464  data_time: 0.0017  memory: 19692  
09/15 21:29:33 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:17:05  time: 1.1618  data_time: 0.0024  memory: 19666  
09/15 21:30:26 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:16:00  time: 1.0439  data_time: 0.0017  memory: 1709  
09/15 21:31:20 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:56  time: 1.0875  data_time: 0.0016  memory: 19695  
09/15 21:32:09 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:51  time: 1.0620  data_time: 0.0017  memory: 513  
09/15 21:33:02 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:48  time: 0.9787  data_time: 0.0016  memory: 19649  
09/15 21:34:01 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:49  time: 1.2650  data_time: 0.0015  memory: 19701  
09/15 21:34:53 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:47  time: 1.1933  data_time: 0.0016  memory: 19678  
09/15 21:35:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:46  time: 0.9713  data_time: 0.0015  memory: 512  
09/15 21:36:40 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:46  time: 1.0576  data_time: 0.0015  memory: 19706  
09/15 21:37:31 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:46  time: 1.0532  data_time: 0.0020  memory: 503  
09/15 21:38:26 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:47  time: 0.9647  data_time: 0.0016  memory: 19711  
09/15 21:39:22 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:48  time: 1.0520  data_time: 0.0018  memory: 19681  
09/15 21:40:18 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:50  time: 1.0504  data_time: 0.0015  memory: 19700  
09/15 21:41:09 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:51  time: 1.0691  data_time: 0.0019  memory: 19653  
09/15 21:42:02 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:53  time: 1.0516  data_time: 0.0018  memory: 461  
09/15 21:42:52 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:55  time: 1.0085  data_time: 0.0016  memory: 19721  
09/15 21:43:46 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:57  time: 1.0085  data_time: 0.0015  memory: 19661  
09/15 21:44:39 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9326  data_time: 0.0015  memory: 19724  
09/15 21:44:40 - mmengine - INFO - per class results:
09/15 21:44:40 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 61.46 | 78.28 |
|       building      | 71.92 | 87.37 |
|         sky         | 83.82 |  91.2 |
|        floor        |  66.7 | 81.24 |
|         tree        | 61.07 | 78.33 |
|       ceiling       | 68.93 | 83.27 |
|         road        | 71.88 | 83.35 |
|         bed         | 73.94 | 86.79 |
|      windowpane     |  46.1 | 63.56 |
|        grass        | 60.51 | 79.17 |
|       cabinet       | 47.15 | 63.49 |
|       sidewalk      | 48.57 | 65.08 |
|        person       | 58.79 | 78.84 |
|        earth        | 27.91 | 40.29 |
|         door        | 31.03 | 40.55 |
|        table        | 38.97 | 57.47 |
|       mountain      | 45.42 | 63.74 |
|        plant        | 39.88 | 53.23 |
|       curtain       | 50.46 |  70.0 |
|        chair        | 35.02 | 52.28 |
|         car         | 60.99 | 77.74 |
|        water        | 43.26 | 58.46 |
|       painting      | 45.59 | 63.27 |
|         sofa        | 46.42 | 65.17 |
|        shelf        | 32.68 | 47.92 |
|        house        | 25.01 | 32.94 |
|         sea         | 46.45 | 69.45 |
|        mirror       | 46.46 | 60.61 |
|         rug         | 50.18 | 63.27 |
|        field        |  28.7 | 41.97 |
|       armchair      | 27.34 | 41.13 |
|         seat        | 56.18 |  72.8 |
|        fence        | 31.51 | 44.66 |
|         desk        | 31.25 | 45.32 |
|         rock        | 28.56 | 45.94 |
|       wardrobe      | 44.13 | 57.16 |
|         lamp        | 27.34 | 43.71 |
|       bathtub       |  53.3 | 61.32 |
|       railing       | 26.15 | 40.04 |
|       cushion       |  36.7 | 49.25 |
|         base        | 17.84 | 25.56 |
|         box         | 13.12 | 19.57 |
|        column       | 25.89 | 42.65 |
|      signboard      | 22.03 | 32.12 |
|   chest of drawers  | 29.46 | 42.26 |
|       counter       | 22.12 | 30.46 |
|         sand        | 27.98 | 42.74 |
|         sink        | 42.51 | 57.49 |
|      skyscraper     | 47.95 |  58.7 |
|      fireplace      | 55.73 | 76.91 |
|     refrigerator    | 50.27 | 66.54 |
|      grandstand     | 37.65 | 60.65 |
|         path        | 13.86 |  21.8 |
|        stairs       | 21.97 |  26.6 |
|        runway       | 67.77 | 91.06 |
|         case        | 41.03 | 57.12 |
|      pool table     | 72.69 | 81.93 |
|        pillow       | 34.34 | 49.31 |
|     screen door     | 46.35 | 56.55 |
|       stairway      | 24.94 |  30.6 |
|        river        |  7.92 | 14.06 |
|        bridge       | 33.93 | 43.46 |
|       bookcase      | 27.14 | 43.08 |
|        blind        | 32.75 | 37.96 |
|     coffee table    | 42.94 | 67.62 |
|        toilet       | 52.67 | 69.36 |
|        flower       |  26.3 | 37.67 |
|         book        | 30.09 |  48.0 |
|         hill        | 10.74 |  14.5 |
|        bench        | 31.42 | 41.47 |
|      countertop     | 31.26 | 49.34 |
|        stove        | 45.89 |  56.1 |
|         palm        | 32.87 | 47.14 |
|    kitchen island   | 19.33 | 34.57 |
|       computer      | 44.83 |  57.1 |
|     swivel chair    | 29.26 | 43.25 |
|         boat        | 40.94 | 54.46 |
|         bar         | 20.52 | 25.17 |
|    arcade machine   | 34.61 | 38.65 |
|        hovel        | 30.08 | 36.22 |
|         bus         | 64.72 | 81.88 |
|        towel        | 31.47 | 44.56 |
|        light        | 13.46 |  20.5 |
|        truck        | 14.33 | 19.86 |
|        tower        | 15.31 | 20.05 |
|      chandelier     | 37.16 | 52.27 |
|        awning       | 13.89 | 17.83 |
|     streetlight     |  6.69 |  9.18 |
|        booth        | 29.17 |  31.9 |
| television receiver | 40.38 | 54.24 |
|       airplane      | 34.49 |  47.2 |
|      dirt track     |  6.85 | 27.63 |
|       apparel       | 14.87 | 28.44 |
|         pole        |  8.48 | 12.69 |
|         land        |  0.1  |  0.14 |
|      bannister      |  2.18 |  3.01 |
|      escalator      | 18.87 |  21.5 |
|       ottoman       | 21.35 | 26.58 |
|        bottle       | 22.71 | 37.57 |
|        buffet       | 29.25 | 34.36 |
|        poster       | 18.93 | 24.35 |
|        stage        |  10.0 | 15.23 |
|         van         | 29.52 | 41.27 |
|         ship        |  6.09 |  7.28 |
|       fountain      | 13.58 | 14.66 |
|    conveyer belt    | 54.88 | 62.63 |
|        canopy       |  7.42 |  8.57 |
|        washer       | 58.35 | 65.74 |
|      plaything      |  13.3 | 22.49 |
|    swimming pool    | 42.96 | 61.31 |
|        stool        | 18.68 | 26.52 |
|        barrel       | 25.42 | 45.44 |
|        basket       | 16.23 | 23.06 |
|      waterfall      | 52.81 | 70.28 |
|         tent        | 74.55 | 91.97 |
|         bag         |  5.46 |  8.18 |
|       minibike      | 37.74 | 49.39 |
|        cradle       | 69.93 | 81.49 |
|         oven        | 16.09 | 34.94 |
|         ball        |  31.4 | 43.39 |
|         food        | 38.59 | 49.88 |
|         step        |  1.31 |  1.59 |
|         tank        | 35.27 | 42.05 |
|      trade name     | 12.65 | 14.72 |
|      microwave      | 26.74 | 31.26 |
|         pot         | 23.02 | 30.17 |
|        animal       | 49.41 | 55.64 |
|       bicycle       | 30.47 | 52.48 |
|         lake        | 39.01 | 60.71 |
|      dishwasher     | 36.79 | 47.99 |
|        screen       | 54.16 |  75.0 |
|       blanket       |  8.08 | 10.04 |
|      sculpture      | 24.42 | 35.51 |
|         hood        | 26.93 | 35.24 |
|        sconce       |  14.8 | 21.31 |
|         vase        | 12.62 | 21.45 |
|    traffic light    | 12.66 | 20.71 |
|         tray        |  1.46 |  2.07 |
|        ashcan       | 18.96 | 31.94 |
|         fan         | 22.33 | 32.93 |
|         pier        | 42.13 | 63.28 |
|      crt screen     |  9.51 | 25.25 |
|        plate        | 32.26 | 44.01 |
|       monitor       |  8.61 | 10.04 |
|    bulletin board   | 26.26 | 40.28 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 40.21 |  47.7 |
|        glass        |  7.1  |  8.09 |
|        clock        | 12.47 | 15.39 |
|         flag        | 17.88 | 21.66 |
+---------------------+-------+-------+
09/15 21:44:40 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 72.4700  mIoU: 32.8900  mAcc: 44.3200  data_time: 0.0022  time: 1.1467
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/15 21:46:12 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 296918838
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 296918838
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:46:12 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/pixelate'

09/15 21:46:50 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:46:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:46:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:46:51 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:48:32 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:05:26  time: 0.4399  data_time: 0.0017  memory: 19720  
09/15 21:48:53 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:38:38  time: 0.5815  data_time: 0.0017  memory: 19715  
09/15 21:49:04 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:27:19  time: 0.1996  data_time: 0.0017  memory: 19689  
09/15 21:49:21 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:22:27  time: 0.3370  data_time: 0.0017  memory: 19717  
09/15 21:49:36 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:19:09  time: 0.1550  data_time: 0.0025  memory: 19712  
09/15 21:49:49 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:16:46  time: 0.0358  data_time: 0.0017  memory: 19713  
09/15 21:50:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:15:06  time: 0.1310  data_time: 0.0015  memory: 19712  
09/15 21:50:16 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:13:37  time: 0.2076  data_time: 0.0014  memory: 19713  
09/15 21:50:21 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:12:00  time: 0.1092  data_time: 0.0015  memory: 19686  
09/15 21:50:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:10:39  time: 0.0318  data_time: 0.0015  memory: 19653  
09/15 21:50:29 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:09:34  time: 0.1732  data_time: 0.0015  memory: 19712  
09/15 21:50:34 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:38  time: 0.1779  data_time: 0.0017  memory: 19714  
09/15 21:50:42 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:59  time: 0.2551  data_time: 0.0018  memory: 19722  
09/15 21:50:52 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:27  time: 0.0358  data_time: 0.0016  memory: 19721  
09/15 21:51:03 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:00  time: 0.5029  data_time: 0.0015  memory: 19727  
09/15 21:51:07 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:23  time: 0.0317  data_time: 0.0016  memory: 19690  
09/15 21:51:08 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:47  time: 0.0318  data_time: 0.0017  memory: 512  
09/15 21:51:13 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:19  time: 0.1365  data_time: 0.0014  memory: 19678  
09/15 21:51:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:59  time: 0.2480  data_time: 0.0016  memory: 19709  
09/15 21:51:28 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:36  time: 0.0320  data_time: 0.0015  memory: 19710  
09/15 21:51:36 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:17  time: 0.3582  data_time: 0.0016  memory: 19729  
09/15 21:51:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:58  time: 0.0315  data_time: 0.0016  memory: 19692  
09/15 21:51:46 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:37  time: 0.1038  data_time: 0.0015  memory: 19666  
09/15 21:51:48 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:17  time: 0.0299  data_time: 0.0015  memory: 1709  
09/15 21:51:53 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:00  time: 0.1261  data_time: 0.0015  memory: 19695  
09/15 21:51:54 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:43  time: 0.0309  data_time: 0.0015  memory: 513  
09/15 21:51:57 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:27  time: 0.0325  data_time: 0.0014  memory: 19649  
09/15 21:52:05 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:14  time: 0.2059  data_time: 0.0025  memory: 19701  
09/15 21:52:08 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:00  time: 0.1344  data_time: 0.0015  memory: 19678  
09/15 21:52:10 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:46  time: 0.0317  data_time: 0.0015  memory: 512  
09/15 21:52:13 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:33  time: 0.0317  data_time: 0.0015  memory: 19706  
09/15 21:52:14 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:20  time: 0.0308  data_time: 0.0016  memory: 503  
09/15 21:52:20 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:09  time: 0.0302  data_time: 0.0015  memory: 19711  
09/15 21:52:25 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:58  time: 0.0314  data_time: 0.0016  memory: 19681  
09/15 21:52:29 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:48  time: 0.0331  data_time: 0.0015  memory: 19700  
09/15 21:52:32 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:37  time: 0.0318  data_time: 0.0016  memory: 19653  
09/15 21:52:33 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:27  time: 0.0317  data_time: 0.0016  memory: 461  
09/15 21:52:36 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:18  time: 0.0321  data_time: 0.0015  memory: 19721  
09/15 21:52:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:08  time: 0.0391  data_time: 0.0029  memory: 19661  
09/15 21:52:44 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0282  data_time: 0.0013  memory: 19724  
09/15 21:52:44 - mmengine - INFO - per class results:
09/15 21:52:44 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 71.27 | 87.32 |
|       building      | 77.91 | 93.16 |
|         sky         | 93.43 | 96.86 |
|        floor        | 75.63 | 88.67 |
|         tree        | 69.54 | 83.99 |
|       ceiling       | 79.86 | 89.96 |
|         road        |  77.8 | 86.16 |
|         bed         | 81.83 | 91.39 |
|      windowpane     | 54.54 | 72.83 |
|        grass        | 64.57 | 81.75 |
|       cabinet       | 53.73 | 72.06 |
|       sidewalk      |  57.9 | 76.49 |
|        person       | 72.73 | 83.82 |
|        earth        | 31.97 | 45.76 |
|         door        | 35.78 | 48.29 |
|        table        | 46.31 | 67.37 |
|       mountain      |  51.1 | 62.79 |
|        plant        | 45.17 | 54.26 |
|       curtain       | 65.83 |  77.9 |
|        chair        |  45.2 | 59.15 |
|         car         | 77.21 | 86.36 |
|        water        | 44.49 | 61.45 |
|       painting      | 65.69 | 78.75 |
|         sofa        |  53.3 | 78.26 |
|        shelf        | 36.95 | 55.28 |
|        house        | 23.57 |  28.6 |
|         sea         | 52.05 | 73.09 |
|        mirror       | 49.84 | 59.13 |
|         rug         | 54.65 | 64.84 |
|        field        | 28.05 | 40.51 |
|       armchair      | 23.81 | 30.03 |
|         seat        | 57.56 | 75.43 |
|        fence        | 31.05 | 46.12 |
|         desk        |  37.3 | 49.16 |
|         rock        | 30.54 | 41.06 |
|       wardrobe      | 46.29 | 57.73 |
|         lamp        | 50.96 | 64.36 |
|       bathtub       | 63.09 | 70.53 |
|       railing       | 30.36 | 40.11 |
|       cushion       |  43.7 | 54.03 |
|         base        | 11.99 | 13.73 |
|         box         |  19.1 | 30.73 |
|        column       | 33.82 |  47.6 |
|      signboard      | 30.29 | 40.65 |
|   chest of drawers  | 35.58 | 53.32 |
|       counter       | 21.24 | 30.48 |
|         sand        | 26.77 | 41.29 |
|         sink        | 56.41 | 67.79 |
|      skyscraper     | 51.81 | 58.42 |
|      fireplace      | 59.23 | 68.36 |
|     refrigerator    | 59.88 |  72.4 |
|      grandstand     | 33.57 | 57.94 |
|         path        | 13.89 | 19.85 |
|        stairs       | 25.74 | 35.38 |
|        runway       | 72.12 | 94.05 |
|         case        | 37.89 | 52.16 |
|      pool table     | 87.19 | 92.13 |
|        pillow       | 43.25 | 53.49 |
|     screen door     | 49.66 | 62.66 |
|       stairway      | 27.55 |  39.7 |
|        river        |  7.91 | 18.22 |
|        bridge       | 47.67 | 65.67 |
|       bookcase      | 39.76 | 55.68 |
|        blind        | 34.67 | 40.09 |
|     coffee table    | 49.59 | 72.52 |
|        toilet       | 75.54 | 81.28 |
|        flower       | 32.22 | 42.79 |
|         book        | 42.71 | 60.32 |
|         hill        | 14.41 | 20.16 |
|        bench        | 33.14 | 43.93 |
|      countertop     | 43.03 | 57.68 |
|        stove        | 50.88 |  58.4 |
|         palm        | 39.43 | 48.44 |
|    kitchen island   | 21.97 | 37.56 |
|       computer      | 52.12 | 61.35 |
|     swivel chair    | 35.11 | 43.09 |
|         boat        | 34.13 | 37.69 |
|         bar         | 20.67 | 26.67 |
|    arcade machine   | 39.91 | 43.48 |
|        hovel        | 21.01 |  23.7 |
|         bus         | 68.38 | 75.83 |
|        towel        | 45.92 | 52.87 |
|        light        | 48.81 | 56.15 |
|        truck        | 24.95 | 35.44 |
|        tower        |  19.5 | 25.57 |
|      chandelier     | 53.59 |  68.7 |
|        awning       | 17.65 | 18.84 |
|     streetlight     | 15.91 |  18.6 |
|        booth        | 33.08 | 38.98 |
| television receiver | 58.17 |  69.4 |
|       airplane      | 49.91 | 54.52 |
|      dirt track     |  3.2  |  3.82 |
|       apparel       |  18.2 | 24.82 |
|         pole        | 15.86 | 22.46 |
|         land        |  0.28 |  0.62 |
|      bannister      |  3.65 |  4.92 |
|      escalator      |  5.42 |  5.86 |
|       ottoman       | 20.81 | 24.25 |
|        bottle       | 27.53 | 38.02 |
|        buffet       | 35.28 | 41.91 |
|        poster       | 19.81 | 24.72 |
|        stage        | 12.61 | 16.34 |
|         van         | 37.26 | 50.38 |
|         ship        |  3.29 |  4.82 |
|       fountain      |  6.67 |  7.01 |
|    conveyer belt    | 57.33 | 62.09 |
|        canopy       |  8.08 |  8.19 |
|        washer       | 62.53 | 64.48 |
|      plaything      | 13.86 | 17.42 |
|    swimming pool    | 55.12 | 79.69 |
|        stool        |  25.8 | 34.24 |
|        barrel       | 30.87 | 55.61 |
|        basket       | 19.39 | 23.64 |
|      waterfall      | 42.17 | 47.85 |
|         tent        | 94.05 | 95.64 |
|         bag         |  6.17 |  6.94 |
|       minibike      | 26.56 | 27.89 |
|        cradle       | 69.31 | 81.36 |
|         oven        |  14.5 |  29.6 |
|         ball        | 40.13 | 54.65 |
|         food        | 38.09 | 41.16 |
|         step        |  6.85 |  8.47 |
|         tank        | 33.71 | 40.72 |
|      trade name     |  21.3 | 23.37 |
|      microwave      |  32.5 | 35.95 |
|         pot         | 35.59 | 40.99 |
|        animal       | 50.23 | 56.55 |
|       bicycle       | 43.18 | 59.12 |
|         lake        | 51.04 |  61.8 |
|      dishwasher     | 34.65 | 50.23 |
|        screen       | 62.79 | 78.55 |
|       blanket       |  8.51 |  9.25 |
|      sculpture      | 26.32 | 31.19 |
|         hood        | 43.54 | 49.87 |
|        sconce       | 28.11 | 33.76 |
|         vase        | 22.54 | 35.96 |
|    traffic light    | 18.13 | 26.89 |
|         tray        |  1.77 |  2.51 |
|        ashcan       | 30.93 | 40.85 |
|         fan         | 48.49 | 55.73 |
|         pier        |  46.0 | 67.47 |
|      crt screen     |  6.82 | 16.92 |
|        plate        | 34.01 | 40.75 |
|       monitor       |  9.18 | 10.65 |
|    bulletin board   | 25.62 | 31.99 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 47.65 | 53.36 |
|        glass        |  6.5  |  6.9  |
|        clock        | 20.13 | 24.01 |
|         flag        | 25.15 | 26.35 |
+---------------------+-------+-------+
09/15 21:52:44 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 78.5000  mIoU: 38.3800  mAcc: 47.8700  data_time: 0.0020  time: 0.1763
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/15 21:53:15 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1251177686
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1251177686
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 21:53:15 - mmengine - INFO - Config:
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth'
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dims=64,
        in_channels=3,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segformer/mit_b1_20220624-02e5a6a1.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            1,
            2,
            5,
            8,
        ],
        num_layers=[
            2,
            2,
            2,
            2,
        ],
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        patch_sizes=[
            7,
            3,
            3,
            3,
        ],
        qkv_bias=True,
        sr_ratios=[
            8,
            4,
            2,
            1,
        ],
        type='MixVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0.1,
        in_channels=[
            64,
            128,
            320,
            512,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='SegformerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            head=dict(lr_mult=10.0),
            norm=dict(decay_mult=0.0),
            pos_block=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_512x512/jpeg_compression'

09/15 21:53:28 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 21:53:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 21:53:29 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:53:30 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/segformer/segformer_mit-b1_512x512_160k_ade20k_20210726_112106-d70e859d.pth
09/15 21:54:24 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:35:07  time: 0.4485  data_time: 0.0033  memory: 19720  
09/15 21:54:45 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:23:58  time: 0.5875  data_time: 0.0018  memory: 19715  
09/15 21:54:56 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:17:51  time: 0.2018  data_time: 0.0016  memory: 19689  
09/15 21:55:13 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:15:34  time: 0.3438  data_time: 0.0038  memory: 19717  
09/15 21:55:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:13:50  time: 0.1477  data_time: 0.0015  memory: 19712  
09/15 21:55:42 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:12:29  time: 0.0412  data_time: 0.0017  memory: 19713  
09/15 21:55:57 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:11:33  time: 0.1361  data_time: 0.0015  memory: 19712  
09/15 21:56:09 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:10:37  time: 0.2120  data_time: 0.0014  memory: 19713  
09/15 21:56:14 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:09:26  time: 0.1148  data_time: 0.0015  memory: 19686  
09/15 21:56:18 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:26  time: 0.0383  data_time: 0.0015  memory: 19653  
09/15 21:56:23 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:38  time: 0.1807  data_time: 0.0034  memory: 19712  
09/15 21:56:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:06:56  time: 0.1849  data_time: 0.0016  memory: 19714  
09/15 21:56:37 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:29  time: 0.2516  data_time: 0.0015  memory: 19722  
09/15 21:56:47 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:06  time: 0.0413  data_time: 0.0016  memory: 19721  
09/15 21:56:59 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:05:48  time: 0.5074  data_time: 0.0015  memory: 19727  
09/15 21:57:02 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:19  time: 0.0380  data_time: 0.0016  memory: 19690  
09/15 21:57:04 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:04:50  time: 0.0393  data_time: 0.0016  memory: 512  
09/15 21:57:09 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:04:28  time: 0.1458  data_time: 0.0019  memory: 19678  
09/15 21:57:19 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:04:13  time: 0.2510  data_time: 0.0015  memory: 19709  
09/15 21:57:25 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:03:54  time: 0.0385  data_time: 0.0015  memory: 19710  
09/15 21:57:33 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:03:40  time: 0.3600  data_time: 0.0015  memory: 19729  
09/15 21:57:40 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:03:24  time: 0.0367  data_time: 0.0016  memory: 19692  
09/15 21:57:44 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:03:08  time: 0.1105  data_time: 0.0015  memory: 19666  
09/15 21:57:46 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:02:50  time: 0.0372  data_time: 0.0015  memory: 1709  
09/15 21:57:51 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:02:36  time: 0.1330  data_time: 0.0016  memory: 19695  
09/15 21:57:53 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:02:21  time: 0.0367  data_time: 0.0015  memory: 513  
09/15 21:57:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:02:08  time: 0.0393  data_time: 0.0014  memory: 19649  
09/15 21:58:04 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:01:57  time: 0.1995  data_time: 0.0014  memory: 19701  
09/15 21:58:08 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:45  time: 0.1394  data_time: 0.0015  memory: 19678  
09/15 21:58:09 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:33  time: 0.0382  data_time: 0.0015  memory: 512  
09/15 21:58:13 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:22  time: 0.0372  data_time: 0.0015  memory: 19706  
09/15 21:58:15 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:11  time: 0.0370  data_time: 0.0016  memory: 503  
09/15 21:58:20 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:01  time: 0.0351  data_time: 0.0015  memory: 19711  
09/15 21:58:26 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:52  time: 0.0379  data_time: 0.0016  memory: 19681  
09/15 21:58:30 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:42  time: 0.0393  data_time: 0.0014  memory: 19700  
09/15 21:58:33 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:33  time: 0.0383  data_time: 0.0017  memory: 19653  
09/15 21:58:35 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:24  time: 0.0380  data_time: 0.0017  memory: 461  
09/15 21:58:38 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:16  time: 0.0387  data_time: 0.0015  memory: 19721  
09/15 21:58:42 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:08  time: 0.0358  data_time: 0.0015  memory: 19661  
09/15 21:58:47 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0329  data_time: 0.0013  memory: 19724  
09/15 21:58:47 - mmengine - INFO - per class results:
09/15 21:58:47 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 69.97 |  86.9 |
|       building      | 78.98 | 92.05 |
|         sky         |  93.2 | 96.85 |
|        floor        | 73.25 | 88.44 |
|         tree        | 70.18 | 84.43 |
|       ceiling       | 76.84 | 85.77 |
|         road        |  75.4 | 84.77 |
|         bed         | 80.22 | 90.56 |
|      windowpane     | 54.55 | 72.81 |
|        grass        | 66.11 | 82.69 |
|       cabinet       | 51.24 | 68.48 |
|       sidewalk      | 53.44 | 71.45 |
|        person       | 72.45 | 87.16 |
|        earth        | 31.88 | 50.48 |
|         door        | 33.48 |  43.7 |
|        table        | 46.02 | 65.45 |
|       mountain      | 52.04 | 68.21 |
|        plant        | 45.99 | 53.88 |
|       curtain       | 65.59 |  77.3 |
|        chair        | 44.76 | 58.13 |
|         car         | 77.74 | 88.99 |
|        water        | 42.91 | 57.42 |
|       painting      | 65.07 | 77.09 |
|         sofa        | 54.08 | 75.92 |
|        shelf        | 36.38 |  53.3 |
|        house        |  33.5 |  45.2 |
|         sea         | 48.52 | 71.48 |
|        mirror       | 46.19 | 52.81 |
|         rug         |  45.2 | 48.91 |
|        field        | 31.73 | 43.61 |
|       armchair      | 27.14 | 37.21 |
|         seat        | 56.07 | 75.43 |
|        fence        | 36.17 | 49.75 |
|         desk        | 37.12 | 51.87 |
|         rock        | 33.27 | 49.78 |
|       wardrobe      |  47.9 | 60.15 |
|         lamp        | 49.33 | 61.57 |
|       bathtub       |  53.5 | 63.15 |
|       railing       | 28.11 | 39.06 |
|       cushion       | 41.59 | 55.13 |
|         base        | 16.43 | 21.12 |
|         box         |  14.8 | 21.84 |
|        column       | 35.07 | 50.07 |
|      signboard      | 30.19 | 41.39 |
|   chest of drawers  | 35.31 | 48.23 |
|       counter       | 20.09 | 26.59 |
|         sand        | 28.14 | 43.44 |
|         sink        | 54.35 | 71.68 |
|      skyscraper     | 60.06 | 73.45 |
|      fireplace      | 63.93 | 77.51 |
|     refrigerator    | 57.21 | 74.07 |
|      grandstand     | 37.54 | 53.95 |
|         path        | 14.13 | 21.94 |
|        stairs       | 26.55 | 33.38 |
|        runway       | 62.21 | 81.79 |
|         case        | 40.06 | 53.82 |
|      pool table     | 85.19 | 92.24 |
|        pillow       | 39.11 | 48.43 |
|     screen door     | 29.46 |  37.6 |
|       stairway      | 27.17 | 35.56 |
|        river        |  7.36 |  16.5 |
|        bridge       | 35.96 | 47.98 |
|       bookcase      | 34.95 | 49.01 |
|        blind        | 24.41 | 25.79 |
|     coffee table    | 47.36 | 68.64 |
|        toilet       | 69.75 | 75.41 |
|        flower       | 30.94 |  41.6 |
|         book        |  43.1 | 58.37 |
|         hill        | 12.63 | 17.27 |
|        bench        | 35.17 | 44.58 |
|      countertop     | 42.53 | 56.64 |
|        stove        | 46.17 | 52.94 |
|         palm        |  43.5 | 58.73 |
|    kitchen island   | 21.78 | 33.21 |
|       computer      | 48.68 | 59.23 |
|     swivel chair    | 33.61 |  39.6 |
|         boat        | 40.37 | 51.09 |
|         bar         |  24.6 | 29.69 |
|    arcade machine   | 48.28 | 50.49 |
|        hovel        | 27.64 | 32.59 |
|         bus         |  67.5 |  79.5 |
|        towel        |  43.7 | 50.19 |
|        light        | 41.57 | 45.66 |
|        truck        | 13.58 | 18.35 |
|        tower        | 19.15 | 24.42 |
|      chandelier     |  51.7 | 64.13 |
|        awning       | 17.48 | 19.72 |
|     streetlight     | 15.36 | 17.19 |
|        booth        | 33.23 | 43.36 |
| television receiver | 53.71 | 67.75 |
|       airplane      |  49.7 | 57.92 |
|      dirt track     |  1.94 |  5.02 |
|       apparel       | 22.71 | 34.25 |
|         pole        | 17.08 | 23.26 |
|         land        |  0.44 |  0.65 |
|      bannister      |  4.14 |  5.71 |
|      escalator      | 16.81 | 17.59 |
|       ottoman       | 20.16 | 25.25 |
|        bottle       | 27.98 | 36.38 |
|        buffet       | 24.03 | 27.49 |
|        poster       | 20.79 | 26.42 |
|        stage        | 12.53 | 16.62 |
|         van         | 36.92 | 50.06 |
|         ship        | 12.31 | 16.76 |
|       fountain      |  8.97 |  9.21 |
|    conveyer belt    | 72.84 | 76.72 |
|        canopy       |  8.68 |  9.05 |
|        washer       | 63.36 | 68.63 |
|      plaything      | 15.64 | 20.76 |
|    swimming pool    | 52.45 | 71.69 |
|        stool        | 22.61 | 29.03 |
|        barrel       | 21.18 | 47.02 |
|        basket       | 19.94 |  24.2 |
|      waterfall      | 65.98 | 79.65 |
|         tent        | 81.11 | 96.39 |
|         bag         |  5.31 |  6.54 |
|       minibike      |  48.5 | 55.23 |
|        cradle       | 72.76 | 88.52 |
|         oven        | 12.28 | 19.29 |
|         ball        | 38.64 | 46.07 |
|         food        |  47.7 | 54.21 |
|         step        |  0.9  |  1.17 |
|         tank        | 34.79 | 42.23 |
|      trade name     | 16.37 | 17.51 |
|      microwave      | 50.35 | 57.73 |
|         pot         | 30.28 | 35.11 |
|        animal       | 51.54 | 55.27 |
|       bicycle       | 40.51 |  62.8 |
|         lake        | 46.56 | 61.07 |
|      dishwasher     | 36.22 |  49.2 |
|        screen       | 60.55 | 74.37 |
|       blanket       |  9.71 | 10.11 |
|      sculpture      | 24.44 | 35.17 |
|         hood        | 39.66 | 42.65 |
|        sconce       |  28.1 | 31.46 |
|         vase        | 23.76 | 34.05 |
|    traffic light    |  18.0 | 26.94 |
|         tray        |  2.32 |  3.44 |
|        ashcan       | 26.95 | 33.56 |
|         fan         | 46.93 | 55.54 |
|         pier        | 39.57 | 54.59 |
|      crt screen     |  5.65 | 15.52 |
|        plate        | 39.39 | 48.26 |
|       monitor       |  6.47 |  7.93 |
|    bulletin board   | 29.42 | 37.26 |
|        shower       |  0.56 |  7.98 |
|       radiator      | 44.99 | 50.44 |
|        glass        |  7.59 |  8.04 |
|        clock        | 21.05 | 24.06 |
|         flag        | 24.39 | 26.49 |
+---------------------+-------+-------+
09/15 21:58:47 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 77.9000  mIoU: 38.0800  mAcc: 47.8000  data_time: 0.0019  time: 0.1586
Finished processing corruption type: jpeg_compression
Runtime: 1726430333

============================= JOB FEEDBACK =============================

NodeName=uc2n488
Job ID: 24235235
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 07:41:07
CPU Efficiency: 5.51% of 5-19:25:36 core-walltime
Job Wall-clock time: 08:42:51
Memory Utilized: 3.27 GB
Memory Efficiency: 3.27% of 100.00 GB
