Started at Fri Sep 20 02:43:50 CEST 2024
/var/spool/slurmd/job24247145/slurm_script: line 15: activate: No such file or directory
Processing corruption type: gaussian_noise
09/20 02:45:58 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 751477666
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 751477666
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 02:45:58 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='gaussian_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/gaussian_noise'

09/20 02:47:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 02:47:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 02:47:19 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 02:47:20 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 02:50:02 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:45:15  time: 0.8604  data_time: 0.0015  memory: 17245  
09/20 02:50:47 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:05:40  time: 1.0452  data_time: 0.0016  memory: 17025  
09/20 02:51:11 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:47:37  time: 0.5250  data_time: 0.0015  memory: 17018  
09/20 02:51:48 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:40:10  time: 0.6210  data_time: 0.0015  memory: 17027  
09/20 02:52:20 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:35:02  time: 0.4384  data_time: 0.0015  memory: 17026  
09/20 02:52:47 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:30:52  time: 0.1298  data_time: 0.0016  memory: 17021  
09/20 02:53:20 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:28:17  time: 0.4469  data_time: 0.0015  memory: 17026  
09/20 02:53:45 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:25:39  time: 0.5200  data_time: 0.0014  memory: 17023  
09/20 02:53:54 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:22:39  time: 0.2275  data_time: 0.0015  memory: 16947  
09/20 02:54:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:20:20  time: 0.1199  data_time: 0.0015  memory: 17006  
09/20 02:54:21 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:18:30  time: 0.5335  data_time: 0.0015  memory: 17025  
09/20 02:54:30 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:16:44  time: 0.2889  data_time: 0.0016  memory: 16953  
09/20 02:54:50 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:15:34  time: 0.5441  data_time: 0.0014  memory: 17027  
09/20 02:55:11 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:14:35  time: 0.1322  data_time: 0.0016  memory: 17028  
09/20 02:55:34 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:13:43  time: 0.9837  data_time: 0.0015  memory: 17030  
09/20 02:55:44 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:12:35  time: 0.1175  data_time: 0.0016  memory: 17018  
09/20 02:55:50 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:29  time: 0.1190  data_time: 0.0016  memory: 805  
09/20 02:55:59 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:34  time: 0.2131  data_time: 0.0015  memory: 16943  
09/20 02:56:19 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:56  time: 0.3272  data_time: 0.0016  memory: 17024  
09/20 02:56:31 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:11  time: 0.1140  data_time: 0.0015  memory: 17002  
09/20 02:56:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:34  time: 0.6322  data_time: 0.0015  memory: 17028  
09/20 02:57:03 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:56  time: 0.1188  data_time: 0.0015  memory: 17015  
09/20 02:57:13 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:18  time: 0.2240  data_time: 0.0015  memory: 17008  
09/20 02:57:19 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:39  time: 0.1166  data_time: 0.0015  memory: 1918  
09/20 02:57:30 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:06  time: 0.2262  data_time: 0.0014  memory: 17018  
09/20 02:57:36 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:31  time: 0.1180  data_time: 0.0015  memory: 1557  
09/20 02:57:45 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:00  time: 0.1140  data_time: 0.0014  memory: 17003  
09/20 02:58:05 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:36  time: 0.5225  data_time: 0.0014  memory: 17022  
09/20 02:58:16 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:08  time: 0.4712  data_time: 0.0014  memory: 17010  
09/20 02:58:22 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:40  time: 0.1125  data_time: 0.0015  memory: 829  
09/20 02:58:30 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:14  time: 0.1218  data_time: 0.0015  memory: 16952  
09/20 02:58:35 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:48  time: 0.1153  data_time: 0.0016  memory: 1601  
09/20 02:58:48 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:26  time: 0.1084  data_time: 0.0014  memory: 17025  
09/20 02:59:01 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:03  time: 0.1178  data_time: 0.0016  memory: 17016  
09/20 02:59:12 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:41  time: 0.1247  data_time: 0.0015  memory: 17006  
09/20 02:59:21 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:20  time: 0.1208  data_time: 0.0024  memory: 17005  
09/20 02:59:27 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:58  time: 0.1182  data_time: 0.0015  memory: 805  
09/20 02:59:36 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:38  time: 0.1224  data_time: 0.0014  memory: 17028  
09/20 02:59:47 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:19  time: 0.1131  data_time: 0.0014  memory: 17009  
09/20 02:59:57 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1086  data_time: 0.0014  memory: 16957  
09/20 02:59:58 - mmengine - INFO - per class results:
09/20 02:59:58 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 12.77 |  14.4 |
|       building      | 40.81 |  52.9 |
|         sky         | 55.95 | 61.91 |
|        floor        | 22.91 | 27.75 |
|         tree        | 22.18 | 80.86 |
|       ceiling       | 32.06 | 40.71 |
|         road        | 27.52 | 58.99 |
|         bed         |  16.6 | 20.65 |
|      windowpane     | 11.13 | 14.67 |
|        grass        | 33.51 | 41.81 |
|       cabinet       |  5.31 | 11.49 |
|       sidewalk      |  0.08 |  0.08 |
|        person       | 19.87 | 33.93 |
|        earth        | 13.58 |  25.4 |
|         door        |  3.44 | 40.17 |
|        table        |  0.91 |  0.94 |
|       mountain      | 15.02 | 39.91 |
|        plant        |  9.78 | 66.54 |
|       curtain       | 10.37 | 55.53 |
|        chair        |  4.39 |  4.94 |
|         car         | 24.41 | 26.41 |
|        water        |  10.8 | 15.07 |
|       painting      |  6.01 |  6.14 |
|         sofa        |  0.82 |  0.82 |
|        shelf        |  2.44 |  2.51 |
|        house        |  1.5  |  1.62 |
|         sea         |  7.97 |  8.4  |
|        mirror       |  0.89 |  0.9  |
|         rug         |  0.3  |  0.3  |
|        field        |  3.07 | 17.15 |
|       armchair      |  0.26 |  0.27 |
|         seat        |  2.21 |  2.43 |
|        fence        |  6.08 | 10.75 |
|         desk        |  0.43 |  0.45 |
|         rock        |  6.06 | 20.26 |
|       wardrobe      |  0.42 |  0.5  |
|         lamp        | 13.12 | 15.74 |
|       bathtub       |  0.03 |  0.03 |
|       railing       |  6.11 |  7.8  |
|       cushion       |  2.76 |  2.8  |
|         base        |  0.39 |  0.39 |
|         box         |  1.77 |  1.93 |
|        column       |  4.14 |  5.34 |
|      signboard      | 13.14 | 17.46 |
|   chest of drawers  |  0.05 |  0.05 |
|       counter       |  0.01 |  0.01 |
|         sand        |  0.43 |  0.45 |
|         sink        |  5.34 |  6.55 |
|      skyscraper     |  2.28 |  2.32 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.02 |  0.02 |
|      grandstand     |  4.71 |  5.5  |
|         path        |  2.05 |  2.54 |
|        stairs       |  7.58 |  9.72 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.06 |  0.06 |
|        pillow       |  0.13 |  0.13 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  2.58 |  3.57 |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.98 |  0.99 |
|       bookcase      |  6.68 |  9.83 |
|        blind        |  1.13 |  1.14 |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.24 |  0.25 |
|        flower       |  7.97 |  9.58 |
|         book        | 14.43 | 24.14 |
|         hill        |  0.48 |  6.28 |
|        bench        |  0.01 |  0.01 |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.15 |  0.15 |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.03 |  0.03 |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.17 |  0.17 |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  1.88 |  1.88 |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.61 |  0.62 |
|        light        |  5.58 |  5.84 |
|        truck        |  0.06 |  0.06 |
|        tower        |  0.54 |  0.68 |
|      chandelier     |  7.93 |  8.15 |
|        awning       |  0.06 |  0.06 |
|     streetlight     |  2.68 |  2.83 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.37 |  3.65 |
|       apparel       |  1.7  |  1.89 |
|         pole        |  5.36 |  14.2 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.31 |  0.32 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.1  |  0.1  |
|        bottle       |  8.37 | 11.55 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.19 |  0.19 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.01 |  0.01 |
|      plaything      |  0.36 |  0.37 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.4  |  0.41 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.07 |  0.07 |
|      waterfall      |  2.4  |  2.42 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.05 |  0.05 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        | 33.53 | 39.24 |
|         food        |  0.73 |  0.73 |
|         step        |  0.06 |  0.06 |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.78 |  0.78 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.76 |  0.77 |
|        animal       |  0.17 |  0.17 |
|       bicycle       |  5.64 |  5.72 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.32 |  0.32 |
|         hood        |  0.0  |  0.0  |
|        sconce       |  3.08 |  3.25 |
|         vase        |  4.88 |  5.42 |
|    traffic light    |  0.09 |  0.09 |
|         tray        |  0.64 |  0.65 |
|        ashcan       |  0.01 |  0.01 |
|         fan         |  0.02 |  0.02 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  4.93 |  5.28 |
|       monitor       |  0.06 |  0.06 |
|    bulletin board   |  0.01 |  0.01 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  3.95 |  4.29 |
|        clock        |  8.31 |  10.0 |
|         flag        |  0.27 |  0.27 |
+---------------------+-------+-------+
09/20 02:59:58 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 31.0500  mIoU: 4.2500  mAcc: 7.1700  data_time: 0.0027  time: 0.3786
Finished processing corruption type: gaussian_noise
Processing corruption type: shot_noise
09/20 03:00:09 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1938339134
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1938339134
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 03:00:09 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='shot_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/shot_noise'

09/20 03:00:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 03:00:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 03:00:14 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 03:00:14 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 03:01:40 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:55:54  time: 0.9512  data_time: 0.0016  memory: 17245  
09/20 03:02:29 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:42:47  time: 1.1199  data_time: 0.0017  memory: 17025  
09/20 03:02:57 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:33:34  time: 0.6062  data_time: 0.0015  memory: 17018  
09/20 03:03:37 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:30:30  time: 0.6931  data_time: 0.0015  memory: 17027  
09/20 03:04:14 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:27:56  time: 0.5126  data_time: 0.0015  memory: 17026  
09/20 03:04:43 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:25:23  time: 0.2079  data_time: 0.0015  memory: 17021  
09/20 03:05:20 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:24:01  time: 0.5185  data_time: 0.0015  memory: 17026  
09/20 03:05:48 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:22:17  time: 0.5960  data_time: 0.0015  memory: 17023  
09/20 03:06:01 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:19:56  time: 0.2984  data_time: 0.0015  memory: 16947  
09/20 03:06:18 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:18:10  time: 0.1913  data_time: 0.0015  memory: 17006  
09/20 03:06:36 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:16:46  time: 0.6126  data_time: 0.0016  memory: 17025  
09/20 03:06:49 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:15:21  time: 0.3656  data_time: 0.0016  memory: 16953  
09/20 03:07:12 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:14:27  time: 0.6161  data_time: 0.0014  memory: 17027  
09/20 03:07:37 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:13:43  time: 0.2072  data_time: 0.0016  memory: 17028  
09/20 03:08:04 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:13:02  time: 1.0468  data_time: 0.0015  memory: 17030  
09/20 03:08:17 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:12:04  time: 0.1921  data_time: 0.0017  memory: 17018  
09/20 03:08:27 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:11:06  time: 0.1944  data_time: 0.0016  memory: 805  
09/20 03:08:39 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:10:16  time: 0.2758  data_time: 0.0014  memory: 16943  
09/20 03:09:03 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:09:44  time: 0.4023  data_time: 0.0015  memory: 17024  
09/20 03:09:19 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:04  time: 0.1814  data_time: 0.0015  memory: 17002  
09/20 03:09:40 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:08:32  time: 0.7081  data_time: 0.0015  memory: 17028  
09/20 03:09:57 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:57  time: 0.1886  data_time: 0.0016  memory: 17015  
09/20 03:10:11 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:07:21  time: 0.3012  data_time: 0.0015  memory: 17008  
09/20 03:10:21 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:44  time: 0.1887  data_time: 0.0017  memory: 1918  
09/20 03:10:36 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:13  time: 0.2989  data_time: 0.0015  memory: 17018  
09/20 03:10:45 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:39  time: 0.1914  data_time: 0.0015  memory: 1557  
09/20 03:10:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:09  time: 0.1816  data_time: 0.0015  memory: 17003  
09/20 03:11:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:46  time: 0.6019  data_time: 0.0015  memory: 17022  
09/20 03:11:36 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:18  time: 0.5483  data_time: 0.0015  memory: 17010  
09/20 03:11:45 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:50  time: 0.1748  data_time: 0.0015  memory: 805  
09/20 03:11:57 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:24  time: 0.1982  data_time: 0.0015  memory: 16952  
09/20 03:12:07 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:58  time: 0.1874  data_time: 0.0016  memory: 1601  
09/20 03:12:23 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:34  time: 0.1782  data_time: 0.0015  memory: 17025  
09/20 03:12:40 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:11  time: 0.1956  data_time: 0.0016  memory: 17016  
09/20 03:12:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:48  time: 0.2020  data_time: 0.0015  memory: 17006  
09/20 03:13:07 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:25  time: 0.1953  data_time: 0.0016  memory: 17005  
09/20 03:13:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:03  time: 0.1919  data_time: 0.0017  memory: 805  
09/20 03:13:30 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:41  time: 0.1929  data_time: 0.0015  memory: 17028  
09/20 03:13:44 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:20  time: 0.1880  data_time: 0.0015  memory: 17009  
09/20 03:13:58 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1744  data_time: 0.0014  memory: 16957  
09/20 03:13:58 - mmengine - INFO - per class results:
09/20 03:13:58 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 11.81 | 13.52 |
|       building      | 42.86 | 54.97 |
|         sky         | 39.14 | 42.02 |
|        floor        | 24.66 |  30.1 |
|         tree        | 22.43 | 82.86 |
|       ceiling       | 31.49 | 42.67 |
|         road        | 27.27 | 61.53 |
|         bed         | 16.53 |  22.4 |
|      windowpane     |  10.0 | 14.54 |
|        grass        | 36.65 | 47.87 |
|       cabinet       |  6.14 | 14.53 |
|       sidewalk      |  0.08 |  0.08 |
|        person       | 21.97 | 40.72 |
|        earth        | 14.33 | 27.26 |
|         door        |  3.4  | 37.91 |
|        table        |  1.05 |  1.09 |
|       mountain      | 14.53 | 37.33 |
|        plant        | 11.84 | 67.06 |
|       curtain       |  9.18 | 58.94 |
|        chair        |  6.15 |  7.14 |
|         car         | 30.86 | 33.69 |
|        water        | 13.17 | 17.85 |
|       painting      |  5.91 |  6.04 |
|         sofa        |  0.77 |  0.78 |
|        shelf        |  4.7  |  5.02 |
|        house        |  1.73 |  1.89 |
|         sea         |  7.5  |  7.82 |
|        mirror       |  1.05 |  1.07 |
|         rug         |  0.38 |  0.38 |
|        field        |  3.6  | 16.08 |
|       armchair      |  0.4  |  0.41 |
|         seat        |  2.92 |  3.2  |
|        fence        |  6.81 | 10.71 |
|         desk        |  0.74 |  0.77 |
|         rock        |  5.61 | 21.99 |
|       wardrobe      |  0.74 |  0.91 |
|         lamp        |  11.9 | 14.13 |
|       bathtub       |  0.02 |  0.02 |
|       railing       |  6.87 |  9.25 |
|       cushion       |  2.59 |  2.63 |
|         base        |  0.23 |  0.24 |
|         box         |  2.13 |  2.36 |
|        column       |  4.43 |  6.18 |
|      signboard      | 13.96 | 18.52 |
|   chest of drawers  |  0.02 |  0.02 |
|       counter       |  0.01 |  0.01 |
|         sand        |  0.12 |  0.13 |
|         sink        |  4.46 |  5.5  |
|      skyscraper     |  6.5  |  6.66 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.03 |  0.03 |
|      grandstand     |  7.45 |  8.53 |
|         path        |  1.64 |  1.92 |
|        stairs       | 10.19 | 12.62 |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.09 |  0.09 |
|        pillow       |  0.08 |  0.08 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  3.2  |  4.5  |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.44 |  0.44 |
|       bookcase      |  8.46 | 14.68 |
|        blind        |  1.4  |  1.41 |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.05 |  0.05 |
|        flower       |  8.42 | 10.45 |
|         book        | 15.28 | 27.63 |
|         hill        |  0.46 |  4.59 |
|        bench        |  0.01 |  0.01 |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.05 |  0.05 |
|         palm        |  0.01 |  0.01 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.01 |  0.01 |
|     swivel chair    |  0.02 |  0.02 |
|         boat        |  0.08 |  0.08 |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  1.9  |  1.91 |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.31 |  0.32 |
|        light        |  4.0  |  4.14 |
|        truck        |  0.03 |  0.03 |
|        tower        |  0.31 |  0.39 |
|      chandelier     |  7.64 |  7.85 |
|        awning       |  0.15 |  0.15 |
|     streetlight     |  3.41 |  3.62 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.15 |  0.15 |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.11 |  0.88 |
|       apparel       |  2.2  |  2.44 |
|         pole        |  5.95 | 15.56 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.41 |  0.43 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.01 |  0.01 |
|        bottle       |  8.31 | 12.07 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.13 |  0.13 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.04 |  0.04 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.65 |  0.65 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.79 |  0.81 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.17 |  0.17 |
|      waterfall      |  2.18 |  2.19 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.16 |  0.16 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        | 34.29 | 40.29 |
|         food        |  0.75 |  0.75 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.8  |  0.8  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  1.03 |  1.03 |
|        animal       |  0.33 |  0.33 |
|       bicycle       |  9.8  |  9.99 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.11 |  0.11 |
|         hood        |  0.0  |  0.0  |
|        sconce       |  1.74 |  1.82 |
|         vase        |  4.25 |  5.0  |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  0.94 |  0.97 |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  5.59 |  6.1  |
|       monitor       |  0.14 |  0.14 |
|    bulletin board   |  0.03 |  0.03 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  3.94 |  4.38 |
|        clock        |  6.03 |  7.4  |
|         flag        |  0.01 |  0.01 |
+---------------------+-------+-------+
09/20 03:13:58 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 30.3800  mIoU: 4.3900  mAcc: 7.4600  data_time: 0.0017  time: 0.4117
Finished processing corruption type: shot_noise
Processing corruption type: impulse_noise
09/20 03:14:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1791158668
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1791158668
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 03:14:01 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='impulse_noise',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/impulse_noise'

09/20 03:14:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 03:14:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 03:14:05 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 03:14:06 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 03:15:27 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:06  time: 0.8443  data_time: 0.0016  memory: 17245  
09/20 03:16:12 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:40:02  time: 1.0154  data_time: 0.0016  memory: 17025  
09/20 03:16:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:52  time: 0.5107  data_time: 0.0016  memory: 17018  
09/20 03:17:11 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:48  time: 0.6102  data_time: 0.0015  memory: 17027  
09/20 03:17:43 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:18  time: 0.4336  data_time: 0.0015  memory: 17026  
09/20 03:18:08 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:52  time: 0.1137  data_time: 0.0016  memory: 17021  
09/20 03:18:42 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:43  time: 0.5638  data_time: 0.0015  memory: 17026  
09/20 03:19:09 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:20:14  time: 0.5404  data_time: 0.0014  memory: 17023  
09/20 03:19:20 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:18:01  time: 0.2149  data_time: 0.0014  memory: 16947  
09/20 03:19:34 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:23  time: 0.1021  data_time: 0.0014  memory: 17006  
09/20 03:19:50 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:07  time: 0.6491  data_time: 0.0016  memory: 17025  
09/20 03:20:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:46  time: 0.3493  data_time: 0.0016  memory: 16953  
09/20 03:20:21 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:00  time: 0.5543  data_time: 0.0014  memory: 17027  
09/20 03:20:45 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:21  time: 0.1261  data_time: 0.0016  memory: 17028  
09/20 03:21:10 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:46  time: 1.0545  data_time: 0.0014  memory: 17030  
09/20 03:21:19 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:50  time: 0.1306  data_time: 0.0016  memory: 17018  
09/20 03:21:25 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:53  time: 0.1003  data_time: 0.0016  memory: 805  
09/20 03:21:34 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:07  time: 0.2032  data_time: 0.0014  memory: 16943  
09/20 03:21:57 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:40  time: 0.3913  data_time: 0.0015  memory: 17024  
09/20 03:22:09 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:03  time: 0.0966  data_time: 0.0015  memory: 17002  
09/20 03:22:27 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:33  time: 0.6410  data_time: 0.0015  memory: 17028  
09/20 03:22:42 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:02  time: 0.1157  data_time: 0.0016  memory: 17015  
09/20 03:22:52 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:29  time: 0.2660  data_time: 0.0030  memory: 17008  
09/20 03:22:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:55  time: 0.1173  data_time: 0.0014  memory: 1918  
09/20 03:23:10 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:26  time: 0.2095  data_time: 0.0014  memory: 17018  
09/20 03:23:16 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:56  time: 0.1264  data_time: 0.0014  memory: 1557  
09/20 03:23:26 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:29  time: 0.0959  data_time: 0.0014  memory: 17003  
09/20 03:23:49 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:10  time: 0.7026  data_time: 0.0014  memory: 17022  
09/20 03:23:59 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:45  time: 0.4885  data_time: 0.0014  memory: 17010  
09/20 03:24:04 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:19  time: 0.0919  data_time: 0.0014  memory: 829  
09/20 03:24:12 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:56  time: 0.1055  data_time: 0.0016  memory: 16952  
09/20 03:24:18 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:32  time: 0.1195  data_time: 0.0016  memory: 1601  
09/20 03:24:31 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:12  time: 0.0923  data_time: 0.0014  memory: 17025  
09/20 03:24:43 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:52  time: 0.1011  data_time: 0.0015  memory: 17016  
09/20 03:24:54 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:32  time: 0.1076  data_time: 0.0014  memory: 17006  
09/20 03:25:02 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:12  time: 0.1135  data_time: 0.0016  memory: 17005  
09/20 03:25:08 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:53  time: 0.0987  data_time: 0.0016  memory: 805  
09/20 03:25:17 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:35  time: 0.1057  data_time: 0.0014  memory: 17028  
09/20 03:25:29 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.0967  data_time: 0.0014  memory: 17009  
09/20 03:25:38 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1399  data_time: 0.0014  memory: 16957  
09/20 03:25:39 - mmengine - INFO - per class results:
09/20 03:25:39 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 26.39 | 38.59 |
|       building      | 27.32 | 29.11 |
|         sky         | 53.47 | 64.49 |
|        floor        | 29.28 | 49.69 |
|         tree        | 24.06 | 71.23 |
|       ceiling       | 31.38 | 53.31 |
|         road        | 24.49 | 41.94 |
|         bed         |  8.08 |  8.95 |
|      windowpane     | 10.96 | 15.02 |
|        grass        | 36.79 | 45.44 |
|       cabinet       |  2.17 |  3.41 |
|       sidewalk      |  0.14 |  0.14 |
|        person       | 16.22 |  25.8 |
|        earth        | 12.33 | 29.64 |
|         door        |  2.93 | 22.83 |
|        table        |  0.22 |  0.23 |
|       mountain      | 12.18 |  40.3 |
|        plant        |  11.3 |  69.3 |
|       curtain       |  7.72 | 33.85 |
|        chair        |  1.17 |  1.2  |
|         car         | 18.11 | 18.71 |
|        water        |  10.3 |  23.8 |
|       painting      |  3.95 |  4.03 |
|         sofa        |  0.07 |  0.07 |
|        shelf        |  4.14 |  4.89 |
|        house        |  1.59 |  1.72 |
|         sea         |  4.83 |  4.98 |
|        mirror       |  0.13 |  0.13 |
|         rug         |  0.1  |  0.1  |
|        field        |  4.83 | 14.25 |
|       armchair      |  0.08 |  0.08 |
|         seat        |  1.23 |  1.27 |
|        fence        |  5.14 |  7.36 |
|         desk        |  0.12 |  0.13 |
|         rock        |  2.94 | 24.22 |
|       wardrobe      |  0.01 |  0.01 |
|         lamp        |  8.16 |  8.87 |
|       bathtub       |  0.03 |  0.03 |
|       railing       |  3.95 |  5.19 |
|       cushion       |  1.06 |  1.07 |
|         base        |  1.5  |  1.64 |
|         box         |  1.62 |  1.91 |
|        column       |  2.65 |  7.05 |
|      signboard      | 12.91 | 17.22 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.06 |  0.06 |
|         sand        |  0.12 |  0.13 |
|         sink        |  1.99 |  2.8  |
|      skyscraper     |  1.54 |  1.56 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     | 14.65 | 17.55 |
|         path        |  1.82 |  2.34 |
|        stairs       | 10.43 | 14.92 |
|        runway       |  0.1  |  0.1  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.01 |  0.01 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  1.71 |  2.46 |
|        river        |  0.0  |  0.0  |
|        bridge       |  1.38 |  1.42 |
|       bookcase      |  5.04 |  6.25 |
|        blind        |  0.39 |  0.39 |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.14 |  0.14 |
|        flower       |  7.04 | 11.06 |
|         book        | 12.32 | 17.03 |
|         hill        |  0.42 |  2.44 |
|        bench        |  0.49 |  0.49 |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.01 |  0.01 |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.01 |  0.01 |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.11 |  0.11 |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  2.05 |  2.26 |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  2.24 |  2.26 |
|        truck        |  0.01 |  0.01 |
|        tower        |  2.1  |  3.77 |
|      chandelier     |  4.6  |  4.81 |
|        awning       |  0.41 |  0.41 |
|     streetlight     |  1.87 |  1.91 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.02 |  0.02 |
|      dirt track     |  0.02 |  0.36 |
|       apparel       |  0.55 |  0.58 |
|         pole        |  4.86 | 11.63 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.24 |  0.25 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  6.85 |  9.45 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.14 |  0.14 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.09 |  0.09 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.15 |  0.15 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.17 |  0.17 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.16 |  0.16 |
|      waterfall      |  1.99 |  2.01 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.08 |  0.08 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        | 35.03 | 41.92 |
|         food        |  0.62 |  0.62 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.93 |  0.93 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.58 |  0.58 |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  3.02 |  3.05 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.57 |  0.6  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  1.48 |  1.5  |
|         vase        |  3.17 |  3.55 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.35 |  0.35 |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  4.01 |  4.35 |
|       monitor       |  0.04 |  0.04 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  2.24 |  2.44 |
|        clock        |  5.85 |  6.77 |
|         flag        |  0.02 |  0.02 |
+---------------------+-------+-------+
09/20 03:25:39 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 32.6900  mIoU: 3.8300  mAcc: 6.5400  data_time: 0.0017  time: 0.3464
Finished processing corruption type: impulse_noise
Processing corruption type: defocus_blur
09/20 03:25:48 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1812135444
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1812135444
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 03:25:48 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='defocus_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/defocus_blur'

09/20 03:25:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 03:25:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 03:25:58 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 03:25:59 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 03:27:25 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:56:24  time: 0.8983  data_time: 0.0016  memory: 17245  
09/20 03:28:12 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:42:16  time: 1.0142  data_time: 0.0016  memory: 17025  
09/20 03:28:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:32:23  time: 0.5127  data_time: 0.0016  memory: 17018  
09/20 03:29:15 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:29:23  time: 0.6489  data_time: 0.0016  memory: 17027  
09/20 03:29:47 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:26:39  time: 0.4358  data_time: 0.0015  memory: 17026  
09/20 03:30:13 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:24:03  time: 0.1190  data_time: 0.0016  memory: 17021  
09/20 03:30:48 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:22:44  time: 0.5019  data_time: 0.0015  memory: 17026  
09/20 03:31:13 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:20:56  time: 0.5286  data_time: 0.0014  memory: 17023  
09/20 03:31:23 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:18:35  time: 0.2754  data_time: 0.0015  memory: 16947  
09/20 03:31:35 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:48  time: 0.1223  data_time: 0.0014  memory: 17006  
09/20 03:31:50 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:26  time: 0.6167  data_time: 0.0016  memory: 17025  
09/20 03:32:00 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:14:02  time: 0.3249  data_time: 0.0016  memory: 16953  
09/20 03:32:20 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:13:12  time: 0.5761  data_time: 0.0014  memory: 17027  
09/20 03:32:45 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:34  time: 0.1184  data_time: 0.0016  memory: 17028  
09/20 03:33:10 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:58  time: 1.1368  data_time: 0.0015  memory: 17030  
09/20 03:33:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:11:02  time: 0.1133  data_time: 0.0016  memory: 17018  
09/20 03:33:27 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:10:07  time: 0.1062  data_time: 0.0016  memory: 805  
09/20 03:33:37 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:20  time: 0.2408  data_time: 0.0014  memory: 16943  
09/20 03:33:59 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:51  time: 0.3643  data_time: 0.0015  memory: 17024  
09/20 03:34:12 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:08:13  time: 0.1040  data_time: 0.0015  memory: 17002  
09/20 03:34:30 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:43  time: 0.6293  data_time: 0.0015  memory: 17028  
09/20 03:34:44 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:07:09  time: 0.1070  data_time: 0.0016  memory: 17015  
09/20 03:34:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:35  time: 0.2261  data_time: 0.0015  memory: 17008  
09/20 03:35:01 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:06:01  time: 0.1677  data_time: 0.0015  memory: 1918  
09/20 03:35:12 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:31  time: 0.2320  data_time: 0.0015  memory: 17018  
09/20 03:35:18 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:05:01  time: 0.1507  data_time: 0.0015  memory: 1557  
09/20 03:35:27 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:33  time: 0.1024  data_time: 0.0014  memory: 17003  
09/20 03:35:51 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:13  time: 0.5493  data_time: 0.0015  memory: 17022  
09/20 03:36:02 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:48  time: 0.5029  data_time: 0.0015  memory: 17010  
09/20 03:36:08 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:23  time: 0.1199  data_time: 0.0014  memory: 829  
09/20 03:36:16 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:59  time: 0.1086  data_time: 0.0015  memory: 16952  
09/20 03:36:23 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:36  time: 0.1588  data_time: 0.0016  memory: 1601  
09/20 03:36:37 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:15  time: 0.1677  data_time: 0.0014  memory: 17025  
09/20 03:36:50 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:54  time: 0.1057  data_time: 0.0016  memory: 17016  
09/20 03:37:02 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:34  time: 0.1160  data_time: 0.0015  memory: 17006  
09/20 03:37:12 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:14  time: 0.2004  data_time: 0.0017  memory: 17005  
09/20 03:37:18 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:55  time: 0.1792  data_time: 0.0016  memory: 805  
09/20 03:37:29 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:36  time: 0.1276  data_time: 0.0015  memory: 17028  
09/20 03:37:40 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.1029  data_time: 0.0014  memory: 17009  
09/20 03:37:50 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0997  data_time: 0.0013  memory: 16957  
09/20 03:37:50 - mmengine - INFO - per class results:
09/20 03:37:50 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 45.11 | 54.89 |
|       building      | 56.31 | 90.03 |
|         sky         | 82.63 | 95.42 |
|        floor        | 51.75 | 73.82 |
|         tree        | 52.93 | 83.65 |
|       ceiling       | 64.92 | 76.83 |
|         road        | 58.32 | 84.15 |
|         bed         | 37.27 | 40.16 |
|      windowpane     | 30.87 | 66.75 |
|        grass        | 46.67 | 54.24 |
|       cabinet       | 20.22 | 27.57 |
|       sidewalk      |  32.5 | 38.15 |
|        person       | 35.73 | 89.11 |
|        earth        | 15.23 | 18.21 |
|         door        | 11.55 | 40.32 |
|        table        |  13.1 | 15.68 |
|       mountain      | 30.04 |  64.4 |
|        plant        | 29.89 | 52.21 |
|       curtain       | 30.83 | 53.46 |
|        chair        | 18.36 | 23.64 |
|         car         | 57.97 | 66.32 |
|        water        | 26.77 | 30.52 |
|       painting      | 32.08 | 35.72 |
|         sofa        | 15.64 |  17.2 |
|        shelf        | 16.26 | 20.71 |
|        house        | 10.08 | 12.12 |
|         sea         | 36.53 |  72.8 |
|        mirror       | 12.01 | 16.42 |
|         rug         |  0.8  |  0.8  |
|        field        | 14.28 | 42.27 |
|       armchair      |  6.52 |  7.7  |
|         seat        | 17.91 | 22.81 |
|        fence        |  9.78 | 16.03 |
|         desk        |  4.72 |  4.99 |
|         rock        | 16.48 | 24.99 |
|       wardrobe      | 19.01 | 33.62 |
|         lamp        | 25.29 | 54.51 |
|       bathtub       |  0.77 |  0.77 |
|       railing       | 10.89 | 29.08 |
|       cushion       | 13.57 | 14.36 |
|         base        |  5.32 | 25.53 |
|         box         |  5.6  |  6.67 |
|        column       | 17.79 | 23.63 |
|      signboard      | 12.96 |  19.4 |
|   chest of drawers  |  4.75 |  4.87 |
|       counter       |  0.02 |  0.03 |
|         sand        | 13.49 | 15.57 |
|         sink        | 11.63 | 13.34 |
|      skyscraper     | 31.73 | 42.97 |
|      fireplace      |  0.85 |  0.85 |
|     refrigerator    |  2.97 |  2.97 |
|      grandstand     |  2.08 |  2.31 |
|         path        |  9.69 | 15.87 |
|        stairs       |  2.15 |  2.25 |
|        runway       | 27.43 | 28.89 |
|         case        | 25.35 | 46.82 |
|      pool table     |  3.35 |  3.36 |
|        pillow       |  9.24 |  9.63 |
|     screen door     |  0.26 |  0.26 |
|       stairway      |  8.74 | 12.92 |
|        river        |  3.8  |  8.7  |
|        bridge       |  5.1  |  5.37 |
|       bookcase      | 17.65 | 29.04 |
|        blind        | 13.15 | 13.62 |
|     coffee table    |  0.63 |  0.63 |
|        toilet       |  2.84 |  2.86 |
|        flower       | 14.77 | 29.51 |
|         book        | 14.84 | 36.13 |
|         hill        |  4.14 |  9.13 |
|        bench        |  2.45 |  2.46 |
|      countertop     |  1.6  |  1.6  |
|        stove        |  1.77 |  1.77 |
|         palm        |  0.54 |  0.55 |
|    kitchen island   |  0.12 |  0.12 |
|       computer      |  1.01 |  1.01 |
|     swivel chair    |  7.82 |  8.35 |
|         boat        |  9.74 | 10.44 |
|         bar         |  4.7  |  5.77 |
|    arcade machine   |  0.05 |  0.05 |
|        hovel        |  4.57 |  4.67 |
|         bus         |  5.09 |  5.09 |
|        towel        |  1.99 |  1.99 |
|        light        | 22.38 | 27.46 |
|        truck        |  0.29 |  0.29 |
|        tower        |  1.14 |  1.37 |
|      chandelier     |  1.74 |  1.75 |
|        awning       |  0.03 |  0.03 |
|     streetlight     |  9.63 | 12.46 |
|        booth        |  0.12 |  0.13 |
| television receiver |  6.42 |  6.47 |
|       airplane      | 26.62 | 29.28 |
|      dirt track     |  4.54 | 16.41 |
|       apparel       | 10.15 | 11.97 |
|         pole        | 11.59 | 28.58 |
|         land        |  4.43 |  5.42 |
|      bannister      |  0.42 |  0.8  |
|      escalator      | 10.38 | 10.82 |
|       ottoman       |  0.08 |  0.08 |
|        bottle       | 10.06 | 25.63 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  6.96 |  8.92 |
|        stage        |  3.87 |  6.04 |
|         van         |  0.29 |  0.29 |
|         ship        |  0.19 |  0.23 |
|       fountain      |  0.01 |  0.01 |
|    conveyer belt    |  1.26 |  1.26 |
|        canopy       |  2.09 |  2.48 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  2.76 |  3.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  3.03 |  3.35 |
|        barrel       |  2.28 |  18.2 |
|        basket       |  1.39 |  1.43 |
|      waterfall      | 36.97 |  47.3 |
|         tent        | 82.22 | 90.69 |
|         bag         |  0.55 |  0.57 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  7.13 |  7.21 |
|         oven        |  0.0  |  0.0  |
|         ball        | 28.89 | 66.92 |
|         food        | 21.89 | 23.57 |
|         step        |  0.0  |  0.0  |
|         tank        |  4.77 |  4.82 |
|      trade name     |  1.38 |  1.43 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  9.79 | 10.19 |
|        animal       |  3.27 |  3.28 |
|       bicycle       | 16.37 | 16.68 |
|         lake        |  8.85 |  10.8 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 26.08 | 29.52 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.4  |  0.45 |
|         hood        |  0.45 |  0.45 |
|        sconce       |  10.3 | 12.26 |
|         vase        | 12.99 | 20.12 |
|    traffic light    |  0.6  |  0.61 |
|         tray        |  1.31 |  1.5  |
|        ashcan       |  4.46 |  4.56 |
|         fan         |  0.93 |  0.93 |
|         pier        |  0.17 |  0.17 |
|      crt screen     |  5.01 |  7.72 |
|        plate        |  29.0 | 51.66 |
|       monitor       |  1.61 |  1.69 |
|    bulletin board   |  0.78 |  0.82 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  1.33 |  1.33 |
|        glass        |  6.42 |  8.69 |
|        clock        | 12.36 |  18.4 |
|         flag        |  0.16 |  0.17 |
+---------------------+-------+-------+
09/20 03:37:50 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 58.5600  mIoU: 12.7100  mAcc: 18.6100  data_time: 0.0017  time: 0.3555
Finished processing corruption type: defocus_blur
Processing corruption type: glass_blur
09/20 03:37:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1660922983
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1660922983
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 03:37:53 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='glass_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/glass_blur'

09/20 03:37:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 03:37:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 03:37:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 03:38:00 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 03:44:53 - mmengine - INFO - Iter(test) [  50/2000]    eta: 4:28:40  time: 7.7373  data_time: 0.0037  memory: 17245  
09/20 03:51:00 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 4:07:02  time: 7.7997  data_time: 0.0017  memory: 17025  
09/20 03:56:42 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 3:50:47  time: 7.0465  data_time: 0.0016  memory: 17018  
09/20 04:02:44 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 3:42:42  time: 6.9505  data_time: 0.0016  memory: 17027  
09/20 04:08:26 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 3:33:05  time: 6.6711  data_time: 0.0016  memory: 17026  
09/20 04:13:59 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 3:23:55  time: 6.5705  data_time: 0.0017  memory: 17021  
09/20 04:19:44 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 3:16:47  time: 6.4376  data_time: 0.0016  memory: 17026  
09/20 04:25:17 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 3:09:09  time: 6.8307  data_time: 0.0015  memory: 17023  
09/20 04:30:09 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 2:59:38  time: 5.9205  data_time: 0.0015  memory: 16947  
09/20 04:35:31 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 2:52:33  time: 6.1696  data_time: 0.0016  memory: 17006  
09/20 04:41:12 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 2:46:38  time: 7.0532  data_time: 0.0016  memory: 17025  
09/20 04:46:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 2:39:46  time: 6.6728  data_time: 0.0017  memory: 16953  
09/20 04:51:55 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 2:33:31  time: 6.7601  data_time: 0.0015  memory: 17027  
09/20 04:57:42 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 2:28:01  time: 6.5438  data_time: 0.0016  memory: 17028  
09/20 05:03:21 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 2:22:14  time: 7.0367  data_time: 0.0016  memory: 17030  
09/20 05:08:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 2:15:32  time: 6.2938  data_time: 0.0017  memory: 17018  
09/20 05:13:43 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 2:09:30  time: 6.7163  data_time: 0.0017  memory: 805  
09/20 05:18:57 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 2:03:23  time: 5.8857  data_time: 0.0015  memory: 16943  
09/20 05:24:42 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 1:57:56  time: 6.5438  data_time: 0.0017  memory: 17024  
09/20 05:29:59 - mmengine - INFO - Iter(test) [1000/2000]    eta: 1:51:59  time: 6.2026  data_time: 0.0016  memory: 17002  
09/20 05:35:42 - mmengine - INFO - Iter(test) [1050/2000]    eta: 1:46:29  time: 7.2624  data_time: 0.0016  memory: 17028  
09/20 05:41:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 1:40:48  time: 6.3416  data_time: 0.0016  memory: 17015  
09/20 05:46:35 - mmengine - INFO - Iter(test) [1150/2000]    eta: 1:35:02  time: 6.6053  data_time: 0.0016  memory: 17008  
09/20 05:52:03 - mmengine - INFO - Iter(test) [1200/2000]    eta: 1:29:22  time: 6.2953  data_time: 0.0016  memory: 1918  
09/20 05:57:20 - mmengine - INFO - Iter(test) [1250/2000]    eta: 1:23:36  time: 6.3863  data_time: 0.0016  memory: 17018  
09/20 06:02:24 - mmengine - INFO - Iter(test) [1300/2000]    eta: 1:17:45  time: 6.4852  data_time: 0.0032  memory: 1557  
09/20 06:07:46 - mmengine - INFO - Iter(test) [1350/2000]    eta: 1:12:06  time: 6.0036  data_time: 0.0016  memory: 17003  
09/20 06:13:21 - mmengine - INFO - Iter(test) [1400/2000]    eta: 1:06:34  time: 7.1131  data_time: 0.0015  memory: 17022  
09/20 06:18:36 - mmengine - INFO - Iter(test) [1450/2000]    eta: 1:00:55  time: 7.2592  data_time: 0.0015  memory: 17010  
09/20 06:23:53 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:55:17  time: 5.9904  data_time: 0.0016  memory: 829  
09/20 06:29:31 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:49:47  time: 6.7092  data_time: 0.0017  memory: 16952  
09/20 06:34:44 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:44:10  time: 6.3517  data_time: 0.0017  memory: 1601  
09/20 06:40:06 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:38:37  time: 5.9728  data_time: 0.0015  memory: 17025  
09/20 06:45:38 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:33:06  time: 6.4459  data_time: 0.0017  memory: 17016  
09/20 06:51:13 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:27:36  time: 6.4289  data_time: 0.0015  memory: 17006  
09/20 06:56:25 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:22:02  time: 6.5753  data_time: 0.0017  memory: 17005  
09/20 07:01:48 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:16:31  time: 6.4304  data_time: 0.0017  memory: 805  
09/20 07:06:56 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:10:59  time: 6.2797  data_time: 0.0016  memory: 17028  
09/20 07:12:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:05:29  time: 6.2531  data_time: 0.0018  memory: 17009  
09/20 07:17:36 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 5.8060  data_time: 0.0015  memory: 16957  
09/20 07:17:37 - mmengine - INFO - per class results:
09/20 07:17:37 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  36.7 | 43.07 |
|       building      | 55.09 | 86.25 |
|         sky         | 69.57 |  96.6 |
|        floor        | 48.82 | 66.04 |
|         tree        | 49.21 | 85.96 |
|       ceiling       | 50.05 |  54.8 |
|         road        | 49.89 | 86.26 |
|         bed         | 29.63 | 31.42 |
|      windowpane     | 26.05 | 54.98 |
|        grass        | 46.11 | 52.93 |
|       cabinet       | 16.01 | 21.22 |
|       sidewalk      | 20.35 | 22.03 |
|        person       | 34.65 | 86.63 |
|        earth        | 19.23 | 27.04 |
|         door        |  7.41 | 39.93 |
|        table        |  6.74 |  7.13 |
|       mountain      |  22.6 | 65.58 |
|        plant        | 29.58 | 53.21 |
|       curtain       | 23.02 | 65.78 |
|        chair        | 12.49 |  14.7 |
|         car         | 40.02 | 42.33 |
|        water        | 29.34 | 37.75 |
|       painting      | 18.34 | 19.27 |
|         sofa        | 11.65 | 12.05 |
|        shelf        | 12.97 | 14.19 |
|        house        |  2.0  |  2.11 |
|         sea         | 33.73 | 76.03 |
|        mirror       | 11.52 | 20.46 |
|         rug         |  0.24 |  0.24 |
|        field        | 11.27 |  36.6 |
|       armchair      |  2.46 |  2.6  |
|         seat        |  18.4 | 22.33 |
|        fence        | 10.67 | 21.87 |
|         desk        |  1.44 |  1.48 |
|         rock        | 10.84 | 15.11 |
|       wardrobe      | 14.68 | 31.24 |
|         lamp        | 29.38 | 43.49 |
|       bathtub       |  0.36 |  0.36 |
|       railing       | 13.06 | 19.96 |
|       cushion       | 11.91 | 12.56 |
|         base        |  5.67 | 17.13 |
|         box         |  4.74 |  5.37 |
|        column       | 12.76 | 14.77 |
|      signboard      | 11.89 | 15.77 |
|   chest of drawers  |  6.43 |  6.8  |
|       counter       |  0.04 |  0.04 |
|         sand        |  10.6 | 14.57 |
|         sink        | 12.14 | 13.39 |
|      skyscraper     | 27.28 | 36.54 |
|      fireplace      |  0.21 |  0.21 |
|     refrigerator    |  2.46 |  2.47 |
|      grandstand     |  2.18 |  2.74 |
|         path        |  4.54 |  6.07 |
|        stairs       |  3.64 |  3.73 |
|        runway       | 12.57 |  12.7 |
|         case        |  11.9 | 14.91 |
|      pool table     |  0.95 |  0.95 |
|        pillow       |  5.04 |  5.2  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  8.07 | 10.89 |
|        river        |  2.34 |  2.98 |
|        bridge       |  2.55 |  2.59 |
|       bookcase      | 17.24 | 32.43 |
|        blind        | 14.33 | 14.78 |
|     coffee table    |  0.15 |  0.15 |
|        toilet       |  0.93 |  0.94 |
|        flower       | 15.17 | 29.63 |
|         book        | 13.04 | 34.71 |
|         hill        |  2.73 |  9.51 |
|        bench        |  1.53 |  1.54 |
|      countertop     |  1.15 |  1.15 |
|        stove        |  0.62 |  0.62 |
|         palm        |  1.19 |  1.21 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.25 |  0.25 |
|     swivel chair    |  1.67 |  1.7  |
|         boat        |  0.21 |  0.21 |
|         bar         |  3.92 |  4.1  |
|    arcade machine   |  0.07 |  0.07 |
|        hovel        |  2.93 |  3.05 |
|         bus         |  0.02 |  0.02 |
|        towel        |  1.06 |  1.07 |
|        light        | 13.75 |  15.7 |
|        truck        |  0.02 |  0.02 |
|        tower        |  3.22 |  4.63 |
|      chandelier     |  5.96 |  6.01 |
|        awning       |  0.17 |  0.17 |
|     streetlight     |  6.79 |  7.45 |
|        booth        |  0.01 |  0.01 |
| television receiver |  1.79 |  1.79 |
|       airplane      |  5.74 |  5.84 |
|      dirt track     |  2.74 | 14.28 |
|       apparel       | 10.47 | 15.94 |
|         pole        | 11.79 | 30.03 |
|         land        |  0.37 |  0.44 |
|      bannister      |  0.43 |  0.48 |
|      escalator      |  1.16 |  1.16 |
|       ottoman       |  0.07 |  0.07 |
|        bottle       | 10.76 | 19.23 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  5.76 |  6.8  |
|        stage        |  2.93 |  3.69 |
|         van         |  0.02 |  0.02 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.01 |  0.01 |
|        canopy       |  1.1  |  1.13 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  2.05 |  2.14 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.87 |  0.96 |
|        barrel       |  4.27 | 13.94 |
|        basket       |  0.58 |  0.59 |
|      waterfall      | 28.59 | 38.86 |
|         tent        | 40.48 | 40.76 |
|         bag         |  0.32 |  0.32 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  3.65 |  3.68 |
|         oven        |  0.0  |  0.0  |
|         ball        | 31.62 | 67.45 |
|         food        | 15.72 | 16.61 |
|         step        |  0.0  |  0.0  |
|         tank        |  2.87 |  2.87 |
|      trade name     |  0.72 |  0.73 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  6.25 |  6.36 |
|        animal       |  2.58 |  2.59 |
|       bicycle       |  8.14 |  8.21 |
|         lake        |  0.24 |  0.3  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.08 |  0.08 |
|       blanket       |  0.19 |  0.19 |
|      sculpture      |  1.12 |  1.18 |
|         hood        |  0.0  |  0.0  |
|        sconce       | 10.09 | 11.32 |
|         vase        |  9.52 | 13.25 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  1.43 |  1.73 |
|        ashcan       |  3.05 |  3.08 |
|         fan         |  0.02 |  0.02 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.18 |  0.22 |
|        plate        | 22.79 | 27.56 |
|       monitor       |  0.83 |  0.84 |
|    bulletin board   |  0.75 |  0.76 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.18 |  0.18 |
|        glass        |  6.14 |  7.42 |
|        clock        | 14.35 | 17.71 |
|         flag        |  0.01 |  0.01 |
+---------------------+-------+-------+
09/20 07:17:37 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 53.0500  mIoU: 9.7900  mAcc: 14.9800  data_time: 0.0027  time: 6.5884
Finished processing corruption type: glass_blur
Processing corruption type: motion_blur
09/20 07:20:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1310202587
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1310202587
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 07:20:02 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='motion_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/motion_blur'

09/20 07:21:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 07:21:21 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 07:21:22 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 07:21:23 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 07:24:26 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:59:05  time: 1.5861  data_time: 0.0016  memory: 17245  
09/20 07:25:47 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:23:31  time: 1.7635  data_time: 0.0017  memory: 17025  
09/20 07:26:45 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:06:08  time: 1.2037  data_time: 0.0016  memory: 17018  
09/20 07:27:57 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:59:01  time: 1.3308  data_time: 0.0016  memory: 17027  
09/20 07:29:03 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:53:41  time: 1.1431  data_time: 0.0016  memory: 17026  
09/20 07:30:03 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:49:03  time: 0.8612  data_time: 0.0016  memory: 17021  
09/20 07:31:10 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:46:05  time: 1.1208  data_time: 0.0015  memory: 17026  
09/20 07:32:09 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:43:04  time: 1.2389  data_time: 0.0015  memory: 17023  
09/20 07:32:50 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:39:24  time: 0.8634  data_time: 0.0015  memory: 16947  
09/20 07:33:36 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:36:39  time: 0.7657  data_time: 0.0015  memory: 17006  
09/20 07:34:26 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:34:23  time: 1.2561  data_time: 0.0017  memory: 17025  
09/20 07:35:08 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:32:03  time: 0.9549  data_time: 0.0016  memory: 16953  
09/20 07:36:02 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:30:24  time: 1.3014  data_time: 0.0015  memory: 17027  
09/20 07:36:59 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:28:58  time: 0.8388  data_time: 0.0016  memory: 17028  
09/20 07:37:58 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:27:38  time: 1.6694  data_time: 0.0016  memory: 17030  
09/20 07:38:39 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:25:53  time: 0.7626  data_time: 0.0017  memory: 17018  
09/20 07:39:18 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:24:13  time: 0.7768  data_time: 0.0017  memory: 805  
09/20 07:39:58 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:22:42  time: 0.8233  data_time: 0.0015  memory: 16943  
09/20 07:40:54 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:21:33  time: 1.0153  data_time: 0.0016  memory: 17024  
09/20 07:41:39 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:20:15  time: 0.7711  data_time: 0.0016  memory: 17002  
09/20 07:42:31 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:19:07  time: 1.3923  data_time: 0.0016  memory: 17028  
09/20 07:43:19 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:17:56  time: 0.7892  data_time: 0.0016  memory: 17015  
09/20 07:44:06 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:16:47  time: 0.9960  data_time: 0.0015  memory: 17008  
09/20 07:44:49 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:15:37  time: 0.8351  data_time: 0.0015  memory: 1918  
09/20 07:45:36 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:14:31  time: 0.9215  data_time: 0.0015  memory: 17018  
09/20 07:46:15 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:13:23  time: 0.8695  data_time: 0.0015  memory: 1557  
09/20 07:47:00 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:12:19  time: 0.7680  data_time: 0.0015  memory: 17003  
09/20 07:47:57 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:11:22  time: 1.3024  data_time: 0.0015  memory: 17022  
09/20 07:48:41 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:10:21  time: 1.2356  data_time: 0.0015  memory: 17010  
09/20 07:49:21 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:09:19  time: 0.7267  data_time: 0.0015  memory: 829  
09/20 07:50:05 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:08:19  time: 0.8628  data_time: 0.0015  memory: 16952  
09/20 07:50:43 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:07:19  time: 0.7466  data_time: 0.0016  memory: 1601  
09/20 07:51:30 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:06:23  time: 0.7611  data_time: 0.0014  memory: 17025  
09/20 07:52:19 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:05:27  time: 0.8173  data_time: 0.0016  memory: 17016  
09/20 07:53:06 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:31  time: 0.8728  data_time: 0.0015  memory: 17006  
09/20 07:53:48 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:36  time: 0.8155  data_time: 0.0017  memory: 17005  
09/20 07:54:27 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:40  time: 0.7712  data_time: 0.0017  memory: 805  
09/20 07:55:09 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:46  time: 0.8021  data_time: 0.0017  memory: 17028  
09/20 07:55:56 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:53  time: 0.8094  data_time: 0.0015  memory: 17009  
09/20 07:56:38 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.7192  data_time: 0.0014  memory: 16957  
09/20 07:56:38 - mmengine - INFO - per class results:
09/20 07:56:38 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 38.07 | 43.53 |
|       building      | 45.21 | 91.04 |
|         sky         |  77.8 |  95.0 |
|        floor        | 48.52 | 75.13 |
|         tree        | 47.53 | 67.26 |
|       ceiling       | 61.34 | 73.91 |
|         road        |  48.7 | 62.85 |
|         bed         | 37.24 | 43.55 |
|      windowpane     | 31.81 | 62.28 |
|        grass        |  36.7 | 43.36 |
|       cabinet       | 20.45 | 33.17 |
|       sidewalk      | 27.61 | 47.51 |
|        person       | 35.07 |  87.6 |
|        earth        |  4.62 |  5.09 |
|         door        |  9.55 | 27.31 |
|        table        | 10.69 |  13.5 |
|       mountain      | 21.64 | 66.72 |
|        plant        | 24.49 |  45.1 |
|       curtain       | 26.85 | 52.51 |
|        chair        | 12.54 | 15.43 |
|         car         | 55.92 |  64.2 |
|        water        | 17.31 | 19.59 |
|       painting      | 26.79 | 30.38 |
|         sofa        | 10.58 | 11.16 |
|        shelf        | 17.26 |  22.2 |
|        house        |  6.89 |  7.89 |
|         sea         | 39.43 | 74.22 |
|        mirror       | 12.84 | 19.29 |
|         rug         |  0.9  |  0.9  |
|        field        | 12.53 | 40.13 |
|       armchair      |  2.74 |  2.87 |
|         seat        | 13.63 | 18.13 |
|        fence        |  7.81 | 11.59 |
|         desk        |  2.7  |  2.78 |
|         rock        |  5.57 |  5.95 |
|       wardrobe      | 17.45 | 40.84 |
|         lamp        | 28.67 | 48.65 |
|       bathtub       |  0.76 |  0.77 |
|       railing       | 12.82 |  23.8 |
|       cushion       | 16.11 | 17.81 |
|         base        |  5.79 | 20.99 |
|         box         |  4.84 |  5.74 |
|        column       | 15.51 | 19.69 |
|      signboard      | 11.42 |  14.6 |
|   chest of drawers  |  4.4  |  4.5  |
|       counter       |  0.0  |  0.0  |
|         sand        | 19.48 |  22.3 |
|         sink        | 10.95 | 11.94 |
|      skyscraper     | 24.63 | 30.72 |
|      fireplace      |  0.15 |  0.15 |
|     refrigerator    |  4.34 |  4.36 |
|      grandstand     |  2.54 |  2.61 |
|         path        |  6.66 | 10.08 |
|        stairs       |  7.62 |  7.9  |
|        runway       | 24.32 | 26.22 |
|         case        | 22.48 | 37.03 |
|      pool table     |  3.96 |  3.97 |
|        pillow       | 12.46 | 13.34 |
|     screen door     |  2.28 |  2.28 |
|       stairway      |  9.23 |  11.4 |
|        river        |  1.99 |  3.99 |
|        bridge       |  1.39 |  1.4  |
|       bookcase      | 13.49 | 18.05 |
|        blind        | 23.47 | 29.09 |
|     coffee table    |  0.09 |  0.09 |
|        toilet       |  3.29 |  3.34 |
|        flower       |  8.54 | 14.09 |
|         book        | 15.13 | 41.74 |
|         hill        |  1.59 |  5.04 |
|        bench        |  1.24 |  1.24 |
|      countertop     |  0.62 |  0.62 |
|        stove        |  2.44 |  2.45 |
|         palm        |  4.42 |  4.77 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  1.44 |  1.45 |
|     swivel chair    |  2.28 |  2.34 |
|         boat        |  2.19 |  2.21 |
|         bar         |  4.09 |  4.39 |
|    arcade machine   |  0.02 |  0.02 |
|        hovel        |  0.5  |  0.51 |
|         bus         |  0.41 |  0.41 |
|        towel        |  2.02 |  2.02 |
|        light        | 21.61 | 27.02 |
|        truck        |  0.02 |  0.02 |
|        tower        |  0.88 |  1.2  |
|      chandelier     |  0.39 |  0.39 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  6.58 |  7.49 |
|        booth        |  0.0  |  0.0  |
| television receiver |  2.47 |  2.48 |
|       airplane      | 19.99 | 22.49 |
|      dirt track     |  2.72 |  8.57 |
|       apparel       |  6.89 |  8.27 |
|         pole        |  7.97 | 22.59 |
|         land        |  0.01 |  0.01 |
|      bannister      |  0.59 |  0.79 |
|      escalator      | 13.66 | 14.31 |
|       ottoman       |  0.14 |  0.14 |
|        bottle       |  6.66 | 12.12 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  4.24 |  5.35 |
|        stage        |  1.0  |  1.22 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.23 |  0.23 |
|        canopy       |  3.12 |  3.41 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  1.22 |  1.25 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.93 |  1.98 |
|        barrel       |  3.02 | 21.05 |
|        basket       |  2.1  |  2.3  |
|      waterfall      | 27.91 | 33.97 |
|         tent        |  60.1 | 64.81 |
|         bag         |  0.71 |  0.76 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  5.88 |  5.94 |
|         oven        |  0.0  |  0.0  |
|         ball        | 32.74 |  62.2 |
|         food        | 20.62 | 21.34 |
|         step        |  0.0  |  0.0  |
|         tank        |  1.73 |  1.74 |
|      trade name     |  1.11 |  1.13 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  5.89 |  6.0  |
|        animal       |  1.41 |  1.41 |
|       bicycle       |  8.51 |  8.73 |
|         lake        |  0.48 |  0.51 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 13.38 | 14.61 |
|       blanket       |  0.01 |  0.01 |
|      sculpture      |  0.14 |  0.15 |
|         hood        |  0.34 |  0.34 |
|        sconce       |  8.74 | 10.57 |
|         vase        | 10.16 | 12.44 |
|    traffic light    |  0.02 |  0.02 |
|         tray        |  1.4  |  1.91 |
|        ashcan       |  3.71 |  3.79 |
|         fan         |  0.88 |  0.88 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  1.78 |  2.34 |
|        plate        | 20.83 | 36.54 |
|       monitor       |  0.31 |  0.31 |
|    bulletin board   |  0.08 |  0.09 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  1.68 |  1.68 |
|        glass        |  4.63 |  5.65 |
|        clock        |  8.93 | 10.86 |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
09/20 07:56:38 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 53.8400  mIoU: 10.7400  mAcc: 15.8600  data_time: 0.0021  time: 1.0575
Finished processing corruption type: motion_blur
Processing corruption type: zoom_blur
09/20 07:56:42 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 382717191
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 382717191
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 07:56:42 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='zoom_blur',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/zoom_blur'

09/20 07:56:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 07:56:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 07:56:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 07:56:47 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 07:58:41 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:14:07  time: 1.5304  data_time: 0.0016  memory: 17245  
09/20 07:59:58 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:00:43  time: 1.6857  data_time: 0.0016  memory: 17025  
09/20 08:00:54 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:50:45  time: 1.1657  data_time: 0.0016  memory: 17018  
09/20 08:02:02 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:47:17  time: 1.2429  data_time: 0.0030  memory: 17027  
09/20 08:03:04 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:44:03  time: 1.0584  data_time: 0.0015  memory: 17026  
09/20 08:04:00 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:40:52  time: 0.7529  data_time: 0.0017  memory: 17021  
09/20 08:05:04 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:39:02  time: 1.0309  data_time: 0.0016  memory: 17026  
09/20 08:05:59 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:36:50  time: 1.1426  data_time: 0.0015  memory: 17023  
09/20 08:06:37 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:33:52  time: 0.7919  data_time: 0.0015  memory: 16947  
09/20 08:07:19 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:31:38  time: 0.7096  data_time: 0.0016  memory: 17006  
09/20 08:08:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:29:51  time: 1.1787  data_time: 0.0016  memory: 17025  
09/20 08:08:46 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:27:59  time: 0.9729  data_time: 0.0017  memory: 16953  
09/20 08:09:36 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:26:37  time: 1.1662  data_time: 0.0014  memory: 17027  
09/20 08:10:32 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:25:32  time: 0.7539  data_time: 0.0017  memory: 17028  
09/20 08:11:25 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:24:23  time: 1.5578  data_time: 0.0015  memory: 17030  
09/20 08:12:03 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:22:54  time: 0.7276  data_time: 0.0017  memory: 17018  
09/20 08:12:40 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:21:29  time: 0.7366  data_time: 0.0017  memory: 805  
09/20 08:13:17 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:20:09  time: 0.7516  data_time: 0.0015  memory: 16943  
09/20 08:14:08 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:19:10  time: 0.9201  data_time: 0.0016  memory: 17024  
09/20 08:14:50 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:18:03  time: 0.6919  data_time: 0.0015  memory: 17002  
09/20 08:15:38 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:17:03  time: 1.2608  data_time: 0.0015  memory: 17028  
09/20 08:16:22 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:16:01  time: 0.7088  data_time: 0.0016  memory: 17015  
09/20 08:17:02 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:14:58  time: 0.8265  data_time: 0.0015  memory: 17008  
09/20 08:17:39 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:13:54  time: 0.7082  data_time: 0.0015  memory: 1918  
09/20 08:18:19 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:12:55  time: 0.8076  data_time: 0.0015  memory: 17018  
09/20 08:18:54 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:11:54  time: 0.7566  data_time: 0.0015  memory: 1557  
09/20 08:19:34 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:10:58  time: 0.6967  data_time: 0.0015  memory: 17003  
09/20 08:20:27 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:10:08  time: 1.2028  data_time: 0.0015  memory: 17022  
09/20 08:21:08 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:09:14  time: 1.1120  data_time: 0.0015  memory: 17010  
09/20 08:21:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:08:18  time: 0.6968  data_time: 0.0015  memory: 805  
09/20 08:22:24 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:07:26  time: 0.7364  data_time: 0.0015  memory: 16952  
09/20 08:22:59 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:06:33  time: 0.7308  data_time: 0.0016  memory: 1601  
09/20 08:23:42 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:05:42  time: 0.6562  data_time: 0.0014  memory: 17025  
09/20 08:24:25 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:04:52  time: 0.7457  data_time: 0.0017  memory: 17016  
09/20 08:25:09 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:04:03  time: 0.7732  data_time: 0.0015  memory: 17006  
09/20 08:25:47 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:03:13  time: 0.7344  data_time: 0.0017  memory: 17005  
09/20 08:26:24 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:02:24  time: 0.7274  data_time: 0.0017  memory: 805  
09/20 08:27:04 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:01:35  time: 0.7091  data_time: 0.0028  memory: 17028  
09/20 08:27:46 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:47  time: 0.7524  data_time: 0.0015  memory: 17009  
09/20 08:28:25 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.6662  data_time: 0.0014  memory: 16957  
09/20 08:28:25 - mmengine - INFO - per class results:
09/20 08:28:25 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 30.54 | 38.95 |
|       building      | 34.54 |  84.6 |
|         sky         | 65.57 |  90.1 |
|        floor        | 32.75 |  43.4 |
|         tree        | 19.78 | 25.68 |
|       ceiling       | 45.01 | 51.83 |
|         road        | 25.02 | 35.96 |
|         bed         | 23.13 | 28.31 |
|      windowpane     | 19.05 | 46.41 |
|        grass        | 38.03 | 49.05 |
|       cabinet       |  8.62 | 11.21 |
|       sidewalk      | 16.65 | 35.56 |
|        person       | 18.91 | 61.25 |
|        earth        |  0.09 |  0.1  |
|         door        |  5.28 | 10.47 |
|        table        |  1.92 |  2.22 |
|       mountain      | 10.97 | 45.76 |
|        plant        | 12.45 | 41.46 |
|       curtain       | 11.34 | 37.56 |
|        chair        |  2.37 |  2.48 |
|         car         | 21.06 | 23.22 |
|        water        |  1.74 |  1.81 |
|       painting      |  5.14 |  5.31 |
|         sofa        |  4.36 |  4.61 |
|        shelf        |  1.28 |  1.3  |
|        house        |  1.12 |  1.2  |
|         sea         | 20.16 | 32.15 |
|        mirror       |  4.94 |  5.33 |
|         rug         |  0.02 |  0.02 |
|        field        |  6.69 | 32.77 |
|       armchair      |  0.22 |  0.23 |
|         seat        |  4.62 |  5.77 |
|        fence        |  1.45 |  2.24 |
|         desk        |  0.11 |  0.11 |
|         rock        |  0.53 |  0.55 |
|       wardrobe      |  4.43 |  7.74 |
|         lamp        | 14.97 | 20.08 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  3.18 |  5.32 |
|       cushion       |  3.4  |  3.5  |
|         base        |  1.22 |  8.34 |
|         box         |  0.11 |  0.11 |
|        column       |  5.99 |  6.26 |
|      signboard      |  2.96 |  3.22 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  5.16 |  6.15 |
|         sink        |  2.0  |  2.02 |
|      skyscraper     |  6.95 |  8.04 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.83 |  0.83 |
|      grandstand     |  0.02 |  0.02 |
|         path        |  2.75 |  3.24 |
|        stairs       |  0.49 |  0.5  |
|        runway       |  9.56 |  9.87 |
|         case        |  2.38 |  3.92 |
|      pool table     |  0.88 |  0.88 |
|        pillow       |  4.28 |  4.43 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  2.08 |  2.28 |
|        river        |  1.92 |  2.89 |
|        bridge       |  0.16 |  0.16 |
|       bookcase      |  0.5  |  0.54 |
|        blind        |  13.0 | 15.29 |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.03 |  0.03 |
|        flower       |  4.84 |  6.54 |
|         book        |  3.62 |  6.88 |
|         hill        |  0.66 |  5.17 |
|        bench        |  0.01 |  0.01 |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  5.31 |  6.41 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.07 |  0.07 |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.01 |  0.01 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  6.51 |  7.51 |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.12 |  0.12 |
|      chandelier     |  0.11 |  0.11 |
|        awning       |  0.18 |  0.19 |
|     streetlight     |  0.37 |  0.38 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.52 |  0.52 |
|       airplane      |  5.01 |  5.11 |
|      dirt track     |  0.49 |  0.61 |
|       apparel       |  0.42 |  0.64 |
|         pole        |  2.03 |  2.85 |
|         land        |  0.03 |  0.04 |
|      bannister      |  0.01 |  0.01 |
|      escalator      |  4.84 |  9.2  |
|       ottoman       |  0.01 |  0.01 |
|        bottle       |  1.51 |  1.73 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  4.19 |  4.67 |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.07 |  0.07 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.01 |  0.01 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.04 |  0.04 |
|      waterfall      |  3.88 | 40.73 |
|         tent        | 10.12 | 10.63 |
|         bag         |  0.08 |  0.08 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        | 14.61 | 16.26 |
|         food        |  0.29 |  0.29 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.39 |  0.39 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.05 |  0.05 |
|        animal       |  0.23 |  0.23 |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  2.04 |  2.38 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       | 10.84 | 11.87 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  3.84 |  4.23 |
|         vase        |  2.52 |  2.81 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.43 |  0.48 |
|        ashcan       |  0.54 |  0.54 |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  2.79 |  2.95 |
|        plate        |  8.52 | 11.46 |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  2.49 |  2.53 |
|        glass        |  0.72 |  0.8  |
|        clock        |  1.5  |  1.56 |
|         flag        |  0.12 |  0.12 |
+---------------------+-------+-------+
09/20 08:28:25 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 40.3500  mIoU: 4.6100  mAcc: 7.6300  data_time: 0.0017  time: 0.9492
Finished processing corruption type: zoom_blur
Processing corruption type: snow
09/20 08:28:29 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 703007436
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 703007436
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 08:28:29 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='snow',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/snow'

09/20 08:28:33 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 08:28:33 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 08:28:33 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 08:28:34 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 08:30:07 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:00:30  time: 1.0871  data_time: 0.0016  memory: 17245  
09/20 08:31:02 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:47:02  time: 1.2440  data_time: 0.0017  memory: 17025  
09/20 08:31:38 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:37:51  time: 0.7289  data_time: 0.0016  memory: 17018  
09/20 08:32:25 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:34:41  time: 0.8268  data_time: 0.0015  memory: 17027  
09/20 08:33:07 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:31:53  time: 0.6298  data_time: 0.0015  memory: 17026  
09/20 08:33:44 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:29:17  time: 0.3377  data_time: 0.0016  memory: 17021  
09/20 08:34:27 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:27:46  time: 0.6343  data_time: 0.0015  memory: 17026  
09/20 08:35:02 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:25:52  time: 0.7139  data_time: 0.0014  memory: 17023  
09/20 08:35:20 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:23:20  time: 0.4047  data_time: 0.0042  memory: 16947  
09/20 08:35:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:21:27  time: 0.3316  data_time: 0.0015  memory: 17006  
09/20 08:36:08 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:19:58  time: 0.7553  data_time: 0.0016  memory: 17025  
09/20 08:36:27 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:18:25  time: 0.5118  data_time: 0.0016  memory: 16953  
09/20 08:36:57 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:17:25  time: 0.8138  data_time: 0.0014  memory: 17027  
09/20 08:37:29 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:16:34  time: 0.3309  data_time: 0.0016  memory: 17028  
09/20 08:38:02 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:15:46  time: 1.1712  data_time: 0.0015  memory: 17030  
09/20 08:38:21 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:14:40  time: 0.3079  data_time: 0.0016  memory: 17018  
09/20 08:38:37 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:13:35  time: 0.3229  data_time: 0.0016  memory: 805  
09/20 08:38:55 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:12:39  time: 0.3891  data_time: 0.0014  memory: 16943  
09/20 08:39:26 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:12:01  time: 0.5216  data_time: 0.0016  memory: 17024  
09/20 08:39:48 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:11:14  time: 0.2974  data_time: 0.0015  memory: 17002  
09/20 08:40:15 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:10:34  time: 0.8259  data_time: 0.0015  memory: 17028  
09/20 08:40:38 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:09:52  time: 0.3047  data_time: 0.0016  memory: 17015  
09/20 08:40:59 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:09:10  time: 0.4154  data_time: 0.0015  memory: 17008  
09/20 08:41:15 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:08:27  time: 0.3244  data_time: 0.0015  memory: 1918  
09/20 08:41:36 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:07:49  time: 0.4191  data_time: 0.0015  memory: 17018  
09/20 08:41:51 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:07:09  time: 0.3137  data_time: 0.0015  memory: 1557  
09/20 08:42:10 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:32  time: 0.2913  data_time: 0.0015  memory: 17003  
09/20 08:42:42 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:06:03  time: 0.7590  data_time: 0.0014  memory: 17022  
09/20 08:43:01 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:29  time: 0.6685  data_time: 0.0015  memory: 17010  
09/20 08:43:17 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:54  time: 0.2879  data_time: 0.0014  memory: 818  
09/20 08:43:36 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:21  time: 0.3305  data_time: 0.0015  memory: 16952  
09/20 08:43:51 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:49  time: 0.3090  data_time: 0.0017  memory: 1601  
09/20 08:44:14 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:19  time: 0.2977  data_time: 0.0014  memory: 17025  
09/20 08:44:36 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:49  time: 0.3139  data_time: 0.0016  memory: 17016  
09/20 08:44:57 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:20  time: 0.3113  data_time: 0.0015  memory: 17006  
09/20 08:45:15 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:51  time: 0.3185  data_time: 0.0016  memory: 17005  
09/20 08:45:31 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:22  time: 0.3115  data_time: 0.0016  memory: 805  
09/20 08:45:50 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:54  time: 0.3029  data_time: 0.0015  memory: 17028  
09/20 08:46:11 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:27  time: 0.2965  data_time: 0.0015  memory: 17009  
09/20 08:46:30 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2770  data_time: 0.0014  memory: 16957  
09/20 08:46:30 - mmengine - INFO - per class results:
09/20 08:46:30 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 24.73 | 36.57 |
|       building      | 33.69 | 70.09 |
|         sky         | 51.02 | 66.47 |
|        floor        | 20.99 | 32.01 |
|         tree        | 32.82 | 65.89 |
|       ceiling       | 18.69 | 21.29 |
|         road        | 32.75 | 46.07 |
|         bed         |  1.14 |  1.14 |
|      windowpane     |  8.5  | 31.48 |
|        grass        | 19.72 | 21.47 |
|       cabinet       |  7.11 |  9.99 |
|       sidewalk      | 14.28 | 17.17 |
|        person       | 20.19 | 50.19 |
|        earth        | 11.72 | 17.21 |
|         door        |  3.51 | 15.21 |
|        table        |  1.19 |  1.21 |
|       mountain      |  6.55 | 34.41 |
|        plant        | 18.68 | 67.89 |
|       curtain       |  5.83 |  7.61 |
|        chair        |  4.94 |  5.42 |
|         car         | 27.61 | 28.63 |
|        water        |  2.89 |  3.12 |
|       painting      |  4.7  |  4.79 |
|         sofa        |  0.23 |  0.23 |
|        shelf        |  5.15 |  5.51 |
|        house        |  2.53 |  2.58 |
|         sea         |  9.61 | 13.75 |
|        mirror       |  0.31 |  0.32 |
|         rug         |  0.12 |  0.12 |
|        field        |  5.22 |  34.8 |
|       armchair      |  0.05 |  0.05 |
|         seat        |  8.33 | 13.29 |
|        fence        |  3.2  | 24.14 |
|         desk        |  0.0  |  0.0  |
|         rock        |  6.69 |  8.25 |
|       wardrobe      |  1.54 |  1.59 |
|         lamp        | 13.82 | 15.59 |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  6.73 | 10.86 |
|       cushion       |  1.44 |  1.45 |
|         base        |  5.58 |  9.5  |
|         box         |  1.13 |  1.22 |
|        column       |  1.36 |  1.5  |
|      signboard      | 11.19 |  15.4 |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.75 |  1.02 |
|         sink        |  2.04 |  2.13 |
|      skyscraper     |  6.64 |  8.67 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.03 |  0.03 |
|      grandstand     | 11.46 |  22.0 |
|         path        |  2.14 |  2.39 |
|        stairs       |  3.52 |  4.25 |
|        runway       | 11.98 | 15.99 |
|         case        |  6.5  |  7.75 |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.15 |  0.15 |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  1.42 |  1.69 |
|        river        |  0.19 |  0.22 |
|        bridge       |  0.36 |  0.36 |
|       bookcase      |  3.61 |  3.96 |
|        blind        |  0.49 |  0.49 |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.58 |  0.58 |
|        flower       |  8.4  | 10.13 |
|         book        | 13.37 | 21.92 |
|         hill        |  0.51 |  0.56 |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.18 |  0.18 |
|         palm        |  0.16 |  0.16 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.01 |  0.01 |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.07 |  0.07 |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.25 |  0.25 |
|         bus         |  0.97 |  0.97 |
|        towel        |  0.14 |  0.14 |
|        light        |  2.7  |  2.74 |
|        truck        |  0.05 |  0.05 |
|        tower        |  0.49 |  0.5  |
|      chandelier     |  2.77 |  2.79 |
|        awning       |  0.03 |  0.03 |
|     streetlight     |  3.41 |  3.57 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.26 |  0.26 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  2.68 |  4.1  |
|         pole        |  7.49 | 16.17 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.42 |  0.44 |
|      escalator      |  0.56 |  0.78 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  3.97 | 14.61 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.47 |  0.52 |
|        stage        |  0.0  |  0.0  |
|         van         |  0.04 |  0.04 |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.01 |  0.01 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.14 |  0.14 |
|      waterfall      | 14.61 | 19.81 |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.26 |  0.28 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  6.06 |  6.09 |
|         food        |  3.92 |  4.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  1.09 |  1.1  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  2.86 |  2.88 |
|        animal       |  0.01 |  0.01 |
|       bicycle       |  7.06 |  7.16 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.32 |  0.33 |
|         hood        |  0.0  |  0.0  |
|        sconce       |  4.97 |  5.18 |
|         vase        |  3.46 |  3.79 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.55 |  0.56 |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  12.3 | 13.53 |
|       monitor       |  0.7  |  0.7  |
|    bulletin board   |  0.34 |  0.35 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  3.59 |  5.46 |
|        clock        |  8.91 | 10.01 |
|         flag        |  0.18 |  0.18 |
+---------------------+-------+-------+
09/20 08:46:30 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 34.4600  mIoU: 4.2000  mAcc: 7.0000  data_time: 0.0017  time: 0.5378
Finished processing corruption type: snow
Processing corruption type: frost
09/20 08:46:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1917101206
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1917101206
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 08:46:40 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='frost',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/frost'

09/20 08:46:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 08:46:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 08:46:48 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 08:46:48 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 08:48:12 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:54:03  time: 0.8373  data_time: 0.0016  memory: 17245  
09/20 08:48:57 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:40:38  time: 1.0087  data_time: 0.0016  memory: 17025  
09/20 08:49:20 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:31:11  time: 0.5010  data_time: 0.0016  memory: 17018  
09/20 08:49:56 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:28:04  time: 0.6049  data_time: 0.0015  memory: 17027  
09/20 08:50:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:35  time: 0.4309  data_time: 0.0015  memory: 17026  
09/20 08:50:53 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:23:05  time: 0.1091  data_time: 0.0016  memory: 17021  
09/20 08:51:26 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:47  time: 0.4282  data_time: 0.0016  memory: 17026  
09/20 08:51:52 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:20:15  time: 0.5580  data_time: 0.0014  memory: 17023  
09/20 08:52:03 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:18:02  time: 0.2099  data_time: 0.0014  memory: 16947  
09/20 08:52:16 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:23  time: 0.1610  data_time: 0.0014  memory: 17006  
09/20 08:52:32 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:05  time: 0.6262  data_time: 0.0015  memory: 17025  
09/20 08:52:41 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:43  time: 0.3078  data_time: 0.0016  memory: 16953  
09/20 08:53:01 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:53  time: 0.5558  data_time: 0.0014  memory: 17027  
09/20 08:53:24 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:14  time: 0.1746  data_time: 0.0016  memory: 17028  
09/20 08:53:48 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:38  time: 1.1100  data_time: 0.0015  memory: 17030  
09/20 08:53:58 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:43  time: 0.0959  data_time: 0.0016  memory: 17018  
09/20 08:54:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:48  time: 0.1025  data_time: 0.0016  memory: 805  
09/20 08:54:13 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:09:03  time: 0.2038  data_time: 0.0015  memory: 16943  
09/20 08:54:33 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:32  time: 0.3051  data_time: 0.0015  memory: 17024  
09/20 08:54:44 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:55  time: 0.1159  data_time: 0.0015  memory: 17002  
09/20 08:55:02 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:26  time: 0.6312  data_time: 0.0015  memory: 17028  
09/20 08:55:15 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:54  time: 0.1001  data_time: 0.0015  memory: 17015  
09/20 08:55:26 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:22  time: 0.2142  data_time: 0.0015  memory: 17008  
09/20 08:55:31 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:48  time: 0.0994  data_time: 0.0015  memory: 1918  
09/20 08:55:41 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:19  time: 0.2064  data_time: 0.0015  memory: 17018  
09/20 08:55:47 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:50  time: 0.0983  data_time: 0.0015  memory: 1557  
09/20 08:55:56 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:23  time: 0.1291  data_time: 0.0015  memory: 17003  
09/20 08:56:18 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:04:03  time: 0.5170  data_time: 0.0015  memory: 17022  
09/20 08:56:27 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:39  time: 0.4272  data_time: 0.0014  memory: 17010  
09/20 08:56:33 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:14  time: 0.0930  data_time: 0.0014  memory: 829  
09/20 08:56:41 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:51  time: 0.1024  data_time: 0.0015  memory: 16952  
09/20 08:56:47 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:29  time: 0.0932  data_time: 0.0016  memory: 1601  
09/20 08:57:00 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:09  time: 0.0924  data_time: 0.0041  memory: 17025  
09/20 08:57:12 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:50  time: 0.1227  data_time: 0.0016  memory: 17016  
09/20 08:57:24 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:30  time: 0.1399  data_time: 0.0014  memory: 17006  
09/20 08:57:33 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:11  time: 0.1021  data_time: 0.0017  memory: 17005  
09/20 08:57:39 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:52  time: 0.1691  data_time: 0.0016  memory: 805  
09/20 08:57:49 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:34  time: 0.1228  data_time: 0.0015  memory: 17028  
09/20 08:57:59 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.0951  data_time: 0.0014  memory: 17009  
09/20 08:58:08 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0940  data_time: 0.0013  memory: 16957  
09/20 08:58:08 - mmengine - INFO - per class results:
09/20 08:58:08 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 16.29 | 18.16 |
|       building      | 42.62 | 80.92 |
|         sky         |  64.5 | 80.99 |
|        floor        | 35.16 | 55.63 |
|         tree        | 39.14 | 82.34 |
|       ceiling       | 40.36 | 46.34 |
|         road        | 39.92 | 71.42 |
|         bed         |  11.2 | 11.64 |
|      windowpane     | 16.12 | 20.72 |
|        grass        | 36.64 | 40.55 |
|       cabinet       |  8.46 | 11.43 |
|       sidewalk      | 12.03 | 13.38 |
|        person       | 32.87 | 64.28 |
|        earth        | 13.76 | 20.68 |
|         door        |  5.23 | 54.71 |
|        table        |  2.42 |  2.5  |
|       mountain      | 11.29 | 67.09 |
|        plant        | 25.77 | 60.19 |
|       curtain       | 17.38 | 35.86 |
|        chair        |  7.61 |  8.52 |
|         car         | 38.58 |  40.6 |
|        water        |  19.8 | 23.21 |
|       painting      |  16.7 | 17.77 |
|         sofa        |  1.88 |  1.9  |
|        shelf        |  1.81 |  1.86 |
|        house        |  6.99 |  7.98 |
|         sea         | 22.45 | 36.11 |
|        mirror       |  2.75 |  3.1  |
|         rug         |  0.24 |  0.24 |
|        field        | 13.47 | 40.38 |
|       armchair      |  0.68 |  0.7  |
|         seat        |  8.16 |  9.33 |
|        fence        |  8.43 | 16.94 |
|         desk        |  0.38 |  0.38 |
|         rock        |  7.74 | 11.03 |
|       wardrobe      |  2.76 |  3.55 |
|         lamp        | 19.85 | 26.38 |
|       bathtub       |  0.02 |  0.02 |
|       railing       | 11.54 | 19.41 |
|       cushion       |  6.8  |  7.03 |
|         base        |  6.14 |  7.05 |
|         box         |  2.74 |  3.03 |
|        column       |  7.53 |  8.48 |
|      signboard      | 13.87 | 18.55 |
|   chest of drawers  |  0.03 |  0.03 |
|       counter       |  0.01 |  0.01 |
|         sand        |  5.99 |  6.54 |
|         sink        |  6.84 |  7.27 |
|      skyscraper     | 13.38 | 15.64 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.15 |  0.15 |
|      grandstand     | 11.04 | 12.47 |
|         path        |  3.84 |  5.0  |
|        stairs       |  8.94 |  11.8 |
|        runway       |  0.13 |  0.13 |
|         case        | 11.68 | 12.47 |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  1.84 |  1.88 |
|     screen door     |  0.01 |  0.01 |
|       stairway      |  3.57 |  8.8  |
|        river        |  0.23 |  0.25 |
|        bridge       |  0.83 |  0.84 |
|       bookcase      |  13.8 | 18.64 |
|        blind        |  9.45 |  9.88 |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.84 |  0.87 |
|        flower       | 10.02 | 12.21 |
|         book        | 13.69 | 25.88 |
|         hill        |  0.59 |  6.49 |
|        bench        |  0.01 |  0.01 |
|      countertop     |  0.09 |  0.09 |
|        stove        |  0.72 |  0.72 |
|         palm        |  0.47 |  0.47 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.16 |  0.16 |
|     swivel chair    |  0.06 |  0.06 |
|         boat        |  0.84 |  0.84 |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.33 |  0.33 |
|         bus         |  0.02 |  0.02 |
|        towel        |  0.41 |  0.41 |
|        light        |  9.71 | 10.43 |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.56 |  1.69 |
|      chandelier     |  6.34 |  6.46 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  4.06 |  4.38 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.32 |  0.32 |
|      dirt track     |  2.67 | 16.92 |
|       apparel       |  2.2  |  2.48 |
|         pole        |  7.99 | 18.52 |
|         land        |  0.01 |  0.01 |
|      bannister      |  1.18 |  1.73 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       | 10.54 | 15.57 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.44 |  0.45 |
|        stage        |  0.59 |  0.6  |
|         van         |  0.87 |  0.87 |
|         ship        |  0.1  |  0.11 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.01 |  0.01 |
|        washer       |  0.05 |  0.05 |
|      plaything      |  0.91 |  0.92 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.66 |  0.66 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.76 |  0.78 |
|      waterfall      | 12.49 | 12.93 |
|         tent        |  6.32 |  6.34 |
|         bag         |  0.18 |  0.18 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        | 44.15 | 59.26 |
|         food        |  6.06 |  6.21 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.03 |  0.03 |
|      trade name     |  0.82 |  0.82 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  4.08 |  4.13 |
|        animal       |  0.7  |  0.7  |
|       bicycle       | 14.34 | 14.77 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.03 |  0.03 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.28 |  0.3  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  6.62 |  7.36 |
|         vase        | 10.43 | 14.43 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  1.34 |  1.48 |
|        ashcan       |  0.9  |  0.9  |
|         fan         |  0.01 |  0.01 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  16.4 | 19.33 |
|       monitor       |  0.94 |  0.94 |
|    bulletin board   |  0.72 |  0.73 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  5.31 |  6.79 |
|        clock        |  9.96 | 12.86 |
|         flag        |  0.42 |  0.42 |
+---------------------+-------+-------+
09/20 08:58:08 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 41.1400  mIoU: 6.7500  mAcc: 10.4400  data_time: 0.0017  time: 0.3396
Finished processing corruption type: frost
Processing corruption type: fog
09/20 08:58:11 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1771254176
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1771254176
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 08:58:12 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='fog',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/fog'

09/20 08:58:15 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 08:58:15 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 08:58:16 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 08:58:16 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 08:59:46 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:58:01  time: 0.9690  data_time: 0.0016  memory: 17245  
09/20 09:00:38 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:44:52  time: 1.1981  data_time: 0.0016  memory: 17025  
09/20 09:01:09 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:35:30  time: 0.6483  data_time: 0.0016  memory: 17018  
09/20 09:01:52 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:32:23  time: 0.7157  data_time: 0.0015  memory: 17027  
09/20 09:02:30 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:29:37  time: 0.5625  data_time: 0.0015  memory: 17026  
09/20 09:03:03 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:27:02  time: 0.2482  data_time: 0.0016  memory: 17021  
09/20 09:03:43 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:25:38  time: 0.5514  data_time: 0.0015  memory: 17026  
09/20 09:04:13 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:23:48  time: 0.6422  data_time: 0.0014  memory: 17023  
09/20 09:04:29 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:21:23  time: 0.3304  data_time: 0.0014  memory: 16947  
09/20 09:04:46 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:19:30  time: 0.2253  data_time: 0.0015  memory: 17006  
09/20 09:05:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:18:00  time: 0.6366  data_time: 0.0017  memory: 17025  
09/20 09:05:21 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:16:31  time: 0.4162  data_time: 0.0016  memory: 16953  
09/20 09:05:46 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:15:33  time: 0.6488  data_time: 0.0014  memory: 17027  
09/20 09:06:16 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:14:50  time: 0.2980  data_time: 0.0016  memory: 17028  
09/20 09:06:43 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:14:04  time: 1.0753  data_time: 0.0017  memory: 17030  
09/20 09:06:59 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:13:03  time: 0.2199  data_time: 0.0016  memory: 17018  
09/20 09:07:10 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:12:02  time: 0.2216  data_time: 0.0016  memory: 805  
09/20 09:07:24 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:11:09  time: 0.3206  data_time: 0.0014  memory: 16943  
09/20 09:07:50 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:10:34  time: 0.4286  data_time: 0.0016  memory: 17024  
09/20 09:08:08 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:09:52  time: 0.2173  data_time: 0.0015  memory: 17002  
09/20 09:08:31 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:09:16  time: 0.7429  data_time: 0.0015  memory: 17028  
09/20 09:08:50 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:08:38  time: 0.2212  data_time: 0.0016  memory: 17015  
09/20 09:09:06 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:08:00  time: 0.3280  data_time: 0.0015  memory: 17008  
09/20 09:09:18 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:20  time: 0.2190  data_time: 0.0015  memory: 1918  
09/20 09:09:34 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:06:46  time: 0.3320  data_time: 0.0014  memory: 17018  
09/20 09:09:45 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:10  time: 0.2285  data_time: 0.0015  memory: 1557  
09/20 09:10:00 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:05:38  time: 0.2165  data_time: 0.0015  memory: 17003  
09/20 09:10:27 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:12  time: 0.6461  data_time: 0.0015  memory: 17022  
09/20 09:10:42 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:04:42  time: 0.5686  data_time: 0.0015  memory: 17010  
09/20 09:10:55 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:12  time: 0.2623  data_time: 0.0015  memory: 805  
09/20 09:11:09 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:03:44  time: 0.2434  data_time: 0.0015  memory: 16952  
09/20 09:11:22 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:16  time: 0.2520  data_time: 0.0016  memory: 1601  
09/20 09:11:43 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:51  time: 0.2188  data_time: 0.0014  memory: 17025  
09/20 09:12:03 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:25  time: 0.2747  data_time: 0.0016  memory: 17016  
09/20 09:12:23 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:00  time: 0.2992  data_time: 0.0014  memory: 17006  
09/20 09:12:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:35  time: 0.2241  data_time: 0.0016  memory: 17005  
09/20 09:12:51 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:10  time: 0.2926  data_time: 0.0016  memory: 805  
09/20 09:13:09 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:46  time: 0.2473  data_time: 0.0015  memory: 17028  
09/20 09:13:26 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:23  time: 0.2206  data_time: 0.0014  memory: 17009  
09/20 09:13:42 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2151  data_time: 0.0014  memory: 16957  
09/20 09:13:42 - mmengine - INFO - per class results:
09/20 09:13:42 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 39.61 | 47.06 |
|       building      | 51.27 | 87.88 |
|         sky         | 67.73 | 96.33 |
|        floor        |  47.6 | 64.65 |
|         tree        | 51.58 | 85.78 |
|       ceiling       | 57.68 | 67.26 |
|         road        | 55.18 | 77.16 |
|         bed         | 40.89 | 49.39 |
|      windowpane     | 30.12 | 47.63 |
|        grass        | 44.92 | 50.38 |
|       cabinet       | 21.18 |  38.3 |
|       sidewalk      | 35.09 | 47.33 |
|        person       | 44.35 | 77.59 |
|        earth        | 17.05 | 23.94 |
|         door        |  9.66 | 37.82 |
|        table        |  6.2  |  6.72 |
|       mountain      | 19.59 | 67.81 |
|        plant        | 30.84 | 51.23 |
|       curtain       | 31.94 | 62.23 |
|        chair        | 16.01 |  21.0 |
|         car         | 50.27 |  57.9 |
|        water        | 26.91 | 32.62 |
|       painting      | 23.89 | 25.81 |
|         sofa        | 16.98 |  18.7 |
|        shelf        | 13.19 | 15.98 |
|        house        |  2.52 |  2.68 |
|         sea         | 29.36 | 54.31 |
|        mirror       | 11.08 | 14.46 |
|         rug         |  0.66 |  0.66 |
|        field        | 14.39 | 28.19 |
|       armchair      |  4.12 |  4.46 |
|         seat        | 14.11 | 15.49 |
|        fence        |  8.89 | 17.05 |
|         desk        |  1.43 |  1.45 |
|         rock        |  8.34 | 10.75 |
|       wardrobe      | 13.43 | 38.97 |
|         lamp        | 29.02 | 46.35 |
|       bathtub       |  1.52 |  1.52 |
|       railing       | 10.66 | 33.86 |
|       cushion       | 16.91 | 19.06 |
|         base        |  6.66 | 16.01 |
|         box         |  5.08 |  5.81 |
|        column       | 12.44 | 16.45 |
|      signboard      | 14.25 | 21.43 |
|   chest of drawers  |  1.24 |  1.26 |
|       counter       |  0.0  |  0.0  |
|         sand        | 15.28 | 19.65 |
|         sink        | 20.16 | 23.04 |
|      skyscraper     | 23.63 | 28.83 |
|      fireplace      |  0.11 |  0.11 |
|     refrigerator    |  2.59 |  2.59 |
|      grandstand     |  6.29 |  6.77 |
|         path        |  3.67 |  4.59 |
|        stairs       |  8.45 |  8.85 |
|        runway       | 34.91 | 42.04 |
|         case        |  6.23 |  6.88 |
|      pool table     |  0.02 |  0.02 |
|        pillow       |  12.4 | 13.53 |
|     screen door     |  0.26 |  0.27 |
|       stairway      |  6.11 |  9.08 |
|        river        |  0.71 |  0.79 |
|        bridge       |  1.74 |  1.81 |
|       bookcase      | 16.89 |  25.1 |
|        blind        | 19.45 | 26.66 |
|     coffee table    |  0.05 |  0.05 |
|        toilet       |  1.69 |  1.69 |
|        flower       | 11.01 | 12.68 |
|         book        | 14.31 |  38.9 |
|         hill        |  1.67 | 11.61 |
|        bench        |  2.4  |  2.42 |
|      countertop     |  1.85 |  1.86 |
|        stove        |  0.6  |  0.6  |
|         palm        |  3.4  |  3.43 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  1.65 |  1.66 |
|     swivel chair    |  1.46 |  1.46 |
|         boat        |  1.25 |  1.26 |
|         bar         |  0.5  |  0.51 |
|    arcade machine   |  0.17 |  0.17 |
|        hovel        |  0.16 |  0.16 |
|         bus         |  0.08 |  0.08 |
|        towel        |  4.1  |  4.13 |
|        light        | 18.43 | 20.92 |
|        truck        |  0.1  |  0.1  |
|        tower        |  1.73 |  2.59 |
|      chandelier     |  7.22 |  7.33 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  7.29 |  8.37 |
|        booth        |  0.02 |  0.02 |
| television receiver |  0.67 |  0.67 |
|       airplane      | 10.34 |  10.6 |
|      dirt track     |  6.53 | 16.99 |
|       apparel       |  1.93 |  2.65 |
|         pole        |  9.52 | 25.18 |
|         land        |  1.91 |  2.51 |
|      bannister      |  0.92 |  1.09 |
|      escalator      |  0.23 |  0.23 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       | 10.61 | 17.22 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  7.28 |  9.37 |
|        stage        |  0.19 |  0.19 |
|         van         |  0.58 |  0.59 |
|         ship        |  0.07 |  0.09 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.19 |  0.19 |
|        canopy       |  1.75 |  1.86 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  1.64 |  1.67 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.72 |  0.72 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  2.02 |  2.06 |
|      waterfall      | 26.98 |  28.8 |
|         tent        | 10.98 | 11.03 |
|         bag         |  0.47 |  0.5  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.1  |  0.1  |
|         oven        |  0.0  |  0.0  |
|         ball        | 29.92 | 40.06 |
|         food        |  1.68 |  1.68 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.19 |  0.19 |
|      trade name     |  0.74 |  0.75 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  6.43 |  6.51 |
|        animal       |  0.42 |  0.42 |
|       bicycle       |  9.88 | 10.12 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.83 |  0.85 |
|       blanket       |  0.53 |  0.54 |
|      sculpture      |  0.41 |  0.44 |
|         hood        |  0.05 |  0.05 |
|        sconce       | 10.32 | 11.39 |
|         vase        | 12.88 | 17.84 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  1.08 |  1.24 |
|        ashcan       |  2.5  |  2.53 |
|         fan         |  1.16 |  1.16 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        | 18.17 |  23.5 |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.26 |  0.27 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  2.33 |  2.34 |
|        glass        |  8.54 | 11.49 |
|        clock        | 14.34 | 18.74 |
|         flag        |  0.55 |  0.56 |
+---------------------+-------+-------+
09/20 09:13:42 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 55.0300  mIoU: 10.2300  mAcc: 14.9200  data_time: 0.0017  time: 0.4627
Finished processing corruption type: fog
Processing corruption type: brightness
09/20 09:13:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1519260897
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1519260897
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 09:13:46 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='brightness',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/brightness'

09/20 09:13:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 09:13:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 09:13:50 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 09:13:50 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 09:15:28 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:03:27  time: 1.1082  data_time: 0.0016  memory: 17245  
09/20 09:16:22 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:48:12  time: 1.1925  data_time: 0.0017  memory: 17025  
09/20 09:16:54 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:37:46  time: 0.6531  data_time: 0.0016  memory: 17018  
09/20 09:17:39 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:34:20  time: 0.7877  data_time: 0.0015  memory: 17027  
09/20 09:18:21 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:31:34  time: 0.5522  data_time: 0.0015  memory: 17026  
09/20 09:18:54 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:28:41  time: 0.2626  data_time: 0.0016  memory: 17021  
09/20 09:19:35 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:27:04  time: 0.5723  data_time: 0.0015  memory: 17026  
09/20 09:20:07 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:25:08  time: 0.6482  data_time: 0.0015  memory: 17023  
09/20 09:20:23 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:22:32  time: 0.3383  data_time: 0.0015  memory: 16947  
09/20 09:20:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:20:39  time: 0.2492  data_time: 0.0015  memory: 17006  
09/20 09:21:05 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:19:07  time: 0.7170  data_time: 0.0016  memory: 17025  
09/20 09:21:21 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:17:31  time: 0.4081  data_time: 0.0016  memory: 16953  
09/20 09:21:46 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:16:29  time: 0.6978  data_time: 0.0014  memory: 17027  
09/20 09:22:16 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:15:39  time: 0.2602  data_time: 0.0017  memory: 17028  
09/20 09:22:45 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:14:51  time: 1.1384  data_time: 0.0015  memory: 17030  
09/20 09:23:01 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:13:46  time: 0.2471  data_time: 0.0016  memory: 17018  
09/20 09:23:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:12:42  time: 0.2426  data_time: 0.0016  memory: 805  
09/20 09:23:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:11:47  time: 0.3344  data_time: 0.0014  memory: 16943  
09/20 09:24:00 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:11:13  time: 0.5142  data_time: 0.0016  memory: 17024  
09/20 09:24:21 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:10:30  time: 0.2833  data_time: 0.0015  memory: 17002  
09/20 09:24:46 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:09:53  time: 0.8230  data_time: 0.0015  memory: 17028  
09/20 09:25:07 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:09:14  time: 0.2312  data_time: 0.0015  memory: 17015  
09/20 09:25:25 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:08:33  time: 0.3615  data_time: 0.0015  memory: 17008  
09/20 09:25:39 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:07:52  time: 0.2963  data_time: 0.0015  memory: 1918  
09/20 09:25:56 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:07:15  time: 0.3381  data_time: 0.0015  memory: 17018  
09/20 09:26:08 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:06:37  time: 0.2658  data_time: 0.0015  memory: 1557  
09/20 09:26:24 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:06:02  time: 0.2249  data_time: 0.0015  memory: 17003  
09/20 09:26:53 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:05:35  time: 0.6571  data_time: 0.0016  memory: 17022  
09/20 09:27:11 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:05:03  time: 0.7109  data_time: 0.0015  memory: 17010  
09/20 09:27:24 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:04:31  time: 0.2778  data_time: 0.0015  memory: 829  
09/20 09:27:39 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:04:00  time: 0.2394  data_time: 0.0014  memory: 16952  
09/20 09:27:51 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:03:30  time: 0.2438  data_time: 0.0021  memory: 1601  
09/20 09:28:11 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:03:02  time: 0.2696  data_time: 0.0014  memory: 17025  
09/20 09:28:31 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:02:35  time: 0.2389  data_time: 0.0015  memory: 17016  
09/20 09:28:50 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:02:08  time: 0.2547  data_time: 0.0014  memory: 17006  
09/20 09:29:05 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:41  time: 0.2432  data_time: 0.0016  memory: 17005  
09/20 09:29:18 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:01:15  time: 0.2598  data_time: 0.0016  memory: 805  
09/20 09:29:34 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:49  time: 0.2340  data_time: 0.0015  memory: 17028  
09/20 09:29:51 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:24  time: 0.2216  data_time: 0.0014  memory: 17009  
09/20 09:30:06 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2124  data_time: 0.0014  memory: 16957  
09/20 09:30:06 - mmengine - INFO - per class results:
09/20 09:30:06 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 46.71 | 57.85 |
|       building      |  63.3 | 85.85 |
|         sky         | 76.64 | 96.84 |
|        floor        |  51.1 | 80.26 |
|         tree        | 55.21 | 81.21 |
|       ceiling       | 62.95 | 75.82 |
|         road        | 58.29 | 86.52 |
|         bed         | 39.29 | 43.45 |
|      windowpane     | 30.17 |  56.5 |
|        grass        | 48.37 | 55.24 |
|       cabinet       | 22.11 | 38.74 |
|       sidewalk      | 29.89 | 34.31 |
|        person       |  46.5 | 81.23 |
|        earth        | 20.08 | 26.79 |
|         door        |  9.63 | 48.24 |
|        table        |  8.61 |  9.42 |
|       mountain      | 31.43 | 69.68 |
|        plant        | 33.57 |  64.1 |
|       curtain       |  31.5 | 61.77 |
|        chair        | 17.41 | 22.36 |
|         car         | 54.52 | 60.43 |
|        water        | 34.44 | 42.42 |
|       painting      | 24.93 |  27.4 |
|         sofa        | 18.17 | 19.73 |
|        shelf        | 12.46 | 14.33 |
|        house        |  6.93 |  7.69 |
|         sea         | 36.86 | 74.55 |
|        mirror       | 10.07 | 12.57 |
|         rug         |  1.32 |  1.32 |
|        field        | 13.14 |  35.5 |
|       armchair      |  2.93 |  3.13 |
|         seat        | 20.15 | 26.67 |
|        fence        |  12.4 |  21.2 |
|         desk        |  3.28 |  3.39 |
|         rock        | 10.31 | 14.18 |
|       wardrobe      | 20.18 |  37.3 |
|         lamp        | 27.75 | 42.15 |
|       bathtub       |  1.89 |  1.9  |
|       railing       | 14.86 | 30.34 |
|       cushion       | 19.04 | 21.47 |
|         base        |  7.16 | 14.03 |
|         box         |  4.72 |  5.49 |
|        column       | 15.59 | 18.83 |
|      signboard      |  15.2 | 21.63 |
|   chest of drawers  |  3.37 |  3.45 |
|       counter       |  0.29 |  0.3  |
|         sand        | 21.81 | 29.43 |
|         sink        |  20.9 | 24.08 |
|      skyscraper     |  33.9 | 41.13 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  3.41 |  3.42 |
|      grandstand     | 27.06 | 33.77 |
|         path        |  6.97 |  9.11 |
|        stairs       | 12.79 | 13.56 |
|        runway       | 38.69 |  44.3 |
|         case        | 28.12 | 38.02 |
|      pool table     |  2.51 |  2.52 |
|        pillow       | 11.57 | 12.29 |
|     screen door     |  0.41 |  0.41 |
|       stairway      |  7.56 | 11.09 |
|        river        |  0.92 |  1.13 |
|        bridge       |  3.54 |  3.74 |
|       bookcase      | 23.92 | 37.42 |
|        blind        | 22.91 | 28.48 |
|     coffee table    |  0.02 |  0.02 |
|        toilet       |  3.55 |  3.58 |
|        flower       |  17.4 | 25.77 |
|         book        | 15.32 | 42.85 |
|         hill        |  1.73 |  4.35 |
|        bench        |  1.82 |  1.84 |
|      countertop     |  1.14 |  1.15 |
|        stove        |  1.9  |  1.9  |
|         palm        |  4.42 |  4.56 |
|    kitchen island   |  0.19 |  0.19 |
|       computer      |  2.27 |  2.29 |
|     swivel chair    |  2.61 |  2.7  |
|         boat        |  6.25 |  6.4  |
|         bar         |  4.53 |  4.85 |
|    arcade machine   |  0.31 |  0.31 |
|        hovel        |  1.94 |  1.95 |
|         bus         |  0.33 |  0.33 |
|        towel        |  3.22 |  3.24 |
|        light        | 15.59 | 17.38 |
|        truck        |  0.57 |  0.61 |
|        tower        |  1.81 |  2.45 |
|      chandelier     |  8.35 |  8.52 |
|        awning       |  0.01 |  0.01 |
|     streetlight     |  5.99 |  6.46 |
|        booth        |  0.0  |  0.0  |
| television receiver |  1.96 |  1.97 |
|       airplane      | 15.49 | 16.11 |
|      dirt track     |  4.03 | 18.92 |
|       apparel       |  6.81 |  9.31 |
|         pole        | 11.38 | 31.22 |
|         land        |  0.84 |  1.06 |
|      bannister      |  1.13 |  1.44 |
|      escalator      |  8.58 |  8.73 |
|       ottoman       |  0.06 |  0.06 |
|        bottle       | 11.85 | 23.74 |
|        buffet       |  0.04 |  0.04 |
|        poster       |  2.53 |  2.83 |
|        stage        |  2.51 |  2.74 |
|         van         |  0.74 |  0.75 |
|         ship        |  0.11 |  0.15 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  1.32 |  1.32 |
|        canopy       |  1.29 |  1.32 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  3.58 |  3.73 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  2.23 |  2.27 |
|        barrel       |  6.75 | 22.37 |
|        basket       |  3.04 |  3.18 |
|      waterfall      |  29.9 | 33.76 |
|         tent        | 41.25 | 41.57 |
|         bag         |  0.32 |  0.34 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.11 |  0.11 |
|         oven        |  0.08 |  0.08 |
|         ball        | 34.75 | 64.72 |
|         food        |  9.14 |  9.42 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.61 |  0.61 |
|      trade name     |  1.54 |  1.57 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  8.87 |  9.12 |
|        animal       |  1.41 |  1.41 |
|       bicycle       | 23.44 | 24.32 |
|         lake        |  0.13 |  0.13 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  1.71 |  1.78 |
|       blanket       |  0.74 |  0.74 |
|      sculpture      |  1.93 |  2.09 |
|         hood        |  0.12 |  0.12 |
|        sconce       |  9.18 | 10.24 |
|         vase        |  14.8 | 21.91 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  2.32 |  2.83 |
|        ashcan       |  3.07 |  3.11 |
|         fan         |  0.46 |  0.46 |
|         pier        |  0.02 |  0.02 |
|      crt screen     |  0.34 |  0.41 |
|        plate        | 20.32 | 28.52 |
|       monitor       |  0.66 |  0.66 |
|    bulletin board   |  0.64 |  0.65 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  3.4  |  3.4  |
|        glass        |  8.69 | 11.96 |
|        clock        |  14.3 | 18.89 |
|         flag        |  0.89 |  0.91 |
+---------------------+-------+-------+
09/20 09:30:06 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 59.4000  mIoU: 12.4300  mAcc: 17.7600  data_time: 0.0017  time: 0.4881
Finished processing corruption type: brightness
Processing corruption type: contrast
09/20 09:30:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1570136782
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1570136782
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 09:30:10 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='contrast',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/contrast'

09/20 09:30:14 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 09:30:14 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 09:30:14 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 09:30:14 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 09:31:39 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:54:57  time: 0.8904  data_time: 0.0015  memory: 17245  
09/20 09:32:25 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:41:21  time: 1.0062  data_time: 0.0016  memory: 17025  
09/20 09:32:50 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:32:01  time: 0.5532  data_time: 0.0016  memory: 17018  
09/20 09:33:26 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:28:47  time: 0.6268  data_time: 0.0015  memory: 17027  
09/20 09:33:58 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:26:07  time: 0.4329  data_time: 0.0015  memory: 17026  
09/20 09:34:25 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:23:37  time: 0.1076  data_time: 0.0016  memory: 17021  
09/20 09:34:57 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:22:13  time: 0.4225  data_time: 0.0016  memory: 17026  
09/20 09:35:22 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:20:28  time: 0.4972  data_time: 0.0014  memory: 17023  
09/20 09:35:30 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:18:07  time: 0.2057  data_time: 0.0014  memory: 16947  
09/20 09:35:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:16:26  time: 0.1659  data_time: 0.0015  memory: 17006  
09/20 09:35:58 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:15:05  time: 0.5642  data_time: 0.0016  memory: 17025  
09/20 09:36:06 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:41  time: 0.2878  data_time: 0.0017  memory: 16953  
09/20 09:36:25 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:50  time: 0.5304  data_time: 0.0014  memory: 17027  
09/20 09:36:47 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:12:08  time: 0.1064  data_time: 0.0016  memory: 17028  
09/20 09:37:08 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:29  time: 0.9919  data_time: 0.0015  memory: 17030  
09/20 09:37:17 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:34  time: 0.1152  data_time: 0.0016  memory: 17018  
09/20 09:37:22 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:38  time: 0.0967  data_time: 0.0017  memory: 805  
09/20 09:37:31 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:53  time: 0.1981  data_time: 0.0014  memory: 16943  
09/20 09:37:51 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:24  time: 0.3021  data_time: 0.0015  memory: 17024  
09/20 09:38:03 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:48  time: 0.0918  data_time: 0.0015  memory: 17002  
09/20 09:38:20 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:19  time: 0.6630  data_time: 0.0015  memory: 17028  
09/20 09:38:32 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:47  time: 0.0964  data_time: 0.0016  memory: 17015  
09/20 09:38:41 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:06:14  time: 0.2005  data_time: 0.0015  memory: 17008  
09/20 09:38:46 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:41  time: 0.0944  data_time: 0.0015  memory: 1918  
09/20 09:38:56 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:13  time: 0.2040  data_time: 0.0014  memory: 17018  
09/20 09:39:01 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:43  time: 0.0937  data_time: 0.0014  memory: 1557  
09/20 09:39:09 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:17  time: 0.0914  data_time: 0.0014  memory: 17003  
09/20 09:39:30 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:57  time: 0.5170  data_time: 0.0014  memory: 17022  
09/20 09:39:39 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:33  time: 0.4304  data_time: 0.0016  memory: 17010  
09/20 09:39:44 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:09  time: 0.0908  data_time: 0.0015  memory: 861  
09/20 09:39:52 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:47  time: 0.1646  data_time: 0.0015  memory: 16952  
09/20 09:39:58 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:25  time: 0.0923  data_time: 0.0015  memory: 1601  
09/20 09:40:13 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:06  time: 0.1663  data_time: 0.0014  memory: 17025  
09/20 09:40:25 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:47  time: 0.0957  data_time: 0.0016  memory: 17016  
09/20 09:40:36 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:28  time: 0.1282  data_time: 0.0014  memory: 17006  
09/20 09:40:45 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:10  time: 0.0966  data_time: 0.0017  memory: 17005  
09/20 09:40:52 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:51  time: 0.1680  data_time: 0.0016  memory: 805  
09/20 09:41:02 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:34  time: 0.1011  data_time: 0.0015  memory: 17028  
09/20 09:41:13 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:16  time: 0.0918  data_time: 0.0015  memory: 17009  
09/20 09:41:23 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0888  data_time: 0.0013  memory: 16957  
09/20 09:41:23 - mmengine - INFO - per class results:
09/20 09:41:23 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 41.27 | 50.05 |
|       building      | 57.83 | 86.61 |
|         sky         | 69.73 | 96.25 |
|        floor        | 47.99 | 72.49 |
|         tree        | 52.43 | 84.66 |
|       ceiling       | 59.69 | 69.36 |
|         road        | 56.12 | 75.54 |
|         bed         | 38.64 | 46.43 |
|      windowpane     | 27.38 | 41.72 |
|        grass        | 43.82 | 49.25 |
|       cabinet       | 19.11 | 36.93 |
|       sidewalk      | 33.28 | 42.02 |
|        person       | 42.61 | 78.61 |
|        earth        | 19.17 | 28.24 |
|         door        |  8.56 | 48.31 |
|        table        |  4.73 |  5.0  |
|       mountain      | 19.85 | 68.43 |
|        plant        | 31.41 | 45.44 |
|       curtain       | 31.04 | 62.18 |
|        chair        | 12.04 | 14.37 |
|         car         | 50.19 | 58.04 |
|        water        | 28.08 |  34.5 |
|       painting      |  22.2 | 24.02 |
|         sofa        |  14.2 | 15.38 |
|        shelf        | 11.64 | 13.67 |
|        house        |  2.4  |  2.53 |
|         sea         |  30.7 | 56.66 |
|        mirror       |  9.07 | 11.92 |
|         rug         |  0.15 |  0.15 |
|        field        | 15.76 | 39.41 |
|       armchair      |  4.98 |  5.51 |
|         seat        | 16.51 | 19.08 |
|        fence        |  8.94 |  15.6 |
|         desk        |  0.39 |  0.4  |
|         rock        |  5.88 |  6.7  |
|       wardrobe      | 14.95 | 33.94 |
|         lamp        | 28.41 | 42.13 |
|       bathtub       |  0.53 |  0.53 |
|       railing       | 11.47 | 28.72 |
|       cushion       | 13.82 | 15.29 |
|         base        |  7.86 | 19.12 |
|         box         |  3.86 |  4.36 |
|        column       | 12.87 | 16.14 |
|      signboard      | 14.21 | 21.12 |
|   chest of drawers  |  2.13 |  2.15 |
|       counter       |  0.03 |  0.03 |
|         sand        | 13.34 | 15.95 |
|         sink        | 19.21 | 21.44 |
|      skyscraper     | 26.96 | 33.47 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.77 |  0.77 |
|      grandstand     |  8.2  |  9.0  |
|         path        |  3.19 |  3.72 |
|        stairs       |  8.15 |  8.48 |
|        runway       | 34.23 | 40.32 |
|         case        | 22.31 | 31.52 |
|      pool table     |  0.01 |  0.01 |
|        pillow       |  9.28 |  9.96 |
|     screen door     |  0.81 |  0.81 |
|       stairway      |  5.67 |  8.24 |
|        river        |  0.38 |  0.4  |
|        bridge       |  2.32 |  2.38 |
|       bookcase      | 18.05 | 23.56 |
|        blind        | 22.13 | 27.64 |
|     coffee table    |  0.05 |  0.05 |
|        toilet       |  0.69 |  0.69 |
|        flower       | 10.91 | 12.48 |
|         book        | 16.23 | 36.49 |
|         hill        |  1.4  |  6.49 |
|        bench        |  1.27 |  1.27 |
|      countertop     |  0.94 |  0.94 |
|        stove        |  0.17 |  0.17 |
|         palm        |  2.27 |  2.28 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.98 |  0.98 |
|     swivel chair    |  1.18 |  1.19 |
|         boat        |  0.4  |  0.4  |
|         bar         |  0.9  |  0.93 |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.04 |  0.04 |
|         bus         |  0.03 |  0.03 |
|        towel        |  3.27 |  3.29 |
|        light        |  14.8 | 16.37 |
|        truck        |  0.13 |  0.13 |
|        tower        |  0.94 |  1.32 |
|      chandelier     |  3.83 |  3.87 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  6.95 |  7.61 |
|        booth        |  0.05 |  0.05 |
| television receiver |  0.08 |  0.08 |
|       airplane      | 10.13 | 10.42 |
|      dirt track     |  4.31 | 15.87 |
|       apparel       |  0.67 |  0.84 |
|         pole        | 10.26 | 25.94 |
|         land        |  2.16 |  2.76 |
|      bannister      |  1.03 |  1.21 |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       | 10.49 | 15.94 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  5.43 |  6.67 |
|        stage        |  1.08 |  1.16 |
|         van         |  0.54 |  0.54 |
|         ship        |  0.12 |  0.17 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.09 |  0.09 |
|        canopy       |  0.23 |  0.24 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  1.67 |  1.69 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.95 |  1.97 |
|        barrel       |  6.47 |  7.29 |
|        basket       |  1.49 |  1.52 |
|      waterfall      | 18.02 | 18.44 |
|         tent        | 18.27 | 18.42 |
|         bag         |  0.1  |  0.1  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  1.75 |  1.75 |
|         oven        |  0.0  |  0.0  |
|         ball        | 29.68 | 40.12 |
|         food        |  4.66 |  4.77 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.14 |  0.14 |
|      trade name     |  0.31 |  0.31 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  5.87 |  5.93 |
|        animal       |  0.58 |  0.58 |
|       bicycle       |  9.72 |  9.9  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  2.64 |  2.68 |
|       blanket       |  0.23 |  0.23 |
|      sculpture      |  0.81 |  0.85 |
|         hood        |  0.0  |  0.0  |
|        sconce       |  8.79 |  9.52 |
|         vase        | 12.34 | 15.21 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  1.62 |  1.77 |
|        ashcan       |  1.5  |  1.52 |
|         fan         |  0.81 |  0.81 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        | 15.49 | 18.57 |
|       monitor       |  0.11 |  0.11 |
|    bulletin board   |  0.19 |  0.19 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  5.73 |  5.75 |
|        glass        |  6.13 |  7.8  |
|        clock        | 11.63 | 14.14 |
|         flag        |  0.19 |  0.2  |
+---------------------+-------+-------+
09/20 09:41:23 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 55.5900  mIoU: 10.1700  mAcc: 14.6500  data_time: 0.0016  time: 0.3341
Finished processing corruption type: contrast
Processing corruption type: elastic_transform
09/20 09:41:26 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2102111239
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2102111239
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 09:41:26 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/elastic_transform'

09/20 09:41:30 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 09:41:30 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 09:41:31 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 09:41:31 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 09:43:46 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:27:42  time: 1.8932  data_time: 0.0016  memory: 17245  
09/20 09:45:21 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:12:48  time: 2.0740  data_time: 0.0016  memory: 17025  
09/20 09:46:32 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 1:01:48  time: 1.5107  data_time: 0.0016  memory: 17018  
09/20 09:47:54 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:57:28  time: 1.5426  data_time: 0.0016  memory: 17027  
09/20 09:49:11 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:53:38  time: 1.3104  data_time: 0.0015  memory: 17026  
09/20 09:50:21 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:50:02  time: 1.0414  data_time: 0.0016  memory: 17021  
09/20 09:51:41 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:47:52  time: 1.3315  data_time: 0.0015  memory: 17026  
09/20 09:52:52 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:45:21  time: 1.5115  data_time: 0.0018  memory: 17023  
09/20 09:53:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:41:56  time: 1.0325  data_time: 0.0015  memory: 16947  
09/20 09:54:39 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:39:22  time: 0.9956  data_time: 0.0016  memory: 17006  
09/20 09:55:41 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:37:20  time: 1.4566  data_time: 0.0018  memory: 17025  
09/20 09:56:36 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:35:09  time: 1.1908  data_time: 0.0016  memory: 16953  
09/20 09:57:40 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:33:31  time: 1.4711  data_time: 0.0014  memory: 17027  
09/20 09:58:50 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:32:09  time: 1.0584  data_time: 0.0016  memory: 17028  
09/20 10:00:01 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:30:49  time: 1.9564  data_time: 0.0015  memory: 17030  
09/20 10:00:54 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:29:04  time: 1.0489  data_time: 0.0017  memory: 17018  
09/20 10:01:47 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:27:25  time: 1.0297  data_time: 0.0017  memory: 805  
09/20 10:02:38 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:25:47  time: 1.0089  data_time: 0.0015  memory: 16943  
09/20 10:03:44 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:24:33  time: 1.2485  data_time: 0.0016  memory: 17024  
09/20 10:04:40 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:23:08  time: 0.9615  data_time: 0.0015  memory: 17002  
09/20 10:05:44 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:21:54  time: 1.6481  data_time: 0.0016  memory: 17028  
09/20 10:06:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:20:37  time: 1.0639  data_time: 0.0016  memory: 17015  
09/20 10:07:37 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:19:17  time: 1.1327  data_time: 0.0015  memory: 17008  
09/20 10:08:29 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:17:58  time: 1.0250  data_time: 0.0016  memory: 1918  
09/20 10:09:25 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:16:43  time: 1.1715  data_time: 0.0016  memory: 17018  
09/20 10:10:12 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:15:26  time: 1.0710  data_time: 0.0015  memory: 1557  
09/20 10:11:04 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:14:13  time: 0.8988  data_time: 0.0015  memory: 17003  
09/20 10:12:08 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:13:06  time: 1.4141  data_time: 0.0015  memory: 17022  
09/20 10:13:00 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:11:56  time: 1.4674  data_time: 0.0015  memory: 17010  
09/20 10:13:49 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:45  time: 0.9158  data_time: 0.0015  memory: 829  
09/20 10:14:43 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:38  time: 1.0946  data_time: 0.0017  memory: 16952  
09/20 10:15:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:08:30  time: 0.9871  data_time: 0.0015  memory: 1601  
09/20 10:16:31 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:25  time: 0.9285  data_time: 0.0013  memory: 17025  
09/20 10:17:29 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:20  time: 1.0009  data_time: 0.0016  memory: 17016  
09/20 10:18:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:16  time: 1.0113  data_time: 0.0014  memory: 17006  
09/20 10:19:16 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:11  time: 1.0054  data_time: 0.0016  memory: 17005  
09/20 10:20:06 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:07  time: 1.0049  data_time: 0.0016  memory: 805  
09/20 10:20:57 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:04  time: 0.9753  data_time: 0.0015  memory: 17028  
09/20 10:21:52 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:02  time: 0.9596  data_time: 0.0014  memory: 17009  
09/20 10:22:44 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9253  data_time: 0.0014  memory: 16957  
09/20 10:22:44 - mmengine - INFO - per class results:
09/20 10:22:44 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 38.38 | 47.15 |
|       building      | 54.11 | 84.86 |
|         sky         | 71.75 | 91.63 |
|        floor        | 47.16 | 70.54 |
|         tree        | 49.08 | 77.77 |
|       ceiling       | 54.04 | 67.93 |
|         road        | 55.73 | 82.73 |
|         bed         | 38.36 | 43.57 |
|      windowpane     | 24.48 | 58.36 |
|        grass        | 43.16 |  50.1 |
|       cabinet       | 19.98 | 33.79 |
|       sidewalk      |  28.3 | 33.62 |
|        person       | 35.48 | 75.79 |
|        earth        | 17.81 | 23.23 |
|         door        |  8.19 | 35.42 |
|        table        |  9.03 |  10.5 |
|       mountain      | 28.67 | 61.03 |
|        plant        | 29.19 | 54.39 |
|       curtain       | 23.15 | 53.83 |
|        chair        | 15.52 | 21.37 |
|         car         | 43.93 | 53.48 |
|        water        | 28.07 | 33.26 |
|       painting      |  19.2 | 23.75 |
|         sofa        | 16.21 | 18.18 |
|        shelf        |  12.6 | 15.29 |
|        house        |  4.92 |  5.48 |
|         sea         | 35.51 |  70.9 |
|        mirror       | 13.31 | 19.44 |
|         rug         |  1.37 |  1.38 |
|        field        | 16.05 | 44.25 |
|       armchair      |  3.13 |  3.36 |
|         seat        | 17.94 | 24.33 |
|        fence        |  8.14 | 13.81 |
|         desk        |  4.39 |  4.56 |
|         rock        | 12.11 |  18.3 |
|       wardrobe      | 17.37 | 31.74 |
|         lamp        | 14.36 | 28.84 |
|       bathtub       |  2.08 |  2.1  |
|       railing       | 10.22 | 25.48 |
|       cushion       | 14.24 | 17.13 |
|         base        |  6.7  | 15.15 |
|         box         |  3.41 |  3.87 |
|        column       |  8.48 | 10.92 |
|      signboard      |  9.96 | 14.81 |
|   chest of drawers  |  2.11 |  2.18 |
|       counter       |  0.26 |  0.27 |
|         sand        | 17.37 |  22.1 |
|         sink        |  14.2 | 16.41 |
|      skyscraper     | 25.16 |  32.6 |
|      fireplace      |  0.12 |  0.12 |
|     refrigerator    |  2.34 |  2.34 |
|      grandstand     |  12.9 | 14.89 |
|         path        |  6.01 |  8.52 |
|        stairs       |  7.28 |  7.67 |
|        runway       | 39.38 |  44.0 |
|         case        | 24.29 | 37.75 |
|      pool table     |  4.78 |  4.81 |
|        pillow       |  9.77 | 10.49 |
|     screen door     |  0.65 |  0.65 |
|       stairway      |  7.04 | 10.01 |
|        river        |  1.94 |  2.93 |
|        bridge       |  3.67 |  3.74 |
|       bookcase      |  15.0 | 31.07 |
|        blind        | 18.99 | 20.88 |
|     coffee table    |  0.07 |  0.07 |
|        toilet       |  3.31 |  3.36 |
|        flower       | 13.19 | 23.49 |
|         book        |  9.2  | 30.06 |
|         hill        |  1.98 |  5.7  |
|        bench        |  2.16 |  2.18 |
|      countertop     |  1.18 |  1.19 |
|        stove        |  1.98 |  1.98 |
|         palm        |  3.7  |  3.86 |
|    kitchen island   |  0.09 |  0.09 |
|       computer      |  2.54 |  2.57 |
|     swivel chair    |  4.36 |  4.42 |
|         boat        |  2.66 |  2.79 |
|         bar         |  2.77 |  2.93 |
|    arcade machine   |  0.01 |  0.01 |
|        hovel        |  1.34 |  1.35 |
|         bus         |  1.06 |  1.06 |
|        towel        |  2.3  |  2.33 |
|        light        |  3.48 |  4.52 |
|        truck        |  0.16 |  0.16 |
|        tower        |  1.12 |  1.76 |
|      chandelier     |  5.88 |  6.11 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  2.61 |  3.12 |
|        booth        |  0.05 |  0.05 |
| television receiver |  3.31 |  3.32 |
|       airplane      | 19.03 | 21.72 |
|      dirt track     |  3.97 |  16.0 |
|       apparel       |  8.73 |  11.6 |
|         pole        |  3.79 |  12.2 |
|         land        |  0.2  |  0.25 |
|      bannister      |  0.42 |  0.6  |
|      escalator      |  2.27 |  2.28 |
|       ottoman       |  0.05 |  0.05 |
|        bottle       |  5.87 | 12.63 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  4.02 |  4.56 |
|        stage        |  1.21 |  1.38 |
|         van         |  1.01 |  1.01 |
|         ship        |  0.08 |  0.12 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  1.06 |  1.06 |
|        canopy       |  1.98 |  2.1  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  2.04 |  2.23 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.94 |  2.03 |
|        barrel       |  4.77 | 13.68 |
|        basket       |  2.54 |  2.71 |
|      waterfall      | 31.51 |  37.8 |
|         tent        | 48.75 | 51.61 |
|         bag         |  0.25 |  0.26 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  1.04 |  1.05 |
|         oven        |  0.1  |  0.1  |
|         ball        | 34.01 | 62.41 |
|         food        | 12.38 | 13.12 |
|         step        |  0.01 |  0.01 |
|         tank        |  5.57 |  5.6  |
|      trade name     |  1.23 |  1.26 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  5.27 |  5.63 |
|        animal       |  1.47 |  1.47 |
|       bicycle       | 16.99 | 18.28 |
|         lake        |  0.32 |  0.32 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  4.19 |  4.41 |
|       blanket       |  0.63 |  0.64 |
|      sculpture      |  1.57 |  1.77 |
|         hood        |  0.49 |  0.49 |
|        sconce       |  3.94 |  4.81 |
|         vase        |  6.48 | 12.06 |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  1.14 |  1.42 |
|        ashcan       |  1.67 |  1.7  |
|         fan         |  0.26 |  0.26 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.3  |  0.41 |
|        plate        | 16.17 | 27.31 |
|       monitor       |  0.5  |  0.52 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  2.85 |  2.85 |
|        glass        |  5.06 |  8.18 |
|        clock        |  6.18 | 10.16 |
|         flag        |  0.02 |  0.02 |
+---------------------+-------+-------+
09/20 10:22:44 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 54.2900  mIoU: 10.5000  mAcc: 15.6200  data_time: 0.0017  time: 1.2361
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/20 10:22:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 83146410
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 83146410
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 10:22:47 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/pixelate'

09/20 10:22:51 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 10:22:51 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 10:22:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 10:22:52 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 10:24:13 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:52:51  time: 0.8229  data_time: 0.0015  memory: 17245  
09/20 10:24:58 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:59  time: 0.9968  data_time: 0.0017  memory: 17025  
09/20 10:25:21 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:38  time: 0.4891  data_time: 0.0015  memory: 17018  
09/20 10:25:57 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:48  time: 0.6138  data_time: 0.0016  memory: 17027  
09/20 10:26:28 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:13  time: 0.4176  data_time: 0.0014  memory: 17026  
09/20 10:26:53 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:44  time: 0.0959  data_time: 0.0016  memory: 17021  
09/20 10:27:25 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:26  time: 0.4130  data_time: 0.0016  memory: 17026  
09/20 10:27:48 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:45  time: 0.4891  data_time: 0.0015  memory: 17023  
09/20 10:27:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:29  time: 0.1977  data_time: 0.0015  memory: 16947  
09/20 10:28:07 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:46  time: 0.0880  data_time: 0.0015  memory: 17006  
09/20 10:28:20 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:24  time: 0.5001  data_time: 0.0016  memory: 17025  
09/20 10:28:28 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:04  time: 0.2797  data_time: 0.0016  memory: 16953  
09/20 10:28:46 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:15  time: 0.5485  data_time: 0.0013  memory: 17027  
09/20 10:29:07 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:36  time: 0.1204  data_time: 0.0016  memory: 17028  
09/20 10:29:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:00  time: 0.9876  data_time: 0.0015  memory: 17030  
09/20 10:29:36 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:06  time: 0.0860  data_time: 0.0017  memory: 17018  
09/20 10:29:41 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:13  time: 0.0847  data_time: 0.0016  memory: 805  
09/20 10:29:48 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:28  time: 0.1891  data_time: 0.0014  memory: 16943  
09/20 10:30:07 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:00  time: 0.2938  data_time: 0.0015  memory: 17024  
09/20 10:30:18 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:25  time: 0.0823  data_time: 0.0015  memory: 17002  
09/20 10:30:33 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:57  time: 0.6195  data_time: 0.0015  memory: 17028  
09/20 10:30:45 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:27  time: 0.0860  data_time: 0.0015  memory: 17015  
09/20 10:30:54 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:56  time: 0.1908  data_time: 0.0016  memory: 17008  
09/20 10:30:58 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:24  time: 0.0843  data_time: 0.0014  memory: 1918  
09/20 10:31:08 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:57  time: 0.1940  data_time: 0.0014  memory: 17018  
09/20 10:31:12 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:29  time: 0.0845  data_time: 0.0015  memory: 1557  
09/20 10:31:19 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:04  time: 0.0823  data_time: 0.0015  memory: 17003  
09/20 10:31:39 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:45  time: 0.4865  data_time: 0.0014  memory: 17022  
09/20 10:31:48 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:23  time: 0.4602  data_time: 0.0014  memory: 17010  
09/20 10:31:52 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:00  time: 0.0795  data_time: 0.0014  memory: 829  
09/20 10:31:58 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:38  time: 0.0870  data_time: 0.0015  memory: 16952  
09/20 10:32:03 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:17  time: 0.0857  data_time: 0.0016  memory: 1601  
09/20 10:32:14 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:59  time: 0.0784  data_time: 0.0014  memory: 17025  
09/20 10:32:25 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:41  time: 0.0851  data_time: 0.0016  memory: 17016  
09/20 10:32:35 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:23  time: 0.0905  data_time: 0.0015  memory: 17006  
09/20 10:32:42 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:05  time: 0.0859  data_time: 0.0016  memory: 17005  
09/20 10:32:46 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:48  time: 0.0850  data_time: 0.0016  memory: 805  
09/20 10:32:54 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:31  time: 0.0898  data_time: 0.0014  memory: 17028  
09/20 10:33:04 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.0823  data_time: 0.0016  memory: 17009  
09/20 10:33:12 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0797  data_time: 0.0013  memory: 16957  
09/20 10:33:12 - mmengine - INFO - per class results:
09/20 10:33:12 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 48.54 | 61.43 |
|       building      | 62.56 |  88.9 |
|         sky         | 81.16 | 96.62 |
|        floor        | 52.71 | 78.26 |
|         tree        | 56.94 | 81.76 |
|       ceiling       | 64.66 |  77.7 |
|         road        | 56.32 |  88.8 |
|         bed         |  37.2 | 40.23 |
|      windowpane     | 31.01 | 62.98 |
|        grass        | 47.01 | 53.58 |
|       cabinet       | 23.34 | 40.65 |
|       sidewalk      | 32.18 | 37.91 |
|        person       |  46.3 | 79.87 |
|        earth        |  21.0 |  27.4 |
|         door        |  9.96 | 44.07 |
|        table        | 11.17 | 12.59 |
|       mountain      | 34.21 | 62.51 |
|        plant        |  34.6 | 61.81 |
|       curtain       | 31.72 | 61.39 |
|        chair        | 18.42 | 23.89 |
|         car         | 54.14 | 59.33 |
|        water        | 35.67 | 44.72 |
|       painting      | 24.59 | 27.35 |
|         sofa        | 18.27 | 19.83 |
|        shelf        | 14.12 | 16.29 |
|        house        |  8.4  |  9.3  |
|         sea         | 40.87 | 79.98 |
|        mirror       | 10.22 | 12.67 |
|         rug         |  1.06 |  1.06 |
|        field        | 14.65 | 40.55 |
|       armchair      |  2.52 |  2.67 |
|         seat        | 22.07 |  32.0 |
|        fence        | 12.38 | 20.57 |
|         desk        |  3.48 |  3.57 |
|         rock        | 11.35 | 16.51 |
|       wardrobe      |  20.5 | 31.15 |
|         lamp        | 28.22 | 43.32 |
|       bathtub       |  2.35 |  2.36 |
|       railing       | 15.85 | 28.24 |
|       cushion       | 17.67 | 19.56 |
|         base        |  6.91 | 12.18 |
|         box         |  5.67 |  6.74 |
|        column       | 14.23 | 16.51 |
|      signboard      | 14.51 | 19.58 |
|   chest of drawers  |  4.2  |  4.34 |
|       counter       |  0.65 |  0.67 |
|         sand        |  20.9 |  27.5 |
|         sink        | 22.52 |  26.0 |
|      skyscraper     | 29.15 | 34.16 |
|      fireplace      |  0.08 |  0.08 |
|     refrigerator    |  4.38 |  4.39 |
|      grandstand     | 30.92 | 39.68 |
|         path        |  6.85 |  8.81 |
|        stairs       | 11.53 | 12.83 |
|        runway       | 43.39 | 50.81 |
|         case        | 26.52 | 36.88 |
|      pool table     |  5.57 |  5.59 |
|        pillow       | 12.52 | 13.32 |
|     screen door     |  0.34 |  0.34 |
|       stairway      |  8.95 | 14.73 |
|        river        |  1.31 |  1.57 |
|        bridge       |  3.67 |  3.79 |
|       bookcase      |  21.8 | 40.23 |
|        blind        | 25.13 | 28.66 |
|     coffee table    |  0.04 |  0.04 |
|        toilet       |  4.48 |  4.52 |
|        flower       | 14.72 | 21.42 |
|         book        | 13.69 | 43.68 |
|         hill        |  3.84 |  9.26 |
|        bench        |  2.62 |  2.65 |
|      countertop     |  1.99 |  1.99 |
|        stove        |  2.12 |  2.13 |
|         palm        |  3.42 |  3.48 |
|    kitchen island   |  0.31 |  0.31 |
|       computer      |  1.47 |  1.48 |
|     swivel chair    |  4.17 |  4.33 |
|         boat        |  6.97 |  7.07 |
|         bar         |  5.12 |  5.54 |
|    arcade machine   |  0.27 |  0.27 |
|        hovel        |  2.71 |  2.72 |
|         bus         |  1.01 |  1.02 |
|        towel        |  2.85 |  2.86 |
|        light        |  16.3 | 17.97 |
|        truck        |  0.87 |  0.93 |
|        tower        |  2.16 |  2.75 |
|      chandelier     |  6.87 |  6.97 |
|        awning       |  0.03 |  0.03 |
|     streetlight     |  6.59 |  7.16 |
|        booth        |  0.02 |  0.02 |
| television receiver |  3.72 |  3.72 |
|       airplane      | 18.77 | 19.38 |
|      dirt track     |  6.76 | 27.04 |
|       apparel       |  6.13 |  8.25 |
|         pole        | 10.25 |  28.5 |
|         land        |  0.77 |  1.0  |
|      bannister      |  0.91 |  1.15 |
|      escalator      |  7.11 |  7.23 |
|       ottoman       |  0.09 |  0.09 |
|        bottle       |  9.77 |  25.8 |
|        buffet       |  0.1  |  0.1  |
|        poster       |  3.7  |  4.17 |
|        stage        |  3.2  |  3.93 |
|         van         |  0.37 |  0.38 |
|         ship        |  0.29 |  0.38 |
|       fountain      |  0.05 |  0.05 |
|    conveyer belt    |  3.02 |  3.02 |
|        canopy       |  0.93 |  0.95 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  2.06 |  2.13 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.56 |  1.61 |
|        barrel       |  3.78 | 21.31 |
|        basket       |  3.04 |  3.16 |
|      waterfall      | 30.97 | 34.92 |
|         tent        |  39.5 | 39.78 |
|         bag         |  0.68 |  0.72 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.51 |  0.51 |
|         oven        |  0.19 |  0.19 |
|         ball        | 34.08 | 63.33 |
|         food        |  10.1 | 10.47 |
|         step        |  0.0  |  0.0  |
|         tank        |  1.41 |  1.41 |
|      trade name     |  1.63 |  1.66 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  8.89 |  9.15 |
|        animal       |  1.63 |  1.63 |
|       bicycle       | 21.87 | 22.61 |
|         lake        |  0.04 |  0.04 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  3.89 |  4.07 |
|       blanket       |  0.63 |  0.63 |
|      sculpture      |  1.78 |  1.97 |
|         hood        |  0.41 |  0.41 |
|        sconce       |  8.84 |  9.66 |
|         vase        | 13.37 | 21.04 |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  3.0  |  3.73 |
|        ashcan       |  2.73 |  2.77 |
|         fan         |  0.52 |  0.52 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.84 |  1.03 |
|        plate        | 22.57 | 32.83 |
|       monitor       |  1.05 |  1.06 |
|    bulletin board   |  1.53 |  1.58 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  3.07 |  3.08 |
|        glass        |  8.57 | 13.26 |
|        clock        | 13.95 | 17.59 |
|         flag        |  0.58 |  0.58 |
+---------------------+-------+-------+
09/20 10:33:12 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 60.5000  mIoU: 12.7400  mAcc: 18.1300  data_time: 0.0016  time: 0.3103
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/20 10:33:16 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1494956933
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1494956933
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 10:33:16 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/jpeg_compression'

09/20 10:33:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 10:33:20 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 10:33:20 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 10:33:20 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 10:34:41 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:52:36  time: 0.8283  data_time: 0.0015  memory: 17245  
09/20 10:35:25 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:39:35  time: 0.9962  data_time: 0.0016  memory: 17025  
09/20 10:35:48 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:25  time: 0.4903  data_time: 0.0014  memory: 17018  
09/20 10:36:23 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:22  time: 0.5975  data_time: 0.0015  memory: 17027  
09/20 10:36:54 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:24:55  time: 0.4439  data_time: 0.0015  memory: 17026  
09/20 10:37:19 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:30  time: 0.1012  data_time: 0.0014  memory: 17021  
09/20 10:37:53 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:22  time: 0.4169  data_time: 0.0014  memory: 17026  
09/20 10:38:16 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:42  time: 0.4910  data_time: 0.0014  memory: 17023  
09/20 10:38:26 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:30  time: 0.2696  data_time: 0.0014  memory: 16947  
09/20 10:38:37 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:48  time: 0.0943  data_time: 0.0014  memory: 17006  
09/20 10:38:49 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:27  time: 0.5036  data_time: 0.0015  memory: 17025  
09/20 10:38:58 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:06  time: 0.2666  data_time: 0.0016  memory: 16953  
09/20 10:39:15 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:16  time: 0.5003  data_time: 0.0013  memory: 17027  
09/20 10:39:36 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:36  time: 0.1018  data_time: 0.0015  memory: 17028  
09/20 10:39:57 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:00  time: 0.9858  data_time: 0.0014  memory: 17030  
09/20 10:40:05 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:07  time: 0.0910  data_time: 0.0016  memory: 17018  
09/20 10:40:10 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:13  time: 0.0908  data_time: 0.0015  memory: 805  
09/20 10:40:18 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:29  time: 0.1933  data_time: 0.0014  memory: 16943  
09/20 10:40:36 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:01  time: 0.2970  data_time: 0.0015  memory: 17024  
09/20 10:40:47 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:26  time: 0.0863  data_time: 0.0014  memory: 17002  
09/20 10:41:03 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:58  time: 0.6018  data_time: 0.0014  memory: 17028  
09/20 10:41:15 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:28  time: 0.0908  data_time: 0.0015  memory: 17015  
09/20 10:41:24 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:57  time: 0.1959  data_time: 0.0016  memory: 17008  
09/20 10:41:29 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:25  time: 0.0889  data_time: 0.0014  memory: 1918  
09/20 10:41:38 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:58  time: 0.1985  data_time: 0.0014  memory: 17018  
09/20 10:41:43 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:30  time: 0.0895  data_time: 0.0014  memory: 1557  
09/20 10:41:50 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:05  time: 0.0884  data_time: 0.0014  memory: 17003  
09/20 10:42:10 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:46  time: 0.4910  data_time: 0.0014  memory: 17022  
09/20 10:42:18 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:24  time: 0.4196  data_time: 0.0014  memory: 17010  
09/20 10:42:23 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:00  time: 0.0851  data_time: 0.0014  memory: 829  
09/20 10:42:29 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:39  time: 0.0924  data_time: 0.0013  memory: 16952  
09/20 10:42:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:18  time: 0.1147  data_time: 0.0016  memory: 1601  
09/20 10:42:46 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:59  time: 0.0831  data_time: 0.0013  memory: 17025  
09/20 10:42:57 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:41  time: 0.0902  data_time: 0.0015  memory: 17016  
09/20 10:43:07 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:23  time: 0.0952  data_time: 0.0014  memory: 17006  
09/20 10:43:14 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:05  time: 0.0914  data_time: 0.0016  memory: 17005  
09/20 10:43:19 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:48  time: 0.0918  data_time: 0.0016  memory: 805  
09/20 10:43:27 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:31  time: 0.0964  data_time: 0.0016  memory: 17028  
09/20 10:43:37 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.1467  data_time: 0.0015  memory: 17009  
09/20 10:43:46 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0840  data_time: 0.0012  memory: 16957  
09/20 10:43:46 - mmengine - INFO - per class results:
09/20 10:43:46 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  44.5 | 58.36 |
|       building      | 61.92 | 84.07 |
|         sky         |  76.2 | 96.35 |
|        floor        |  46.4 | 75.44 |
|         tree        | 55.19 | 81.15 |
|       ceiling       | 56.86 | 67.34 |
|         road        | 54.12 | 86.11 |
|         bed         | 26.28 | 27.63 |
|      windowpane     | 28.51 | 58.28 |
|        grass        | 35.82 | 39.31 |
|       cabinet       | 19.45 | 30.67 |
|       sidewalk      | 21.92 | 25.05 |
|        person       | 44.63 | 76.39 |
|        earth        | 20.54 | 30.51 |
|         door        |  7.75 | 49.04 |
|        table        |  7.19 |  7.78 |
|       mountain      | 30.68 | 65.32 |
|        plant        | 33.89 | 64.08 |
|       curtain       | 27.91 | 52.33 |
|        chair        | 12.17 | 14.24 |
|         car         | 51.08 | 55.34 |
|        water        | 32.55 | 42.21 |
|       painting      | 18.26 |  19.3 |
|         sofa        | 10.65 | 11.09 |
|        shelf        | 10.92 | 12.64 |
|        house        |  8.95 | 10.21 |
|         sea         | 32.69 | 63.06 |
|        mirror       |  6.86 |  7.93 |
|         rug         |  0.46 |  0.46 |
|        field        | 13.64 | 41.39 |
|       armchair      |  1.32 |  1.37 |
|         seat        | 20.11 | 29.22 |
|        fence        | 11.04 | 20.34 |
|         desk        |  2.11 |  2.16 |
|         rock        |  9.8  | 14.14 |
|       wardrobe      | 12.64 | 21.89 |
|         lamp        | 24.33 | 31.72 |
|       bathtub       |  0.13 |  0.13 |
|       railing       | 14.19 |  22.7 |
|       cushion       |  11.6 | 12.34 |
|         base        |  5.95 |  9.15 |
|         box         |  3.67 |  4.15 |
|        column       | 13.71 | 15.92 |
|      signboard      |  14.2 | 18.52 |
|   chest of drawers  |  0.45 |  0.45 |
|       counter       |  0.31 |  0.32 |
|         sand        | 12.17 | 16.64 |
|         sink        | 15.35 | 17.07 |
|      skyscraper     | 23.59 | 28.23 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  2.29 |  2.3  |
|      grandstand     | 22.24 | 27.41 |
|         path        |  6.95 | 10.42 |
|        stairs       | 12.94 | 14.29 |
|        runway       | 27.39 | 29.17 |
|         case        |  21.9 | 29.05 |
|      pool table     |  1.64 |  1.64 |
|        pillow       |  8.34 |  8.72 |
|     screen door     |  0.04 |  0.04 |
|       stairway      |  8.4  | 12.66 |
|        river        |  0.34 |  0.41 |
|        bridge       |  2.13 |  2.14 |
|       bookcase      | 21.95 | 33.52 |
|        blind        | 18.47 | 21.15 |
|     coffee table    |  0.04 |  0.04 |
|        toilet       |  3.77 |  3.82 |
|        flower       | 15.45 | 21.23 |
|         book        | 15.63 | 36.78 |
|         hill        |  2.24 |  4.15 |
|        bench        |  1.86 |  1.87 |
|      countertop     |  0.28 |  0.29 |
|        stove        |  1.83 |  1.83 |
|         palm        |  3.31 |  3.32 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  1.71 |  1.71 |
|     swivel chair    |  1.21 |  1.22 |
|         boat        |  4.57 |  4.64 |
|         bar         |  2.27 |  2.39 |
|    arcade machine   |  0.07 |  0.07 |
|        hovel        |  2.56 |  2.58 |
|         bus         |  0.88 |  0.88 |
|        towel        |  1.2  |  1.2  |
|        light        | 11.42 | 12.15 |
|        truck        |  0.81 |  0.87 |
|        tower        |  1.49 |  2.14 |
|      chandelier     |  9.14 |  9.33 |
|        awning       |  0.05 |  0.05 |
|     streetlight     |  4.57 |  4.76 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.97 |  0.97 |
|       airplane      |  9.88 |  10.0 |
|      dirt track     |  3.4  | 18.68 |
|       apparel       |  5.24 |  7.37 |
|         pole        |  9.38 | 24.39 |
|         land        |  0.56 |  0.78 |
|      bannister      |  1.03 |  1.26 |
|      escalator      |  0.49 |  0.49 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       | 11.68 | 22.91 |
|        buffet       |  0.12 |  0.12 |
|        poster       |  0.76 |  0.84 |
|        stage        |  2.54 |  2.68 |
|         van         |  0.3  |  0.31 |
|         ship        |  0.05 |  0.06 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.23 |  0.23 |
|        canopy       |  0.4  |  0.41 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  1.51 |  1.54 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.84 |  1.87 |
|        barrel       |  1.53 |  7.74 |
|        basket       |  2.06 |  2.15 |
|      waterfall      | 26.72 | 28.72 |
|         tent        | 21.38 |  21.5 |
|         bag         |  0.34 |  0.36 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.44 |  0.44 |
|         oven        |  0.0  |  0.0  |
|         ball        | 33.83 |  60.1 |
|         food        |  9.38 |  9.75 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.29 |  0.29 |
|      trade name     |  1.78 |  1.81 |
|      microwave      |  0.01 |  0.01 |
|         pot         |  7.98 |  8.24 |
|        animal       |  1.23 |  1.23 |
|       bicycle       | 24.17 | 24.89 |
|         lake        |  0.08 |  0.08 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  1.24 |  1.27 |
|       blanket       |  0.18 |  0.18 |
|      sculpture      |  3.35 |  3.63 |
|         hood        |  0.29 |  0.29 |
|        sconce       |  7.08 |  7.52 |
|         vase        |  9.88 | 13.47 |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  2.41 |  2.78 |
|        ashcan       |  2.15 |  2.17 |
|         fan         |  0.15 |  0.15 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.78 |  0.9  |
|        plate        | 19.31 | 25.85 |
|       monitor       |  1.2  |  1.21 |
|    bulletin board   |  0.61 |  0.62 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.86 |  0.86 |
|        glass        |  6.94 |  9.55 |
|        clock        | 12.19 | 14.43 |
|         flag        |  0.64 |  0.64 |
+---------------------+-------+-------+
09/20 10:43:46 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 56.5200  mIoU: 10.5800  mAcc: 15.1800  data_time: 0.0016  time: 0.3125
Finished processing corruption type: jpeg_compression
Processing corruption type: elastic_transform
09/20 10:43:49 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 828183084
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 828183084
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 10:43:49 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='elastic_transform',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/elastic_transform'

09/20 10:43:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 10:43:53 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 10:43:53 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 10:43:54 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 10:46:02 - mmengine - INFO - Iter(test) [  50/2000]    eta: 1:23:17  time: 1.8195  data_time: 0.0016  memory: 17245  
09/20 10:47:32 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 1:09:01  time: 1.9760  data_time: 0.0017  memory: 17025  
09/20 10:48:41 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:59:02  time: 1.4556  data_time: 0.0016  memory: 17018  
09/20 10:50:05 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:55:43  time: 1.5398  data_time: 0.0016  memory: 17027  
09/20 10:51:27 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:52:51  time: 1.4352  data_time: 0.0015  memory: 17026  
09/20 10:52:40 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:49:39  time: 1.1164  data_time: 0.0017  memory: 17021  
09/20 10:54:02 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:47:49  time: 1.3830  data_time: 0.0015  memory: 17026  
09/20 10:55:15 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:45:25  time: 1.4645  data_time: 0.0014  memory: 17023  
09/20 10:56:05 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:41:59  time: 1.0458  data_time: 0.0037  memory: 16947  
09/20 10:57:03 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:39:27  time: 1.0211  data_time: 0.0015  memory: 17006  
09/20 10:58:07 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:37:28  time: 1.5101  data_time: 0.0015  memory: 17025  
09/20 10:59:01 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:35:16  time: 1.2200  data_time: 0.0017  memory: 16953  
09/20 11:00:05 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:33:38  time: 1.4531  data_time: 0.0014  memory: 17027  
09/20 11:01:16 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:32:16  time: 1.0980  data_time: 0.0016  memory: 17028  
09/20 11:02:28 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:30:56  time: 1.9741  data_time: 0.0015  memory: 17030  
09/20 11:03:23 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:29:13  time: 1.0231  data_time: 0.0016  memory: 17018  
09/20 11:04:14 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:27:31  time: 1.0392  data_time: 0.0017  memory: 805  
09/20 11:05:07 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:25:56  time: 1.0408  data_time: 0.0015  memory: 16943  
09/20 11:06:15 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:24:42  time: 1.1983  data_time: 0.0016  memory: 17024  
09/20 11:07:11 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:23:16  time: 0.9756  data_time: 0.0015  memory: 17002  
09/20 11:08:15 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:22:01  time: 1.5827  data_time: 0.0015  memory: 17028  
09/20 11:09:14 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:20:44  time: 0.9986  data_time: 0.0016  memory: 17015  
09/20 11:10:10 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:19:24  time: 1.1730  data_time: 0.0015  memory: 17008  
09/20 11:11:02 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:18:05  time: 1.0015  data_time: 0.0015  memory: 1918  
09/20 11:11:56 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:16:49  time: 1.1286  data_time: 0.0015  memory: 17018  
09/20 11:12:45 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:15:32  time: 1.0163  data_time: 0.0015  memory: 1557  
09/20 11:13:40 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:14:20  time: 0.9502  data_time: 0.0015  memory: 17003  
09/20 11:14:47 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:13:14  time: 1.5297  data_time: 0.0015  memory: 17022  
09/20 11:15:41 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:12:03  time: 1.3811  data_time: 0.0016  memory: 17010  
09/20 11:16:30 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:10:51  time: 0.9249  data_time: 0.0015  memory: 829  
09/20 11:17:24 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:09:43  time: 1.0272  data_time: 0.0015  memory: 16952  
09/20 11:18:13 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:08:34  time: 0.9876  data_time: 0.0016  memory: 1601  
09/20 11:19:11 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:07:29  time: 0.9170  data_time: 0.0014  memory: 17025  
09/20 11:20:09 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:06:23  time: 1.0390  data_time: 0.0017  memory: 17016  
09/20 11:21:06 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:05:18  time: 0.9882  data_time: 0.0015  memory: 17006  
09/20 11:21:57 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:04:13  time: 1.0146  data_time: 0.0017  memory: 17005  
09/20 11:22:48 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:03:09  time: 0.9974  data_time: 0.0016  memory: 805  
09/20 11:23:39 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:02:05  time: 0.9662  data_time: 0.0016  memory: 17028  
09/20 11:24:35 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:01:02  time: 1.0112  data_time: 0.0015  memory: 17009  
09/20 11:25:27 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.9046  data_time: 0.0014  memory: 16957  
09/20 11:25:27 - mmengine - INFO - per class results:
09/20 11:25:27 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 38.36 | 47.39 |
|       building      | 54.28 | 84.25 |
|         sky         | 72.26 | 91.72 |
|        floor        | 47.31 | 71.51 |
|         tree        | 48.31 | 76.71 |
|       ceiling       | 54.46 | 68.02 |
|         road        | 55.16 | 81.44 |
|         bed         | 37.37 | 42.51 |
|      windowpane     | 24.61 | 58.64 |
|        grass        |  40.4 | 47.53 |
|       cabinet       | 20.08 | 34.15 |
|       sidewalk      | 28.98 | 34.71 |
|        person       | 35.73 | 76.22 |
|        earth        |  16.8 | 22.01 |
|         door        |  8.63 | 37.27 |
|        table        |  9.49 | 11.12 |
|       mountain      | 28.34 |  61.5 |
|        plant        |  29.2 | 55.55 |
|       curtain       |  22.3 |  52.1 |
|        chair        | 14.37 | 19.87 |
|         car         | 41.76 | 51.15 |
|        water        | 29.47 | 34.77 |
|       painting      | 20.11 | 24.95 |
|         sofa        | 16.58 | 18.27 |
|        shelf        |  9.95 | 11.83 |
|        house        |  5.33 |  5.94 |
|         sea         | 34.16 | 68.99 |
|        mirror       | 13.39 | 20.07 |
|         rug         |  1.4  |  1.41 |
|        field        |  12.4 | 36.24 |
|       armchair      |  3.0  |  3.25 |
|         seat        |  17.3 | 24.39 |
|        fence        |  9.18 | 15.66 |
|         desk        |  4.25 |  4.48 |
|         rock        | 10.32 | 14.68 |
|       wardrobe      | 17.93 | 32.38 |
|         lamp        | 14.73 | 29.85 |
|       bathtub       |  1.0  |  1.0  |
|       railing       | 11.25 | 27.71 |
|       cushion       | 14.93 | 17.92 |
|         base        |  8.02 | 18.41 |
|         box         |  3.48 |  3.89 |
|        column       | 10.75 | 13.83 |
|      signboard      |  9.91 | 14.68 |
|   chest of drawers  |  1.81 |  1.85 |
|       counter       |  0.4  |  0.41 |
|         sand        | 19.31 | 23.81 |
|         sink        | 14.74 |  17.4 |
|      skyscraper     | 29.36 | 39.48 |
|      fireplace      |  0.4  |  0.4  |
|     refrigerator    |  3.64 |  3.65 |
|      grandstand     | 22.04 | 25.74 |
|         path        |  5.78 |  8.53 |
|        stairs       |  8.41 |  9.01 |
|        runway       | 27.75 | 31.42 |
|         case        | 23.57 |  37.5 |
|      pool table     |  4.32 |  4.32 |
|        pillow       |  9.7  | 10.48 |
|     screen door     |  0.34 |  0.34 |
|       stairway      |  6.88 |  9.27 |
|        river        |  0.91 |  1.14 |
|        bridge       |  4.38 |  4.49 |
|       bookcase      | 17.12 | 31.57 |
|        blind        | 20.16 | 22.46 |
|     coffee table    |  0.06 |  0.06 |
|        toilet       |  3.01 |  3.06 |
|        flower       |  15.0 | 25.76 |
|         book        |  8.55 | 27.35 |
|         hill        |  1.39 |  3.81 |
|        bench        |  1.91 |  1.92 |
|      countertop     |  2.69 |  2.71 |
|        stove        |  2.12 |  2.13 |
|         palm        |  4.19 |  4.31 |
|    kitchen island   |  0.24 |  0.24 |
|       computer      |  1.93 |  1.95 |
|     swivel chair    |  3.65 |  3.7  |
|         boat        |  3.86 |  3.98 |
|         bar         |  5.15 |  5.76 |
|    arcade machine   |  0.01 |  0.01 |
|        hovel        |  0.44 |  0.44 |
|         bus         |  0.63 |  0.63 |
|        towel        |  2.85 |  2.88 |
|        light        |  4.57 |  5.9  |
|        truck        |  0.11 |  0.11 |
|        tower        |  0.95 |  1.42 |
|      chandelier     |  5.37 |  5.53 |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  2.36 |  2.83 |
|        booth        |  0.03 |  0.04 |
| television receiver |  4.47 |  4.51 |
|       airplane      | 17.93 | 20.06 |
|      dirt track     |  3.97 | 15.51 |
|       apparel       |  3.16 |  4.28 |
|         pole        |  4.04 | 12.88 |
|         land        |  0.36 |  0.44 |
|      bannister      |  0.28 |  0.4  |
|      escalator      |  9.58 |  9.76 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  6.64 |  14.7 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  3.11 |  3.56 |
|        stage        |  1.43 |  1.63 |
|         van         |  0.21 |  0.21 |
|         ship        |  0.08 |  0.12 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  1.67 |  1.68 |
|        canopy       |  1.3  |  1.36 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  1.53 |  1.62 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.39 |  1.47 |
|        barrel       |  4.8  | 15.43 |
|        basket       |  1.82 |  1.93 |
|      waterfall      | 28.14 | 34.08 |
|         tent        | 67.78 | 75.55 |
|         bag         |  0.56 |  0.6  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.81 |  0.81 |
|         oven        |  0.27 |  0.27 |
|         ball        | 31.19 |  61.8 |
|         food        | 12.44 |  13.4 |
|         step        |  0.01 |  0.01 |
|         tank        |  1.55 |  1.56 |
|      trade name     |  1.74 |  1.79 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  5.83 |  6.17 |
|        animal       |  1.54 |  1.55 |
|       bicycle       |  9.25 | 10.47 |
|         lake        |  0.43 |  0.44 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  4.84 |  5.16 |
|       blanket       |  0.71 |  0.72 |
|      sculpture      |  1.45 |  1.63 |
|         hood        |  0.01 |  0.01 |
|        sconce       |  3.38 |  4.1  |
|         vase        |  7.12 | 13.15 |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  1.19 |  1.46 |
|        ashcan       |  1.88 |  1.92 |
|         fan         |  0.05 |  0.05 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.4  |  0.5  |
|        plate        |  18.9 | 31.05 |
|       monitor       |  0.65 |  0.65 |
|    bulletin board   |  0.16 |  0.16 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.23 |  0.23 |
|        glass        |  5.05 |  8.24 |
|        clock        |  6.37 | 10.24 |
|         flag        |  0.15 |  0.15 |
+---------------------+-------+-------+
09/20 11:25:27 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 54.1600  mIoU: 10.5400  mAcc: 15.7300  data_time: 0.0017  time: 1.2464
Finished processing corruption type: elastic_transform
Processing corruption type: pixelate
09/20 11:25:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 759901597
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 759901597
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 11:25:30 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='pixelate',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/pixelate'

09/20 11:25:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 11:25:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 11:25:34 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 11:25:35 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 11:26:57 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:14  time: 0.8267  data_time: 0.0016  memory: 17245  
09/20 11:27:41 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:40:05  time: 0.9950  data_time: 0.0016  memory: 17025  
09/20 11:28:04 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:45  time: 0.4891  data_time: 0.0015  memory: 17018  
09/20 11:28:40 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:45  time: 0.6263  data_time: 0.0015  memory: 17027  
09/20 11:29:11 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:16  time: 0.4811  data_time: 0.0015  memory: 17026  
09/20 11:29:37 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:50  time: 0.0960  data_time: 0.0016  memory: 17021  
09/20 11:30:09 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:31  time: 0.4121  data_time: 0.0015  memory: 17026  
09/20 11:30:34 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:56  time: 0.5432  data_time: 0.0014  memory: 17023  
09/20 11:30:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:39  time: 0.1969  data_time: 0.0014  memory: 16947  
09/20 11:30:53 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:55  time: 0.0901  data_time: 0.0015  memory: 17006  
09/20 11:31:06 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:32  time: 0.5002  data_time: 0.0016  memory: 17025  
09/20 11:31:13 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:10  time: 0.2607  data_time: 0.0016  memory: 16953  
09/20 11:31:31 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:19  time: 0.4978  data_time: 0.0014  memory: 17027  
09/20 11:31:51 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:38  time: 0.0952  data_time: 0.0015  memory: 17028  
09/20 11:32:12 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:02  time: 0.9860  data_time: 0.0014  memory: 17030  
09/20 11:32:20 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:08  time: 0.0838  data_time: 0.0016  memory: 17018  
09/20 11:32:24 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:14  time: 0.0857  data_time: 0.0016  memory: 805  
09/20 11:32:32 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:29  time: 0.1884  data_time: 0.0014  memory: 16943  
09/20 11:32:50 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:01  time: 0.2935  data_time: 0.0014  memory: 17024  
09/20 11:33:01 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:26  time: 0.0815  data_time: 0.0014  memory: 17002  
09/20 11:33:17 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:06:57  time: 0.5976  data_time: 0.0015  memory: 17028  
09/20 11:33:29 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:27  time: 0.0860  data_time: 0.0015  memory: 17015  
09/20 11:33:37 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:56  time: 0.2276  data_time: 0.0015  memory: 17008  
09/20 11:33:42 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:24  time: 0.0842  data_time: 0.0015  memory: 1918  
09/20 11:33:52 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:58  time: 0.1943  data_time: 0.0015  memory: 17018  
09/20 11:33:56 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:29  time: 0.0844  data_time: 0.0015  memory: 1557  
09/20 11:34:03 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:04  time: 0.0838  data_time: 0.0015  memory: 17003  
09/20 11:34:23 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:46  time: 0.5060  data_time: 0.0014  memory: 17022  
09/20 11:34:31 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:23  time: 0.4141  data_time: 0.0015  memory: 17010  
09/20 11:34:36 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:00  time: 0.0801  data_time: 0.0015  memory: 829  
09/20 11:34:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:38  time: 0.0883  data_time: 0.0016  memory: 16952  
09/20 11:34:46 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:17  time: 0.0833  data_time: 0.0016  memory: 1601  
09/20 11:34:58 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:59  time: 0.0772  data_time: 0.0013  memory: 17025  
09/20 11:35:09 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:41  time: 0.0843  data_time: 0.0015  memory: 17016  
09/20 11:35:18 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:23  time: 0.0884  data_time: 0.0014  memory: 17006  
09/20 11:35:26 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:05  time: 0.0857  data_time: 0.0017  memory: 17005  
09/20 11:35:30 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:48  time: 0.0839  data_time: 0.0015  memory: 805  
09/20 11:35:38 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:31  time: 0.0898  data_time: 0.0015  memory: 17028  
09/20 11:35:47 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.0831  data_time: 0.0015  memory: 17009  
09/20 11:35:55 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0795  data_time: 0.0013  memory: 16957  
09/20 11:35:56 - mmengine - INFO - per class results:
09/20 11:35:56 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 48.54 | 61.43 |
|       building      | 62.56 |  88.9 |
|         sky         | 81.16 | 96.62 |
|        floor        | 52.71 | 78.26 |
|         tree        | 56.94 | 81.76 |
|       ceiling       | 64.66 |  77.7 |
|         road        | 56.32 |  88.8 |
|         bed         |  37.2 | 40.23 |
|      windowpane     | 31.01 | 62.98 |
|        grass        | 47.01 | 53.58 |
|       cabinet       | 23.34 | 40.65 |
|       sidewalk      | 32.18 | 37.91 |
|        person       |  46.3 | 79.87 |
|        earth        |  21.0 |  27.4 |
|         door        |  9.96 | 44.07 |
|        table        | 11.17 | 12.59 |
|       mountain      | 34.21 | 62.51 |
|        plant        |  34.6 | 61.81 |
|       curtain       | 31.72 | 61.39 |
|        chair        | 18.42 | 23.89 |
|         car         | 54.14 | 59.33 |
|        water        | 35.67 | 44.72 |
|       painting      | 24.59 | 27.35 |
|         sofa        | 18.27 | 19.83 |
|        shelf        | 14.12 | 16.29 |
|        house        |  8.4  |  9.3  |
|         sea         | 40.87 | 79.98 |
|        mirror       | 10.22 | 12.67 |
|         rug         |  1.06 |  1.06 |
|        field        | 14.65 | 40.55 |
|       armchair      |  2.52 |  2.67 |
|         seat        | 22.07 |  32.0 |
|        fence        | 12.38 | 20.57 |
|         desk        |  3.48 |  3.57 |
|         rock        | 11.35 | 16.51 |
|       wardrobe      |  20.5 | 31.15 |
|         lamp        | 28.22 | 43.32 |
|       bathtub       |  2.35 |  2.36 |
|       railing       | 15.85 | 28.24 |
|       cushion       | 17.67 | 19.56 |
|         base        |  6.91 | 12.18 |
|         box         |  5.67 |  6.74 |
|        column       | 14.23 | 16.51 |
|      signboard      | 14.51 | 19.58 |
|   chest of drawers  |  4.2  |  4.34 |
|       counter       |  0.65 |  0.67 |
|         sand        |  20.9 |  27.5 |
|         sink        | 22.52 |  26.0 |
|      skyscraper     | 29.15 | 34.16 |
|      fireplace      |  0.08 |  0.08 |
|     refrigerator    |  4.38 |  4.39 |
|      grandstand     | 30.92 | 39.68 |
|         path        |  6.85 |  8.81 |
|        stairs       | 11.53 | 12.83 |
|        runway       | 43.39 | 50.81 |
|         case        | 26.52 | 36.88 |
|      pool table     |  5.57 |  5.59 |
|        pillow       | 12.52 | 13.32 |
|     screen door     |  0.34 |  0.34 |
|       stairway      |  8.95 | 14.73 |
|        river        |  1.31 |  1.57 |
|        bridge       |  3.67 |  3.79 |
|       bookcase      |  21.8 | 40.23 |
|        blind        | 25.13 | 28.66 |
|     coffee table    |  0.04 |  0.04 |
|        toilet       |  4.48 |  4.52 |
|        flower       | 14.72 | 21.42 |
|         book        | 13.69 | 43.68 |
|         hill        |  3.84 |  9.26 |
|        bench        |  2.62 |  2.65 |
|      countertop     |  1.99 |  1.99 |
|        stove        |  2.12 |  2.13 |
|         palm        |  3.42 |  3.48 |
|    kitchen island   |  0.31 |  0.31 |
|       computer      |  1.47 |  1.48 |
|     swivel chair    |  4.17 |  4.33 |
|         boat        |  6.97 |  7.07 |
|         bar         |  5.12 |  5.54 |
|    arcade machine   |  0.27 |  0.27 |
|        hovel        |  2.71 |  2.72 |
|         bus         |  1.01 |  1.02 |
|        towel        |  2.85 |  2.86 |
|        light        |  16.3 | 17.97 |
|        truck        |  0.87 |  0.93 |
|        tower        |  2.16 |  2.75 |
|      chandelier     |  6.87 |  6.97 |
|        awning       |  0.03 |  0.03 |
|     streetlight     |  6.59 |  7.16 |
|        booth        |  0.02 |  0.02 |
| television receiver |  3.72 |  3.72 |
|       airplane      | 18.77 | 19.38 |
|      dirt track     |  6.76 | 27.04 |
|       apparel       |  6.13 |  8.25 |
|         pole        | 10.25 |  28.5 |
|         land        |  0.77 |  1.0  |
|      bannister      |  0.91 |  1.15 |
|      escalator      |  7.11 |  7.23 |
|       ottoman       |  0.09 |  0.09 |
|        bottle       |  9.77 |  25.8 |
|        buffet       |  0.1  |  0.1  |
|        poster       |  3.7  |  4.17 |
|        stage        |  3.2  |  3.93 |
|         van         |  0.37 |  0.38 |
|         ship        |  0.29 |  0.38 |
|       fountain      |  0.05 |  0.05 |
|    conveyer belt    |  3.02 |  3.02 |
|        canopy       |  0.93 |  0.95 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  2.06 |  2.13 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.56 |  1.61 |
|        barrel       |  3.78 | 21.31 |
|        basket       |  3.04 |  3.16 |
|      waterfall      | 30.97 | 34.92 |
|         tent        |  39.5 | 39.78 |
|         bag         |  0.68 |  0.72 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.51 |  0.51 |
|         oven        |  0.19 |  0.19 |
|         ball        | 34.08 | 63.33 |
|         food        |  10.1 | 10.47 |
|         step        |  0.0  |  0.0  |
|         tank        |  1.41 |  1.41 |
|      trade name     |  1.63 |  1.66 |
|      microwave      |  0.0  |  0.0  |
|         pot         |  8.89 |  9.15 |
|        animal       |  1.63 |  1.63 |
|       bicycle       | 21.87 | 22.61 |
|         lake        |  0.04 |  0.04 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  3.89 |  4.07 |
|       blanket       |  0.63 |  0.63 |
|      sculpture      |  1.78 |  1.97 |
|         hood        |  0.41 |  0.41 |
|        sconce       |  8.84 |  9.66 |
|         vase        | 13.37 | 21.04 |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  3.0  |  3.73 |
|        ashcan       |  2.73 |  2.77 |
|         fan         |  0.52 |  0.52 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.84 |  1.03 |
|        plate        | 22.57 | 32.83 |
|       monitor       |  1.05 |  1.06 |
|    bulletin board   |  1.53 |  1.58 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  3.07 |  3.08 |
|        glass        |  8.57 | 13.26 |
|        clock        | 13.95 | 17.59 |
|         flag        |  0.58 |  0.58 |
+---------------------+-------+-------+
09/20 11:35:56 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 60.5000  mIoU: 12.7400  mAcc: 18.1300  data_time: 0.0017  time: 0.3104
Finished processing corruption type: pixelate
Processing corruption type: jpeg_compression
09/20 11:35:59 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1120975577
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 3.4.18
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1120975577
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/20 11:35:59 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    corruption=None,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = '../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        corruption='jpeg_compression',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        type='ASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '../corruptions/work_dirs/ade20k/deeplabv3/deeplabv3_r50-d8_512x512_160k_ade20k_20200615_123227-5d0ee427/jpeg_compression'

09/20 11:36:03 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/20 11:36:03 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/20 11:36:03 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layer3.6.conv1.weight, backbone.layer3.6.bn1.weight, backbone.layer3.6.bn1.bias, backbone.layer3.6.bn1.running_mean, backbone.layer3.6.bn1.running_var, backbone.layer3.6.bn1.num_batches_tracked, backbone.layer3.6.conv2.weight, backbone.layer3.6.bn2.weight, backbone.layer3.6.bn2.bias, backbone.layer3.6.bn2.running_mean, backbone.layer3.6.bn2.running_var, backbone.layer3.6.bn2.num_batches_tracked, backbone.layer3.6.conv3.weight, backbone.layer3.6.bn3.weight, backbone.layer3.6.bn3.bias, backbone.layer3.6.bn3.running_mean, backbone.layer3.6.bn3.running_var, backbone.layer3.6.bn3.num_batches_tracked, backbone.layer3.7.conv1.weight, backbone.layer3.7.bn1.weight, backbone.layer3.7.bn1.bias, backbone.layer3.7.bn1.running_mean, backbone.layer3.7.bn1.running_var, backbone.layer3.7.bn1.num_batches_tracked, backbone.layer3.7.conv2.weight, backbone.layer3.7.bn2.weight, backbone.layer3.7.bn2.bias, backbone.layer3.7.bn2.running_mean, backbone.layer3.7.bn2.running_var, backbone.layer3.7.bn2.num_batches_tracked, backbone.layer3.7.conv3.weight, backbone.layer3.7.bn3.weight, backbone.layer3.7.bn3.bias, backbone.layer3.7.bn3.running_mean, backbone.layer3.7.bn3.running_var, backbone.layer3.7.bn3.num_batches_tracked, backbone.layer3.8.conv1.weight, backbone.layer3.8.bn1.weight, backbone.layer3.8.bn1.bias, backbone.layer3.8.bn1.running_mean, backbone.layer3.8.bn1.running_var, backbone.layer3.8.bn1.num_batches_tracked, backbone.layer3.8.conv2.weight, backbone.layer3.8.bn2.weight, backbone.layer3.8.bn2.bias, backbone.layer3.8.bn2.running_mean, backbone.layer3.8.bn2.running_var, backbone.layer3.8.bn2.num_batches_tracked, backbone.layer3.8.conv3.weight, backbone.layer3.8.bn3.weight, backbone.layer3.8.bn3.bias, backbone.layer3.8.bn3.running_mean, backbone.layer3.8.bn3.running_var, backbone.layer3.8.bn3.num_batches_tracked, backbone.layer3.9.conv1.weight, backbone.layer3.9.bn1.weight, backbone.layer3.9.bn1.bias, backbone.layer3.9.bn1.running_mean, backbone.layer3.9.bn1.running_var, backbone.layer3.9.bn1.num_batches_tracked, backbone.layer3.9.conv2.weight, backbone.layer3.9.bn2.weight, backbone.layer3.9.bn2.bias, backbone.layer3.9.bn2.running_mean, backbone.layer3.9.bn2.running_var, backbone.layer3.9.bn2.num_batches_tracked, backbone.layer3.9.conv3.weight, backbone.layer3.9.bn3.weight, backbone.layer3.9.bn3.bias, backbone.layer3.9.bn3.running_mean, backbone.layer3.9.bn3.running_var, backbone.layer3.9.bn3.num_batches_tracked, backbone.layer3.10.conv1.weight, backbone.layer3.10.bn1.weight, backbone.layer3.10.bn1.bias, backbone.layer3.10.bn1.running_mean, backbone.layer3.10.bn1.running_var, backbone.layer3.10.bn1.num_batches_tracked, backbone.layer3.10.conv2.weight, backbone.layer3.10.bn2.weight, backbone.layer3.10.bn2.bias, backbone.layer3.10.bn2.running_mean, backbone.layer3.10.bn2.running_var, backbone.layer3.10.bn2.num_batches_tracked, backbone.layer3.10.conv3.weight, backbone.layer3.10.bn3.weight, backbone.layer3.10.bn3.bias, backbone.layer3.10.bn3.running_mean, backbone.layer3.10.bn3.running_var, backbone.layer3.10.bn3.num_batches_tracked, backbone.layer3.11.conv1.weight, backbone.layer3.11.bn1.weight, backbone.layer3.11.bn1.bias, backbone.layer3.11.bn1.running_mean, backbone.layer3.11.bn1.running_var, backbone.layer3.11.bn1.num_batches_tracked, backbone.layer3.11.conv2.weight, backbone.layer3.11.bn2.weight, backbone.layer3.11.bn2.bias, backbone.layer3.11.bn2.running_mean, backbone.layer3.11.bn2.running_var, backbone.layer3.11.bn2.num_batches_tracked, backbone.layer3.11.conv3.weight, backbone.layer3.11.bn3.weight, backbone.layer3.11.bn3.bias, backbone.layer3.11.bn3.running_mean, backbone.layer3.11.bn3.running_var, backbone.layer3.11.bn3.num_batches_tracked, backbone.layer3.12.conv1.weight, backbone.layer3.12.bn1.weight, backbone.layer3.12.bn1.bias, backbone.layer3.12.bn1.running_mean, backbone.layer3.12.bn1.running_var, backbone.layer3.12.bn1.num_batches_tracked, backbone.layer3.12.conv2.weight, backbone.layer3.12.bn2.weight, backbone.layer3.12.bn2.bias, backbone.layer3.12.bn2.running_mean, backbone.layer3.12.bn2.running_var, backbone.layer3.12.bn2.num_batches_tracked, backbone.layer3.12.conv3.weight, backbone.layer3.12.bn3.weight, backbone.layer3.12.bn3.bias, backbone.layer3.12.bn3.running_mean, backbone.layer3.12.bn3.running_var, backbone.layer3.12.bn3.num_batches_tracked, backbone.layer3.13.conv1.weight, backbone.layer3.13.bn1.weight, backbone.layer3.13.bn1.bias, backbone.layer3.13.bn1.running_mean, backbone.layer3.13.bn1.running_var, backbone.layer3.13.bn1.num_batches_tracked, backbone.layer3.13.conv2.weight, backbone.layer3.13.bn2.weight, backbone.layer3.13.bn2.bias, backbone.layer3.13.bn2.running_mean, backbone.layer3.13.bn2.running_var, backbone.layer3.13.bn2.num_batches_tracked, backbone.layer3.13.conv3.weight, backbone.layer3.13.bn3.weight, backbone.layer3.13.bn3.bias, backbone.layer3.13.bn3.running_mean, backbone.layer3.13.bn3.running_var, backbone.layer3.13.bn3.num_batches_tracked, backbone.layer3.14.conv1.weight, backbone.layer3.14.bn1.weight, backbone.layer3.14.bn1.bias, backbone.layer3.14.bn1.running_mean, backbone.layer3.14.bn1.running_var, backbone.layer3.14.bn1.num_batches_tracked, backbone.layer3.14.conv2.weight, backbone.layer3.14.bn2.weight, backbone.layer3.14.bn2.bias, backbone.layer3.14.bn2.running_mean, backbone.layer3.14.bn2.running_var, backbone.layer3.14.bn2.num_batches_tracked, backbone.layer3.14.conv3.weight, backbone.layer3.14.bn3.weight, backbone.layer3.14.bn3.bias, backbone.layer3.14.bn3.running_mean, backbone.layer3.14.bn3.running_var, backbone.layer3.14.bn3.num_batches_tracked, backbone.layer3.15.conv1.weight, backbone.layer3.15.bn1.weight, backbone.layer3.15.bn1.bias, backbone.layer3.15.bn1.running_mean, backbone.layer3.15.bn1.running_var, backbone.layer3.15.bn1.num_batches_tracked, backbone.layer3.15.conv2.weight, backbone.layer3.15.bn2.weight, backbone.layer3.15.bn2.bias, backbone.layer3.15.bn2.running_mean, backbone.layer3.15.bn2.running_var, backbone.layer3.15.bn2.num_batches_tracked, backbone.layer3.15.conv3.weight, backbone.layer3.15.bn3.weight, backbone.layer3.15.bn3.bias, backbone.layer3.15.bn3.running_mean, backbone.layer3.15.bn3.running_var, backbone.layer3.15.bn3.num_batches_tracked, backbone.layer3.16.conv1.weight, backbone.layer3.16.bn1.weight, backbone.layer3.16.bn1.bias, backbone.layer3.16.bn1.running_mean, backbone.layer3.16.bn1.running_var, backbone.layer3.16.bn1.num_batches_tracked, backbone.layer3.16.conv2.weight, backbone.layer3.16.bn2.weight, backbone.layer3.16.bn2.bias, backbone.layer3.16.bn2.running_mean, backbone.layer3.16.bn2.running_var, backbone.layer3.16.bn2.num_batches_tracked, backbone.layer3.16.conv3.weight, backbone.layer3.16.bn3.weight, backbone.layer3.16.bn3.bias, backbone.layer3.16.bn3.running_mean, backbone.layer3.16.bn3.running_var, backbone.layer3.16.bn3.num_batches_tracked, backbone.layer3.17.conv1.weight, backbone.layer3.17.bn1.weight, backbone.layer3.17.bn1.bias, backbone.layer3.17.bn1.running_mean, backbone.layer3.17.bn1.running_var, backbone.layer3.17.bn1.num_batches_tracked, backbone.layer3.17.conv2.weight, backbone.layer3.17.bn2.weight, backbone.layer3.17.bn2.bias, backbone.layer3.17.bn2.running_mean, backbone.layer3.17.bn2.running_var, backbone.layer3.17.bn2.num_batches_tracked, backbone.layer3.17.conv3.weight, backbone.layer3.17.bn3.weight, backbone.layer3.17.bn3.bias, backbone.layer3.17.bn3.running_mean, backbone.layer3.17.bn3.running_var, backbone.layer3.17.bn3.num_batches_tracked, backbone.layer3.18.conv1.weight, backbone.layer3.18.bn1.weight, backbone.layer3.18.bn1.bias, backbone.layer3.18.bn1.running_mean, backbone.layer3.18.bn1.running_var, backbone.layer3.18.bn1.num_batches_tracked, backbone.layer3.18.conv2.weight, backbone.layer3.18.bn2.weight, backbone.layer3.18.bn2.bias, backbone.layer3.18.bn2.running_mean, backbone.layer3.18.bn2.running_var, backbone.layer3.18.bn2.num_batches_tracked, backbone.layer3.18.conv3.weight, backbone.layer3.18.bn3.weight, backbone.layer3.18.bn3.bias, backbone.layer3.18.bn3.running_mean, backbone.layer3.18.bn3.running_var, backbone.layer3.18.bn3.num_batches_tracked, backbone.layer3.19.conv1.weight, backbone.layer3.19.bn1.weight, backbone.layer3.19.bn1.bias, backbone.layer3.19.bn1.running_mean, backbone.layer3.19.bn1.running_var, backbone.layer3.19.bn1.num_batches_tracked, backbone.layer3.19.conv2.weight, backbone.layer3.19.bn2.weight, backbone.layer3.19.bn2.bias, backbone.layer3.19.bn2.running_mean, backbone.layer3.19.bn2.running_var, backbone.layer3.19.bn2.num_batches_tracked, backbone.layer3.19.conv3.weight, backbone.layer3.19.bn3.weight, backbone.layer3.19.bn3.bias, backbone.layer3.19.bn3.running_mean, backbone.layer3.19.bn3.running_var, backbone.layer3.19.bn3.num_batches_tracked, backbone.layer3.20.conv1.weight, backbone.layer3.20.bn1.weight, backbone.layer3.20.bn1.bias, backbone.layer3.20.bn1.running_mean, backbone.layer3.20.bn1.running_var, backbone.layer3.20.bn1.num_batches_tracked, backbone.layer3.20.conv2.weight, backbone.layer3.20.bn2.weight, backbone.layer3.20.bn2.bias, backbone.layer3.20.bn2.running_mean, backbone.layer3.20.bn2.running_var, backbone.layer3.20.bn2.num_batches_tracked, backbone.layer3.20.conv3.weight, backbone.layer3.20.bn3.weight, backbone.layer3.20.bn3.bias, backbone.layer3.20.bn3.running_mean, backbone.layer3.20.bn3.running_var, backbone.layer3.20.bn3.num_batches_tracked, backbone.layer3.21.conv1.weight, backbone.layer3.21.bn1.weight, backbone.layer3.21.bn1.bias, backbone.layer3.21.bn1.running_mean, backbone.layer3.21.bn1.running_var, backbone.layer3.21.bn1.num_batches_tracked, backbone.layer3.21.conv2.weight, backbone.layer3.21.bn2.weight, backbone.layer3.21.bn2.bias, backbone.layer3.21.bn2.running_mean, backbone.layer3.21.bn2.running_var, backbone.layer3.21.bn2.num_batches_tracked, backbone.layer3.21.conv3.weight, backbone.layer3.21.bn3.weight, backbone.layer3.21.bn3.bias, backbone.layer3.21.bn3.running_mean, backbone.layer3.21.bn3.running_var, backbone.layer3.21.bn3.num_batches_tracked, backbone.layer3.22.conv1.weight, backbone.layer3.22.bn1.weight, backbone.layer3.22.bn1.bias, backbone.layer3.22.bn1.running_mean, backbone.layer3.22.bn1.running_var, backbone.layer3.22.bn1.num_batches_tracked, backbone.layer3.22.conv2.weight, backbone.layer3.22.bn2.weight, backbone.layer3.22.bn2.bias, backbone.layer3.22.bn2.running_mean, backbone.layer3.22.bn2.running_var, backbone.layer3.22.bn2.num_batches_tracked, backbone.layer3.22.conv3.weight, backbone.layer3.22.bn3.weight, backbone.layer3.22.bn3.bias, backbone.layer3.22.bn3.running_mean, backbone.layer3.22.bn3.running_var, backbone.layer3.22.bn3.num_batches_tracked

09/20 11:36:03 - mmengine - INFO - Load checkpoint from ../checkpoint_files/ade20k/deeplabv3/deeplabv3_r101-d8_512x512_160k_ade20k_20200615_105816-b1f72b3b.pth
09/20 11:37:25 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:53:13  time: 0.8341  data_time: 0.0016  memory: 17245  
09/20 11:38:10 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:40:03  time: 0.9991  data_time: 0.0017  memory: 17025  
09/20 11:38:33 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:30:45  time: 0.4942  data_time: 0.0016  memory: 17018  
09/20 11:39:08 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:27:37  time: 0.5990  data_time: 0.0016  memory: 17027  
09/20 11:39:39 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:25:06  time: 0.4229  data_time: 0.0014  memory: 17026  
09/20 11:40:04 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:22:41  time: 0.1037  data_time: 0.0017  memory: 17021  
09/20 11:40:36 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:21:25  time: 0.4185  data_time: 0.0015  memory: 17026  
09/20 11:41:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:19:45  time: 0.4932  data_time: 0.0015  memory: 17023  
09/20 11:41:08 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:17:29  time: 0.2015  data_time: 0.0015  memory: 16947  
09/20 11:41:19 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:15:47  time: 0.0922  data_time: 0.0014  memory: 17006  
09/20 11:41:32 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:14:27  time: 0.5247  data_time: 0.0016  memory: 17025  
09/20 11:41:41 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:13:07  time: 0.2653  data_time: 0.0016  memory: 16953  
09/20 11:41:59 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:12:17  time: 0.5050  data_time: 0.0015  memory: 17027  
09/20 11:42:20 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:11:39  time: 0.1024  data_time: 0.0024  memory: 17028  
09/20 11:42:42 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:11:03  time: 0.9886  data_time: 0.0015  memory: 17030  
09/20 11:42:50 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:10:09  time: 0.0922  data_time: 0.0039  memory: 17018  
09/20 11:42:55 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:09:16  time: 0.0946  data_time: 0.0018  memory: 805  
09/20 11:43:03 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:08:32  time: 0.1950  data_time: 0.0015  memory: 16943  
09/20 11:43:22 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:08:04  time: 0.2966  data_time: 0.0015  memory: 17024  
09/20 11:43:33 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:07:29  time: 0.0868  data_time: 0.0015  memory: 17002  
09/20 11:43:49 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:07:00  time: 0.6045  data_time: 0.0016  memory: 17028  
09/20 11:44:01 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:06:30  time: 0.0932  data_time: 0.0015  memory: 17015  
09/20 11:44:10 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:05:59  time: 0.1943  data_time: 0.0014  memory: 17008  
09/20 11:44:15 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:05:27  time: 0.0910  data_time: 0.0015  memory: 1918  
09/20 11:44:24 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:05:00  time: 0.2009  data_time: 0.0015  memory: 17018  
09/20 11:44:29 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:32  time: 0.0887  data_time: 0.0014  memory: 1557  
09/20 11:44:37 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:04:06  time: 0.0903  data_time: 0.0015  memory: 17003  
09/20 11:44:56 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:48  time: 0.4935  data_time: 0.0015  memory: 17022  
09/20 11:45:05 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:25  time: 0.4199  data_time: 0.0014  memory: 17010  
09/20 11:45:09 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:03:01  time: 0.0840  data_time: 0.0014  memory: 818  
09/20 11:45:16 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:40  time: 0.0949  data_time: 0.0016  memory: 16952  
09/20 11:45:20 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:19  time: 0.0874  data_time: 0.0021  memory: 1601  
09/20 11:45:32 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:00  time: 0.0844  data_time: 0.0015  memory: 17025  
09/20 11:45:43 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:42  time: 0.0919  data_time: 0.0017  memory: 17016  
09/20 11:45:53 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:24  time: 0.0965  data_time: 0.0015  memory: 17006  
09/20 11:46:00 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:06  time: 0.0926  data_time: 0.0034  memory: 17005  
09/20 11:46:05 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:48  time: 0.0923  data_time: 0.0017  memory: 805  
09/20 11:46:13 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:32  time: 0.0967  data_time: 0.0015  memory: 17028  
09/20 11:46:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:15  time: 0.0882  data_time: 0.0015  memory: 17009  
09/20 11:46:31 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0834  data_time: 0.0012  memory: 16957  
09/20 11:46:31 - mmengine - INFO - per class results:
09/20 11:46:31 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  44.5 | 58.36 |
|       building      | 61.92 | 84.07 |
|         sky         |  76.2 | 96.35 |
|        floor        |  46.4 | 75.44 |
|         tree        | 55.19 | 81.15 |
|       ceiling       | 56.86 | 67.34 |
|         road        | 54.12 | 86.11 |
|         bed         | 26.28 | 27.63 |
|      windowpane     | 28.51 | 58.28 |
|        grass        | 35.82 | 39.31 |
|       cabinet       | 19.45 | 30.67 |
|       sidewalk      | 21.92 | 25.05 |
|        person       | 44.63 | 76.39 |
|        earth        | 20.54 | 30.51 |
|         door        |  7.75 | 49.04 |
|        table        |  7.19 |  7.78 |
|       mountain      | 30.68 | 65.32 |
|        plant        | 33.89 | 64.08 |
|       curtain       | 27.91 | 52.33 |
|        chair        | 12.17 | 14.24 |
|         car         | 51.08 | 55.34 |
|        water        | 32.55 | 42.21 |
|       painting      | 18.26 |  19.3 |
|         sofa        | 10.65 | 11.09 |
|        shelf        | 10.92 | 12.64 |
|        house        |  8.95 | 10.21 |
|         sea         | 32.69 | 63.06 |
|        mirror       |  6.86 |  7.93 |
|         rug         |  0.46 |  0.46 |
|        field        | 13.64 | 41.39 |
|       armchair      |  1.32 |  1.37 |
|         seat        | 20.11 | 29.22 |
|        fence        | 11.04 | 20.34 |
|         desk        |  2.11 |  2.16 |
|         rock        |  9.8  | 14.14 |
|       wardrobe      | 12.64 | 21.89 |
|         lamp        | 24.33 | 31.72 |
|       bathtub       |  0.13 |  0.13 |
|       railing       | 14.19 |  22.7 |
|       cushion       |  11.6 | 12.34 |
|         base        |  5.95 |  9.15 |
|         box         |  3.67 |  4.15 |
|        column       | 13.71 | 15.92 |
|      signboard      |  14.2 | 18.52 |
|   chest of drawers  |  0.45 |  0.45 |
|       counter       |  0.31 |  0.32 |
|         sand        | 12.17 | 16.64 |
|         sink        | 15.35 | 17.07 |
|      skyscraper     | 23.59 | 28.23 |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  2.29 |  2.3  |
|      grandstand     | 22.24 | 27.41 |
|         path        |  6.95 | 10.42 |
|        stairs       | 12.94 | 14.29 |
|        runway       | 27.39 | 29.17 |
|         case        |  21.9 | 29.05 |
|      pool table     |  1.64 |  1.64 |
|        pillow       |  8.34 |  8.72 |
|     screen door     |  0.04 |  0.04 |
|       stairway      |  8.4  | 12.66 |
|        river        |  0.34 |  0.41 |
|        bridge       |  2.13 |  2.14 |
|       bookcase      | 21.95 | 33.52 |
|        blind        | 18.47 | 21.15 |
|     coffee table    |  0.04 |  0.04 |
|        toilet       |  3.77 |  3.82 |
|        flower       | 15.45 | 21.23 |
|         book        | 15.63 | 36.78 |
|         hill        |  2.24 |  4.15 |
|        bench        |  1.86 |  1.87 |
|      countertop     |  0.28 |  0.29 |
|        stove        |  1.83 |  1.83 |
|         palm        |  3.31 |  3.32 |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  1.71 |  1.71 |
|     swivel chair    |  1.21 |  1.22 |
|         boat        |  4.57 |  4.64 |
|         bar         |  2.27 |  2.39 |
|    arcade machine   |  0.07 |  0.07 |
|        hovel        |  2.56 |  2.58 |
|         bus         |  0.88 |  0.88 |
|        towel        |  1.2  |  1.2  |
|        light        | 11.42 | 12.15 |
|        truck        |  0.81 |  0.87 |
|        tower        |  1.49 |  2.14 |
|      chandelier     |  9.14 |  9.33 |
|        awning       |  0.05 |  0.05 |
|     streetlight     |  4.57 |  4.76 |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.97 |  0.97 |
|       airplane      |  9.88 |  10.0 |
|      dirt track     |  3.4  | 18.68 |
|       apparel       |  5.24 |  7.37 |
|         pole        |  9.38 | 24.39 |
|         land        |  0.56 |  0.78 |
|      bannister      |  1.03 |  1.26 |
|      escalator      |  0.49 |  0.49 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       | 11.68 | 22.91 |
|        buffet       |  0.12 |  0.12 |
|        poster       |  0.76 |  0.84 |
|        stage        |  2.54 |  2.68 |
|         van         |  0.3  |  0.31 |
|         ship        |  0.05 |  0.06 |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.23 |  0.23 |
|        canopy       |  0.4  |  0.41 |
|        washer       |  0.0  |  0.0  |
|      plaything      |  1.51 |  1.54 |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  1.84 |  1.87 |
|        barrel       |  1.53 |  7.74 |
|        basket       |  2.06 |  2.15 |
|      waterfall      | 26.72 | 28.72 |
|         tent        | 21.38 |  21.5 |
|         bag         |  0.34 |  0.36 |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.44 |  0.44 |
|         oven        |  0.0  |  0.0  |
|         ball        | 33.83 |  60.1 |
|         food        |  9.38 |  9.75 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.29 |  0.29 |
|      trade name     |  1.78 |  1.81 |
|      microwave      |  0.01 |  0.01 |
|         pot         |  7.98 |  8.24 |
|        animal       |  1.23 |  1.23 |
|       bicycle       | 24.17 | 24.89 |
|         lake        |  0.08 |  0.08 |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  1.24 |  1.27 |
|       blanket       |  0.18 |  0.18 |
|      sculpture      |  3.35 |  3.63 |
|         hood        |  0.29 |  0.29 |
|        sconce       |  7.08 |  7.52 |
|         vase        |  9.88 | 13.47 |
|    traffic light    |  0.04 |  0.04 |
|         tray        |  2.41 |  2.78 |
|        ashcan       |  2.15 |  2.17 |
|         fan         |  0.15 |  0.15 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.78 |  0.9  |
|        plate        | 19.31 | 25.85 |
|       monitor       |  1.2  |  1.21 |
|    bulletin board   |  0.61 |  0.62 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.86 |  0.86 |
|        glass        |  6.94 |  9.55 |
|        clock        | 12.19 | 14.43 |
|         flag        |  0.64 |  0.64 |
+---------------------+-------+-------+
09/20 11:46:31 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 56.5200  mIoU: 10.5800  mAcc: 15.1800  data_time: 0.0017  time: 0.3136
Finished processing corruption type: jpeg_compression
Runtime: 1726825592

============================= JOB FEEDBACK =============================

NodeName=uc2n487
Job ID: 24247145
Cluster: uc2
User/Group: ma_mkacar/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 07:25:25
CPU Efficiency: 5.12% of 6-00:51:28 core-walltime
Job Wall-clock time: 09:03:13
Memory Utilized: 2.45 GB
Memory Efficiency: 2.45% of 100.00 GB
