submitit INFO (2024-05-14 04:31:50,239) - Starting with JobEnvironment(job_id=23594920, hostname=uc2n482.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 04:31:50,240) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/dynamic_rcnn_r101_coco/23594920_submitted.pkl
05/14 04:31:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1441779173
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1441779173
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 04:31:54 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/coco/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=80,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='DynamicRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.85, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            dynamic_rcnn=dict(
                beta_topk=10,
                initial_beta=1.0,
                initial_iou=0.4,
                iou_topk=75,
                update_iter_interval=100),
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.85, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='data/coco/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='data/coco/annotations/instances_val2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        ann_file='annotations/instances_train2017.json',
        backend_args=None,
        data_prefix=dict(img='train2017/'),
        data_root='data/coco/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='data/coco/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='data/coco/annotations/instances_val2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/dynamic_rcnn_r101_coco'

05/14 04:31:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 04:31:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
loading annotations into memory...
Done (t=13.80s)
creating index...
index created!
loading annotations into memory...
Done (t=0.53s)
creating index...
index created!
loading annotations into memory...
Done (t=0.54s)
creating index...
index created!
05/14 04:32:26 - mmengine - INFO - load model from: torchvision://resnet101
05/14 04:32:26 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/14 04:32:27 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 04:32:27 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 04:32:27 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 04:32:27 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/dynamic_rcnn_r101_coco.
05/14 04:32:41 - mmengine - INFO - Epoch(train)  [1][   50/58633]  lr: 1.9820e-03  eta: 2 days, 7:07:42  time: 0.2821  data_time: 0.0117  memory: 5540  loss: 1.7201  loss_rpn_cls: 0.5131  loss_rpn_bbox: 0.1227  loss_cls: 1.0279  acc: 96.3867  loss_bbox: 0.0564
05/14 04:32:54 - mmengine - INFO - Epoch(train)  [1][  100/58633]  lr: 3.9840e-03  eta: 2 days, 5:23:48  time: 0.2644  data_time: 0.0038  memory: 5539  loss: 0.8334  loss_rpn_cls: 0.2027  loss_rpn_bbox: 0.0913  loss_cls: 0.4081  acc: 90.7227  loss_bbox: 0.1313
05/14 04:33:07 - mmengine - INFO - Epoch(train)  [1][  150/58633]  lr: 5.9860e-03  eta: 2 days, 4:50:59  time: 0.2649  data_time: 0.0035  memory: 5540  loss: 1.5735  loss_rpn_cls: 0.2093  loss_rpn_bbox: 0.1046  loss_cls: 0.7763  acc: 85.8398  loss_bbox: 0.4832
05/14 04:33:20 - mmengine - INFO - Epoch(train)  [1][  200/58633]  lr: 7.9880e-03  eta: 2 days, 4:37:29  time: 0.2659  data_time: 0.0034  memory: 5540  loss: 1.9774  loss_rpn_cls: 0.2137  loss_rpn_bbox: 0.1072  loss_cls: 1.0505  acc: 88.6719  loss_bbox: 0.6061
05/14 04:33:34 - mmengine - INFO - Epoch(train)  [1][  250/58633]  lr: 9.9900e-03  eta: 2 days, 4:21:55  time: 0.2628  data_time: 0.0035  memory: 5539  loss: 1.6612  loss_rpn_cls: 0.3028  loss_rpn_bbox: 0.1033  loss_cls: 0.7920  acc: 97.2656  loss_bbox: 0.4632
05/14 04:33:47 - mmengine - INFO - Epoch(train)  [1][  300/58633]  lr: 1.1992e-02  eta: 2 days, 4:10:26  time: 0.2623  data_time: 0.0034  memory: 5540  loss: 1.6539  loss_rpn_cls: 0.2197  loss_rpn_bbox: 0.0980  loss_cls: 0.7877  acc: 85.0586  loss_bbox: 0.5485
05/14 04:34:00 - mmengine - INFO - Epoch(train)  [1][  350/58633]  lr: 1.3994e-02  eta: 2 days, 4:08:25  time: 0.2660  data_time: 0.0035  memory: 5540  loss: 2.2023  loss_rpn_cls: 0.1950  loss_rpn_bbox: 0.1154  loss_cls: 1.1339  acc: 82.0312  loss_bbox: 0.7580
05/14 04:34:13 - mmengine - INFO - Epoch(train)  [1][  400/58633]  lr: 1.5996e-02  eta: 2 days, 4:03:49  time: 0.2639  data_time: 0.0035  memory: 5539  loss: 2.1975  loss_rpn_cls: 0.2098  loss_rpn_bbox: 0.1115  loss_cls: 1.0941  acc: 95.6055  loss_bbox: 0.7821
05/14 04:34:26 - mmengine - INFO - Epoch(train)  [1][  450/58633]  lr: 1.7998e-02  eta: 2 days, 3:57:03  time: 0.2615  data_time: 0.0034  memory: 5539  loss: 1.7781  loss_rpn_cls: 0.1966  loss_rpn_bbox: 0.1014  loss_cls: 0.8889  acc: 85.8398  loss_bbox: 0.5911
05/14 04:34:40 - mmengine - INFO - Epoch(train)  [1][  500/58633]  lr: 2.0000e-02  eta: 2 days, 3:56:22  time: 0.2656  data_time: 0.0035  memory: 5539  loss: 2.0175  loss_rpn_cls: 0.2483  loss_rpn_bbox: 0.1097  loss_cls: 0.9780  acc: 90.6250  loss_bbox: 0.6815
05/14 04:34:53 - mmengine - INFO - Epoch(train)  [1][  550/58633]  lr: 2.0000e-02  eta: 2 days, 3:59:19  time: 0.2689  data_time: 0.0034  memory: 5539  loss: 1.9768  loss_rpn_cls: 0.2503  loss_rpn_bbox: 0.1147  loss_cls: 0.9758  acc: 87.4023  loss_bbox: 0.6359
05/14 04:35:06 - mmengine - INFO - Epoch(train)  [1][  600/58633]  lr: 2.0000e-02  eta: 2 days, 3:56:58  time: 0.2640  data_time: 0.0034  memory: 5539  loss: 2.1460  loss_rpn_cls: 0.1926  loss_rpn_bbox: 0.0997  loss_cls: 1.0995  acc: 88.0859  loss_bbox: 0.7542
05/14 04:35:19 - mmengine - INFO - Epoch(train)  [1][  650/58633]  lr: 2.0000e-02  eta: 2 days, 3:55:07  time: 0.2642  data_time: 0.0037  memory: 5539  loss: 1.9369  loss_rpn_cls: 0.1836  loss_rpn_bbox: 0.1005  loss_cls: 0.9642  acc: 94.0430  loss_bbox: 0.6885
05/14 04:35:33 - mmengine - INFO - Epoch(train)  [1][  700/58633]  lr: 2.0000e-02  eta: 2 days, 3:52:10  time: 0.2626  data_time: 0.0036  memory: 5539  loss: 1.8991  loss_rpn_cls: 0.2042  loss_rpn_bbox: 0.1189  loss_cls: 0.9359  acc: 82.2266  loss_bbox: 0.6402
05/14 04:35:46 - mmengine - INFO - Epoch(train)  [1][  750/58633]  lr: 2.0000e-02  eta: 2 days, 3:51:34  time: 0.2652  data_time: 0.0035  memory: 5539  loss: 1.8379  loss_rpn_cls: 0.1873  loss_rpn_bbox: 0.1006  loss_cls: 0.9023  acc: 89.2578  loss_bbox: 0.6477
05/14 04:35:59 - mmengine - INFO - Epoch(train)  [1][  800/58633]  lr: 2.0000e-02  eta: 2 days, 3:52:58  time: 0.2678  data_time: 0.0035  memory: 5540  loss: 2.2123  loss_rpn_cls: 0.1722  loss_rpn_bbox: 0.0994  loss_cls: 1.1049  acc: 79.1016  loss_bbox: 0.8358
05/14 04:36:12 - mmengine - INFO - Epoch(train)  [1][  850/58633]  lr: 2.0000e-02  eta: 2 days, 3:51:17  time: 0.2637  data_time: 0.0034  memory: 5540  loss: 2.0837  loss_rpn_cls: 0.1514  loss_rpn_bbox: 0.0983  loss_cls: 1.0839  acc: 78.9062  loss_bbox: 0.7501
05/14 04:36:26 - mmengine - INFO - Epoch(train)  [1][  900/58633]  lr: 2.0000e-02  eta: 2 days, 3:50:32  time: 0.2648  data_time: 0.0034  memory: 5539  loss: 2.1700  loss_rpn_cls: 0.1531  loss_rpn_bbox: 0.1105  loss_cls: 1.0780  acc: 80.6641  loss_bbox: 0.8283
05/14 04:36:39 - mmengine - INFO - Epoch(train)  [1][  950/58633]  lr: 2.0000e-02  eta: 2 days, 3:49:09  time: 0.2637  data_time: 0.0033  memory: 5540  loss: 1.8330  loss_rpn_cls: 0.1370  loss_rpn_bbox: 0.0968  loss_cls: 0.9544  acc: 79.2969  loss_bbox: 0.6447
05/14 04:36:52 - mmengine - INFO - Exp name: dynamic_rcnn_r101_coco_20240514_043153
05/14 04:36:52 - mmengine - INFO - Epoch(train)  [1][ 1000/58633]  lr: 2.0000e-02  eta: 2 days, 3:49:01  time: 0.2656  data_time: 0.0033  memory: 5539  loss: 1.7057  loss_rpn_cls: 0.1637  loss_rpn_bbox: 0.1060  loss_cls: 0.8762  acc: 79.9805  loss_bbox: 0.5599
05/14 04:37:05 - mmengine - INFO - Epoch(train)  [1][ 1050/58633]  lr: 2.0000e-02  eta: 2 days, 3:49:59  time: 0.2676  data_time: 0.0034  memory: 5539  loss: 1.8396  loss_rpn_cls: 0.1571  loss_rpn_bbox: 0.1208  loss_cls: 0.9246  acc: 83.3008  loss_bbox: 0.6371
05/14 04:37:19 - mmengine - INFO - Epoch(train)  [1][ 1100/58633]  lr: 2.0000e-02  eta: 2 days, 3:49:31  time: 0.2651  data_time: 0.0033  memory: 5539  loss: 1.5992  loss_rpn_cls: 0.1386  loss_rpn_bbox: 0.0913  loss_cls: 0.8242  acc: 84.7656  loss_bbox: 0.5450
05/14 04:37:32 - mmengine - INFO - Epoch(train)  [1][ 1150/58633]  lr: 2.0000e-02  eta: 2 days, 3:49:15  time: 0.2655  data_time: 0.0040  memory: 5539  loss: 1.7574  loss_rpn_cls: 0.1714  loss_rpn_bbox: 0.1094  loss_cls: 0.9016  acc: 82.0312  loss_bbox: 0.5749
05/14 04:37:45 - mmengine - INFO - Epoch(train)  [1][ 1200/58633]  lr: 2.0000e-02  eta: 2 days, 3:48:53  time: 0.2653  data_time: 0.0036  memory: 5539  loss: 1.8071  loss_rpn_cls: 0.1760  loss_rpn_bbox: 0.1161  loss_cls: 0.8971  acc: 84.0820  loss_bbox: 0.6179
05/14 04:37:58 - mmengine - INFO - Epoch(train)  [1][ 1250/58633]  lr: 2.0000e-02  eta: 2 days, 3:47:52  time: 0.2639  data_time: 0.0037  memory: 5539  loss: 1.9998  loss_rpn_cls: 0.1293  loss_rpn_bbox: 0.0789  loss_cls: 1.0517  acc: 75.6836  loss_bbox: 0.7400
05/14 04:38:12 - mmengine - INFO - Epoch(train)  [1][ 1300/58633]  lr: 2.0000e-02  eta: 2 days, 3:47:22  time: 0.2649  data_time: 0.0036  memory: 5540  loss: 1.9010  loss_rpn_cls: 0.1316  loss_rpn_bbox: 0.0869  loss_cls: 0.9809  acc: 93.2617  loss_bbox: 0.7016
05/14 04:38:25 - mmengine - INFO - Epoch(train)  [1][ 1350/58633]  lr: 2.0000e-02  eta: 2 days, 3:45:23  time: 0.2614  data_time: 0.0038  memory: 5539  loss: 1.6312  loss_rpn_cls: 0.1364  loss_rpn_bbox: 0.0938  loss_cls: 0.8644  acc: 92.8711  loss_bbox: 0.5366
05/14 04:38:38 - mmengine - INFO - Epoch(train)  [1][ 1400/58633]  lr: 2.0000e-02  eta: 2 days, 3:44:59  time: 0.2649  data_time: 0.0034  memory: 5540  loss: 1.6361  loss_rpn_cls: 0.1308  loss_rpn_bbox: 0.1008  loss_cls: 0.8573  acc: 90.5273  loss_bbox: 0.5472
05/14 04:38:51 - mmengine - INFO - Epoch(train)  [1][ 1450/58633]  lr: 2.0000e-02  eta: 2 days, 3:45:00  time: 0.2659  data_time: 0.0034  memory: 5539  loss: 1.7931  loss_rpn_cls: 0.1425  loss_rpn_bbox: 0.1081  loss_cls: 0.9168  acc: 75.0000  loss_bbox: 0.6257
05/14 04:39:05 - mmengine - INFO - Epoch(train)  [1][ 1500/58633]  lr: 2.0000e-02  eta: 2 days, 3:44:53  time: 0.2656  data_time: 0.0034  memory: 5540  loss: 1.6900  loss_rpn_cls: 0.1575  loss_rpn_bbox: 0.1049  loss_cls: 0.8755  acc: 80.4688  loss_bbox: 0.5521
05/14 04:39:18 - mmengine - INFO - Epoch(train)  [1][ 1550/58633]  lr: 2.0000e-02  eta: 2 days, 3:44:02  time: 0.2636  data_time: 0.0033  memory: 5539  loss: 1.4856  loss_rpn_cls: 0.1203  loss_rpn_bbox: 0.0853  loss_cls: 0.7963  acc: 79.4922  loss_bbox: 0.4836
05/14 04:39:31 - mmengine - INFO - Epoch(train)  [1][ 1600/58633]  lr: 2.0000e-02  eta: 2 days, 3:45:39  time: 0.2703  data_time: 0.0041  memory: 5539  loss: 1.6215  loss_rpn_cls: 0.1276  loss_rpn_bbox: 0.0969  loss_cls: 0.8710  acc: 86.2305  loss_bbox: 0.5260
submitit WARNING (2024-05-14 04:39:34,358) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 04:39:34,383) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n482
Job ID: 23594920
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:32
CPU Efficiency: 10.30% of 01:22:50 core-walltime
Job Wall-clock time: 00:08:17
Memory Utilized: 4.85 GB
Memory Efficiency: 5.28% of 91.80 GB
