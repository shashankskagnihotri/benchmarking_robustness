submitit INFO (2024-05-14 04:15:39,987) - Starting with JobEnvironment(job_id=23594899, hostname=uc2n483.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 04:15:39,987) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/ddod_r50_voc0712/23594899_submitted.pkl
05/14 04:15:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1063829838
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1063829838
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 04:15:45 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    bbox_head=dict(
        anchor_generator=dict(
            octave_base_scale=8,
            ratios=[
                1.0,
            ],
            scales_per_octave=1,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=2.0, type='GIoULoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_iou=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        num_classes=80,
        stacked_convs=4,
        type='DDODHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_output',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        start_level=1,
        type='FPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.6, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(alpha=0.8, topk=9, type='ATSSAssigner'),
        debug=False,
        pos_weight=-1,
        reg_assigner=dict(alpha=0.5, topk=9, type='ATSSAssigner')),
    type='DDOD')
optim_wrapper = dict(
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/ddod_r50_voc0712'

05/14 04:15:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 04:15:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 04:15:55 - mmengine - INFO - load model from: torchvision://resnet50
05/14 04:15:55 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
05/14 04:15:55 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 04:15:55 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 04:15:55 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 04:15:55 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/ddod_r50_voc0712.
05/14 04:16:04 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 9.9098e-04  eta: 14:57:25  time: 0.1808  data_time: 0.0101  memory: 1921  loss: 3.5077  loss_cls: 1.3429  loss_bbox: 1.2693  loss_iou: 0.8956
05/14 04:16:12 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 1.9920e-03  eta: 14:08:03  time: 0.1609  data_time: 0.0041  memory: 1767  loss: 3.7301  loss_cls: 1.5189  loss_bbox: 1.3586  loss_iou: 0.8526
05/14 04:16:20 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 2.9930e-03  eta: 13:47:55  time: 0.1588  data_time: 0.0037  memory: 1868  loss: 7.4710  loss_cls: 5.1804  loss_bbox: 1.4238  loss_iou: 0.8668
05/14 04:16:28 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 3.9940e-03  eta: 13:35:02  time: 0.1565  data_time: 0.0033  memory: 1921  loss: 3252.9116  loss_cls: 3250.3380  loss_bbox: 1.7360  loss_iou: 0.8377
05/14 04:16:36 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 4.9950e-03  eta: 13:26:45  time: 0.1560  data_time: 0.0038  memory: 1921  loss: 8.2875  loss_cls: 6.2070  loss_bbox: 1.2550  loss_iou: 0.8254
05/14 04:16:43 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 5.9960e-03  eta: 13:22:11  time: 0.1573  data_time: 0.0039  memory: 1921  loss: 5.5246  loss_cls: 3.6759  loss_bbox: 1.0374  loss_iou: 0.8114
05/14 04:16:51 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 6.9970e-03  eta: 13:17:11  time: 0.1549  data_time: 0.0034  memory: 1921  loss: 5.5592  loss_cls: 3.7245  loss_bbox: 1.0521  loss_iou: 0.7825
05/14 04:16:59 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 7.9980e-03  eta: 13:15:01  time: 0.1574  data_time: 0.0038  memory: 1814  loss: 4.8999  loss_cls: 3.0315  loss_bbox: 1.0015  loss_iou: 0.8669
05/14 04:17:07 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 8.9990e-03  eta: 13:12:58  time: 0.1569  data_time: 0.0035  memory: 1921  loss: 4.3047  loss_cls: 2.4495  loss_bbox: 1.0463  loss_iou: 0.8088
05/14 04:17:15 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 1.0000e-02  eta: 13:10:37  time: 0.1555  data_time: 0.0035  memory: 1921  loss: 3.7668  loss_cls: 1.8598  loss_bbox: 1.0822  loss_iou: 0.8248
05/14 04:17:23 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 1.0000e-02  eta: 13:10:26  time: 0.1594  data_time: 0.0042  memory: 1921  loss: 3.5720  loss_cls: 1.6931  loss_bbox: 1.0709  loss_iou: 0.8080
05/14 04:17:30 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 1.0000e-02  eta: 13:08:46  time: 0.1558  data_time: 0.0034  memory: 1921  loss: 3.3288  loss_cls: 1.3443  loss_bbox: 1.1737  loss_iou: 0.8107
05/14 04:17:38 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 1.0000e-02  eta: 13:08:14  time: 0.1581  data_time: 0.0037  memory: 1921  loss: 3.4429  loss_cls: 1.5011  loss_bbox: 1.1300  loss_iou: 0.8118
05/14 04:17:46 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 1.0000e-02  eta: 13:08:55  time: 0.1614  data_time: 0.0038  memory: 1921  loss: 3.2483  loss_cls: 1.3621  loss_bbox: 1.0868  loss_iou: 0.7994
05/14 04:17:54 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 1.0000e-02  eta: 13:07:56  time: 0.1567  data_time: 0.0035  memory: 1921  loss: 3.2103  loss_cls: 1.3120  loss_bbox: 1.0919  loss_iou: 0.8064
05/14 04:18:02 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 1.0000e-02  eta: 13:07:55  time: 0.1595  data_time: 0.0039  memory: 1868  loss: 3.7961  loss_cls: 1.9714  loss_bbox: 1.0372  loss_iou: 0.7874
05/14 04:18:10 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 1.0000e-02  eta: 13:07:26  time: 0.1579  data_time: 0.0035  memory: 1921  loss: 3.8493  loss_cls: 1.9856  loss_bbox: 1.0569  loss_iou: 0.8068
05/14 04:18:18 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 1.0000e-02  eta: 13:06:27  time: 0.1560  data_time: 0.0034  memory: 1921  loss: 3.3133  loss_cls: 1.3773  loss_bbox: 1.0928  loss_iou: 0.8432
05/14 04:18:26 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 1.0000e-02  eta: 13:06:35  time: 0.1599  data_time: 0.0037  memory: 1921  loss: 3.4789  loss_cls: 1.4294  loss_bbox: 1.1401  loss_iou: 0.9094
05/14 04:18:34 - mmengine - INFO - Exp name: ddod_r50_voc0712_20240514_041543
05/14 04:18:34 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 1.0000e-02  eta: 13:05:52  time: 0.1566  data_time: 0.0034  memory: 1921  loss: 3.4118  loss_cls: 1.3028  loss_bbox: 1.2200  loss_iou: 0.8890
05/14 04:18:42 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 1.0000e-02  eta: 13:06:00  time: 0.1599  data_time: 0.0040  memory: 1921  loss: 3.3051  loss_cls: 1.2272  loss_bbox: 1.1732  loss_iou: 0.9047
05/14 04:18:50 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 1.0000e-02  eta: 13:06:20  time: 0.1609  data_time: 0.0042  memory: 1921  loss: 3.1529  loss_cls: 1.1528  loss_bbox: 1.1267  loss_iou: 0.8734
05/14 04:18:58 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 1.0000e-02  eta: 13:05:24  time: 0.1552  data_time: 0.0033  memory: 1921  loss: 4.7233  loss_cls: 2.7349  loss_bbox: 1.1352  loss_iou: 0.8532
05/14 04:19:06 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 1.0000e-02  eta: 13:05:42  time: 0.1609  data_time: 0.0037  memory: 1921  loss: 4.3960  loss_cls: 2.4505  loss_bbox: 1.0546  loss_iou: 0.8909
05/14 04:19:14 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 1.0000e-02  eta: 13:05:48  time: 0.1601  data_time: 0.0042  memory: 1921  loss: 3.8710  loss_cls: 2.0251  loss_bbox: 1.0144  loss_iou: 0.8315
05/14 04:19:21 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 1.0000e-02  eta: 13:05:02  time: 0.1556  data_time: 0.0036  memory: 1921  loss: 3.2845  loss_cls: 1.4055  loss_bbox: 1.0536  loss_iou: 0.8254
05/14 04:19:29 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 1.0000e-02  eta: 13:05:18  time: 0.1609  data_time: 0.0038  memory: 1922  loss: 3.1058  loss_cls: 1.2879  loss_bbox: 0.9898  loss_iou: 0.8281
05/14 04:19:37 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 1.0000e-02  eta: 13:04:47  time: 0.1568  data_time: 0.0035  memory: 1921  loss: 3.1521  loss_cls: 1.4226  loss_bbox: 0.9668  loss_iou: 0.7627
05/14 04:19:45 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 1.0000e-02  eta: 13:04:53  time: 0.1601  data_time: 0.0039  memory: 1921  loss: 3.2592  loss_cls: 1.4056  loss_bbox: 1.0179  loss_iou: 0.8357
05/14 04:19:53 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 1.0000e-02  eta: 13:05:10  time: 0.1614  data_time: 0.0039  memory: 1921  loss: 3.2110  loss_cls: 1.3401  loss_bbox: 1.0294  loss_iou: 0.8416
05/14 04:20:01 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 1.0000e-02  eta: 13:04:35  time: 0.1561  data_time: 0.0034  memory: 1921  loss: 3.2382  loss_cls: 1.2676  loss_bbox: 1.1262  loss_iou: 0.8445
05/14 04:20:09 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 1.0000e-02  eta: 13:04:30  time: 0.1592  data_time: 0.0036  memory: 1921  loss: 3.2817  loss_cls: 1.4099  loss_bbox: 1.0319  loss_iou: 0.8399
05/14 04:20:17 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 1.0000e-02  eta: 13:04:48  time: 0.1618  data_time: 0.0036  memory: 1921  loss: 3.2007  loss_cls: 1.2349  loss_bbox: 1.0863  loss_iou: 0.8795
05/14 04:20:25 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 1.0000e-02  eta: 13:04:37  time: 0.1586  data_time: 0.0033  memory: 1921  loss: 3.2254  loss_cls: 1.2274  loss_bbox: 1.1339  loss_iou: 0.8640
05/14 04:20:33 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 1.0000e-02  eta: 13:04:41  time: 0.1603  data_time: 0.0037  memory: 1921  loss: 3.1459  loss_cls: 1.1676  loss_bbox: 1.0927  loss_iou: 0.8856
05/14 04:20:41 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 1.0000e-02  eta: 13:04:29  time: 0.1584  data_time: 0.0035  memory: 1921  loss: 3.3525  loss_cls: 1.3093  loss_bbox: 1.1468  loss_iou: 0.8964
05/14 04:20:49 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 1.0000e-02  eta: 13:04:02  time: 0.1566  data_time: 0.0036  memory: 1921  loss: 3.4514  loss_cls: 1.3665  loss_bbox: 1.1764  loss_iou: 0.9085
05/14 04:20:57 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 1.0000e-02  eta: 13:04:04  time: 0.1601  data_time: 0.0038  memory: 1921  loss: 3.3892  loss_cls: 1.2378  loss_bbox: 1.2043  loss_iou: 0.9471
05/14 04:21:05 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 1.0000e-02  eta: 13:03:37  time: 0.1564  data_time: 0.0040  memory: 1923  loss: 3.6447  loss_cls: 1.3831  loss_bbox: 1.3055  loss_iou: 0.9561
05/14 04:21:13 - mmengine - INFO - Exp name: ddod_r50_voc0712_20240514_041543
05/14 04:21:13 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 1.0000e-02  eta: 13:03:16  time: 0.1572  data_time: 0.0035  memory: 1921  loss: 3.3659  loss_cls: 1.2140  loss_bbox: 1.2120  loss_iou: 0.9398
05/14 04:21:21 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 1.0000e-02  eta: 13:03:18  time: 0.1601  data_time: 0.0036  memory: 1921  loss: 3.3388  loss_cls: 1.2058  loss_bbox: 1.1767  loss_iou: 0.9563
05/14 04:21:28 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 1.0000e-02  eta: 13:02:50  time: 0.1560  data_time: 0.0034  memory: 1921  loss: 3.2981  loss_cls: 1.1641  loss_bbox: 1.2002  loss_iou: 0.9338
05/14 04:21:36 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 1.0000e-02  eta: 13:02:48  time: 0.1596  data_time: 0.0036  memory: 1921  loss: 3.3377  loss_cls: 1.1804  loss_bbox: 1.2282  loss_iou: 0.9290
05/14 04:21:44 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 1.0000e-02  eta: 13:02:45  time: 0.1595  data_time: 0.0039  memory: 1921  loss: 3.5046  loss_cls: 1.1502  loss_bbox: 1.3517  loss_iou: 1.0027
05/14 04:21:52 - mmengine - INFO - Epoch(train)  [1][ 2250/24827]  lr: 1.0000e-02  eta: 13:02:24  time: 0.1569  data_time: 0.0034  memory: 1921  loss: 3.7593  loss_cls: 1.5473  loss_bbox: 1.2524  loss_iou: 0.9595
05/14 04:22:00 - mmengine - INFO - Epoch(train)  [1][ 2300/24827]  lr: 1.0000e-02  eta: 13:02:32  time: 0.1613  data_time: 0.0039  memory: 1921  loss: 3.3053  loss_cls: 1.1502  loss_bbox: 1.2208  loss_iou: 0.9343
05/14 04:22:08 - mmengine - INFO - Epoch(train)  [1][ 2350/24827]  lr: 1.0000e-02  eta: 13:02:39  time: 0.1612  data_time: 0.0037  memory: 1922  loss: 4.2941  loss_cls: 2.1733  loss_bbox: 1.2167  loss_iou: 0.9040
05/14 04:22:16 - mmengine - INFO - Epoch(train)  [1][ 2400/24827]  lr: 1.0000e-02  eta: 13:02:11  time: 0.1556  data_time: 0.0036  memory: 1921  loss: 3.5788  loss_cls: 1.4526  loss_bbox: 1.2074  loss_iou: 0.9188
05/14 04:22:24 - mmengine - INFO - Epoch(train)  [1][ 2450/24827]  lr: 1.0000e-02  eta: 13:01:57  time: 0.1578  data_time: 0.0036  memory: 1767  loss: 4.0442  loss_cls: 1.9874  loss_bbox: 1.1435  loss_iou: 0.9132
05/14 04:22:32 - mmengine - INFO - Epoch(train)  [1][ 2500/24827]  lr: 1.0000e-02  eta: 13:01:42  time: 0.1575  data_time: 0.0034  memory: 1921  loss: 3.5970  loss_cls: 1.5435  loss_bbox: 1.1587  loss_iou: 0.8949
05/14 04:22:40 - mmengine - INFO - Epoch(train)  [1][ 2550/24827]  lr: 1.0000e-02  eta: 13:01:30  time: 0.1582  data_time: 0.0035  memory: 1921  loss: 3.6660  loss_cls: 1.4955  loss_bbox: 1.2055  loss_iou: 0.9651
05/14 04:22:48 - mmengine - INFO - Epoch(train)  [1][ 2600/24827]  lr: 1.0000e-02  eta: 13:01:28  time: 0.1598  data_time: 0.0035  memory: 1921  loss: 3.7071  loss_cls: 1.5583  loss_bbox: 1.2092  loss_iou: 0.9396
05/14 04:22:56 - mmengine - INFO - Epoch(train)  [1][ 2650/24827]  lr: 1.0000e-02  eta: 13:01:14  time: 0.1576  data_time: 0.0033  memory: 1921  loss: 3.3402  loss_cls: 1.2091  loss_bbox: 1.2039  loss_iou: 0.9272
05/14 04:23:04 - mmengine - INFO - Epoch(train)  [1][ 2700/24827]  lr: 1.0000e-02  eta: 13:01:20  time: 0.1614  data_time: 0.0036  memory: 1921  loss: 3.5749  loss_cls: 1.3434  loss_bbox: 1.2861  loss_iou: 0.9455
05/14 04:23:12 - mmengine - INFO - Epoch(train)  [1][ 2750/24827]  lr: 1.0000e-02  eta: 13:01:15  time: 0.1592  data_time: 0.0035  memory: 1921  loss: 3.7701  loss_cls: 1.4646  loss_bbox: 1.3237  loss_iou: 0.9818
05/14 04:23:20 - mmengine - INFO - Epoch(train)  [1][ 2800/24827]  lr: 1.0000e-02  eta: 13:01:03  time: 0.1582  data_time: 0.0036  memory: 1921  loss: 4.3222  loss_cls: 2.2992  loss_bbox: 1.1225  loss_iou: 0.9005
05/14 04:23:28 - mmengine - INFO - Epoch(train)  [1][ 2850/24827]  lr: 1.0000e-02  eta: 13:01:01  time: 0.1599  data_time: 0.0037  memory: 1921  loss: 3.7442  loss_cls: 1.6179  loss_bbox: 1.1841  loss_iou: 0.9422
submitit WARNING (2024-05-14 04:23:34,168) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 04:23:34,173) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n483
Job ID: 23594899
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:46
CPU Efficiency: 10.37% of 01:24:30 core-walltime
Job Wall-clock time: 00:08:27
Memory Utilized: 1.74 GB
Memory Efficiency: 1.89% of 91.80 GB
