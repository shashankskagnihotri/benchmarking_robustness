submitit INFO (2024-05-14 03:53:23,291) - Starting with JobEnvironment(job_id=23594874, hostname=uc2n483.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 03:53:23,291) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/cascade_rcnn_r101_voc0712/23594874_submitted.pkl
05/14 03:53:28 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1109768300
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1109768300
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 03:53:28 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=[
            dict(
                bbox_coder=dict(
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.1,
                        0.1,
                        0.2,
                        0.2,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                fc_out_channels=1024,
                in_channels=256,
                loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
                loss_cls=dict(
                    loss_weight=1.0,
                    type='CrossEntropyLoss',
                    use_sigmoid=False),
                num_classes=80,
                reg_class_agnostic=True,
                roi_feat_size=7,
                type='Shared2FCBBoxHead'),
            dict(
                bbox_coder=dict(
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.05,
                        0.05,
                        0.1,
                        0.1,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                fc_out_channels=1024,
                in_channels=256,
                loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
                loss_cls=dict(
                    loss_weight=1.0,
                    type='CrossEntropyLoss',
                    use_sigmoid=False),
                num_classes=80,
                reg_class_agnostic=True,
                roi_feat_size=7,
                type='Shared2FCBBoxHead'),
            dict(
                bbox_coder=dict(
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.033,
                        0.033,
                        0.067,
                        0.067,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                fc_out_channels=1024,
                in_channels=256,
                loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
                loss_cls=dict(
                    loss_weight=1.0,
                    type='CrossEntropyLoss',
                    use_sigmoid=False),
                num_classes=80,
                reg_class_agnostic=True,
                roi_feat_size=7,
                type='Shared2FCBBoxHead'),
        ],
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        num_stages=3,
        stage_loss_weights=[
            1,
            0.5,
            0.25,
        ],
        type='CascadeRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(
            beta=0.1111111111111111, loss_weight=1.0, type='SmoothL1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=[
            dict(
                assigner=dict(
                    ignore_iof_thr=-1,
                    match_low_quality=False,
                    min_pos_iou=0.5,
                    neg_iou_thr=0.5,
                    pos_iou_thr=0.5,
                    type='MaxIoUAssigner'),
                debug=False,
                pos_weight=-1,
                sampler=dict(
                    add_gt_as_proposals=True,
                    neg_pos_ub=-1,
                    num=512,
                    pos_fraction=0.25,
                    type='RandomSampler')),
            dict(
                assigner=dict(
                    ignore_iof_thr=-1,
                    match_low_quality=False,
                    min_pos_iou=0.6,
                    neg_iou_thr=0.6,
                    pos_iou_thr=0.6,
                    type='MaxIoUAssigner'),
                debug=False,
                pos_weight=-1,
                sampler=dict(
                    add_gt_as_proposals=True,
                    neg_pos_ub=-1,
                    num=512,
                    pos_fraction=0.25,
                    type='RandomSampler')),
            dict(
                assigner=dict(
                    ignore_iof_thr=-1,
                    match_low_quality=False,
                    min_pos_iou=0.7,
                    neg_iou_thr=0.7,
                    pos_iou_thr=0.7,
                    type='MaxIoUAssigner'),
                debug=False,
                pos_weight=-1,
                sampler=dict(
                    add_gt_as_proposals=True,
                    neg_pos_ub=-1,
                    num=512,
                    pos_fraction=0.25,
                    type='RandomSampler')),
        ],
        rpn=dict(
            allowed_border=0,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=2000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='CascadeRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=20,
        gamma=0.1,
        milestones=[
            16,
            19,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=20, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/cascade_rcnn_r101_voc0712'

05/14 03:53:30 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 03:53:30 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 03:53:38 - mmengine - INFO - load model from: torchvision://resnet101
05/14 03:53:38 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/14 03:53:39 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 03:53:39 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 03:53:39 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 03:53:39 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/cascade_rcnn_r101_voc0712.
05/14 03:53:51 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 1.9820e-03  eta: 1 day, 8:56:02  time: 0.2388  data_time: 0.0107  memory: 3760  loss: 2.1361  loss_rpn_cls: 0.2836  loss_rpn_bbox: 0.0157  s0.loss_cls: 1.0731  s0.acc: 96.7773  s0.loss_bbox: 0.0644  s1.loss_cls: 0.4326  s1.acc: 98.8281  s1.loss_bbox: 0.0206  s2.loss_cls: 0.2430  s2.acc: 99.6094  s2.loss_bbox: 0.0033
05/14 03:54:02 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 3.9840e-03  eta: 1 day, 8:06:34  time: 0.2269  data_time: 0.0038  memory: 3760  loss: 0.6292  loss_rpn_cls: 0.0541  loss_rpn_bbox: 0.0141  s0.loss_cls: 0.3037  s0.acc: 98.4375  s0.loss_bbox: 0.1117  s1.loss_cls: 0.0812  s1.acc: 99.3164  s1.loss_bbox: 0.0361  s2.loss_cls: 0.0226  s2.acc: 99.6094  s2.loss_bbox: 0.0057
05/14 03:54:13 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 5.9860e-03  eta: 1 day, 7:54:53  time: 0.2287  data_time: 0.0037  memory: 3760  loss: 0.5835  loss_rpn_cls: 0.0438  loss_rpn_bbox: 0.0118  s0.loss_cls: 0.2682  s0.acc: 97.4609  s0.loss_bbox: 0.1171  s1.loss_cls: 0.0749  s1.acc: 98.6328  s1.loss_bbox: 0.0418  s2.loss_cls: 0.0196  s2.acc: 99.3164  s2.loss_bbox: 0.0063
05/14 03:54:25 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 7.9880e-03  eta: 1 day, 7:46:29  time: 0.2275  data_time: 0.0036  memory: 3760  loss: 0.6657  loss_rpn_cls: 0.0411  loss_rpn_bbox: 0.0128  s0.loss_cls: 0.3166  s0.acc: 97.4609  s0.loss_bbox: 0.1309  s1.loss_cls: 0.0852  s1.acc: 99.4141  s1.loss_bbox: 0.0482  s2.loss_cls: 0.0228  s2.acc: 99.7070  s2.loss_bbox: 0.0082
05/14 03:54:36 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 9.9900e-03  eta: 1 day, 7:38:48  time: 0.2259  data_time: 0.0035  memory: 3760  loss: 0.6795  loss_rpn_cls: 0.0459  loss_rpn_bbox: 0.0144  s0.loss_cls: 0.3272  s0.acc: 95.8984  s0.loss_bbox: 0.1270  s1.loss_cls: 0.0868  s1.acc: 99.0234  s1.loss_bbox: 0.0467  s2.loss_cls: 0.0234  s2.acc: 99.6094  s2.loss_bbox: 0.0080
05/14 03:54:47 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 1.1992e-02  eta: 1 day, 7:34:05  time: 0.2263  data_time: 0.0035  memory: 3760  loss: 0.6710  loss_rpn_cls: 0.0389  loss_rpn_bbox: 0.0124  s0.loss_cls: 0.3212  s0.acc: 92.8711  s0.loss_bbox: 0.1276  s1.loss_cls: 0.0891  s1.acc: 98.6328  s1.loss_bbox: 0.0493  s2.loss_cls: 0.0238  s2.acc: 99.5117  s2.loss_bbox: 0.0088
05/14 03:54:59 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 1.3994e-02  eta: 1 day, 7:31:14  time: 0.2268  data_time: 0.0035  memory: 3760  loss: 0.7374  loss_rpn_cls: 0.0407  loss_rpn_bbox: 0.0155  s0.loss_cls: 0.3610  s0.acc: 92.3828  s0.loss_bbox: 0.1372  s1.loss_cls: 0.0966  s1.acc: 97.1680  s1.loss_bbox: 0.0518  s2.loss_cls: 0.0256  s2.acc: 98.6328  s2.loss_bbox: 0.0091
05/14 03:55:10 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 1.5996e-02  eta: 1 day, 7:25:56  time: 0.2238  data_time: 0.0036  memory: 3760  loss: 0.6062  loss_rpn_cls: 0.0374  loss_rpn_bbox: 0.0126  s0.loss_cls: 0.2778  s0.acc: 98.6328  s0.loss_bbox: 0.1158  s1.loss_cls: 0.0809  s1.acc: 99.6094  s1.loss_bbox: 0.0481  s2.loss_cls: 0.0237  s2.acc: 99.8047  s2.loss_bbox: 0.0100
05/14 03:55:21 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 1.7998e-02  eta: 1 day, 7:22:17  time: 0.2243  data_time: 0.0038  memory: 3760  loss: 0.8332  loss_rpn_cls: 0.0385  loss_rpn_bbox: 0.0133  s0.loss_cls: 0.3879  s0.acc: 95.5078  s0.loss_bbox: 0.1574  s1.loss_cls: 0.1185  s1.acc: 97.0703  s1.loss_bbox: 0.0703  s2.loss_cls: 0.0327  s2.acc: 98.5352  s2.loss_bbox: 0.0145
05/14 03:55:32 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 2.0000e-02  eta: 1 day, 7:19:59  time: 0.2251  data_time: 0.0035  memory: 3760  loss: 0.6926  loss_rpn_cls: 0.0365  loss_rpn_bbox: 0.0108  s0.loss_cls: 0.3218  s0.acc: 95.6055  s0.loss_bbox: 0.1253  s1.loss_cls: 0.1007  s1.acc: 97.3633  s1.loss_bbox: 0.0571  s2.loss_cls: 0.0284  s2.acc: 98.4375  s2.loss_bbox: 0.0120
05/14 03:55:44 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 2.0000e-02  eta: 1 day, 7:19:37  time: 0.2272  data_time: 0.0037  memory: 3760  loss: 0.6790  loss_rpn_cls: 0.0413  loss_rpn_bbox: 0.0138  s0.loss_cls: 0.3159  s0.acc: 97.3633  s0.loss_bbox: 0.1282  s1.loss_cls: 0.0906  s1.acc: 98.0469  s1.loss_bbox: 0.0511  s2.loss_cls: 0.0265  s2.acc: 99.2188  s2.loss_bbox: 0.0115
05/14 03:55:55 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 2.0000e-02  eta: 1 day, 7:16:46  time: 0.2235  data_time: 0.0035  memory: 3760  loss: 0.6008  loss_rpn_cls: 0.0409  loss_rpn_bbox: 0.0122  s0.loss_cls: 0.2702  s0.acc: 98.1445  s0.loss_bbox: 0.1036  s1.loss_cls: 0.0868  s1.acc: 98.5352  s1.loss_bbox: 0.0498  s2.loss_cls: 0.0257  s2.acc: 99.1211  s2.loss_bbox: 0.0117
05/14 03:56:06 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 2.0000e-02  eta: 1 day, 7:15:45  time: 0.2257  data_time: 0.0038  memory: 3760  loss: 0.5884  loss_rpn_cls: 0.0394  loss_rpn_bbox: 0.0134  s0.loss_cls: 0.2606  s0.acc: 94.9219  s0.loss_bbox: 0.1061  s1.loss_cls: 0.0832  s1.acc: 97.3633  s1.loss_bbox: 0.0497  s2.loss_cls: 0.0246  s2.acc: 98.4375  s2.loss_bbox: 0.0114
05/14 03:56:17 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 2.0000e-02  eta: 1 day, 7:14:30  time: 0.2252  data_time: 0.0035  memory: 3760  loss: 0.6735  loss_rpn_cls: 0.0334  loss_rpn_bbox: 0.0109  s0.loss_cls: 0.2944  s0.acc: 92.3828  s0.loss_bbox: 0.1222  s1.loss_cls: 0.1013  s1.acc: 95.3125  s1.loss_bbox: 0.0643  s2.loss_cls: 0.0308  s2.acc: 97.4609  s2.loss_bbox: 0.0163
05/14 03:56:29 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 2.0000e-02  eta: 1 day, 7:14:58  time: 0.2280  data_time: 0.0037  memory: 3760  loss: 0.5845  loss_rpn_cls: 0.0297  loss_rpn_bbox: 0.0116  s0.loss_cls: 0.2424  s0.acc: 97.0703  s0.loss_bbox: 0.1143  s1.loss_cls: 0.0850  s1.acc: 97.8516  s1.loss_bbox: 0.0595  s2.loss_cls: 0.0259  s2.acc: 98.8281  s2.loss_bbox: 0.0160
05/14 03:56:40 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 2.0000e-02  eta: 1 day, 7:14:50  time: 0.2270  data_time: 0.0034  memory: 3760  loss: 0.6461  loss_rpn_cls: 0.0333  loss_rpn_bbox: 0.0129  s0.loss_cls: 0.2756  s0.acc: 95.7031  s0.loss_bbox: 0.1153  s1.loss_cls: 0.0959  s1.acc: 98.1445  s1.loss_bbox: 0.0643  s2.loss_cls: 0.0310  s2.acc: 99.2188  s2.loss_bbox: 0.0179
05/14 03:56:52 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 2.0000e-02  eta: 1 day, 7:16:05  time: 0.2299  data_time: 0.0040  memory: 3760  loss: 0.6483  loss_rpn_cls: 0.0492  loss_rpn_bbox: 0.0177  s0.loss_cls: 0.2646  s0.acc: 92.7734  s0.loss_bbox: 0.1118  s1.loss_cls: 0.0951  s1.acc: 94.4336  s1.loss_bbox: 0.0640  s2.loss_cls: 0.0293  s2.acc: 97.3633  s2.loss_bbox: 0.0166
05/14 03:57:03 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 2.0000e-02  eta: 1 day, 7:16:42  time: 0.2288  data_time: 0.0037  memory: 3760  loss: 0.6319  loss_rpn_cls: 0.0319  loss_rpn_bbox: 0.0128  s0.loss_cls: 0.2649  s0.acc: 97.7539  s0.loss_bbox: 0.1080  s1.loss_cls: 0.0983  s1.acc: 98.8281  s1.loss_bbox: 0.0655  s2.loss_cls: 0.0316  s2.acc: 99.5117  s2.loss_bbox: 0.0189
05/14 03:57:15 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 2.0000e-02  eta: 1 day, 7:19:03  time: 0.2330  data_time: 0.0039  memory: 3760  loss: 0.5861  loss_rpn_cls: 0.0344  loss_rpn_bbox: 0.0104  s0.loss_cls: 0.2708  s0.acc: 98.8281  s0.loss_bbox: 0.1081  s1.loss_cls: 0.0804  s1.acc: 99.8047  s1.loss_bbox: 0.0489  s2.loss_cls: 0.0223  s2.acc: 99.8047  s2.loss_bbox: 0.0108
05/14 03:57:26 - mmengine - INFO - Exp name: cascade_rcnn_r101_voc0712_20240514_035326
05/14 03:57:26 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 2.0000e-02  eta: 1 day, 7:17:12  time: 0.2235  data_time: 0.0034  memory: 3760  loss: 0.5883  loss_rpn_cls: 0.0234  loss_rpn_bbox: 0.0100  s0.loss_cls: 0.2459  s0.acc: 94.0430  s0.loss_bbox: 0.1039  s1.loss_cls: 0.0925  s1.acc: 95.6055  s1.loss_bbox: 0.0628  s2.loss_cls: 0.0303  s2.acc: 97.5586  s2.loss_bbox: 0.0195
05/14 03:57:37 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 2.0000e-02  eta: 1 day, 7:18:13  time: 0.2304  data_time: 0.0037  memory: 3760  loss: 0.6806  loss_rpn_cls: 0.0426  loss_rpn_bbox: 0.0142  s0.loss_cls: 0.2837  s0.acc: 96.7773  s0.loss_bbox: 0.1175  s1.loss_cls: 0.1035  s1.acc: 98.2422  s1.loss_bbox: 0.0665  s2.loss_cls: 0.0331  s2.acc: 99.4141  s2.loss_bbox: 0.0194
05/14 03:57:49 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 2.0000e-02  eta: 1 day, 7:18:00  time: 0.2274  data_time: 0.0035  memory: 3760  loss: 0.6007  loss_rpn_cls: 0.0375  loss_rpn_bbox: 0.0123  s0.loss_cls: 0.2504  s0.acc: 92.4805  s0.loss_bbox: 0.0959  s1.loss_cls: 0.0940  s1.acc: 94.8242  s1.loss_bbox: 0.0585  s2.loss_cls: 0.0330  s2.acc: 96.0938  s2.loss_bbox: 0.0190
05/14 03:58:00 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 2.0000e-02  eta: 1 day, 7:17:36  time: 0.2268  data_time: 0.0036  memory: 3760  loss: 0.6245  loss_rpn_cls: 0.0303  loss_rpn_bbox: 0.0091  s0.loss_cls: 0.2656  s0.acc: 94.1406  s0.loss_bbox: 0.0994  s1.loss_cls: 0.1009  s1.acc: 94.5312  s1.loss_bbox: 0.0640  s2.loss_cls: 0.0347  s2.acc: 95.6055  s2.loss_bbox: 0.0206
05/14 03:58:11 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 2.0000e-02  eta: 1 day, 7:16:55  time: 0.2260  data_time: 0.0037  memory: 3760  loss: 0.7435  loss_rpn_cls: 0.0365  loss_rpn_bbox: 0.0144  s0.loss_cls: 0.3137  s0.acc: 93.1641  s0.loss_bbox: 0.1291  s1.loss_cls: 0.1132  s1.acc: 95.1172  s1.loss_bbox: 0.0768  s2.loss_cls: 0.0374  s2.acc: 97.2656  s2.loss_bbox: 0.0224
05/14 03:58:23 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 2.0000e-02  eta: 1 day, 7:16:04  time: 0.2254  data_time: 0.0037  memory: 3760  loss: 0.6674  loss_rpn_cls: 0.0269  loss_rpn_bbox: 0.0118  s0.loss_cls: 0.2745  s0.acc: 93.6523  s0.loss_bbox: 0.1155  s1.loss_cls: 0.1045  s1.acc: 93.9453  s1.loss_bbox: 0.0751  s2.loss_cls: 0.0354  s2.acc: 95.7031  s2.loss_bbox: 0.0238
05/14 03:58:34 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 2.0000e-02  eta: 1 day, 7:15:14  time: 0.2252  data_time: 0.0036  memory: 3760  loss: 0.7162  loss_rpn_cls: 0.0334  loss_rpn_bbox: 0.0130  s0.loss_cls: 0.2980  s0.acc: 94.8242  s0.loss_bbox: 0.1256  s1.loss_cls: 0.1100  s1.acc: 95.4102  s1.loss_bbox: 0.0797  s2.loss_cls: 0.0342  s2.acc: 97.1680  s2.loss_bbox: 0.0222
05/14 03:58:45 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 2.0000e-02  eta: 1 day, 7:14:50  time: 0.2265  data_time: 0.0035  memory: 3760  loss: 0.6195  loss_rpn_cls: 0.0258  loss_rpn_bbox: 0.0115  s0.loss_cls: 0.2484  s0.acc: 97.5586  s0.loss_bbox: 0.1114  s1.loss_cls: 0.0965  s1.acc: 97.7539  s1.loss_bbox: 0.0703  s2.loss_cls: 0.0334  s2.acc: 98.5352  s2.loss_bbox: 0.0223
05/14 03:58:57 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 2.0000e-02  eta: 1 day, 7:14:39  time: 0.2272  data_time: 0.0037  memory: 3760  loss: 0.6021  loss_rpn_cls: 0.0382  loss_rpn_bbox: 0.0118  s0.loss_cls: 0.2354  s0.acc: 92.3828  s0.loss_bbox: 0.0984  s1.loss_cls: 0.0932  s1.acc: 95.4102  s1.loss_bbox: 0.0696  s2.loss_cls: 0.0325  s2.acc: 97.8516  s2.loss_bbox: 0.0231
05/14 03:59:08 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 2.0000e-02  eta: 1 day, 7:13:25  time: 0.2235  data_time: 0.0035  memory: 3760  loss: 0.5796  loss_rpn_cls: 0.0241  loss_rpn_bbox: 0.0120  s0.loss_cls: 0.2290  s0.acc: 94.6289  s0.loss_bbox: 0.0954  s1.loss_cls: 0.0949  s1.acc: 97.7539  s1.loss_bbox: 0.0687  s2.loss_cls: 0.0330  s2.acc: 99.3164  s2.loss_bbox: 0.0225
05/14 03:59:19 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 2.0000e-02  eta: 1 day, 7:13:20  time: 0.2275  data_time: 0.0036  memory: 3582  loss: 0.6747  loss_rpn_cls: 0.0334  loss_rpn_bbox: 0.0129  s0.loss_cls: 0.2647  s0.acc: 90.5273  s0.loss_bbox: 0.1095  s1.loss_cls: 0.1110  s1.acc: 92.3828  s1.loss_bbox: 0.0770  s2.loss_cls: 0.0402  s2.acc: 94.5312  s2.loss_bbox: 0.0261
05/14 03:59:31 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 2.0000e-02  eta: 1 day, 7:12:50  time: 0.2259  data_time: 0.0034  memory: 3760  loss: 0.6120  loss_rpn_cls: 0.0265  loss_rpn_bbox: 0.0120  s0.loss_cls: 0.2416  s0.acc: 95.7031  s0.loss_bbox: 0.0970  s1.loss_cls: 0.1017  s1.acc: 96.1914  s1.loss_bbox: 0.0718  s2.loss_cls: 0.0366  s2.acc: 97.2656  s2.loss_bbox: 0.0248
05/14 03:59:42 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 2.0000e-02  eta: 1 day, 7:13:38  time: 0.2308  data_time: 0.0038  memory: 3760  loss: 0.7942  loss_rpn_cls: 0.0257  loss_rpn_bbox: 0.0161  s0.loss_cls: 0.3057  s0.acc: 97.8516  s0.loss_bbox: 0.1386  s1.loss_cls: 0.1281  s1.acc: 97.4609  s1.loss_bbox: 0.1002  s2.loss_cls: 0.0453  s2.acc: 98.5352  s2.loss_bbox: 0.0346
05/14 03:59:53 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 2.0000e-02  eta: 1 day, 7:13:18  time: 0.2266  data_time: 0.0035  memory: 3760  loss: 0.6274  loss_rpn_cls: 0.0319  loss_rpn_bbox: 0.0112  s0.loss_cls: 0.2421  s0.acc: 97.6562  s0.loss_bbox: 0.1001  s1.loss_cls: 0.1030  s1.acc: 97.2656  s1.loss_bbox: 0.0750  s2.loss_cls: 0.0379  s2.acc: 97.9492  s2.loss_bbox: 0.0262
05/14 04:00:05 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 2.0000e-02  eta: 1 day, 7:12:57  time: 0.2265  data_time: 0.0036  memory: 3760  loss: 0.6290  loss_rpn_cls: 0.0266  loss_rpn_bbox: 0.0109  s0.loss_cls: 0.2363  s0.acc: 83.1055  s0.loss_bbox: 0.1089  s1.loss_cls: 0.0974  s1.acc: 84.3750  s1.loss_bbox: 0.0796  s2.loss_cls: 0.0381  s2.acc: 88.7695  s2.loss_bbox: 0.0311
05/14 04:00:16 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 2.0000e-02  eta: 1 day, 7:12:05  time: 0.2242  data_time: 0.0035  memory: 3760  loss: 0.7038  loss_rpn_cls: 0.0280  loss_rpn_bbox: 0.0129  s0.loss_cls: 0.2668  s0.acc: 93.3594  s0.loss_bbox: 0.1211  s1.loss_cls: 0.1115  s1.acc: 95.4102  s1.loss_bbox: 0.0884  s2.loss_cls: 0.0417  s2.acc: 97.0703  s2.loss_bbox: 0.0334
05/14 04:00:27 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 2.0000e-02  eta: 1 day, 7:12:05  time: 0.2278  data_time: 0.0038  memory: 3760  loss: 0.5741  loss_rpn_cls: 0.0228  loss_rpn_bbox: 0.0093  s0.loss_cls: 0.2186  s0.acc: 95.7031  s0.loss_bbox: 0.1016  s1.loss_cls: 0.0906  s1.acc: 97.1680  s1.loss_bbox: 0.0736  s2.loss_cls: 0.0324  s2.acc: 97.4609  s2.loss_bbox: 0.0250
05/14 04:00:39 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:36  time: 0.2257  data_time: 0.0036  memory: 3760  loss: 0.5419  loss_rpn_cls: 0.0238  loss_rpn_bbox: 0.0112  s0.loss_cls: 0.2093  s0.acc: 93.5547  s0.loss_bbox: 0.0947  s1.loss_cls: 0.0841  s1.acc: 95.7031  s1.loss_bbox: 0.0631  s2.loss_cls: 0.0321  s2.acc: 97.7539  s2.loss_bbox: 0.0236
05/14 04:00:50 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 2.0000e-02  eta: 1 day, 7:12:06  time: 0.2302  data_time: 0.0037  memory: 3760  loss: 0.6264  loss_rpn_cls: 0.0274  loss_rpn_bbox: 0.0103  s0.loss_cls: 0.2421  s0.acc: 90.0391  s0.loss_bbox: 0.1029  s1.loss_cls: 0.1006  s1.acc: 92.8711  s1.loss_bbox: 0.0762  s2.loss_cls: 0.0386  s2.acc: 92.4805  s2.loss_bbox: 0.0283
05/14 04:01:01 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:45  time: 0.2263  data_time: 0.0035  memory: 3760  loss: 0.6095  loss_rpn_cls: 0.0300  loss_rpn_bbox: 0.0121  s0.loss_cls: 0.2254  s0.acc: 97.2656  s0.loss_bbox: 0.0970  s1.loss_cls: 0.0971  s1.acc: 97.5586  s1.loss_bbox: 0.0770  s2.loss_cls: 0.0401  s2.acc: 98.0469  s2.loss_bbox: 0.0308
submitit WARNING (2024-05-14 04:01:04,718) - Bypassing signal SIGCONT
05/14 04:01:13 - mmengine - INFO - Exp name: cascade_rcnn_r101_voc0712_20240514_035326
05/14 04:01:13 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:46  time: 0.2281  data_time: 0.0036  memory: 3760  loss: 0.6419  loss_rpn_cls: 0.0282  loss_rpn_bbox: 0.0108  s0.loss_cls: 0.2420  s0.acc: 95.8008  s0.loss_bbox: 0.1085  s1.loss_cls: 0.1013  s1.acc: 95.3125  s1.loss_bbox: 0.0823  s2.loss_cls: 0.0383  s2.acc: 96.7773  s2.loss_bbox: 0.0304
05/14 04:01:24 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:59  time: 0.2291  data_time: 0.0035  memory: 3760  loss: 0.5963  loss_rpn_cls: 0.0304  loss_rpn_bbox: 0.0105  s0.loss_cls: 0.2282  s0.acc: 93.3594  s0.loss_bbox: 0.0982  s1.loss_cls: 0.0959  s1.acc: 94.3359  s1.loss_bbox: 0.0700  s2.loss_cls: 0.0376  s2.acc: 95.0195  s2.loss_bbox: 0.0255
05/14 04:01:36 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:53  time: 0.2276  data_time: 0.0036  memory: 3760  loss: 0.6639  loss_rpn_cls: 0.0275  loss_rpn_bbox: 0.0119  s0.loss_cls: 0.2610  s0.acc: 98.3398  s0.loss_bbox: 0.1110  s1.loss_cls: 0.1046  s1.acc: 98.4375  s1.loss_bbox: 0.0789  s2.loss_cls: 0.0390  s2.acc: 99.0234  s2.loss_bbox: 0.0301
05/14 04:01:47 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:45  time: 0.2275  data_time: 0.0037  memory: 3760  loss: 0.6883  loss_rpn_cls: 0.0304  loss_rpn_bbox: 0.0135  s0.loss_cls: 0.2770  s0.acc: 86.1328  s0.loss_bbox: 0.1201  s1.loss_cls: 0.1078  s1.acc: 90.2344  s1.loss_bbox: 0.0773  s2.loss_cls: 0.0374  s2.acc: 94.7266  s2.loss_bbox: 0.0248
05/14 04:01:58 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:45  time: 0.2281  data_time: 0.0038  memory: 3760  loss: 0.5527  loss_rpn_cls: 0.0232  loss_rpn_bbox: 0.0115  s0.loss_cls: 0.1995  s0.acc: 95.5078  s0.loss_bbox: 0.0998  s1.loss_cls: 0.0844  s1.acc: 96.8750  s1.loss_bbox: 0.0742  s2.loss_cls: 0.0324  s2.acc: 97.7539  s2.loss_bbox: 0.0277
05/14 04:02:10 - mmengine - INFO - Epoch(train)  [1][ 2250/24827]  lr: 2.0000e-02  eta: 1 day, 7:11:26  time: 0.2265  data_time: 0.0036  memory: 3760  loss: 0.5234  loss_rpn_cls: 0.0220  loss_rpn_bbox: 0.0090  s0.loss_cls: 0.1895  s0.acc: 93.9453  s0.loss_bbox: 0.0892  s1.loss_cls: 0.0827  s1.acc: 94.7266  s1.loss_bbox: 0.0692  s2.loss_cls: 0.0331  s2.acc: 96.6797  s2.loss_bbox: 0.0287
05/14 04:02:21 - mmengine - INFO - Epoch(train)  [1][ 2300/24827]  lr: 2.0000e-02  eta: 1 day, 7:10:29  time: 0.2229  data_time: 0.0035  memory: 3760  loss: 0.5402  loss_rpn_cls: 0.0262  loss_rpn_bbox: 0.0100  s0.loss_cls: 0.1981  s0.acc: 93.9453  s0.loss_bbox: 0.0877  s1.loss_cls: 0.0857  s1.acc: 95.0195  s1.loss_bbox: 0.0707  s2.loss_cls: 0.0339  s2.acc: 96.6797  s2.loss_bbox: 0.0278
05/14 04:02:32 - mmengine - INFO - Epoch(train)  [1][ 2350/24827]  lr: 2.0000e-02  eta: 1 day, 7:09:50  time: 0.2244  data_time: 0.0037  memory: 3760  loss: 0.5846  loss_rpn_cls: 0.0196  loss_rpn_bbox: 0.0107  s0.loss_cls: 0.2120  s0.acc: 88.3789  s0.loss_bbox: 0.0900  s1.loss_cls: 0.1014  s1.acc: 88.3789  s1.loss_bbox: 0.0776  s2.loss_cls: 0.0407  s2.acc: 91.4062  s2.loss_bbox: 0.0325
05/14 04:02:43 - mmengine - INFO - Epoch(train)  [1][ 2400/24827]  lr: 2.0000e-02  eta: 1 day, 7:09:08  time: 0.2241  data_time: 0.0035  memory: 3760  loss: 0.6282  loss_rpn_cls: 0.0292  loss_rpn_bbox: 0.0116  s0.loss_cls: 0.2288  s0.acc: 95.8008  s0.loss_bbox: 0.1091  s1.loss_cls: 0.0988  s1.acc: 96.8750  s1.loss_bbox: 0.0828  s2.loss_cls: 0.0376  s2.acc: 98.2422  s2.loss_bbox: 0.0305
05/14 04:02:55 - mmengine - INFO - Epoch(train)  [1][ 2450/24827]  lr: 2.0000e-02  eta: 1 day, 7:09:04  time: 0.2276  data_time: 0.0037  memory: 3760  loss: 0.6866  loss_rpn_cls: 0.0303  loss_rpn_bbox: 0.0142  s0.loss_cls: 0.2594  s0.acc: 97.4609  s0.loss_bbox: 0.1208  s1.loss_cls: 0.1076  s1.acc: 97.6562  s1.loss_bbox: 0.0856  s2.loss_cls: 0.0390  s2.acc: 98.4375  s2.loss_bbox: 0.0297
submitit WARNING (2024-05-14 04:03:04,315) - Bypassing signal SIGTERM
submitit WARNING (2024-05-14 04:03:04,316) - Bypassing signal SIGCONT
05/14 04:03:06 - mmengine - INFO - Epoch(train)  [1][ 2500/24827]  lr: 2.0000e-02  eta: 1 day, 7:08:19  time: 0.2235  data_time: 0.0034  memory: 3760  loss: 0.6376  loss_rpn_cls: 0.0219  loss_rpn_bbox: 0.0093  s0.loss_cls: 0.2532  s0.acc: 97.8516  s0.loss_bbox: 0.0987  s1.loss_cls: 0.1080  s1.acc: 97.5586  s1.loss_bbox: 0.0774  s2.loss_cls: 0.0401  s2.acc: 97.9492  s2.loss_bbox: 0.0291
05/14 04:03:17 - mmengine - INFO - Epoch(train)  [1][ 2550/24827]  lr: 2.0000e-02  eta: 1 day, 7:08:20  time: 0.2282  data_time: 0.0037  memory: 3760  loss: 0.6436  loss_rpn_cls: 0.0273  loss_rpn_bbox: 0.0094  s0.loss_cls: 0.2575  s0.acc: 89.4531  s0.loss_bbox: 0.1079  s1.loss_cls: 0.1044  s1.acc: 93.1641  s1.loss_bbox: 0.0738  s2.loss_cls: 0.0380  s2.acc: 96.1914  s2.loss_bbox: 0.0252
05/14 04:03:29 - mmengine - INFO - Epoch(train)  [1][ 2600/24827]  lr: 2.0000e-02  eta: 1 day, 7:07:44  time: 0.2244  data_time: 0.0034  memory: 3760  loss: 0.5269  loss_rpn_cls: 0.0228  loss_rpn_bbox: 0.0102  s0.loss_cls: 0.2049  s0.acc: 94.5312  s0.loss_bbox: 0.0780  s1.loss_cls: 0.0909  s1.acc: 93.6523  s1.loss_bbox: 0.0613  s2.loss_cls: 0.0344  s2.acc: 94.7266  s2.loss_bbox: 0.0244

============================= JOB FEEDBACK =============================

NodeName=uc2n483
Job ID: 23594874
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: TIMEOUT (exit code 0)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:10:55
CPU Efficiency: 10.69% of 01:42:10 core-walltime
Job Wall-clock time: 00:10:13
Memory Utilized: 1.59 GB
Memory Efficiency: 1.74% of 91.80 GB
