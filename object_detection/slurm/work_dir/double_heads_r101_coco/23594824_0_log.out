submitit INFO (2024-05-13 21:13:15,148) - Starting with JobEnvironment(job_id=23594824, hostname=uc2n512.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-13 21:13:15,149) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/double_heads_r101_coco/23594824_submitted.pkl
05/13 21:13:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1644201403
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1644201403
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/13 21:13:20 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/coco/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            conv_out_channels=1024,
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(beta=1.0, loss_weight=2.0, type='SmoothL1Loss'),
            loss_cls=dict(
                loss_weight=2.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=80,
            num_convs=4,
            num_fcs=2,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='DoubleConvFCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        reg_roi_scale_factor=1.3,
        type='DoubleHeadRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='data/coco/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='data/coco/annotations/instances_val2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        ann_file='annotations/instances_train2017.json',
        backend_args=None,
        data_prefix=dict(img='train2017/'),
        data_root='data/coco/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='data/coco/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='data/coco/annotations/instances_val2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/double_heads_r101_coco'

05/13 21:13:21 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/13 21:13:21 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
loading annotations into memory...
Done (t=12.94s)
creating index...
index created!
loading annotations into memory...
Done (t=0.57s)
creating index...
index created!
loading annotations into memory...
Done (t=0.51s)
creating index...
index created!
05/13 21:13:50 - mmengine - INFO - load model from: torchvision://resnet101
05/13 21:13:50 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/13 21:13:51 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/13 21:13:51 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/13 21:13:51 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/13 21:13:51 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/double_heads_r101_coco.
05/13 21:14:16 - mmengine - INFO - Epoch(train)  [1][   50/58633]  lr: 1.9820e-03  eta: 3 days, 23:58:37  time: 0.4911  data_time: 0.0110  memory: 8308  loss: 2.6323  loss_rpn_cls: 0.5342  loss_rpn_bbox: 0.1242  loss_cls: 1.8717  acc: 94.5312  loss_bbox: 0.1022
05/13 21:14:38 - mmengine - INFO - Epoch(train)  [1][  100/58633]  lr: 3.9840e-03  eta: 3 days, 18:49:41  time: 0.4385  data_time: 0.0032  memory: 8308  loss: 1.3835  loss_rpn_cls: 0.2026  loss_rpn_bbox: 0.0892  loss_cls: 0.8479  acc: 90.5273  loss_bbox: 0.2436
05/13 21:15:00 - mmengine - INFO - Epoch(train)  [1][  150/58633]  lr: 5.9860e-03  eta: 3 days, 16:52:14  time: 0.4348  data_time: 0.0031  memory: 8307  loss: 1.4142  loss_rpn_cls: 0.1685  loss_rpn_bbox: 0.0722  loss_cls: 0.8747  acc: 95.5078  loss_bbox: 0.2988
05/13 21:15:22 - mmengine - INFO - Epoch(train)  [1][  200/58633]  lr: 7.9880e-03  eta: 3 days, 16:09:30  time: 0.4404  data_time: 0.0032  memory: 8308  loss: 1.6364  loss_rpn_cls: 0.2424  loss_rpn_bbox: 0.0901  loss_cls: 0.9873  acc: 93.8477  loss_bbox: 0.3166
05/13 21:15:44 - mmengine - INFO - Epoch(train)  [1][  250/58633]  lr: 9.9900e-03  eta: 3 days, 15:41:37  time: 0.4395  data_time: 0.0031  memory: 8308  loss: 1.8591  loss_rpn_cls: 0.2797  loss_rpn_bbox: 0.1149  loss_cls: 1.1439  acc: 92.9688  loss_bbox: 0.3206
05/13 21:15:59 - mmengine - INFO - Epoch(train)  [1][  300/58633]  lr: 1.1992e-02  eta: 3 days, 11:02:31  time: 0.3062  data_time: 0.0032  memory: 8308  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 36.3636  loss_bbox: nan
05/13 21:16:11 - mmengine - INFO - Epoch(train)  [1][  350/58633]  lr: 1.3994e-02  eta: 3 days, 6:06:55  time: 0.2487  data_time: 0.0032  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 52.1739  loss_bbox: nan
05/13 21:16:24 - mmengine - INFO - Epoch(train)  [1][  400/58633]  lr: 1.5996e-02  eta: 3 days, 2:30:06  time: 0.2521  data_time: 0.0033  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 30.0000  loss_bbox: nan
05/13 21:16:36 - mmengine - INFO - Epoch(train)  [1][  450/58633]  lr: 1.7998e-02  eta: 2 days, 23:34:35  time: 0.2469  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 58.8235  loss_bbox: nan
05/13 21:16:49 - mmengine - INFO - Epoch(train)  [1][  500/58633]  lr: 2.0000e-02  eta: 2 days, 21:13:52  time: 0.2466  data_time: 0.0030  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 4.7619  loss_bbox: nan
05/13 21:17:01 - mmengine - INFO - Epoch(train)  [1][  550/58633]  lr: 2.0000e-02  eta: 2 days, 19:22:44  time: 0.2504  data_time: 0.0030  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 10.5263  loss_bbox: nan
05/13 21:17:14 - mmengine - INFO - Epoch(train)  [1][  600/58633]  lr: 2.0000e-02  eta: 2 days, 17:49:06  time: 0.2494  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 66.6667  loss_bbox: nan
05/13 21:17:26 - mmengine - INFO - Epoch(train)  [1][  650/58633]  lr: 2.0000e-02  eta: 2 days, 16:32:33  time: 0.2524  data_time: 0.0032  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 71.4286  loss_bbox: nan
05/13 21:17:39 - mmengine - INFO - Epoch(train)  [1][  700/58633]  lr: 2.0000e-02  eta: 2 days, 15:21:19  time: 0.2457  data_time: 0.0032  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/13 21:17:51 - mmengine - INFO - Epoch(train)  [1][  750/58633]  lr: 2.0000e-02  eta: 2 days, 14:23:35  time: 0.2509  data_time: 0.0032  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/13 21:18:04 - mmengine - INFO - Epoch(train)  [1][  800/58633]  lr: 2.0000e-02  eta: 2 days, 13:32:37  time: 0.2503  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 50.0000  loss_bbox: nan
05/13 21:18:16 - mmengine - INFO - Epoch(train)  [1][  850/58633]  lr: 2.0000e-02  eta: 2 days, 12:48:12  time: 0.2512  data_time: 0.0034  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/13 21:18:29 - mmengine - INFO - Epoch(train)  [1][  900/58633]  lr: 2.0000e-02  eta: 2 days, 12:06:57  time: 0.2485  data_time: 0.0032  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 41.1765  loss_bbox: nan
05/13 21:18:41 - mmengine - INFO - Epoch(train)  [1][  950/58633]  lr: 2.0000e-02  eta: 2 days, 11:30:39  time: 0.2495  data_time: 0.0032  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 38.4615  loss_bbox: nan
05/13 21:18:54 - mmengine - INFO - Exp name: double_heads_r101_coco_20240513_211318
05/13 21:18:54 - mmengine - INFO - Epoch(train)  [1][ 1000/58633]  lr: 2.0000e-02  eta: 2 days, 10:58:46  time: 0.2509  data_time: 0.0032  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/13 21:19:06 - mmengine - INFO - Epoch(train)  [1][ 1050/58633]  lr: 2.0000e-02  eta: 2 days, 10:29:50  time: 0.2508  data_time: 0.0033  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 14.2857  loss_bbox: nan
05/13 21:19:19 - mmengine - INFO - Epoch(train)  [1][ 1100/58633]  lr: 2.0000e-02  eta: 2 days, 10:03:16  time: 0.2503  data_time: 0.0032  memory: 5603  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 37.5000  loss_bbox: nan
05/13 21:19:31 - mmengine - INFO - Epoch(train)  [1][ 1150/58633]  lr: 2.0000e-02  eta: 2 days, 9:38:53  time: 0.2501  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 63.6364  loss_bbox: nan
05/13 21:19:44 - mmengine - INFO - Epoch(train)  [1][ 1200/58633]  lr: 2.0000e-02  eta: 2 days, 9:17:38  time: 0.2524  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 40.0000  loss_bbox: nan
05/13 21:19:56 - mmengine - INFO - Epoch(train)  [1][ 1250/58633]  lr: 2.0000e-02  eta: 2 days, 8:56:28  time: 0.2490  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 41.6667  loss_bbox: nan
05/13 21:20:09 - mmengine - INFO - Epoch(train)  [1][ 1300/58633]  lr: 2.0000e-02  eta: 2 days, 8:37:27  time: 0.2501  data_time: 0.0032  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 53.3333  loss_bbox: nan
05/13 21:20:21 - mmengine - INFO - Epoch(train)  [1][ 1350/58633]  lr: 2.0000e-02  eta: 2 days, 8:18:17  time: 0.2466  data_time: 0.0032  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 28.5714  loss_bbox: nan
05/13 21:20:34 - mmengine - INFO - Epoch(train)  [1][ 1400/58633]  lr: 2.0000e-02  eta: 2 days, 8:01:24  time: 0.2488  data_time: 0.0033  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 33.3333  loss_bbox: nan
05/13 21:20:46 - mmengine - INFO - Epoch(train)  [1][ 1450/58633]  lr: 2.0000e-02  eta: 2 days, 7:46:40  time: 0.2513  data_time: 0.0034  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 25.0000  loss_bbox: nan
05/13 21:20:59 - mmengine - INFO - Epoch(train)  [1][ 1500/58633]  lr: 2.0000e-02  eta: 2 days, 7:33:08  time: 0.2519  data_time: 0.0031  memory: 5602  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 20.0000  loss_bbox: nan
submitit WARNING (2024-05-13 21:21:02,351) - Bypassing signal SIGCONT
submitit ERROR (2024-05-13 21:21:02,458) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n512
Job ID: 23594824
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:25
CPU Efficiency: 10.12% of 01:23:10 core-walltime
Job Wall-clock time: 00:08:19
Memory Utilized: 4.91 GB
Memory Efficiency: 5.35% of 91.80 GB
