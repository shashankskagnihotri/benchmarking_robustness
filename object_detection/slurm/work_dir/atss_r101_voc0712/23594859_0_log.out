submitit INFO (2024-05-14 03:35:07,042) - Starting with JobEnvironment(job_id=23594859, hostname=uc2n482.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 03:35:07,043) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/atss_r101_voc0712/23594859_submitted.pkl
05/14 03:35:12 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 155109638
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 155109638
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 03:35:12 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    bbox_head=dict(
        anchor_generator=dict(
            octave_base_scale=8,
            ratios=[
                1.0,
            ],
            scales_per_octave=1,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=2.0, type='GIoULoss'),
        loss_centerness=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        num_classes=80,
        stacked_convs=4,
        type='ATSSHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_output',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        start_level=1,
        type='FPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.6, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(topk=9, type='ATSSAssigner'),
        debug=False,
        pos_weight=-1),
    type='ATSS')
optim_wrapper = dict(
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/atss_r101_voc0712'

05/14 03:35:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 03:35:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 03:35:22 - mmengine - INFO - load model from: torchvision://resnet101
05/14 03:35:22 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/14 03:35:22 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 03:35:22 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 03:35:22 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 03:35:22 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/atss_r101_voc0712.
05/14 03:35:32 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 9.9098e-04  eta: 15:24:55  time: 0.1863  data_time: 0.0102  memory: 3017  loss: 2.6661  loss_cls: 0.9975  loss_bbox: 1.0071  loss_centerness: 0.6614
05/14 03:35:40 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 1.9920e-03  eta: 14:29:37  time: 0.1641  data_time: 0.0037  memory: 3018  loss: 2.6176  loss_cls: 0.9835  loss_bbox: 1.0121  loss_centerness: 0.6220
05/14 03:35:48 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 2.9930e-03  eta: 14:11:53  time: 0.1646  data_time: 0.0037  memory: 3017  loss: 3.7611  loss_cls: 2.0403  loss_bbox: 1.0934  loss_centerness: 0.6273
05/14 03:35:56 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 3.9940e-03  eta: 14:00:15  time: 0.1624  data_time: 0.0033  memory: 3017  loss: 5.0673  loss_cls: 3.4289  loss_bbox: 1.0213  loss_centerness: 0.6170
05/14 03:36:04 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 4.9950e-03  eta: 13:52:38  time: 0.1618  data_time: 0.0032  memory: 3018  loss: 3.1507  loss_cls: 1.5416  loss_bbox: 0.9842  loss_centerness: 0.6249
05/14 03:36:12 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 5.9960e-03  eta: 13:49:28  time: 0.1642  data_time: 0.0031  memory: 3018  loss: 2.6431  loss_cls: 1.0384  loss_bbox: 0.9844  loss_centerness: 0.6204
05/14 03:36:21 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 6.9970e-03  eta: 13:46:14  time: 0.1629  data_time: 0.0031  memory: 3017  loss: 2.4862  loss_cls: 0.8928  loss_bbox: 0.9700  loss_centerness: 0.6233
05/14 03:36:29 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 7.9980e-03  eta: 13:43:29  time: 0.1624  data_time: 0.0033  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:36:37 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 8.9990e-03  eta: 13:42:26  time: 0.1644  data_time: 0.0032  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:36:45 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 1.0000e-02  eta: 13:40:13  time: 0.1617  data_time: 0.0031  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:36:53 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 1.0000e-02  eta: 13:39:38  time: 0.1645  data_time: 0.0032  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:01 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 1.0000e-02  eta: 13:38:54  time: 0.1640  data_time: 0.0032  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:09 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 1.0000e-02  eta: 13:36:58  time: 0.1605  data_time: 0.0028  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:17 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 1.0000e-02  eta: 13:35:01  time: 0.1597  data_time: 0.0029  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:26 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 1.0000e-02  eta: 13:34:07  time: 0.1622  data_time: 0.0028  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:34 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 1.0000e-02  eta: 13:33:00  time: 0.1612  data_time: 0.0029  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:42 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 1.0000e-02  eta: 13:32:09  time: 0.1617  data_time: 0.0028  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:50 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 1.0000e-02  eta: 13:31:04  time: 0.1606  data_time: 0.0028  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:37:58 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 1.0000e-02  eta: 13:30:44  time: 0.1631  data_time: 0.0028  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:06 - mmengine - INFO - Exp name: atss_r101_voc0712_20240514_033510
05/14 03:38:06 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 1.0000e-02  eta: 13:30:03  time: 0.1616  data_time: 0.0028  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:14 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 1.0000e-02  eta: 13:29:12  time: 0.1607  data_time: 0.0029  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:22 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 1.0000e-02  eta: 13:28:18  time: 0.1601  data_time: 0.0028  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:30 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 1.0000e-02  eta: 13:28:00  time: 0.1626  data_time: 0.0028  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:38 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 1.0000e-02  eta: 13:28:01  time: 0.1641  data_time: 0.0029  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:47 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 1.0000e-02  eta: 13:28:46  time: 0.1679  data_time: 0.0035  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:38:55 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 1.0000e-02  eta: 13:29:34  time: 0.1685  data_time: 0.0034  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:04 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 1.0000e-02  eta: 13:30:11  time: 0.1679  data_time: 0.0034  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:12 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 1.0000e-02  eta: 13:30:39  time: 0.1674  data_time: 0.0036  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:20 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 1.0000e-02  eta: 13:31:32  time: 0.1700  data_time: 0.0036  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:29 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 1.0000e-02  eta: 13:32:20  time: 0.1699  data_time: 0.0034  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:37 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 1.0000e-02  eta: 13:32:33  time: 0.1667  data_time: 0.0035  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:46 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 1.0000e-02  eta: 13:32:45  time: 0.1667  data_time: 0.0034  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:39:54 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 1.0000e-02  eta: 13:32:59  time: 0.1671  data_time: 0.0032  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:02 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 1.0000e-02  eta: 13:32:16  time: 0.1606  data_time: 0.0029  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:10 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 1.0000e-02  eta: 13:31:50  time: 0.1624  data_time: 0.0029  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:18 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 1.0000e-02  eta: 13:31:19  time: 0.1618  data_time: 0.0029  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:26 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 1.0000e-02  eta: 13:30:54  time: 0.1622  data_time: 0.0029  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:35 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 1.0000e-02  eta: 13:30:51  time: 0.1651  data_time: 0.0029  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:43 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 1.0000e-02  eta: 13:30:46  time: 0.1648  data_time: 0.0030  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:51 - mmengine - INFO - Exp name: atss_r101_voc0712_20240514_033510
05/14 03:40:51 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 1.0000e-02  eta: 13:30:47  time: 0.1655  data_time: 0.0035  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:40:59 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 1.0000e-02  eta: 13:30:40  time: 0.1646  data_time: 0.0031  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:08 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 1.0000e-02  eta: 13:30:36  time: 0.1651  data_time: 0.0031  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:16 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 1.0000e-02  eta: 13:30:37  time: 0.1657  data_time: 0.0033  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:24 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 1.0000e-02  eta: 13:30:51  time: 0.1678  data_time: 0.0033  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:32 - mmengine - INFO - Epoch(train)  [1][ 2250/24827]  lr: 1.0000e-02  eta: 13:30:39  time: 0.1640  data_time: 0.0034  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:41 - mmengine - INFO - Epoch(train)  [1][ 2300/24827]  lr: 1.0000e-02  eta: 13:30:20  time: 0.1628  data_time: 0.0030  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:49 - mmengine - INFO - Epoch(train)  [1][ 2350/24827]  lr: 1.0000e-02  eta: 13:30:23  time: 0.1662  data_time: 0.0030  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:41:57 - mmengine - INFO - Epoch(train)  [1][ 2400/24827]  lr: 1.0000e-02  eta: 13:30:12  time: 0.1640  data_time: 0.0030  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:42:05 - mmengine - INFO - Epoch(train)  [1][ 2450/24827]  lr: 1.0000e-02  eta: 13:30:09  time: 0.1653  data_time: 0.0031  memory: 3018  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:42:14 - mmengine - INFO - Epoch(train)  [1][ 2500/24827]  lr: 1.0000e-02  eta: 13:29:58  time: 0.1641  data_time: 0.0030  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:42:22 - mmengine - INFO - Epoch(train)  [1][ 2550/24827]  lr: 1.0000e-02  eta: 13:29:47  time: 0.1640  data_time: 0.0031  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
05/14 03:42:30 - mmengine - INFO - Epoch(train)  [1][ 2600/24827]  lr: 1.0000e-02  eta: 13:29:38  time: 0.1643  data_time: 0.0030  memory: 3017  loss: nan  loss_cls: nan  loss_bbox: nan  loss_centerness: nan
submitit WARNING (2024-05-14 03:42:34,719) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 03:42:34,722) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n482
Job ID: 23594859
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:08
CPU Efficiency: 10.12% of 01:20:20 core-walltime
Job Wall-clock time: 00:08:02
Memory Utilized: 1.64 GB
Memory Efficiency: 1.78% of 91.80 GB
