submitit INFO (2024-05-13 23:02:49,005) - Starting with JobEnvironment(job_id=23594833, hostname=uc2n482.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-13 23:02:49,006) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/libra_rcnn_r101_voc0712/23594833_submitted.pkl
05/13 23:02:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1802642710
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1802642710
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/13 23:02:54 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=[
        dict(
            in_channels=[
                256,
                512,
                1024,
                2048,
            ],
            num_outs=5,
            out_channels=256,
            type='FPN'),
        dict(
            in_channels=256,
            num_levels=5,
            refine_level=2,
            refine_type='non_local',
            type='BFP'),
    ],
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(
                alpha=0.5,
                beta=1.0,
                gamma=1.5,
                loss_weight=1.0,
                type='BalancedL1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=80,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_sampler=dict(
                    floor_fraction=0,
                    floor_thr=-1,
                    num_bins=3,
                    type='IoUBalancedNegSampler'),
                num=512,
                pos_fraction=0.25,
                pos_sampler=dict(type='InstanceBalancedPosSampler'),
                type='CombinedSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=5,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/libra_rcnn_r101_voc0712'

05/13 23:02:56 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/13 23:02:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/13 23:03:05 - mmengine - INFO - load model from: torchvision://resnet101
05/13 23:03:05 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/13 23:03:06 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/13 23:03:06 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/13 23:03:06 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/13 23:03:06 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/libra_rcnn_r101_voc0712.
05/13 23:03:16 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 1.9820e-03  eta: 17:32:37  time: 0.2120  data_time: 0.0093  memory: 3710  loss: 1.5412  loss_rpn_cls: 0.4404  loss_rpn_bbox: 0.1044  loss_cls: 0.9311  acc: 96.5820  loss_bbox: 0.0653
05/13 23:03:26 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 3.9840e-03  eta: 16:26:07  time: 0.1853  data_time: 0.0035  memory: 3710  loss: 0.7241  loss_rpn_cls: 0.1317  loss_rpn_bbox: 0.0994  loss_cls: 0.3118  acc: 96.2891  loss_bbox: 0.1813
05/13 23:03:35 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 5.9860e-03  eta: 16:06:30  time: 0.1869  data_time: 0.0036  memory: 3710  loss: 0.7005  loss_rpn_cls: 0.0875  loss_rpn_bbox: 0.1081  loss_cls: 0.2931  acc: 94.7266  loss_bbox: 0.2119
05/13 23:03:44 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 7.9880e-03  eta: 15:57:17  time: 0.1874  data_time: 0.0034  memory: 3710  loss: 0.7001  loss_rpn_cls: 0.1011  loss_rpn_bbox: 0.1131  loss_cls: 0.2886  acc: 97.6562  loss_bbox: 0.1973
05/13 23:03:54 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 9.9900e-03  eta: 15:48:09  time: 0.1839  data_time: 0.0035  memory: 3710  loss: 0.8350  loss_rpn_cls: 0.1023  loss_rpn_bbox: 0.1085  loss_cls: 0.3828  acc: 97.5586  loss_bbox: 0.2415
05/13 23:04:03 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 1.1992e-02  eta: 15:42:00  time: 0.1839  data_time: 0.0034  memory: 3545  loss: 0.7006  loss_rpn_cls: 0.0997  loss_rpn_bbox: 0.1117  loss_cls: 0.2869  acc: 96.0938  loss_bbox: 0.2023
05/13 23:04:12 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 1.3994e-02  eta: 15:39:15  time: 0.1862  data_time: 0.0033  memory: 3709  loss: 0.6367  loss_rpn_cls: 0.1033  loss_rpn_bbox: 0.1054  loss_cls: 0.2501  acc: 98.8281  loss_bbox: 0.1780
05/13 23:04:21 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 1.5996e-02  eta: 15:35:15  time: 0.1832  data_time: 0.0031  memory: 3709  loss: 0.6623  loss_rpn_cls: 0.0969  loss_rpn_bbox: 0.1056  loss_cls: 0.2731  acc: 88.0859  loss_bbox: 0.1867
05/13 23:04:30 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 1.7998e-02  eta: 15:33:25  time: 0.1856  data_time: 0.0032  memory: 3710  loss: 0.6319  loss_rpn_cls: 0.1116  loss_rpn_bbox: 0.1242  loss_cls: 0.2397  acc: 95.9961  loss_bbox: 0.1565
05/13 23:04:40 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 2.0000e-02  eta: 15:31:05  time: 0.1839  data_time: 0.0032  memory: 3710  loss: 0.6750  loss_rpn_cls: 0.0964  loss_rpn_bbox: 0.1116  loss_cls: 0.2804  acc: 94.4336  loss_bbox: 0.1866
05/13 23:04:49 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 2.0000e-02  eta: 15:28:26  time: 0.1823  data_time: 0.0032  memory: 3710  loss: 0.7002  loss_rpn_cls: 0.0834  loss_rpn_bbox: 0.1092  loss_cls: 0.3001  acc: 96.1914  loss_bbox: 0.2074
05/13 23:04:58 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 2.0000e-02  eta: 15:26:20  time: 0.1826  data_time: 0.0033  memory: 3709  loss: 0.6735  loss_rpn_cls: 0.1018  loss_rpn_bbox: 0.1073  loss_cls: 0.2802  acc: 96.4844  loss_bbox: 0.1841
05/13 23:05:07 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 2.0000e-02  eta: 15:25:03  time: 0.1840  data_time: 0.0032  memory: 3709  loss: 0.6210  loss_rpn_cls: 0.0797  loss_rpn_bbox: 0.1006  loss_cls: 0.2652  acc: 99.1211  loss_bbox: 0.1755
05/13 23:05:16 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 2.0000e-02  eta: 15:23:41  time: 0.1833  data_time: 0.0031  memory: 3710  loss: 0.7092  loss_rpn_cls: 0.0900  loss_rpn_bbox: 0.1095  loss_cls: 0.3075  acc: 96.9727  loss_bbox: 0.2023
05/13 23:05:25 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 2.0000e-02  eta: 15:22:32  time: 0.1834  data_time: 0.0032  memory: 3545  loss: 0.6447  loss_rpn_cls: 0.1019  loss_rpn_bbox: 0.1061  loss_cls: 0.2644  acc: 97.6562  loss_bbox: 0.1723
05/13 23:05:35 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 2.0000e-02  eta: 15:21:34  time: 0.1837  data_time: 0.0031  memory: 3710  loss: 0.6940  loss_rpn_cls: 0.1073  loss_rpn_bbox: 0.1135  loss_cls: 0.2849  acc: 98.2422  loss_bbox: 0.1883
05/13 23:05:44 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 2.0000e-02  eta: 15:19:58  time: 0.1811  data_time: 0.0031  memory: 3710  loss: 0.6132  loss_rpn_cls: 0.0757  loss_rpn_bbox: 0.1124  loss_cls: 0.2544  acc: 94.6289  loss_bbox: 0.1707
05/13 23:05:53 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 2.0000e-02  eta: 15:19:22  time: 0.1842  data_time: 0.0031  memory: 3545  loss: 0.6766  loss_rpn_cls: 0.1022  loss_rpn_bbox: 0.1045  loss_cls: 0.2730  acc: 97.0703  loss_bbox: 0.1970
05/13 23:06:02 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 2.0000e-02  eta: 15:18:30  time: 0.1830  data_time: 0.0031  memory: 3710  loss: 0.6394  loss_rpn_cls: 0.0899  loss_rpn_bbox: 0.1032  loss_cls: 0.2642  acc: 96.5820  loss_bbox: 0.1822
05/13 23:06:11 - mmengine - INFO - Exp name: libra_rcnn_r101_voc0712_20240513_230252
05/13 23:06:11 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 2.0000e-02  eta: 15:18:05  time: 0.1845  data_time: 0.0031  memory: 3710  loss: 0.6521  loss_rpn_cls: 0.0798  loss_rpn_bbox: 0.0933  loss_cls: 0.2787  acc: 92.9688  loss_bbox: 0.2004
05/13 23:06:21 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 2.0000e-02  eta: 15:18:01  time: 0.1859  data_time: 0.0031  memory: 3710  loss: 0.5539  loss_rpn_cls: 0.0734  loss_rpn_bbox: 0.0982  loss_cls: 0.2271  acc: 95.2148  loss_bbox: 0.1552
05/13 23:06:30 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 2.0000e-02  eta: 15:17:41  time: 0.1847  data_time: 0.0034  memory: 3710  loss: 0.6514  loss_rpn_cls: 0.0787  loss_rpn_bbox: 0.0994  loss_cls: 0.2704  acc: 92.6758  loss_bbox: 0.2029
05/13 23:06:39 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 2.0000e-02  eta: 15:16:59  time: 0.1829  data_time: 0.0031  memory: 3709  loss: 0.6516  loss_rpn_cls: 0.0800  loss_rpn_bbox: 0.1009  loss_cls: 0.2724  acc: 94.7266  loss_bbox: 0.1982
05/13 23:06:48 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 2.0000e-02  eta: 15:16:45  time: 0.1850  data_time: 0.0033  memory: 3710  loss: 0.6757  loss_rpn_cls: 0.0916  loss_rpn_bbox: 0.0944  loss_cls: 0.2922  acc: 96.2891  loss_bbox: 0.1976
05/13 23:06:57 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 2.0000e-02  eta: 15:16:00  time: 0.1824  data_time: 0.0031  memory: 3545  loss: 0.7449  loss_rpn_cls: 0.0817  loss_rpn_bbox: 0.0996  loss_cls: 0.3198  acc: 94.9219  loss_bbox: 0.2439
05/13 23:07:06 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 2.0000e-02  eta: 15:15:31  time: 0.1836  data_time: 0.0032  memory: 3710  loss: 0.6108  loss_rpn_cls: 0.0742  loss_rpn_bbox: 0.0964  loss_cls: 0.2546  acc: 97.6562  loss_bbox: 0.1856
05/13 23:07:16 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 2.0000e-02  eta: 15:14:45  time: 0.1819  data_time: 0.0031  memory: 3710  loss: 0.5753  loss_rpn_cls: 0.0657  loss_rpn_bbox: 0.1041  loss_cls: 0.2394  acc: 90.5273  loss_bbox: 0.1661
05/13 23:07:25 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 2.0000e-02  eta: 15:14:20  time: 0.1835  data_time: 0.0032  memory: 3709  loss: 0.6359  loss_rpn_cls: 0.1019  loss_rpn_bbox: 0.0946  loss_cls: 0.2520  acc: 95.1172  loss_bbox: 0.1874
05/13 23:07:34 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 2.0000e-02  eta: 15:13:45  time: 0.1826  data_time: 0.0032  memory: 3710  loss: 0.7567  loss_rpn_cls: 0.1262  loss_rpn_bbox: 0.1049  loss_cls: 0.3191  acc: 87.0117  loss_bbox: 0.2064
05/13 23:07:43 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 2.0000e-02  eta: 15:13:37  time: 0.1850  data_time: 0.0031  memory: 3710  loss: 0.6803  loss_rpn_cls: 0.1213  loss_rpn_bbox: 0.1084  loss_cls: 0.2627  acc: 98.0469  loss_bbox: 0.1880
05/13 23:07:52 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 2.0000e-02  eta: 15:13:34  time: 0.1855  data_time: 0.0032  memory: 3710  loss: 0.6631  loss_rpn_cls: 0.1307  loss_rpn_bbox: 0.1097  loss_cls: 0.2579  acc: 92.5781  loss_bbox: 0.1647
05/13 23:08:01 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 2.0000e-02  eta: 15:12:53  time: 0.1816  data_time: 0.0033  memory: 3709  loss: 0.6261  loss_rpn_cls: 0.0967  loss_rpn_bbox: 0.0974  loss_cls: 0.2514  acc: 98.0469  loss_bbox: 0.1806
05/13 23:08:11 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 2.0000e-02  eta: 15:12:33  time: 0.1836  data_time: 0.0033  memory: 3711  loss: 0.6176  loss_rpn_cls: 0.1005  loss_rpn_bbox: 0.0941  loss_cls: 0.2460  acc: 96.6797  loss_bbox: 0.1770
05/13 23:08:20 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 2.0000e-02  eta: 15:12:01  time: 0.1822  data_time: 0.0031  memory: 3710  loss: 0.6332  loss_rpn_cls: 0.0808  loss_rpn_bbox: 0.1002  loss_cls: 0.2596  acc: 96.6797  loss_bbox: 0.1925
05/13 23:08:29 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 2.0000e-02  eta: 15:11:33  time: 0.1825  data_time: 0.0032  memory: 3709  loss: 0.6580  loss_rpn_cls: 0.0861  loss_rpn_bbox: 0.1019  loss_cls: 0.2752  acc: 91.5039  loss_bbox: 0.1948
05/13 23:08:38 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 2.0000e-02  eta: 15:11:12  time: 0.1833  data_time: 0.0031  memory: 3710  loss: 0.5845  loss_rpn_cls: 0.0540  loss_rpn_bbox: 0.0958  loss_cls: 0.2555  acc: 95.4102  loss_bbox: 0.1791
05/13 23:08:47 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 2.0000e-02  eta: 15:10:48  time: 0.1828  data_time: 0.0032  memory: 3710  loss: 0.6654  loss_rpn_cls: 0.0762  loss_rpn_bbox: 0.0976  loss_cls: 0.2835  acc: 92.4805  loss_bbox: 0.2081
05/13 23:08:56 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 2.0000e-02  eta: 15:10:21  time: 0.1823  data_time: 0.0033  memory: 3710  loss: 0.6134  loss_rpn_cls: 0.0826  loss_rpn_bbox: 0.0940  loss_cls: 0.2625  acc: 94.3359  loss_bbox: 0.1743
05/13 23:09:06 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 2.0000e-02  eta: 15:10:08  time: 0.1841  data_time: 0.0033  memory: 3709  loss: 0.5477  loss_rpn_cls: 0.0644  loss_rpn_bbox: 0.1036  loss_cls: 0.2193  acc: 95.0195  loss_bbox: 0.1604
05/13 23:09:15 - mmengine - INFO - Exp name: libra_rcnn_r101_voc0712_20240513_230252
05/13 23:09:15 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 2.0000e-02  eta: 15:10:11  time: 0.1861  data_time: 0.0034  memory: 3709  loss: 0.5784  loss_rpn_cls: 0.0791  loss_rpn_bbox: 0.1092  loss_cls: 0.2266  acc: 98.1445  loss_bbox: 0.1636
05/13 23:09:24 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 2.0000e-02  eta: 15:09:53  time: 0.1833  data_time: 0.0031  memory: 3710  loss: 0.6232  loss_rpn_cls: 0.0742  loss_rpn_bbox: 0.0958  loss_cls: 0.2650  acc: 93.1641  loss_bbox: 0.1883
05/13 23:09:33 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 2.0000e-02  eta: 15:09:22  time: 0.1815  data_time: 0.0030  memory: 3710  loss: 0.5348  loss_rpn_cls: 0.0593  loss_rpn_bbox: 0.0892  loss_cls: 0.2258  acc: 97.4609  loss_bbox: 0.1606
05/13 23:09:42 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 2.0000e-02  eta: 15:09:24  time: 0.1860  data_time: 0.0031  memory: 3710  loss: 0.5976  loss_rpn_cls: 0.0941  loss_rpn_bbox: 0.1005  loss_cls: 0.2313  acc: 97.7539  loss_bbox: 0.1717
05/13 23:09:51 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 2.0000e-02  eta: 15:08:58  time: 0.1820  data_time: 0.0033  memory: 3709  loss: 0.5961  loss_rpn_cls: 0.0574  loss_rpn_bbox: 0.1033  loss_cls: 0.2524  acc: 88.7695  loss_bbox: 0.1831
05/13 23:10:01 - mmengine - INFO - Epoch(train)  [1][ 2250/24827]  lr: 2.0000e-02  eta: 15:08:36  time: 0.1825  data_time: 0.0031  memory: 3710  loss: 0.6049  loss_rpn_cls: 0.0691  loss_rpn_bbox: 0.0903  loss_cls: 0.2589  acc: 93.2617  loss_bbox: 0.1865
05/13 23:10:10 - mmengine - INFO - Epoch(train)  [1][ 2300/24827]  lr: 2.0000e-02  eta: 15:08:12  time: 0.1821  data_time: 0.0031  memory: 3709  loss: 0.6206  loss_rpn_cls: 0.0637  loss_rpn_bbox: 0.0976  loss_cls: 0.2614  acc: 97.3633  loss_bbox: 0.1979
05/13 23:10:19 - mmengine - INFO - Epoch(train)  [1][ 2350/24827]  lr: 2.0000e-02  eta: 15:07:58  time: 0.1834  data_time: 0.0033  memory: 3710  loss: 0.6287  loss_rpn_cls: 0.0697  loss_rpn_bbox: 0.0980  loss_cls: 0.2723  acc: 97.7539  loss_bbox: 0.1887
05/13 23:10:28 - mmengine - INFO - Epoch(train)  [1][ 2400/24827]  lr: 2.0000e-02  eta: 15:07:40  time: 0.1829  data_time: 0.0032  memory: 3545  loss: 0.5892  loss_rpn_cls: 0.0746  loss_rpn_bbox: 0.0991  loss_cls: 0.2354  acc: 95.5078  loss_bbox: 0.1800
submitit WARNING (2024-05-13 23:10:36,838) - Bypassing signal SIGCONT
submitit ERROR (2024-05-13 23:10:36,930) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n482
Job ID: 23594833
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:32
CPU Efficiency: 10.14% of 01:24:10 core-walltime
Job Wall-clock time: 00:08:25
Memory Utilized: 1.55 GB
Memory Efficiency: 1.69% of 91.80 GB
