submitit INFO (2024-05-14 01:10:02,219) - Starting with JobEnvironment(job_id=23594836, hostname=uc2n486.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 01:10:02,220) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/faster_rcnn_r101_voc0712/23594836_submitted.pkl
05/14 01:10:06 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 834716276
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 834716276
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 01:10:06 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=80,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            9,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/faster_rcnn_r101_voc0712'

05/14 01:10:08 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 01:10:08 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 01:10:16 - mmengine - INFO - load model from: torchvision://resnet101
05/14 01:10:16 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/14 01:10:18 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 01:10:18 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 01:10:18 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 01:10:18 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/faster_rcnn_r101_voc0712.
05/14 01:10:28 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 1.9820e-03  eta: 17:20:07  time: 0.2095  data_time: 0.0082  memory: 3445  loss: 1.4141  loss_rpn_cls: 0.3373  loss_rpn_bbox: 0.0210  loss_cls: 0.9745  acc: 95.6055  loss_bbox: 0.0813
05/14 01:10:37 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 3.9840e-03  eta: 15:53:21  time: 0.1746  data_time: 0.0036  memory: 3445  loss: 0.5980  loss_rpn_cls: 0.0784  loss_rpn_bbox: 0.0281  loss_cls: 0.3274  acc: 96.3867  loss_bbox: 0.1640
05/14 01:10:46 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 5.9860e-03  eta: 15:22:51  time: 0.1737  data_time: 0.0034  memory: 3445  loss: 0.5264  loss_rpn_cls: 0.0461  loss_rpn_bbox: 0.0176  loss_cls: 0.2838  acc: 96.7773  loss_bbox: 0.1789
05/14 01:10:55 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 7.9880e-03  eta: 15:06:32  time: 0.1729  data_time: 0.0034  memory: 3445  loss: 0.5850  loss_rpn_cls: 0.0453  loss_rpn_bbox: 0.0197  loss_cls: 0.3083  acc: 92.8711  loss_bbox: 0.2118
05/14 01:11:03 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 9.9900e-03  eta: 14:58:26  time: 0.1747  data_time: 0.0033  memory: 3445  loss: 0.5651  loss_rpn_cls: 0.0458  loss_rpn_bbox: 0.0210  loss_cls: 0.3108  acc: 93.7500  loss_bbox: 0.1875
05/14 01:11:12 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 1.1992e-02  eta: 14:52:53  time: 0.1746  data_time: 0.0033  memory: 3445  loss: 0.5986  loss_rpn_cls: 0.0367  loss_rpn_bbox: 0.0224  loss_cls: 0.3270  acc: 94.1406  loss_bbox: 0.2126
05/14 01:11:21 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 1.3994e-02  eta: 14:49:02  time: 0.1748  data_time: 0.0032  memory: 3445  loss: 0.5365  loss_rpn_cls: 0.0488  loss_rpn_bbox: 0.0216  loss_cls: 0.2871  acc: 93.5547  loss_bbox: 0.1790
05/14 01:11:29 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 1.5996e-02  eta: 14:46:02  time: 0.1747  data_time: 0.0032  memory: 3445  loss: 0.5693  loss_rpn_cls: 0.0702  loss_rpn_bbox: 0.0209  loss_cls: 0.3225  acc: 96.7773  loss_bbox: 0.1556
05/14 01:11:38 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 1.7998e-02  eta: 14:36:30  time: 0.1616  data_time: 0.0032  memory: 3446  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:11:45 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 2.0000e-02  eta: 14:25:38  time: 0.1552  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:11:53 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 2.0000e-02  eta: 14:15:59  time: 0.1535  data_time: 0.0032  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:01 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 2.0000e-02  eta: 14:08:43  time: 0.1554  data_time: 0.0032  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:08 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 2.0000e-02  eta: 14:01:28  time: 0.1526  data_time: 0.0032  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:16 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 2.0000e-02  eta: 13:55:30  time: 0.1534  data_time: 0.0033  memory: 3263  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:24 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 2.0000e-02  eta: 13:51:16  time: 0.1563  data_time: 0.0031  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:32 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 2.0000e-02  eta: 13:47:38  time: 0.1565  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:39 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 2.0000e-02  eta: 13:43:37  time: 0.1538  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:47 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 2.0000e-02  eta: 13:40:41  time: 0.1562  data_time: 0.0032  memory: 3350  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:12:55 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 2.0000e-02  eta: 13:37:27  time: 0.1539  data_time: 0.0032  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:03 - mmengine - INFO - Exp name: faster_rcnn_r101_voc0712_20240514_011005
05/14 01:13:03 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 2.0000e-02  eta: 13:34:57  time: 0.1556  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:10 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 2.0000e-02  eta: 13:32:48  time: 0.1562  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:18 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 2.0000e-02  eta: 13:30:18  time: 0.1537  data_time: 0.0031  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:26 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 2.0000e-02  eta: 13:28:22  time: 0.1554  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:34 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 2.0000e-02  eta: 13:26:00  time: 0.1526  data_time: 0.0031  memory: 3263  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:41 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 2.0000e-02  eta: 13:24:17  time: 0.1549  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:49 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 2.0000e-02  eta: 13:22:47  time: 0.1555  data_time: 0.0032  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:13:57 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 2.0000e-02  eta: 13:21:23  time: 0.1555  data_time: 0.0035  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:05 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 2.0000e-02  eta: 13:20:22  time: 0.1571  data_time: 0.0033  memory: 3370  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:13 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 2.0000e-02  eta: 13:19:15  time: 0.1563  data_time: 0.0038  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:20 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 2.0000e-02  eta: 13:17:54  time: 0.1543  data_time: 0.0034  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 25.0000  loss_bbox: nan
05/14 01:14:28 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 2.0000e-02  eta: 13:17:21  time: 0.1589  data_time: 0.0034  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:36 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 2.0000e-02  eta: 13:16:27  time: 0.1565  data_time: 0.0034  memory: 3446  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:44 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 2.0000e-02  eta: 13:15:20  time: 0.1548  data_time: 0.0034  memory: 3370  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:52 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 2.0000e-02  eta: 13:14:29  time: 0.1560  data_time: 0.0034  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:14:59 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 2.0000e-02  eta: 13:13:27  time: 0.1546  data_time: 0.0034  memory: 3446  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:07 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 2.0000e-02  eta: 13:12:50  time: 0.1571  data_time: 0.0034  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:15 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 2.0000e-02  eta: 13:11:51  time: 0.1543  data_time: 0.0033  memory: 3446  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:23 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 2.0000e-02  eta: 13:10:51  time: 0.1537  data_time: 0.0034  memory: 3192  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:30 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 2.0000e-02  eta: 13:10:02  time: 0.1550  data_time: 0.0033  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:38 - mmengine - INFO - Exp name: faster_rcnn_r101_voc0712_20240514_011005
05/14 01:15:38 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 2.0000e-02  eta: 13:09:02  time: 0.1531  data_time: 0.0033  memory: 3178  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:46 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 2.0000e-02  eta: 13:08:24  time: 0.1559  data_time: 0.0034  memory: 3446  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:15:54 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 2.0000e-02  eta: 13:08:02  time: 0.1579  data_time: 0.0034  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:01 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 2.0000e-02  eta: 13:07:15  time: 0.1541  data_time: 0.0034  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:09 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 2.0000e-02  eta: 13:06:41  time: 0.1558  data_time: 0.0033  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:17 - mmengine - INFO - Epoch(train)  [1][ 2250/24827]  lr: 2.0000e-02  eta: 13:06:00  time: 0.1546  data_time: 0.0033  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:25 - mmengine - INFO - Epoch(train)  [1][ 2300/24827]  lr: 2.0000e-02  eta: 13:05:21  time: 0.1546  data_time: 0.0033  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:33 - mmengine - INFO - Epoch(train)  [1][ 2350/24827]  lr: 2.0000e-02  eta: 13:05:07  time: 0.1584  data_time: 0.0033  memory: 3370  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:40 - mmengine - INFO - Epoch(train)  [1][ 2400/24827]  lr: 2.0000e-02  eta: 13:04:30  time: 0.1547  data_time: 0.0033  memory: 3263  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:48 - mmengine - INFO - Epoch(train)  [1][ 2450/24827]  lr: 2.0000e-02  eta: 13:03:55  time: 0.1547  data_time: 0.0033  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:16:56 - mmengine - INFO - Epoch(train)  [1][ 2500/24827]  lr: 2.0000e-02  eta: 13:03:35  time: 0.1572  data_time: 0.0034  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:04 - mmengine - INFO - Epoch(train)  [1][ 2550/24827]  lr: 2.0000e-02  eta: 13:03:20  time: 0.1579  data_time: 0.0033  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:12 - mmengine - INFO - Epoch(train)  [1][ 2600/24827]  lr: 2.0000e-02  eta: 13:02:47  time: 0.1548  data_time: 0.0033  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:19 - mmengine - INFO - Epoch(train)  [1][ 2650/24827]  lr: 2.0000e-02  eta: 13:02:26  time: 0.1567  data_time: 0.0034  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:27 - mmengine - INFO - Epoch(train)  [1][ 2700/24827]  lr: 2.0000e-02  eta: 13:02:02  time: 0.1561  data_time: 0.0033  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:35 - mmengine - INFO - Epoch(train)  [1][ 2750/24827]  lr: 2.0000e-02  eta: 13:01:36  time: 0.1555  data_time: 0.0033  memory: 3446  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:43 - mmengine - INFO - Epoch(train)  [1][ 2800/24827]  lr: 2.0000e-02  eta: 13:01:10  time: 0.1553  data_time: 0.0033  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:50 - mmengine - INFO - Epoch(train)  [1][ 2850/24827]  lr: 2.0000e-02  eta: 13:00:44  time: 0.1554  data_time: 0.0033  memory: 3445  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 0.0000  loss_bbox: nan
05/14 01:17:58 - mmengine - INFO - Epoch(train)  [1][ 2900/24827]  lr: 2.0000e-02  eta: 13:00:10  time: 0.1536  data_time: 0.0033  memory: 3369  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 12.5000  loss_bbox: nan
submitit WARNING (2024-05-14 01:17:58,863) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 01:17:58,935) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n486
Job ID: 23594836
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:40
CPU Efficiency: 10.24% of 01:24:40 core-walltime
Job Wall-clock time: 00:08:28
Memory Utilized: 1.57 GB
Memory Efficiency: 1.71% of 91.80 GB
