submitit INFO (2024-05-14 03:59:28,338) - Starting with JobEnvironment(job_id=23594881, hostname=uc2n512.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 03:59:28,338) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/vfnet_r50_voc0712/23594881_submitted.pkl
05/14 03:59:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 698782522
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 698782522
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 03:59:33 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 24
model = dict(
    backbone=dict(
        dcn=dict(deform_groups=1, fallback_on_stride=False, type='DCNv2'),
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        stage_with_dcn=(
            False,
            True,
            True,
            True,
        ),
        style='pytorch',
        type='ResNet'),
    bbox_head=dict(
        center_sampling=False,
        dcn_on_last_conv=True,
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.5, type='GIoULoss'),
        loss_bbox_refine=dict(loss_weight=2.0, type='GIoULoss'),
        loss_cls=dict(
            alpha=0.75,
            gamma=2.0,
            iou_weighted=True,
            loss_weight=1.0,
            type='VarifocalLoss',
            use_sigmoid=True),
        num_classes=80,
        stacked_convs=3,
        strides=[
            8,
            16,
            32,
            64,
            128,
        ],
        type='VFNetHead',
        use_atss=True,
        use_vfl=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_output',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        relu_before_extra_convs=True,
        start_level=1,
        type='FPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.6, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(topk=9, type='ATSSAssigner'),
        debug=False,
        pos_weight=-1),
    type='VFNet')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    paramwise_cfg=dict(bias_decay_mult=0.0, bias_lr_mult=2.0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=500, start_factor=0.1, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=24,
        gamma=0.1,
        milestones=[
            16,
            22,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=24, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/vfnet_r50_voc0712'

05/14 03:59:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 03:59:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.0.downsample.1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.2.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.2.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.2.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.3.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.3.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer2.3.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.0.downsample.1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.2.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.2.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.2.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.3.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.3.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.3.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.4.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.4.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.4.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.5.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.5.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer3.5.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.0.downsample.1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.2.bn1.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.2.bn2.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- backbone.layer4.2.bn3.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.lateral_convs.0.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.lateral_convs.0.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.lateral_convs.1.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.lateral_convs.1.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.lateral_convs.2.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.lateral_convs.2.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.0.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.0.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.1.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.1.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.2.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.2.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.3.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.3.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.4.conv.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- neck.fpn_convs.4.conv.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_reg_conv.gn.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_reg.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_reg.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_reg_refine.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_reg_refine.bias:weight_decay=0.0
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_cls.bias:lr=0.02
05/14 03:59:40 - mmengine - INFO - paramwise_options -- bbox_head.vfnet_cls.bias:weight_decay=0.0
05/14 03:59:42 - mmengine - INFO - load model from: torchvision://resnet50
05/14 03:59:42 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
05/14 03:59:43 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

missing keys in source state_dict: layer2.0.conv2.conv_offset.weight, layer2.0.conv2.conv_offset.bias, layer2.1.conv2.conv_offset.weight, layer2.1.conv2.conv_offset.bias, layer2.2.conv2.conv_offset.weight, layer2.2.conv2.conv_offset.bias, layer2.3.conv2.conv_offset.weight, layer2.3.conv2.conv_offset.bias, layer3.0.conv2.conv_offset.weight, layer3.0.conv2.conv_offset.bias, layer3.1.conv2.conv_offset.weight, layer3.1.conv2.conv_offset.bias, layer3.2.conv2.conv_offset.weight, layer3.2.conv2.conv_offset.bias, layer3.3.conv2.conv_offset.weight, layer3.3.conv2.conv_offset.bias, layer3.4.conv2.conv_offset.weight, layer3.4.conv2.conv_offset.bias, layer3.5.conv2.conv_offset.weight, layer3.5.conv2.conv_offset.bias, layer4.0.conv2.conv_offset.weight, layer4.0.conv2.conv_offset.bias, layer4.1.conv2.conv_offset.weight, layer4.1.conv2.conv_offset.bias, layer4.2.conv2.conv_offset.weight, layer4.2.conv2.conv_offset.bias

05/14 03:59:43 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 03:59:43 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 03:59:43 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/vfnet_r50_voc0712.
05/14 03:59:55 - mmengine - INFO - Epoch(train)  [1][   50/24827]  base_lr: 1.8838e-03 lr: 1.8838e-03  eta: 1 day, 13:58:18  time: 0.2294  data_time: 0.0084  memory: 2060  loss: 3.1069  loss_cls: 0.3879  loss_bbox: 1.0849  loss_bbox_rf: 1.6341
05/14 04:00:06 - mmengine - INFO - Epoch(train)  [1][  100/24827]  base_lr: 2.7856e-03 lr: 2.7856e-03  eta: 1 day, 12:51:45  time: 0.2161  data_time: 0.0044  memory: 2060  loss: 2.8638  loss_cls: 0.8794  loss_bbox: 0.8285  loss_bbox_rf: 1.1559
05/14 04:00:17 - mmengine - INFO - Epoch(train)  [1][  150/24827]  base_lr: 3.6874e-03 lr: 3.6874e-03  eta: 1 day, 12:32:42  time: 0.2171  data_time: 0.0043  memory: 2060  loss: 2.7482  loss_cls: 0.7236  loss_bbox: 0.8581  loss_bbox_rf: 1.1665
05/14 04:00:27 - mmengine - INFO - Epoch(train)  [1][  200/24827]  base_lr: 4.5892e-03 lr: 4.5892e-03  eta: 1 day, 12:17:43  time: 0.2149  data_time: 0.0042  memory: 2060  loss: 2.8949  loss_cls: 1.1379  loss_bbox: 0.7574  loss_bbox_rf: 0.9996
05/14 04:00:38 - mmengine - INFO - Epoch(train)  [1][  250/24827]  base_lr: 5.4910e-03 lr: 5.4910e-03  eta: 1 day, 12:04:19  time: 0.2127  data_time: 0.0043  memory: 2060  loss: 2.8626  loss_cls: 1.1087  loss_bbox: 0.7514  loss_bbox_rf: 1.0025
05/14 04:00:48 - mmengine - INFO - Epoch(train)  [1][  300/24827]  base_lr: 6.3928e-03 lr: 6.3928e-03  eta: 1 day, 11:47:13  time: 0.2078  data_time: 0.0044  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:00:59 - mmengine - INFO - Epoch(train)  [1][  350/24827]  base_lr: 7.2946e-03 lr: 7.2946e-03  eta: 1 day, 11:29:57  time: 0.2043  data_time: 0.0043  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:01:09 - mmengine - INFO - Epoch(train)  [1][  400/24827]  base_lr: 8.1964e-03 lr: 8.1964e-03  eta: 1 day, 11:16:59  time: 0.2043  data_time: 0.0043  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:01:19 - mmengine - INFO - Epoch(train)  [1][  450/24827]  base_lr: 9.0982e-03 lr: 9.0982e-03  eta: 1 day, 11:08:07  time: 0.2054  data_time: 0.0042  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:01:29 - mmengine - INFO - Epoch(train)  [1][  500/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 11:00:49  time: 0.2053  data_time: 0.0041  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:01:40 - mmengine - INFO - Epoch(train)  [1][  550/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:53:50  time: 0.2042  data_time: 0.0037  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:01:50 - mmengine - INFO - Epoch(train)  [1][  600/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:47:46  time: 0.2039  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:02:00 - mmengine - INFO - Epoch(train)  [1][  650/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:43:10  time: 0.2046  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:02:10 - mmengine - INFO - Epoch(train)  [1][  700/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:40:38  time: 0.2067  data_time: 0.0037  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:02:21 - mmengine - INFO - Epoch(train)  [1][  750/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:37:50  time: 0.2058  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:02:31 - mmengine - INFO - Epoch(train)  [1][  800/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:35:28  time: 0.2060  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:02:41 - mmengine - INFO - Epoch(train)  [1][  850/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:31:14  time: 0.2023  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:02:51 - mmengine - INFO - Epoch(train)  [1][  900/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:29:58  time: 0.2069  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:03:02 - mmengine - INFO - Epoch(train)  [1][  950/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:27:02  time: 0.2035  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:03:12 - mmengine - INFO - Exp name: vfnet_r50_voc0712_20240514_035931
05/14 04:03:12 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:24:54  time: 0.2045  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:03:22 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:22:53  time: 0.2044  data_time: 0.0037  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:03:32 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:20:57  time: 0.2042  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:03:42 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:19:40  time: 0.2054  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:03:53 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:19:06  time: 0.2069  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:04:03 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:17:21  time: 0.2038  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:04:13 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:17:34  time: 0.2086  data_time: 0.0039  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:04:24 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:16:28  time: 0.2051  data_time: 0.0039  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:04:34 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:15:35  time: 0.2056  data_time: 0.0035  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:04:44 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:15:02  time: 0.2064  data_time: 0.0035  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:04:54 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:13:39  time: 0.2038  data_time: 0.0038  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:05:05 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:12:16  time: 0.2035  data_time: 0.0035  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:05:15 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:10:52  time: 0.2032  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:05:25 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:10:15  time: 0.2056  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:05:35 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:08:53  time: 0.2029  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:05:46 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:08:57  time: 0.2077  data_time: 0.0037  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:05:56 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:08:21  time: 0.2054  data_time: 0.0036  memory: 2003  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:06:06 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:07:24  time: 0.2040  data_time: 0.0037  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:06:16 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:06:32  time: 0.2042  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:06:27 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:06:33  time: 0.2075  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:06:37 - mmengine - INFO - Exp name: vfnet_r50_voc0712_20240514_035931
05/14 04:06:37 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:06:27  time: 0.2070  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:06:47 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:06:31  time: 0.2078  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
05/14 04:06:58 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1 day, 10:05:54  time: 0.2049  data_time: 0.0036  memory: 2060  loss: nan  loss_cls: nan  loss_bbox: nan  loss_bbox_rf: nan
submitit WARNING (2024-05-14 04:07:04,285) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 04:07:04,290) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n512
Job ID: 23594881
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:09
CPU Efficiency: 10.00% of 01:21:30 core-walltime
Job Wall-clock time: 00:08:09
Memory Utilized: 1.37 GB
Memory Efficiency: 1.50% of 91.80 GB
