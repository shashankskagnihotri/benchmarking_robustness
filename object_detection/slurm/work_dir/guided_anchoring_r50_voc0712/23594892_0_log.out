submitit INFO (2024-05-14 04:09:36,251) - Starting with JobEnvironment(job_id=23594892, hostname=uc2n512.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 04:09:36,252) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/guided_anchoring_r50_voc0712/23594892_submitted.pkl
05/14 04:09:41 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1573574040
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1573574040
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 04:09:41 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.05,
                    0.05,
                    0.1,
                    0.1,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=80,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.07,
                0.07,
                0.14,
                0.14,
            ],
            type='DeltaXYWHBBoxCoder'),
        approx_anchor_generator=dict(
            octave_base_scale=8,
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.07,
                0.07,
                0.11,
                0.11,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loc_filter_thr=0.01,
        loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        loss_loc=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_shape=dict(beta=0.2, loss_weight=1.0, type='BoundedIoULoss'),
        square_anchor_generator=dict(
            ratios=[
                1.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        type='GARPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.001),
        rpn=dict(
            max_per_img=300,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_post=1000,
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.6,
                neg_iou_thr=0.6,
                pos_iou_thr=0.6,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            center_ratio=0.2,
            debug=False,
            ga_assigner=dict(
                ignore_iof_thr=-1,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='ApproxMaxIoUAssigner'),
            ga_sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler'),
            ignore_ratio=0.5,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=300,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_post=1000,
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/guided_anchoring_r50_voc0712'

05/14 04:09:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 04:09:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 04:09:51 - mmengine - INFO - load model from: torchvision://resnet50
05/14 04:09:51 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
05/14 04:09:52 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 04:09:52 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 04:09:52 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 04:09:52 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/guided_anchoring_r50_voc0712.
05/14 04:10:04 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 1.9820e-03  eta: 18:46:10  time: 0.2268  data_time: 0.0074  memory: 2945  grad_norm: 23.9946  loss: 7.1449  loss_rpn_cls: 0.2517  loss_rpn_bbox: 0.0602  rpn_loss_anchor_shape: 0.0424  rpn_loss_anchor_loc: 5.6599  loss_cls: 1.0847  acc: 99.2188  loss_bbox: 0.0460
05/14 04:10:14 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 3.9840e-03  eta: 18:05:51  time: 0.2107  data_time: 0.0028  memory: 2860  grad_norm: 4.3217  loss: 0.5563  loss_rpn_cls: 0.0386  loss_rpn_bbox: 0.0598  rpn_loss_anchor_shape: 0.0432  rpn_loss_anchor_loc: 0.1681  loss_cls: 0.1718  acc: 96.8750  loss_bbox: 0.0747
05/14 04:10:25 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 5.9860e-03  eta: 17:54:44  time: 0.2122  data_time: 0.0030  memory: 2945  grad_norm: 2.4150  loss: 0.4265  loss_rpn_cls: 0.0283  loss_rpn_bbox: 0.0585  rpn_loss_anchor_shape: 0.0354  rpn_loss_anchor_loc: 0.0412  loss_cls: 0.1659  acc: 98.4375  loss_bbox: 0.0971
05/14 04:10:36 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 7.9880e-03  eta: 17:51:08  time: 0.2138  data_time: 0.0029  memory: 2945  grad_norm: 2.5268  loss: 0.4759  loss_rpn_cls: 0.0390  loss_rpn_bbox: 0.0579  rpn_loss_anchor_shape: 0.0338  rpn_loss_anchor_loc: 0.0599  loss_cls: 0.1786  acc: 99.0234  loss_bbox: 0.1066
05/14 04:10:46 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 9.9900e-03  eta: 17:48:36  time: 0.2135  data_time: 0.0029  memory: 2945  grad_norm: 1.9205  loss: 0.4762  loss_rpn_cls: 0.0406  loss_rpn_bbox: 0.0641  rpn_loss_anchor_shape: 0.0374  rpn_loss_anchor_loc: 0.0517  loss_cls: 0.1780  acc: 97.6562  loss_bbox: 0.1043
05/14 04:10:57 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 1.1992e-02  eta: 17:43:35  time: 0.2095  data_time: 0.0029  memory: 2945  grad_norm: 1.7921  loss: 0.5096  loss_rpn_cls: 0.0410  loss_rpn_bbox: 0.0645  rpn_loss_anchor_shape: 0.0383  rpn_loss_anchor_loc: 0.0367  loss_cls: 0.1989  acc: 98.2422  loss_bbox: 0.1303
05/14 04:11:07 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 1.3994e-02  eta: 17:38:58  time: 0.2082  data_time: 0.0030  memory: 2945  grad_norm: 1.6801  loss: 0.4343  loss_rpn_cls: 0.0331  loss_rpn_bbox: 0.0581  rpn_loss_anchor_shape: 0.0323  rpn_loss_anchor_loc: 0.0426  loss_cls: 0.1670  acc: 97.0703  loss_bbox: 0.1011
05/14 04:11:18 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 1.5996e-02  eta: 17:35:53  time: 0.2088  data_time: 0.0027  memory: 2945  grad_norm: 2.1017  loss: 0.5200  loss_rpn_cls: 0.0382  loss_rpn_bbox: 0.0651  rpn_loss_anchor_shape: 0.0402  rpn_loss_anchor_loc: 0.0547  loss_cls: 0.2017  acc: 96.6797  loss_bbox: 0.1202
05/14 04:11:28 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 1.7998e-02  eta: 17:34:17  time: 0.2103  data_time: 0.0028  memory: 2945  grad_norm: 2.4075  loss: 0.5214  loss_rpn_cls: 0.0495  loss_rpn_bbox: 0.0654  rpn_loss_anchor_shape: 0.0337  rpn_loss_anchor_loc: 0.0641  loss_cls: 0.1941  acc: 98.6328  loss_bbox: 0.1146
05/14 04:11:39 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 2.0000e-02  eta: 17:33:29  time: 0.2114  data_time: 0.0028  memory: 2945  grad_norm: 1.4016  loss: 0.4538  loss_rpn_cls: 0.0416  loss_rpn_bbox: 0.0617  rpn_loss_anchor_shape: 0.0304  rpn_loss_anchor_loc: 0.0372  loss_cls: 0.1782  acc: 96.2891  loss_bbox: 0.1048
05/14 04:11:49 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 2.0000e-02  eta: 17:33:34  time: 0.2131  data_time: 0.0028  memory: 2945  grad_norm: 1.8254  loss: 0.5234  loss_rpn_cls: 0.0340  loss_rpn_bbox: 0.0675  rpn_loss_anchor_shape: 0.0381  rpn_loss_anchor_loc: 0.0520  loss_cls: 0.2034  acc: 99.2188  loss_bbox: 0.1285
05/14 04:12:00 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 2.0000e-02  eta: 17:33:06  time: 0.2119  data_time: 0.0029  memory: 2945  grad_norm: 1.5283  loss: 0.4993  loss_rpn_cls: 0.0396  loss_rpn_bbox: 0.0742  rpn_loss_anchor_shape: 0.0380  rpn_loss_anchor_loc: 0.0332  loss_cls: 0.1917  acc: 96.4844  loss_bbox: 0.1227
05/14 04:12:10 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 2.0000e-02  eta: 17:31:21  time: 0.2084  data_time: 0.0028  memory: 2945  grad_norm: 1.8208  loss: 0.5737  loss_rpn_cls: 0.0446  loss_rpn_bbox: 0.0768  rpn_loss_anchor_shape: 0.0419  rpn_loss_anchor_loc: 0.0635  loss_cls: 0.2103  acc: 98.6328  loss_bbox: 0.1367
05/14 04:12:21 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 2.0000e-02  eta: 17:30:20  time: 0.2098  data_time: 0.0029  memory: 2946  grad_norm: 1.1110  loss: 0.4029  loss_rpn_cls: 0.0282  loss_rpn_bbox: 0.0530  rpn_loss_anchor_shape: 0.0309  rpn_loss_anchor_loc: 0.0254  loss_cls: 0.1596  acc: 95.7031  loss_bbox: 0.1058
05/14 04:12:31 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 2.0000e-02  eta: 17:30:01  time: 0.2116  data_time: 0.0027  memory: 2945  grad_norm: 1.6696  loss: 0.5151  loss_rpn_cls: 0.0353  loss_rpn_bbox: 0.0709  rpn_loss_anchor_shape: 0.0361  rpn_loss_anchor_loc: 0.0401  loss_cls: 0.2023  acc: 98.2422  loss_bbox: 0.1304
05/14 04:12:42 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 2.0000e-02  eta: 17:28:20  time: 0.2071  data_time: 0.0028  memory: 2945  grad_norm: 1.6241  loss: 0.4515  loss_rpn_cls: 0.0356  loss_rpn_bbox: 0.0589  rpn_loss_anchor_shape: 0.0282  rpn_loss_anchor_loc: 0.0346  loss_cls: 0.1762  acc: 98.8281  loss_bbox: 0.1180
05/14 04:12:52 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 2.0000e-02  eta: 17:27:54  time: 0.2108  data_time: 0.0028  memory: 2945  grad_norm: 1.2353  loss: 0.4379  loss_rpn_cls: 0.0392  loss_rpn_bbox: 0.0639  rpn_loss_anchor_shape: 0.0323  rpn_loss_anchor_loc: 0.0284  loss_cls: 0.1664  acc: 97.2656  loss_bbox: 0.1078
05/14 04:13:03 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 2.0000e-02  eta: 17:26:57  time: 0.2088  data_time: 0.0028  memory: 2945  grad_norm: 1.1163  loss: 0.4261  loss_rpn_cls: 0.0262  loss_rpn_bbox: 0.0599  rpn_loss_anchor_shape: 0.0293  rpn_loss_anchor_loc: 0.0243  loss_cls: 0.1592  acc: 98.4375  loss_bbox: 0.1272
05/14 04:13:13 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 2.0000e-02  eta: 17:26:55  time: 0.2121  data_time: 0.0028  memory: 2945  grad_norm: 1.2554  loss: 0.4528  loss_rpn_cls: 0.0272  loss_rpn_bbox: 0.0607  rpn_loss_anchor_shape: 0.0321  rpn_loss_anchor_loc: 0.0258  loss_cls: 0.1713  acc: 98.4375  loss_bbox: 0.1357
05/14 04:13:24 - mmengine - INFO - Exp name: guided_anchoring_r50_voc0712_20240514_040940
05/14 04:13:24 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 2.0000e-02  eta: 17:26:10  time: 0.2091  data_time: 0.0028  memory: 2944  grad_norm: 1.3154  loss: 0.4728  loss_rpn_cls: 0.0312  loss_rpn_bbox: 0.0677  rpn_loss_anchor_shape: 0.0333  rpn_loss_anchor_loc: 0.0343  loss_cls: 0.1765  acc: 96.4844  loss_bbox: 0.1298
05/14 04:13:34 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 2.0000e-02  eta: 17:25:35  time: 0.2097  data_time: 0.0028  memory: 2945  grad_norm: 1.7425  loss: 0.4704  loss_rpn_cls: 0.0352  loss_rpn_bbox: 0.0550  rpn_loss_anchor_shape: 0.0254  rpn_loss_anchor_loc: 0.0360  loss_cls: 0.1867  acc: 97.6562  loss_bbox: 0.1320
05/14 04:13:45 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 2.0000e-02  eta: 17:26:13  time: 0.2149  data_time: 0.0029  memory: 2860  grad_norm: 1.1041  loss: 0.4389  loss_rpn_cls: 0.0291  loss_rpn_bbox: 0.0578  rpn_loss_anchor_shape: 0.0345  rpn_loss_anchor_loc: 0.0350  loss_cls: 0.1585  acc: 98.6328  loss_bbox: 0.1241
05/14 04:13:56 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 2.0000e-02  eta: 17:27:00  time: 0.2159  data_time: 0.0030  memory: 2945  grad_norm: 1.3541  loss: 0.4456  loss_rpn_cls: 0.0341  loss_rpn_bbox: 0.0630  rpn_loss_anchor_shape: 0.0310  rpn_loss_anchor_loc: 0.0408  loss_cls: 0.1663  acc: 98.2422  loss_bbox: 0.1105
05/14 04:14:06 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 2.0000e-02  eta: 17:26:39  time: 0.2108  data_time: 0.0028  memory: 2945  grad_norm: 1.0911  loss: 0.4478  loss_rpn_cls: 0.0321  loss_rpn_bbox: 0.0639  rpn_loss_anchor_shape: 0.0328  rpn_loss_anchor_loc: 0.0302  loss_cls: 0.1634  acc: 98.2422  loss_bbox: 0.1254
05/14 04:14:17 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 2.0000e-02  eta: 17:26:05  time: 0.2097  data_time: 0.0027  memory: 2944  grad_norm: 1.0122  loss: 0.4181  loss_rpn_cls: 0.0227  loss_rpn_bbox: 0.0574  rpn_loss_anchor_shape: 0.0284  rpn_loss_anchor_loc: 0.0237  loss_cls: 0.1541  acc: 98.2422  loss_bbox: 0.1319
05/14 04:14:27 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 2.0000e-02  eta: 17:25:15  time: 0.2081  data_time: 0.0028  memory: 2945  grad_norm: 1.8398  loss: 0.4888  loss_rpn_cls: 0.0429  loss_rpn_bbox: 0.0602  rpn_loss_anchor_shape: 0.0359  rpn_loss_anchor_loc: 0.0595  loss_cls: 0.1765  acc: 97.8516  loss_bbox: 0.1137
05/14 04:14:38 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 2.0000e-02  eta: 17:24:52  time: 0.2103  data_time: 0.0028  memory: 2945  grad_norm: 1.1940  loss: 0.4438  loss_rpn_cls: 0.0300  loss_rpn_bbox: 0.0614  rpn_loss_anchor_shape: 0.0320  rpn_loss_anchor_loc: 0.0277  loss_cls: 0.1675  acc: 91.9922  loss_bbox: 0.1252
05/14 04:14:48 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 2.0000e-02  eta: 17:24:31  time: 0.2104  data_time: 0.0028  memory: 2945  grad_norm: 1.2966  loss: 0.4042  loss_rpn_cls: 0.0359  loss_rpn_bbox: 0.0555  rpn_loss_anchor_shape: 0.0319  rpn_loss_anchor_loc: 0.0371  loss_cls: 0.1451  acc: 98.0469  loss_bbox: 0.0987
05/14 04:14:59 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 2.0000e-02  eta: 17:23:56  time: 0.2090  data_time: 0.0027  memory: 2945  grad_norm: 1.0863  loss: 0.4303  loss_rpn_cls: 0.0311  loss_rpn_bbox: 0.0578  rpn_loss_anchor_shape: 0.0324  rpn_loss_anchor_loc: 0.0272  loss_cls: 0.1599  acc: 95.8984  loss_bbox: 0.1220
05/14 04:15:09 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 2.0000e-02  eta: 17:23:09  time: 0.2076  data_time: 0.0031  memory: 2945  grad_norm: 1.3679  loss: 0.4550  loss_rpn_cls: 0.0403  loss_rpn_bbox: 0.0604  rpn_loss_anchor_shape: 0.0320  rpn_loss_anchor_loc: 0.0377  loss_cls: 0.1620  acc: 98.8281  loss_bbox: 0.1227
05/14 04:15:20 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 2.0000e-02  eta: 17:22:52  time: 0.2104  data_time: 0.0028  memory: 2945  grad_norm: 1.1607  loss: 0.4302  loss_rpn_cls: 0.0345  loss_rpn_bbox: 0.0534  rpn_loss_anchor_shape: 0.0295  rpn_loss_anchor_loc: 0.0289  loss_cls: 0.1645  acc: 97.0703  loss_bbox: 0.1194
05/14 04:15:30 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 2.0000e-02  eta: 17:22:51  time: 0.2121  data_time: 0.0028  memory: 2945  grad_norm: 1.2237  loss: 0.4551  loss_rpn_cls: 0.0467  loss_rpn_bbox: 0.0671  rpn_loss_anchor_shape: 0.0384  rpn_loss_anchor_loc: 0.0316  loss_cls: 0.1501  acc: 99.0234  loss_bbox: 0.1213
05/14 04:15:41 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 2.0000e-02  eta: 17:22:26  time: 0.2095  data_time: 0.0029  memory: 2945  grad_norm: 1.2409  loss: 0.4434  loss_rpn_cls: 0.0302  loss_rpn_bbox: 0.0567  rpn_loss_anchor_shape: 0.0324  rpn_loss_anchor_loc: 0.0341  loss_cls: 0.1626  acc: 98.0469  loss_bbox: 0.1274
05/14 04:15:51 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 2.0000e-02  eta: 17:22:05  time: 0.2100  data_time: 0.0028  memory: 2945  grad_norm: 1.1533  loss: 0.4454  loss_rpn_cls: 0.0303  loss_rpn_bbox: 0.0584  rpn_loss_anchor_shape: 0.0302  rpn_loss_anchor_loc: 0.0223  loss_cls: 0.1669  acc: 95.7031  loss_bbox: 0.1373
05/14 04:16:02 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 2.0000e-02  eta: 17:22:20  time: 0.2140  data_time: 0.0028  memory: 2945  grad_norm: 1.2555  loss: 0.5177  loss_rpn_cls: 0.0373  loss_rpn_bbox: 0.0660  rpn_loss_anchor_shape: 0.0346  rpn_loss_anchor_loc: 0.0257  loss_cls: 0.1911  acc: 92.3828  loss_bbox: 0.1631
05/14 04:16:13 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 2.0000e-02  eta: 17:22:02  time: 0.2102  data_time: 0.0028  memory: 2945  grad_norm: 1.6285  loss: 0.4873  loss_rpn_cls: 0.0446  loss_rpn_bbox: 0.0669  rpn_loss_anchor_shape: 0.0264  rpn_loss_anchor_loc: 0.0372  loss_cls: 0.1724  acc: 97.8516  loss_bbox: 0.1398
05/14 04:16:23 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 2.0000e-02  eta: 17:21:35  time: 0.2092  data_time: 0.0031  memory: 2946  grad_norm: 1.3186  loss: 0.4294  loss_rpn_cls: 0.0362  loss_rpn_bbox: 0.0575  rpn_loss_anchor_shape: 0.0315  rpn_loss_anchor_loc: 0.0311  loss_cls: 0.1613  acc: 98.8281  loss_bbox: 0.1118
05/14 04:16:33 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 2.0000e-02  eta: 17:21:08  time: 0.2089  data_time: 0.0028  memory: 2945  grad_norm: 1.7447  loss: 0.5006  loss_rpn_cls: 0.0504  loss_rpn_bbox: 0.0628  rpn_loss_anchor_shape: 0.0297  rpn_loss_anchor_loc: 0.0439  loss_cls: 0.1860  acc: 95.1172  loss_bbox: 0.1278
05/14 04:16:44 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 2.0000e-02  eta: 17:20:38  time: 0.2085  data_time: 0.0027  memory: 2945  grad_norm: 0.9448  loss: 0.3691  loss_rpn_cls: 0.0315  loss_rpn_bbox: 0.0489  rpn_loss_anchor_shape: 0.0278  rpn_loss_anchor_loc: 0.0290  loss_cls: 0.1325  acc: 96.6797  loss_bbox: 0.0994
05/14 04:16:54 - mmengine - INFO - Exp name: guided_anchoring_r50_voc0712_20240514_040940
05/14 04:16:54 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 2.0000e-02  eta: 17:20:11  time: 0.2087  data_time: 0.0027  memory: 2945  grad_norm: 1.6745  loss: 0.4394  loss_rpn_cls: 0.0392  loss_rpn_bbox: 0.0578  rpn_loss_anchor_shape: 0.0280  rpn_loss_anchor_loc: 0.0302  loss_cls: 0.1672  acc: 94.3359  loss_bbox: 0.1170
submitit WARNING (2024-05-14 04:17:04,738) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 04:17:04,784) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n512
Job ID: 23594892
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:07:56
CPU Efficiency: 9.88% of 01:20:20 core-walltime
Job Wall-clock time: 00:08:02
Memory Utilized: 1.37 GB
Memory Efficiency: 1.50% of 91.80 GB
