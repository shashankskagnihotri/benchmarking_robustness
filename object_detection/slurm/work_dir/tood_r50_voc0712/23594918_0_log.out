submitit INFO (2024-05-14 04:29:49,234) - Starting with JobEnvironment(job_id=23594918, hostname=uc2n483.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 04:29:49,234) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/tood_r50_voc0712/23594918_submitted.pkl
05/14 04:29:53 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2073986748
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 2073986748
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 04:29:53 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 24
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    bbox_head=dict(
        anchor_generator=dict(
            octave_base_scale=8,
            ratios=[
                1.0,
            ],
            scales_per_octave=1,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        anchor_type='anchor_free',
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        initial_loss_cls=dict(
            activated=True,
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_bbox=dict(loss_weight=2.0, type='GIoULoss'),
        loss_cls=dict(
            activated=True,
            beta=2.0,
            loss_weight=1.0,
            type='QualityFocalLoss',
            use_sigmoid=True),
        num_classes=80,
        stacked_convs=6,
        type='TOODHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_output',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        start_level=1,
        type='FPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.6, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        alpha=1,
        assigner=dict(topk=13, type='TaskAlignedAssigner'),
        beta=6,
        debug=False,
        initial_assigner=dict(topk=9, type='ATSSAssigner'),
        initial_epoch=4,
        pos_weight=-1),
    type='TOOD')
optim_wrapper = dict(
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=24,
        gamma=0.1,
        milestones=[
            16,
            22,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=24, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/tood_r50_voc0712'

05/14 04:29:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 04:29:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 04:30:02 - mmengine - INFO - load model from: torchvision://resnet50
05/14 04:30:02 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
05/14 04:30:02 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 04:30:02 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 04:30:02 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 04:30:02 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/tood_r50_voc0712.
05/14 04:30:11 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 9.9098e-04  eta: 1 day, 3:06:42  time: 0.1638  data_time: 0.0109  memory: 2298  loss: 2.5707  loss_cls: 1.0454  loss_bbox: 1.5252
05/14 04:30:18 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 1.9920e-03  eta: 1 day, 1:20:06  time: 0.1424  data_time: 0.0033  memory: 2298  loss: 2.2858  loss_cls: 0.8526  loss_bbox: 1.4332
05/14 04:30:25 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 2.9930e-03  eta: 1 day, 0:50:16  time: 0.1441  data_time: 0.0036  memory: 2298  loss: 1.9247  loss_cls: 0.8262  loss_bbox: 1.0985
05/14 04:30:32 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 3.9940e-03  eta: 1 day, 0:34:55  time: 0.1440  data_time: 0.0033  memory: 2298  loss: 1.9637  loss_cls: 0.8473  loss_bbox: 1.1165
05/14 04:30:40 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 4.9950e-03  eta: 1 day, 0:33:01  time: 0.1477  data_time: 0.0033  memory: 2298  loss: 2.2983  loss_cls: 0.8697  loss_bbox: 1.4286
05/14 04:30:47 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 5.9960e-03  eta: 1 day, 0:26:59  time: 0.1448  data_time: 0.0033  memory: 2181  loss: 2.1962  loss_cls: 0.8212  loss_bbox: 1.3750
05/14 04:30:54 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 6.9970e-03  eta: 1 day, 0:23:15  time: 0.1452  data_time: 0.0033  memory: 2298  loss: 1.8936  loss_cls: 0.7689  loss_bbox: 1.1247
05/14 04:31:01 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 7.9980e-03  eta: 1 day, 0:19:28  time: 0.1445  data_time: 0.0033  memory: 2181  loss: 1.8512  loss_cls: 0.7728  loss_bbox: 1.0784
05/14 04:31:09 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 8.9990e-03  eta: 1 day, 0:19:55  time: 0.1476  data_time: 0.0034  memory: 2298  loss: 1.8222  loss_cls: 0.7449  loss_bbox: 1.0774
05/14 04:31:16 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 1.0000e-02  eta: 1 day, 0:18:12  time: 0.1455  data_time: 0.0034  memory: 2298  loss: 1.7383  loss_cls: 0.7727  loss_bbox: 0.9656
05/14 04:31:23 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 1.0000e-02  eta: 1 day, 0:17:57  time: 0.1468  data_time: 0.0033  memory: 2298  loss: 1.7526  loss_cls: 0.7836  loss_bbox: 0.9690
05/14 04:31:30 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:33  time: 0.1442  data_time: 0.0034  memory: 2298  loss: 1.7121  loss_cls: 0.7325  loss_bbox: 0.9796
05/14 04:31:38 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:40  time: 0.1470  data_time: 0.0034  memory: 2298  loss: 1.6811  loss_cls: 0.7321  loss_bbox: 0.9490
05/14 04:31:45 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:17  time: 0.1464  data_time: 0.0034  memory: 2298  loss: 1.6490  loss_cls: 0.6919  loss_bbox: 0.9571
05/14 04:31:53 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 1.0000e-02  eta: 1 day, 0:16:08  time: 0.1482  data_time: 0.0033  memory: 2298  loss: 1.6776  loss_cls: 0.7237  loss_bbox: 0.9539
05/14 04:32:00 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 1.0000e-02  eta: 1 day, 0:14:49  time: 0.1449  data_time: 0.0033  memory: 2298  loss: 1.6760  loss_cls: 0.7528  loss_bbox: 0.9232
05/14 04:32:07 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 1.0000e-02  eta: 1 day, 0:14:23  time: 0.1462  data_time: 0.0032  memory: 2298  loss: 1.5927  loss_cls: 0.7060  loss_bbox: 0.8867
05/14 04:32:14 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 1.0000e-02  eta: 1 day, 0:13:26  time: 0.1452  data_time: 0.0032  memory: 2298  loss: 1.5531  loss_cls: 0.7252  loss_bbox: 0.8279
05/14 04:32:22 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 1.0000e-02  eta: 1 day, 0:13:29  time: 0.1469  data_time: 0.0034  memory: 2298  loss: 1.6059  loss_cls: 0.7352  loss_bbox: 0.8706
05/14 04:32:29 - mmengine - INFO - Exp name: tood_r50_voc0712_20240514_042952
05/14 04:32:29 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 1.0000e-02  eta: 1 day, 0:13:17  time: 0.1465  data_time: 0.0032  memory: 2298  loss: 1.6659  loss_cls: 0.7326  loss_bbox: 0.9332
05/14 04:32:36 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 1.0000e-02  eta: 1 day, 0:12:53  time: 0.1460  data_time: 0.0032  memory: 2298  loss: 1.6146  loss_cls: 0.7175  loss_bbox: 0.8971
05/14 04:32:44 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 1.0000e-02  eta: 1 day, 0:12:56  time: 0.1470  data_time: 0.0034  memory: 2298  loss: 1.5811  loss_cls: 0.7354  loss_bbox: 0.8457
05/14 04:32:51 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 1.0000e-02  eta: 1 day, 0:13:09  time: 0.1473  data_time: 0.0033  memory: 2298  loss: 1.5477  loss_cls: 0.7013  loss_bbox: 0.8464
05/14 04:32:58 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 1.0000e-02  eta: 1 day, 0:13:11  time: 0.1470  data_time: 0.0033  memory: 2298  loss: 1.5391  loss_cls: 0.6907  loss_bbox: 0.8484
05/14 04:33:06 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 1.0000e-02  eta: 1 day, 0:12:53  time: 0.1462  data_time: 0.0032  memory: 2298  loss: 1.5664  loss_cls: 0.7132  loss_bbox: 0.8532
05/14 04:33:13 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 1.0000e-02  eta: 1 day, 0:12:19  time: 0.1454  data_time: 0.0032  memory: 2298  loss: 1.5262  loss_cls: 0.7101  loss_bbox: 0.8161
05/14 04:33:20 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:46  time: 0.1454  data_time: 0.0034  memory: 2298  loss: 1.5363  loss_cls: 0.6868  loss_bbox: 0.8495
05/14 04:33:28 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:11  time: 0.1452  data_time: 0.0033  memory: 2298  loss: 1.5386  loss_cls: 0.6742  loss_bbox: 0.8644
05/14 04:33:35 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 1.0000e-02  eta: 1 day, 0:10:49  time: 0.1457  data_time: 0.0032  memory: 2298  loss: 1.5362  loss_cls: 0.7091  loss_bbox: 0.8271
05/14 04:33:42 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:06  time: 0.1477  data_time: 0.0036  memory: 2298  loss: 1.5145  loss_cls: 0.6642  loss_bbox: 0.8502
05/14 04:33:50 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:30  time: 0.1481  data_time: 0.0032  memory: 2298  loss: 1.5796  loss_cls: 0.7009  loss_bbox: 0.8787
05/14 04:33:57 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:33  time: 0.1471  data_time: 0.0032  memory: 2298  loss: 1.5205  loss_cls: 0.7070  loss_bbox: 0.8135
05/14 04:34:04 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:53  time: 0.1481  data_time: 0.0032  memory: 2298  loss: 1.5681  loss_cls: 0.7209  loss_bbox: 0.8472
05/14 04:34:12 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 1.0000e-02  eta: 1 day, 0:11:52  time: 0.1470  data_time: 0.0032  memory: 2298  loss: 1.4638  loss_cls: 0.6688  loss_bbox: 0.7950
05/14 04:34:19 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 1.0000e-02  eta: 1 day, 0:12:11  time: 0.1482  data_time: 0.0033  memory: 2298  loss: 1.5308  loss_cls: 0.7066  loss_bbox: 0.8242
05/14 04:34:27 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 1.0000e-02  eta: 1 day, 0:12:39  time: 0.1488  data_time: 0.0033  memory: 2298  loss: 1.4895  loss_cls: 0.6939  loss_bbox: 0.7956
05/14 04:34:34 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 1.0000e-02  eta: 1 day, 0:13:49  time: 0.1515  data_time: 0.0036  memory: 2298  loss: 1.7143  loss_cls: 0.9196  loss_bbox: 0.7948
05/14 04:34:42 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 1.0000e-02  eta: 1 day, 0:14:44  time: 0.1509  data_time: 0.0039  memory: 2298  loss: 1.7393  loss_cls: 0.9184  loss_bbox: 0.8209
05/14 04:34:49 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:00  time: 0.1485  data_time: 0.0037  memory: 2298  loss: 1.4807  loss_cls: 0.7042  loss_bbox: 0.7765
05/14 04:34:57 - mmengine - INFO - Exp name: tood_r50_voc0712_20240514_042952
05/14 04:34:57 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:33  time: 0.1497  data_time: 0.0034  memory: 2298  loss: 1.6020  loss_cls: 0.7736  loss_bbox: 0.8284
05/14 04:35:04 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:23  time: 0.1468  data_time: 0.0032  memory: 2298  loss: 1.7169  loss_cls: 0.8018  loss_bbox: 0.9151
05/14 04:35:11 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:31  time: 0.1482  data_time: 0.0036  memory: 2298  loss: 1.5746  loss_cls: 0.7275  loss_bbox: 0.8471
05/14 04:35:19 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 1.0000e-02  eta: 1 day, 0:15:38  time: 0.1481  data_time: 0.0033  memory: 2298  loss: 1.5069  loss_cls: 0.7036  loss_bbox: 0.8032
05/14 04:35:26 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 1.0000e-02  eta: 1 day, 0:16:16  time: 0.1504  data_time: 0.0034  memory: 2298  loss: 1.5181  loss_cls: 0.7284  loss_bbox: 0.7896
05/14 04:35:34 - mmengine - INFO - Epoch(train)  [1][ 2250/24827]  lr: 1.0000e-02  eta: 1 day, 0:16:47  time: 0.1501  data_time: 0.0035  memory: 2298  loss: 1.5298  loss_cls: 0.7352  loss_bbox: 0.7946
05/14 04:35:41 - mmengine - INFO - Epoch(train)  [1][ 2300/24827]  lr: 1.0000e-02  eta: 1 day, 0:18:01  time: 0.1535  data_time: 0.0035  memory: 2298  loss: 1.5458  loss_cls: 0.7166  loss_bbox: 0.8291
05/14 04:35:49 - mmengine - INFO - Epoch(train)  [1][ 2350/24827]  lr: 1.0000e-02  eta: 1 day, 0:18:56  time: 0.1523  data_time: 0.0035  memory: 2298  loss: 1.4688  loss_cls: 0.7027  loss_bbox: 0.7660
05/14 04:35:57 - mmengine - INFO - Epoch(train)  [1][ 2400/24827]  lr: 1.0000e-02  eta: 1 day, 0:19:16  time: 0.1498  data_time: 0.0035  memory: 2298  loss: 1.4725  loss_cls: 0.6994  loss_bbox: 0.7731
05/14 04:36:04 - mmengine - INFO - Epoch(train)  [1][ 2450/24827]  lr: 1.0000e-02  eta: 1 day, 0:19:44  time: 0.1504  data_time: 0.0034  memory: 2181  loss: 1.4648  loss_cls: 0.7113  loss_bbox: 0.7535
05/14 04:36:12 - mmengine - INFO - Epoch(train)  [1][ 2500/24827]  lr: 1.0000e-02  eta: 1 day, 0:20:18  time: 0.1510  data_time: 0.0032  memory: 2298  loss: 1.3996  loss_cls: 0.6672  loss_bbox: 0.7325
05/14 04:36:19 - mmengine - INFO - Epoch(train)  [1][ 2550/24827]  lr: 1.0000e-02  eta: 1 day, 0:20:51  time: 0.1512  data_time: 0.0033  memory: 2298  loss: 1.4783  loss_cls: 0.6650  loss_bbox: 0.8134
05/14 04:36:27 - mmengine - INFO - Epoch(train)  [1][ 2600/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:08  time: 0.1499  data_time: 0.0032  memory: 2298  loss: 1.4725  loss_cls: 0.6601  loss_bbox: 0.8124
05/14 04:36:34 - mmengine - INFO - Epoch(train)  [1][ 2650/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:42  time: 0.1514  data_time: 0.0036  memory: 2298  loss: 1.4150  loss_cls: 0.6774  loss_bbox: 0.7376
05/14 04:36:42 - mmengine - INFO - Epoch(train)  [1][ 2700/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:51  time: 0.1494  data_time: 0.0031  memory: 2298  loss: 1.4483  loss_cls: 0.6833  loss_bbox: 0.7650
05/14 04:36:49 - mmengine - INFO - Epoch(train)  [1][ 2750/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:44  time: 0.1479  data_time: 0.0029  memory: 2298  loss: 1.5244  loss_cls: 0.7066  loss_bbox: 0.8179
05/14 04:36:56 - mmengine - INFO - Epoch(train)  [1][ 2800/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:24  time: 0.1467  data_time: 0.0029  memory: 2298  loss: 1.5036  loss_cls: 0.6629  loss_bbox: 0.8407
05/14 04:37:04 - mmengine - INFO - Epoch(train)  [1][ 2850/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:06  time: 0.1468  data_time: 0.0031  memory: 2298  loss: 1.4676  loss_cls: 0.7113  loss_bbox: 0.7563
05/14 04:37:11 - mmengine - INFO - Epoch(train)  [1][ 2900/24827]  lr: 1.0000e-02  eta: 1 day, 0:20:48  time: 0.1468  data_time: 0.0029  memory: 2298  loss: 1.4148  loss_cls: 0.6654  loss_bbox: 0.7494
05/14 04:37:18 - mmengine - INFO - Epoch(train)  [1][ 2950/24827]  lr: 1.0000e-02  eta: 1 day, 0:20:30  time: 0.1467  data_time: 0.0031  memory: 2298  loss: 1.4152  loss_cls: 0.6843  loss_bbox: 0.7309
05/14 04:37:26 - mmengine - INFO - Exp name: tood_r50_voc0712_20240514_042952
05/14 04:37:26 - mmengine - INFO - Epoch(train)  [1][ 3000/24827]  lr: 1.0000e-02  eta: 1 day, 0:20:42  time: 0.1498  data_time: 0.0032  memory: 2298  loss: 1.4639  loss_cls: 0.6810  loss_bbox: 0.7830
05/14 04:37:34 - mmengine - INFO - Epoch(train)  [1][ 3050/24827]  lr: 1.0000e-02  eta: 1 day, 0:21:18  time: 0.1523  data_time: 0.0032  memory: 2298  loss: 1.4048  loss_cls: 0.6601  loss_bbox: 0.7447
submitit WARNING (2024-05-14 04:37:34,979) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 04:37:34,984) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n483
Job ID: 23594918
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:38
CPU Efficiency: 10.40% of 01:23:00 core-walltime
Job Wall-clock time: 00:08:18
Memory Utilized: 1.58 GB
Memory Efficiency: 1.73% of 91.80 GB
