submitit INFO (2024-05-13 21:42:05,431) - Starting with JobEnvironment(job_id=23594830, hostname=uc2n512.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-13 21:42:05,432) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/guided_anchoring_r50_coco/23594830_submitted.pkl
05/13 21:42:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1629042920
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1629042920
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/13 21:42:10 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/coco/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.05,
                    0.05,
                    0.1,
                    0.1,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=80,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.07,
                0.07,
                0.14,
                0.14,
            ],
            type='DeltaXYWHBBoxCoder'),
        approx_anchor_generator=dict(
            octave_base_scale=8,
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.07,
                0.07,
                0.11,
                0.11,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loc_filter_thr=0.01,
        loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        loss_loc=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_shape=dict(beta=0.2, loss_weight=1.0, type='BoundedIoULoss'),
        square_anchor_generator=dict(
            ratios=[
                1.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        type='GARPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.001),
        rpn=dict(
            max_per_img=300,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_post=1000,
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.6,
                neg_iou_thr=0.6,
                pos_iou_thr=0.6,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            center_ratio=0.2,
            debug=False,
            ga_assigner=dict(
                ignore_iof_thr=-1,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='ApproxMaxIoUAssigner'),
            ga_sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler'),
            ignore_ratio=0.5,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=300,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_post=1000,
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='data/coco/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='data/coco/annotations/instances_val2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        ann_file='annotations/instances_train2017.json',
        backend_args=None,
        data_prefix=dict(img='train2017/'),
        data_root='data/coco/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        backend_args=None,
        data_prefix=dict(img='val2017/'),
        data_root='data/coco/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='data/coco/annotations/instances_val2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/guided_anchoring_r50_coco'

05/13 21:42:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/13 21:42:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
loading annotations into memory...
Done (t=13.63s)
creating index...
index created!
loading annotations into memory...
Done (t=0.50s)
creating index...
index created!
loading annotations into memory...
Done (t=0.51s)
creating index...
index created!
05/13 21:42:39 - mmengine - INFO - load model from: torchvision://resnet50
05/13 21:42:39 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
05/13 21:42:39 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/13 21:42:39 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/13 21:42:39 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/13 21:42:39 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/guided_anchoring_r50_coco.
05/13 21:42:58 - mmengine - INFO - Epoch(train)  [1][   50/58633]  lr: 1.9820e-03  eta: 3 days, 0:26:22  time: 0.3707  data_time: 0.0127  memory: 4776  grad_norm: 30.1648  loss: 8.2169  loss_rpn_cls: 0.3297  loss_rpn_bbox: 0.2249  rpn_loss_anchor_shape: 0.1568  rpn_loss_anchor_loc: 6.2163  loss_cls: 1.2530  acc: 88.4766  loss_bbox: 0.0361
05/13 21:43:14 - mmengine - INFO - Epoch(train)  [1][  100/58633]  lr: 3.9840e-03  eta: 2 days, 19:42:24  time: 0.3223  data_time: 0.0031  memory: 4776  grad_norm: 7.1973  loss: 1.0169  loss_rpn_cls: 0.1038  loss_rpn_bbox: 0.1949  rpn_loss_anchor_shape: 0.1465  rpn_loss_anchor_loc: 0.1837  loss_cls: 0.3075  acc: 94.1406  loss_bbox: 0.0806
05/13 21:43:30 - mmengine - INFO - Epoch(train)  [1][  150/58633]  lr: 5.9860e-03  eta: 2 days, 18:06:36  time: 0.3220  data_time: 0.0030  memory: 4777  grad_norm: 4.6543  loss: 0.9649  loss_rpn_cls: 0.1012  loss_rpn_bbox: 0.1942  rpn_loss_anchor_shape: 0.1304  rpn_loss_anchor_loc: 0.1741  loss_cls: 0.2792  acc: 96.0938  loss_bbox: 0.0859
05/13 21:43:46 - mmengine - INFO - Epoch(train)  [1][  200/58633]  lr: 7.9880e-03  eta: 2 days, 17:36:02  time: 0.3280  data_time: 0.0031  memory: 4776  grad_norm: 4.6445  loss: 1.1829  loss_rpn_cls: 0.1321  loss_rpn_bbox: 0.2194  rpn_loss_anchor_shape: 0.1434  rpn_loss_anchor_loc: 0.2178  loss_cls: 0.3496  acc: 97.2656  loss_bbox: 0.1206
05/13 21:44:03 - mmengine - INFO - Epoch(train)  [1][  250/58633]  lr: 9.9900e-03  eta: 2 days, 17:15:19  time: 0.3270  data_time: 0.0031  memory: 4776  grad_norm: 2.8654  loss: 0.9485  loss_rpn_cls: 0.1024  loss_rpn_bbox: 0.1869  rpn_loss_anchor_shape: 0.1295  rpn_loss_anchor_loc: 0.1088  loss_cls: 0.3008  acc: 93.7500  loss_bbox: 0.1200
05/13 21:44:19 - mmengine - INFO - Epoch(train)  [1][  300/58633]  lr: 1.1992e-02  eta: 2 days, 17:07:49  time: 0.3303  data_time: 0.0031  memory: 4776  grad_norm: 3.3621  loss: 1.1693  loss_rpn_cls: 0.1091  loss_rpn_bbox: 0.2299  rpn_loss_anchor_shape: 0.1262  rpn_loss_anchor_loc: 0.1081  loss_cls: 0.4290  acc: 95.3125  loss_bbox: 0.1672
05/13 21:44:35 - mmengine - INFO - Epoch(train)  [1][  350/58633]  lr: 1.3994e-02  eta: 2 days, 16:54:16  time: 0.3255  data_time: 0.0032  memory: 4776  grad_norm: 3.7679  loss: 1.1025  loss_rpn_cls: 0.1159  loss_rpn_bbox: 0.2003  rpn_loss_anchor_shape: 0.1218  rpn_loss_anchor_loc: 0.1230  loss_cls: 0.3941  acc: 95.5078  loss_bbox: 0.1473
05/13 21:44:52 - mmengine - INFO - Epoch(train)  [1][  400/58633]  lr: 1.5996e-02  eta: 2 days, 16:52:37  time: 0.3313  data_time: 0.0031  memory: 4776  grad_norm: 2577.0336  loss: 141.5885  loss_rpn_cls: 0.3350  loss_rpn_bbox: 0.2705  rpn_loss_anchor_shape: 0.1550  rpn_loss_anchor_loc: 1.7039  loss_cls: 131.4129  acc: 92.7734  loss_bbox: 7.7113
05/13 21:45:08 - mmengine - INFO - Epoch(train)  [1][  450/58633]  lr: 1.7998e-02  eta: 2 days, 16:46:59  time: 0.3280  data_time: 0.0030  memory: 4776  grad_norm: 1400455.8732  loss: 4605.9310  loss_rpn_cls: 1.8962  loss_rpn_bbox: 0.5549  rpn_loss_anchor_shape: 0.2183  rpn_loss_anchor_loc: 12.1491  loss_cls: 4315.1728  acc: 96.4844  loss_bbox: 275.9395
05/13 21:45:24 - mmengine - INFO - Epoch(train)  [1][  500/58633]  lr: 2.0000e-02  eta: 2 days, 16:32:32  time: 0.3196  data_time: 0.0032  memory: 4777  grad_norm: 736705420888996.7500  loss: 7503966923281.5049  loss_rpn_cls: 65.7936  loss_rpn_bbox: 0.0820  rpn_loss_anchor_shape: 0.3892  rpn_loss_anchor_loc: 16.7745  loss_cls: 6942930071090.1387  acc: 95.8984  loss_bbox: 561036992626.9950
05/13 21:45:40 - mmengine - INFO - Epoch(train)  [1][  550/58633]  lr: 2.0000e-02  eta: 2 days, 16:17:21  time: 0.3165  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 509917193267531114086400.0000  loss_rpn_cls: 0.5830  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.4118  rpn_loss_anchor_loc: 14.1854  loss_cls: 473645721078273771831296.0000  acc: 96.6797  loss_bbox: 36271473819047878983680.0000
05/13 21:45:56 - mmengine - INFO - Epoch(train)  [1][  600/58633]  lr: 2.0000e-02  eta: 2 days, 16:01:01  time: 0.3128  data_time: 0.0030  memory: 4777  grad_norm: inf  loss: 480326177479562862253834240.0000  loss_rpn_cls: 0.5831  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3869  rpn_loss_anchor_loc: 26.0453  loss_cls: 449457466574588659799949312.0000  acc: 89.7297  loss_bbox: 30868709687200852045987840.0000
05/13 21:46:11 - mmengine - INFO - Epoch(train)  [1][  650/58633]  lr: 2.0000e-02  eta: 2 days, 15:45:00  time: 0.3104  data_time: 0.0037  memory: 4777  grad_norm: inf  loss: 542638058685374802392252416.0000  loss_rpn_cls: 0.5832  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3789  rpn_loss_anchor_loc: 25.4029  loss_cls: 510319924956060169646637056.0000  acc: 94.8276  loss_bbox: 32318133335880183729618944.0000
05/13 21:46:27 - mmengine - INFO - Epoch(train)  [1][  700/58633]  lr: 2.0000e-02  eta: 2 days, 15:38:48  time: 0.3194  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 646711483332112957246013440.0000  loss_rpn_cls: 0.5833  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.4212  rpn_loss_anchor_loc: 27.1118  loss_cls: 614459284722478215724007424.0000  acc: 96.9697  loss_bbox: 32252197917881884284551168.0000
05/13 21:46:43 - mmengine - INFO - Epoch(train)  [1][  750/58633]  lr: 2.0000e-02  eta: 2 days, 15:27:52  time: 0.3123  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 522445873265000426617438208.0000  loss_rpn_cls: 0.5834  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3762  rpn_loss_anchor_loc: 25.8014  loss_cls: 491108384499311557004492800.0000  acc: 88.4393  loss_bbox: 31337487918291598773846016.0000
05/13 21:46:59 - mmengine - INFO - Epoch(train)  [1][  800/58633]  lr: 2.0000e-02  eta: 2 days, 15:19:58  time: 0.3147  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 510444279530715638516416512.0000  loss_rpn_cls: 0.5835  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3895  rpn_loss_anchor_loc: 26.3071  loss_cls: 479078545110501049862455296.0000  acc: 94.7020  loss_bbox: 31365733555523443018956800.0000
05/13 21:47:14 - mmengine - INFO - Epoch(train)  [1][  850/58633]  lr: 2.0000e-02  eta: 2 days, 15:10:48  time: 0.3115  data_time: 0.0033  memory: 4777  grad_norm: inf  loss: 409811993810536698495369216.0000  loss_rpn_cls: 0.5836  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3525  rpn_loss_anchor_loc: 25.2013  loss_cls: 385679835654074609862443008.0000  acc: 96.1539  loss_bbox: 24132156548136607401639936.0000
05/13 21:47:30 - mmengine - INFO - Epoch(train)  [1][  900/58633]  lr: 2.0000e-02  eta: 2 days, 15:02:15  time: 0.3109  data_time: 0.0030  memory: 4776  grad_norm: inf  loss: 379721927928072199234125824.0000  loss_rpn_cls: 0.5837  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3752  rpn_loss_anchor_loc: 25.4695  loss_cls: 356491893309840775612203008.0000  acc: 94.2529  loss_bbox: 23230033534485224925167616.0000
05/13 21:47:45 - mmengine - INFO - Epoch(train)  [1][  950/58633]  lr: 2.0000e-02  eta: 2 days, 14:53:47  time: 0.3097  data_time: 0.0031  memory: 4776  grad_norm: inf  loss: 387570468279630777513148416.0000  loss_rpn_cls: 0.5838  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3446  rpn_loss_anchor_loc: 25.3660  loss_cls: 366161994759614594059075584.0000  acc: 94.5652  loss_bbox: 21408473259167748527751168.0000
05/13 21:48:01 - mmengine - INFO - Exp name: guided_anchoring_r50_coco_20240513_214208
05/13 21:48:01 - mmengine - INFO - Epoch(train)  [1][ 1000/58633]  lr: 2.0000e-02  eta: 2 days, 14:47:04  time: 0.3113  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 383661344218124945136287744.0000  loss_rpn_cls: 0.5839  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3658  rpn_loss_anchor_loc: 26.3411  loss_cls: 360662975341186212132028416.0000  acc: 91.5344  loss_bbox: 22998370018331037855121408.0000
05/13 21:48:16 - mmengine - INFO - Epoch(train)  [1][ 1050/58633]  lr: 2.0000e-02  eta: 2 days, 14:42:31  time: 0.3140  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 372857904880655232743243776.0000  loss_rpn_cls: 0.5840  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3939  rpn_loss_anchor_loc: 26.5228  loss_cls: 353628258483429699821240320.0000  acc: 86.6197  loss_bbox: 19229648515718819541417984.0000
05/13 21:48:32 - mmengine - INFO - Epoch(train)  [1][ 1100/58633]  lr: 2.0000e-02  eta: 2 days, 14:36:30  time: 0.3105  data_time: 0.0030  memory: 4777  grad_norm: inf  loss: 318072936903850988297781248.0000  loss_rpn_cls: 0.5841  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3456  rpn_loss_anchor_loc: 25.9973  loss_cls: 301272128473222664060665856.0000  acc: 84.2105  loss_bbox: 16800809105087396872978432.0000
05/13 21:48:48 - mmengine - INFO - Epoch(train)  [1][ 1150/58633]  lr: 2.0000e-02  eta: 2 days, 14:31:43  time: 0.3120  data_time: 0.0038  memory: 4777  grad_norm: inf  loss: 290595110022445882467680256.0000  loss_rpn_cls: 0.5842  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3394  rpn_loss_anchor_loc: 25.5394  loss_cls: 273134714276694763646222336.0000  acc: 96.6292  loss_bbox: 17460396287624205284933632.0000
05/13 21:49:04 - mmengine - INFO - Epoch(train)  [1][ 1200/58633]  lr: 2.0000e-02  eta: 2 days, 14:30:50  time: 0.3192  data_time: 0.0031  memory: 4777  grad_norm: inf  loss: 264922808761333865089335296.0000  loss_rpn_cls: 0.5843  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3922  rpn_loss_anchor_loc: 24.9955  loss_cls: 247634102304466295794434048.0000  acc: 82.9545  loss_bbox: 17288707229324990180491264.0000
05/13 21:49:19 - mmengine - INFO - Epoch(train)  [1][ 1250/58633]  lr: 2.0000e-02  eta: 2 days, 14:28:17  time: 0.3155  data_time: 0.0036  memory: 4777  grad_norm: inf  loss: 278992394662485463454973952.0000  loss_rpn_cls: 0.5844  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.4006  rpn_loss_anchor_loc: 26.4513  loss_cls: 262817670109224667543764992.0000  acc: 96.2406  loss_bbox: 16174725876238236363259904.0000
05/13 21:49:35 - mmengine - INFO - Epoch(train)  [1][ 1300/58633]  lr: 2.0000e-02  eta: 2 days, 14:26:02  time: 0.3158  data_time: 0.0030  memory: 4777  grad_norm: inf  loss: 217742832509548663274471424.0000  loss_rpn_cls: 0.5845  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3609  rpn_loss_anchor_loc: 25.5350  loss_cls: 205254223471845400809308160.0000  acc: 97.0930  loss_bbox: 12488608427375458229682176.0000
05/13 21:49:51 - mmengine - INFO - Epoch(train)  [1][ 1350/58633]  lr: 2.0000e-02  eta: 2 days, 14:22:15  time: 0.3119  data_time: 0.0034  memory: 4777  grad_norm: inf  loss: 229910038114531344983785472.0000  loss_rpn_cls: 0.5846  loss_rpn_bbox: 0.0000  rpn_loss_anchor_shape: 0.3922  rpn_loss_anchor_loc: 25.8153  loss_cls: 216360700525285363909918720.0000  acc: 91.1111  loss_bbox: 13549337605098651676311552.0000
submitit WARNING (2024-05-13 21:50:04,429) - Bypassing signal SIGCONT
submitit ERROR (2024-05-13 21:50:04,466) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n512
Job ID: 23594830
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:35
CPU Efficiency: 10.08% of 01:25:10 core-walltime
Job Wall-clock time: 00:08:31
Memory Utilized: 4.90 GB
Memory Efficiency: 5.34% of 91.80 GB
