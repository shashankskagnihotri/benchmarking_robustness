submitit INFO (2024-05-14 03:59:28,320) - Starting with JobEnvironment(job_id=23594883, hostname=uc2n512.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 03:59:28,320) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/ddod_r101_voc0712/23594883_submitted.pkl
05/14 03:59:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 430210800
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 430210800
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 03:59:33 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    bbox_head=dict(
        anchor_generator=dict(
            octave_base_scale=8,
            ratios=[
                1.0,
            ],
            scales_per_octave=1,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=2.0, type='GIoULoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_iou=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        num_classes=80,
        stacked_convs=4,
        type='DDODHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_output',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        start_level=1,
        type='FPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.6, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(alpha=0.8, topk=9, type='ATSSAssigner'),
        debug=False,
        pos_weight=-1,
        reg_assigner=dict(alpha=0.5, topk=9, type='ATSSAssigner')),
    type='DDOD')
optim_wrapper = dict(
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/ddod_r101_voc0712'

05/14 03:59:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 03:59:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 03:59:42 - mmengine - INFO - load model from: torchvision://resnet101
05/14 03:59:42 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/14 03:59:42 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 03:59:42 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 03:59:42 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 03:59:42 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/ddod_r101_voc0712.
05/14 03:59:54 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 9.9098e-04  eta: 18:18:31  time: 0.2213  data_time: 0.0086  memory: 3033  loss: 3.5371  loss_cls: 1.4405  loss_bbox: 1.2304  loss_iou: 0.8662
05/14 04:00:04 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 1.9920e-03  eta: 17:26:27  time: 0.2004  data_time: 0.0034  memory: 3033  loss: 2.9886  loss_cls: 1.1264  loss_bbox: 1.1024  loss_iou: 0.7598
05/14 04:00:13 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 2.9930e-03  eta: 17:05:46  time: 0.1984  data_time: 0.0034  memory: 3033  loss: 2.8429  loss_cls: 0.9817  loss_bbox: 1.1021  loss_iou: 0.7590
05/14 04:00:24 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 3.9940e-03  eta: 16:57:54  time: 0.2005  data_time: 0.0033  memory: 3033  loss: 2.7100  loss_cls: 0.8789  loss_bbox: 1.1029  loss_iou: 0.7281
05/14 04:00:34 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 4.9950e-03  eta: 16:55:08  time: 0.2025  data_time: 0.0033  memory: 3033  loss: 2.7681  loss_cls: 0.9327  loss_bbox: 1.0703  loss_iou: 0.7650
05/14 04:00:44 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 5.9960e-03  eta: 16:49:56  time: 0.1985  data_time: 0.0034  memory: 3033  loss: 3.4772  loss_cls: 1.4589  loss_bbox: 1.2038  loss_iou: 0.8144
05/14 04:00:54 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 6.9970e-03  eta: 16:46:18  time: 0.1987  data_time: 0.0037  memory: 3033  loss: 53.3332  loss_cls: 51.0572  loss_bbox: 1.3668  loss_iou: 0.9092
05/14 04:01:03 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 7.9980e-03  eta: 16:40:47  time: 0.1943  data_time: 0.0033  memory: 3033  loss: 8.7642  loss_cls: 6.1398  loss_bbox: 1.4817  loss_iou: 1.1427
05/14 04:01:13 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 8.9990e-03  eta: 16:37:03  time: 0.1954  data_time: 0.0034  memory: 3033  loss: 5.8989  loss_cls: 3.9343  loss_bbox: 1.0757  loss_iou: 0.8889
05/14 04:01:23 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 1.0000e-02  eta: 16:34:39  time: 0.1966  data_time: 0.0033  memory: 3033  loss: 5.3015  loss_cls: 3.2925  loss_bbox: 1.1736  loss_iou: 0.8354
05/14 04:01:33 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 1.0000e-02  eta: 16:32:00  time: 0.1951  data_time: 0.0036  memory: 3033  loss: 5.2568  loss_cls: 3.3056  loss_bbox: 1.1296  loss_iou: 0.8216
05/14 04:01:42 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 1.0000e-02  eta: 16:30:59  time: 0.1981  data_time: 0.0034  memory: 3033  loss: 5.8450  loss_cls: 3.7718  loss_bbox: 1.1887  loss_iou: 0.8845
05/14 04:01:52 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 1.0000e-02  eta: 16:28:53  time: 0.1949  data_time: 0.0033  memory: 3033  loss: 5.8460  loss_cls: 3.9353  loss_bbox: 1.1234  loss_iou: 0.7873
05/14 04:02:02 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 1.0000e-02  eta: 16:28:05  time: 0.1978  data_time: 0.0033  memory: 3033  loss: 7.2428  loss_cls: 5.2764  loss_bbox: 1.1707  loss_iou: 0.7957
05/14 04:02:12 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 1.0000e-02  eta: 16:27:01  time: 0.1967  data_time: 0.0035  memory: 3033  loss: 7.1256  loss_cls: 5.2256  loss_bbox: 1.1106  loss_iou: 0.7894
05/14 04:02:22 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 1.0000e-02  eta: 16:26:28  time: 0.1980  data_time: 0.0033  memory: 3033  loss: 7.6806  loss_cls: 5.8526  loss_bbox: 1.0417  loss_iou: 0.7863
05/14 04:02:32 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 1.0000e-02  eta: 16:25:38  time: 0.1969  data_time: 0.0034  memory: 3033  loss: 7.0884  loss_cls: 5.2257  loss_bbox: 1.0510  loss_iou: 0.8117
05/14 04:02:42 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 1.0000e-02  eta: 16:24:56  time: 0.1971  data_time: 0.0032  memory: 2948  loss: 7.4304  loss_cls: 5.4652  loss_bbox: 1.1173  loss_iou: 0.8479
05/14 04:02:51 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 1.0000e-02  eta: 16:23:50  time: 0.1954  data_time: 0.0033  memory: 3033  loss: 6.4344  loss_cls: 4.6914  loss_bbox: 0.9835  loss_iou: 0.7594
05/14 04:03:01 - mmengine - INFO - Exp name: ddod_r101_voc0712_20240514_035931
05/14 04:03:01 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 1.0000e-02  eta: 16:22:52  time: 0.1956  data_time: 0.0033  memory: 3033  loss: 6.7125  loss_cls: 5.0041  loss_bbox: 0.9605  loss_iou: 0.7479
05/14 04:03:11 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 1.0000e-02  eta: 16:22:10  time: 0.1963  data_time: 0.0037  memory: 3033  loss: 6.2733  loss_cls: 4.4219  loss_bbox: 1.0765  loss_iou: 0.7748
05/14 04:03:21 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 1.0000e-02  eta: 16:21:33  time: 0.1965  data_time: 0.0033  memory: 2949  loss: 6.3645  loss_cls: 4.5076  loss_bbox: 1.0744  loss_iou: 0.7826
05/14 04:03:31 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 1.0000e-02  eta: 16:20:40  time: 0.1951  data_time: 0.0033  memory: 3033  loss: 6.5494  loss_cls: 4.7569  loss_bbox: 1.0113  loss_iou: 0.7812
05/14 04:03:40 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 1.0000e-02  eta: 16:20:05  time: 0.1963  data_time: 0.0033  memory: 3033  loss: 6.3227  loss_cls: 4.4321  loss_bbox: 1.0927  loss_iou: 0.7979
05/14 04:03:50 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 1.0000e-02  eta: 16:19:22  time: 0.1953  data_time: 0.0032  memory: 3033  loss: 7.0235  loss_cls: 5.2014  loss_bbox: 1.0609  loss_iou: 0.7611
05/14 04:04:00 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 1.0000e-02  eta: 16:18:22  time: 0.1938  data_time: 0.0032  memory: 3033  loss: 6.5955  loss_cls: 4.8125  loss_bbox: 1.0334  loss_iou: 0.7496
05/14 04:04:10 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 1.0000e-02  eta: 16:17:58  time: 0.1966  data_time: 0.0035  memory: 3033  loss: 6.4400  loss_cls: 4.6881  loss_bbox: 0.9810  loss_iou: 0.7710
05/14 04:04:19 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 1.0000e-02  eta: 16:17:11  time: 0.1944  data_time: 0.0033  memory: 3033  loss: 6.2062  loss_cls: 4.4809  loss_bbox: 0.9690  loss_iou: 0.7563
05/14 04:04:29 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 1.0000e-02  eta: 16:16:37  time: 0.1953  data_time: 0.0032  memory: 3033  loss: 6.8163  loss_cls: 5.0224  loss_bbox: 1.0121  loss_iou: 0.7818
05/14 04:04:39 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 1.0000e-02  eta: 16:16:41  time: 0.1991  data_time: 0.0033  memory: 3033  loss: 7.0327  loss_cls: 5.2099  loss_bbox: 1.0449  loss_iou: 0.7780
05/14 04:04:49 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 1.0000e-02  eta: 16:16:22  time: 0.1967  data_time: 0.0033  memory: 3033  loss: 6.8930  loss_cls: 5.1384  loss_bbox: 0.9976  loss_iou: 0.7570
05/14 04:04:59 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 1.0000e-02  eta: 16:15:37  time: 0.1939  data_time: 0.0034  memory: 3033  loss: 6.2915  loss_cls: 4.4669  loss_bbox: 1.0355  loss_iou: 0.7892
05/14 04:05:09 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 1.0000e-02  eta: 16:15:49  time: 0.1999  data_time: 0.0036  memory: 3033  loss: 5.7708  loss_cls: 4.0265  loss_bbox: 0.9816  loss_iou: 0.7627
05/14 04:05:18 - mmengine - INFO - Epoch(train)  [1][ 1700/24827]  lr: 1.0000e-02  eta: 16:15:40  time: 0.1977  data_time: 0.0033  memory: 3033  loss: 6.1642  loss_cls: 4.4397  loss_bbox: 0.9682  loss_iou: 0.7563
05/14 04:05:28 - mmengine - INFO - Epoch(train)  [1][ 1750/24827]  lr: 1.0000e-02  eta: 16:15:25  time: 0.1971  data_time: 0.0033  memory: 3033  loss: 6.3980  loss_cls: 4.5737  loss_bbox: 1.0552  loss_iou: 0.7692
05/14 04:05:38 - mmengine - INFO - Epoch(train)  [1][ 1800/24827]  lr: 1.0000e-02  eta: 16:15:11  time: 0.1971  data_time: 0.0033  memory: 3033  loss: 6.1195  loss_cls: 4.3573  loss_bbox: 1.0000  loss_iou: 0.7622
05/14 04:05:48 - mmengine - INFO - Epoch(train)  [1][ 1850/24827]  lr: 1.0000e-02  eta: 16:15:02  time: 0.1977  data_time: 0.0033  memory: 3033  loss: 5.6042  loss_cls: 3.8258  loss_bbox: 1.0195  loss_iou: 0.7590
05/14 04:05:58 - mmengine - INFO - Epoch(train)  [1][ 1900/24827]  lr: 1.0000e-02  eta: 16:14:53  time: 0.1978  data_time: 0.0034  memory: 3033  loss: 5.7863  loss_cls: 4.0121  loss_bbox: 1.0023  loss_iou: 0.7719
05/14 04:06:08 - mmengine - INFO - Epoch(train)  [1][ 1950/24827]  lr: 1.0000e-02  eta: 16:15:03  time: 0.2001  data_time: 0.0033  memory: 3033  loss: 5.8599  loss_cls: 4.1929  loss_bbox: 0.9216  loss_iou: 0.7455
05/14 04:06:18 - mmengine - INFO - Exp name: ddod_r101_voc0712_20240514_035931
05/14 04:06:18 - mmengine - INFO - Epoch(train)  [1][ 2000/24827]  lr: 1.0000e-02  eta: 16:14:58  time: 0.1984  data_time: 0.0033  memory: 3033  loss: 5.3738  loss_cls: 3.6217  loss_bbox: 0.9909  loss_iou: 0.7612
05/14 04:06:28 - mmengine - INFO - Epoch(train)  [1][ 2050/24827]  lr: 1.0000e-02  eta: 16:14:47  time: 0.1975  data_time: 0.0033  memory: 3033  loss: 5.8589  loss_cls: 4.1207  loss_bbox: 0.9806  loss_iou: 0.7575
05/14 04:06:38 - mmengine - INFO - Epoch(train)  [1][ 2100/24827]  lr: 1.0000e-02  eta: 16:14:25  time: 0.1959  data_time: 0.0034  memory: 3033  loss: 6.0482  loss_cls: 4.2303  loss_bbox: 1.0391  loss_iou: 0.7788
05/14 04:06:47 - mmengine - INFO - Epoch(train)  [1][ 2150/24827]  lr: 1.0000e-02  eta: 16:13:45  time: 0.1931  data_time: 0.0033  memory: 3033  loss: 6.2950  loss_cls: 4.5148  loss_bbox: 1.0248  loss_iou: 0.7554
05/14 04:06:57 - mmengine - INFO - Epoch(train)  [1][ 2200/24827]  lr: 1.0000e-02  eta: 16:13:39  time: 0.1982  data_time: 0.0033  memory: 3033  loss: 5.7996  loss_cls: 4.0685  loss_bbox: 0.9887  loss_iou: 0.7423
submitit WARNING (2024-05-14 04:07:04,323) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 04:07:04,326) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n512
Job ID: 23594883
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:15
CPU Efficiency: 10.12% of 01:21:30 core-walltime
Job Wall-clock time: 00:08:09
Memory Utilized: 1.63 GB
Memory Efficiency: 1.78% of 91.80 GB
