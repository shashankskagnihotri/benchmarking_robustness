submitit INFO (2024-05-14 03:47:20,470) - Starting with JobEnvironment(job_id=23594868, hostname=uc2n512.localdomain, local_rank=0(1), node=0(1), global_rank=0(1))
submitit INFO (2024-05-14 03:47:20,471) - Loading pickle: /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/work_dir/sparse_rcnn_r101_voc0712/23594868_submitted.pkl
05/14 03:47:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1989233676
    GPU 0: Tesla V100-SXM2-32GB
    CUDA_HOME: /opt/bwhpc/common/devel/cuda/11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-10)
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1989233676
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

05/14 03:47:25 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'data/VOCdevkit/'
dataset_type = 'VOCDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 36
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_input',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=4,
        out_channels=256,
        start_level=0,
        type='FPN'),
    roi_head=dict(
        bbox_head=[
            dict(
                bbox_coder=dict(
                    clip_border=False,
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.5,
                        0.5,
                        1.0,
                        1.0,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                dropout=0.0,
                dynamic_conv_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    feat_channels=64,
                    in_channels=256,
                    input_feat_shape=7,
                    norm_cfg=dict(type='LN'),
                    out_channels=256,
                    type='DynamicConv'),
                feedforward_channels=2048,
                ffn_act_cfg=dict(inplace=True, type='ReLU'),
                in_channels=256,
                loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
                loss_cls=dict(
                    alpha=0.25,
                    gamma=2.0,
                    loss_weight=2.0,
                    type='FocalLoss',
                    use_sigmoid=True),
                loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
                num_classes=80,
                num_cls_fcs=1,
                num_ffn_fcs=2,
                num_heads=8,
                num_reg_fcs=3,
                type='DIIHead'),
            dict(
                bbox_coder=dict(
                    clip_border=False,
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.5,
                        0.5,
                        1.0,
                        1.0,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                dropout=0.0,
                dynamic_conv_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    feat_channels=64,
                    in_channels=256,
                    input_feat_shape=7,
                    norm_cfg=dict(type='LN'),
                    out_channels=256,
                    type='DynamicConv'),
                feedforward_channels=2048,
                ffn_act_cfg=dict(inplace=True, type='ReLU'),
                in_channels=256,
                loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
                loss_cls=dict(
                    alpha=0.25,
                    gamma=2.0,
                    loss_weight=2.0,
                    type='FocalLoss',
                    use_sigmoid=True),
                loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
                num_classes=80,
                num_cls_fcs=1,
                num_ffn_fcs=2,
                num_heads=8,
                num_reg_fcs=3,
                type='DIIHead'),
            dict(
                bbox_coder=dict(
                    clip_border=False,
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.5,
                        0.5,
                        1.0,
                        1.0,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                dropout=0.0,
                dynamic_conv_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    feat_channels=64,
                    in_channels=256,
                    input_feat_shape=7,
                    norm_cfg=dict(type='LN'),
                    out_channels=256,
                    type='DynamicConv'),
                feedforward_channels=2048,
                ffn_act_cfg=dict(inplace=True, type='ReLU'),
                in_channels=256,
                loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
                loss_cls=dict(
                    alpha=0.25,
                    gamma=2.0,
                    loss_weight=2.0,
                    type='FocalLoss',
                    use_sigmoid=True),
                loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
                num_classes=80,
                num_cls_fcs=1,
                num_ffn_fcs=2,
                num_heads=8,
                num_reg_fcs=3,
                type='DIIHead'),
            dict(
                bbox_coder=dict(
                    clip_border=False,
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.5,
                        0.5,
                        1.0,
                        1.0,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                dropout=0.0,
                dynamic_conv_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    feat_channels=64,
                    in_channels=256,
                    input_feat_shape=7,
                    norm_cfg=dict(type='LN'),
                    out_channels=256,
                    type='DynamicConv'),
                feedforward_channels=2048,
                ffn_act_cfg=dict(inplace=True, type='ReLU'),
                in_channels=256,
                loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
                loss_cls=dict(
                    alpha=0.25,
                    gamma=2.0,
                    loss_weight=2.0,
                    type='FocalLoss',
                    use_sigmoid=True),
                loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
                num_classes=80,
                num_cls_fcs=1,
                num_ffn_fcs=2,
                num_heads=8,
                num_reg_fcs=3,
                type='DIIHead'),
            dict(
                bbox_coder=dict(
                    clip_border=False,
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.5,
                        0.5,
                        1.0,
                        1.0,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                dropout=0.0,
                dynamic_conv_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    feat_channels=64,
                    in_channels=256,
                    input_feat_shape=7,
                    norm_cfg=dict(type='LN'),
                    out_channels=256,
                    type='DynamicConv'),
                feedforward_channels=2048,
                ffn_act_cfg=dict(inplace=True, type='ReLU'),
                in_channels=256,
                loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
                loss_cls=dict(
                    alpha=0.25,
                    gamma=2.0,
                    loss_weight=2.0,
                    type='FocalLoss',
                    use_sigmoid=True),
                loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
                num_classes=80,
                num_cls_fcs=1,
                num_ffn_fcs=2,
                num_heads=8,
                num_reg_fcs=3,
                type='DIIHead'),
            dict(
                bbox_coder=dict(
                    clip_border=False,
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.5,
                        0.5,
                        1.0,
                        1.0,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                dropout=0.0,
                dynamic_conv_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    feat_channels=64,
                    in_channels=256,
                    input_feat_shape=7,
                    norm_cfg=dict(type='LN'),
                    out_channels=256,
                    type='DynamicConv'),
                feedforward_channels=2048,
                ffn_act_cfg=dict(inplace=True, type='ReLU'),
                in_channels=256,
                loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
                loss_cls=dict(
                    alpha=0.25,
                    gamma=2.0,
                    loss_weight=2.0,
                    type='FocalLoss',
                    use_sigmoid=True),
                loss_iou=dict(loss_weight=2.0, type='GIoULoss'),
                num_classes=80,
                num_cls_fcs=1,
                num_ffn_fcs=2,
                num_heads=8,
                num_reg_fcs=3,
                type='DIIHead'),
        ],
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=2, type='RoIAlign'),
            type='SingleRoIExtractor'),
        num_stages=6,
        proposal_feature_channel=256,
        stage_loss_weights=[
            1,
            1,
            1,
            1,
            1,
            1,
        ],
        type='SparseRoIHead'),
    rpn_head=dict(
        num_proposals=300,
        proposal_feature_channel=256,
        type='EmbeddingRPNHead'),
    test_cfg=dict(rcnn=dict(max_per_img=300), rpn=None),
    train_cfg=dict(
        rcnn=[
            dict(
                assigner=dict(
                    match_costs=[
                        dict(type='FocalLossCost', weight=2.0),
                        dict(box_format='xyxy', type='BBoxL1Cost', weight=5.0),
                        dict(iou_mode='giou', type='IoUCost', weight=2.0),
                    ],
                    type='HungarianAssigner'),
                pos_weight=1,
                sampler=dict(type='PseudoSampler')),
            dict(
                assigner=dict(
                    match_costs=[
                        dict(type='FocalLossCost', weight=2.0),
                        dict(box_format='xyxy', type='BBoxL1Cost', weight=5.0),
                        dict(iou_mode='giou', type='IoUCost', weight=2.0),
                    ],
                    type='HungarianAssigner'),
                pos_weight=1,
                sampler=dict(type='PseudoSampler')),
            dict(
                assigner=dict(
                    match_costs=[
                        dict(type='FocalLossCost', weight=2.0),
                        dict(box_format='xyxy', type='BBoxL1Cost', weight=5.0),
                        dict(iou_mode='giou', type='IoUCost', weight=2.0),
                    ],
                    type='HungarianAssigner'),
                pos_weight=1,
                sampler=dict(type='PseudoSampler')),
            dict(
                assigner=dict(
                    match_costs=[
                        dict(type='FocalLossCost', weight=2.0),
                        dict(box_format='xyxy', type='BBoxL1Cost', weight=5.0),
                        dict(iou_mode='giou', type='IoUCost', weight=2.0),
                    ],
                    type='HungarianAssigner'),
                pos_weight=1,
                sampler=dict(type='PseudoSampler')),
            dict(
                assigner=dict(
                    match_costs=[
                        dict(type='FocalLossCost', weight=2.0),
                        dict(box_format='xyxy', type='BBoxL1Cost', weight=5.0),
                        dict(iou_mode='giou', type='IoUCost', weight=2.0),
                    ],
                    type='HungarianAssigner'),
                pos_weight=1,
                sampler=dict(type='PseudoSampler')),
            dict(
                assigner=dict(
                    match_costs=[
                        dict(type='FocalLossCost', weight=2.0),
                        dict(box_format='xyxy', type='BBoxL1Cost', weight=5.0),
                        dict(iou_mode='giou', type='IoUCost', weight=2.0),
                    ],
                    type='HungarianAssigner'),
                pos_weight=1,
                sampler=dict(type='PseudoSampler')),
        ],
        rpn=None),
    type='SparseRCNN')
num_proposals = 300
num_stages = 6
optim_wrapper = dict(
    clip_grad=dict(max_norm=1, norm_type=2),
    optimizer=dict(lr=2.5e-05, type='AdamW', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=36,
        gamma=0.1,
        milestones=[
            27,
            33,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=36, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        dataset=dict(
            datasets=[
                dict(
                    ann_file='VOC2007/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2007/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
                dict(
                    ann_file='VOC2012/ImageSets/Main/trainval.txt',
                    backend_args=None,
                    data_prefix=dict(sub_data_root='VOC2012/'),
                    data_root='data/VOCdevkit/',
                    filter_cfg=dict(
                        bbox_min_size=32, filter_empty_gt=True, min_size=32),
                    pipeline=[
                        dict(backend_args=None, type='LoadImageFromFile'),
                        dict(type='LoadAnnotations', with_bbox=True),
                        dict(
                            keep_ratio=True,
                            scale=(
                                1000,
                                600,
                            ),
                            type='Resize'),
                        dict(prob=0.5, type='RandomFlip'),
                        dict(type='PackDetInputs'),
                    ],
                    type='VOCDataset'),
            ],
            ignore_keys=[
                'dataset_type',
            ],
            type='ConcatDataset'),
        times=3,
        type='RepeatDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1000,
        600,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='VOC2007/ImageSets/Main/test.txt',
        backend_args=None,
        data_prefix=dict(sub_data_root='VOC2007/'),
        data_root='data/VOCdevkit/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1000,
                600,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='VOCDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(eval_mode='11points', metric='mAP', type='VOCMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'slurm/results/sparse_rcnn_r101_voc0712'

05/14 03:47:28 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
05/14 03:47:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
05/14 03:47:37 - mmengine - INFO - load model from: torchvision://resnet101
05/14 03:47:37 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
05/14 03:47:38 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

05/14 03:47:38 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
05/14 03:47:38 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
05/14 03:47:38 - mmengine - INFO - Checkpoints will be saved to /pfs/work7/workspace/scratch/ma_ruweber-team_project_fss2024/benchmarking_robustness/object_detection/slurm/results/sparse_rcnn_r101_voc0712.
05/14 03:47:52 - mmengine - INFO - Epoch(train)  [1][   50/24827]  lr: 2.4775e-06  eta: 2 days, 21:28:57  time: 0.2799  data_time: 0.0125  memory: 4976  grad_norm: 210616.7602  loss: 70.8730  s0.loss_cls: 2.5633  s0.pos_acc: 0.0000  s0.loss_bbox: 6.0329  s0.loss_iou: 1.9595  s1.loss_cls: 2.6743  s1.pos_acc: 0.0000  s1.loss_bbox: 6.4793  s1.loss_iou: 2.1370  s2.loss_cls: 2.8221  s2.pos_acc: 0.0000  s2.loss_bbox: 7.1594  s2.loss_iou: 2.6361  s3.loss_cls: 2.9193  s3.pos_acc: 0.0000  s3.loss_bbox: 10.3280  s3.loss_iou: 2.7541  s4.loss_cls: 2.6006  s4.pos_acc: 0.0000  s4.loss_bbox: 6.8645  s4.loss_iou: 2.3431  s5.loss_cls: 2.7564  s5.pos_acc: 16.6667  s5.loss_bbox: 3.9072  s5.loss_iou: 1.9358
05/14 03:48:05 - mmengine - INFO - Epoch(train)  [1][  100/24827]  lr: 4.9800e-06  eta: 2 days, 19:13:47  time: 0.2618  data_time: 0.0048  memory: 4976  grad_norm: 143105.0573  loss: 52.8526  s0.loss_cls: 2.6549  s0.pos_acc: 0.0000  s0.loss_bbox: 4.8227  s0.loss_iou: 1.7546  s1.loss_cls: 2.7731  s1.pos_acc: 0.0000  s1.loss_bbox: 4.3487  s1.loss_iou: 1.8080  s2.loss_cls: 2.7439  s2.pos_acc: 0.0000  s2.loss_bbox: 4.4323  s2.loss_iou: 2.1888  s3.loss_cls: 2.8524  s3.pos_acc: 0.0000  s3.loss_bbox: 5.0287  s3.loss_iou: 2.1453  s4.loss_cls: 2.5783  s4.pos_acc: 0.0000  s4.loss_bbox: 3.5964  s4.loss_iou: 1.8722  s5.loss_cls: 2.5664  s5.pos_acc: 0.0000  s5.loss_bbox: 2.8960  s5.loss_iou: 1.7900
05/14 03:48:18 - mmengine - INFO - Epoch(train)  [1][  150/24827]  lr: 7.4825e-06  eta: 2 days, 18:56:46  time: 0.2674  data_time: 0.0042  memory: 4976  grad_norm: 56667.6873  loss: 40.3971  s0.loss_cls: 2.5387  s0.pos_acc: 0.0000  s0.loss_bbox: 2.9705  s0.loss_iou: 1.4431  s1.loss_cls: 2.5947  s1.pos_acc: 0.0000  s1.loss_bbox: 2.6714  s1.loss_iou: 1.5137  s2.loss_cls: 2.4664  s2.pos_acc: 0.0000  s2.loss_bbox: 2.7056  s2.loss_iou: 1.6535  s3.loss_cls: 2.6243  s3.pos_acc: 0.0000  s3.loss_bbox: 2.4468  s3.loss_iou: 1.5031  s4.loss_cls: 2.6029  s4.pos_acc: 0.0000  s4.loss_bbox: 2.3182  s4.loss_iou: 1.4863  s5.loss_cls: 2.4370  s5.pos_acc: 0.0000  s5.loss_bbox: 2.7279  s5.loss_iou: 1.6930
05/14 03:48:32 - mmengine - INFO - Epoch(train)  [1][  200/24827]  lr: 9.9850e-06  eta: 2 days, 18:53:44  time: 0.2689  data_time: 0.0039  memory: 4976  grad_norm: 15833.1071  loss: 33.8341  s0.loss_cls: 2.4281  s0.pos_acc: 0.0000  s0.loss_bbox: 2.1222  s0.loss_iou: 1.2042  s1.loss_cls: 2.4090  s1.pos_acc: 0.0000  s1.loss_bbox: 1.9480  s1.loss_iou: 1.2259  s2.loss_cls: 2.1701  s2.pos_acc: 25.0000  s2.loss_bbox: 1.9291  s2.loss_iou: 1.2700  s3.loss_cls: 2.4494  s3.pos_acc: 0.0000  s3.loss_bbox: 1.9925  s3.loss_iou: 1.3226  s4.loss_cls: 2.5031  s4.pos_acc: 0.0000  s4.loss_bbox: 1.9192  s4.loss_iou: 1.2978  s5.loss_cls: 2.3193  s5.pos_acc: 0.0000  s5.loss_bbox: 2.0201  s5.loss_iou: 1.3034
05/14 03:48:45 - mmengine - INFO - Epoch(train)  [1][  250/24827]  lr: 1.2487e-05  eta: 2 days, 18:52:49  time: 0.2693  data_time: 0.0038  memory: 4976  grad_norm: 3741.3564  loss: 31.2433  s0.loss_cls: 2.2620  s0.pos_acc: 0.0000  s0.loss_bbox: 1.6596  s0.loss_iou: 1.0491  s1.loss_cls: 2.1987  s1.pos_acc: 0.0000  s1.loss_bbox: 1.6237  s1.loss_iou: 1.0944  s2.loss_cls: 1.9788  s2.pos_acc: 0.0000  s2.loss_bbox: 1.6589  s2.loss_iou: 1.1293  s3.loss_cls: 2.1631  s3.pos_acc: 0.0000  s3.loss_bbox: 1.7791  s3.loss_iou: 1.1575  s4.loss_cls: 2.2733  s4.pos_acc: 0.0000  s4.loss_bbox: 2.1637  s4.loss_iou: 1.3437  s5.loss_cls: 2.0957  s5.pos_acc: 0.0000  s5.loss_bbox: 2.2326  s5.loss_iou: 1.3801
05/14 03:48:58 - mmengine - INFO - Epoch(train)  [1][  300/24827]  lr: 1.4990e-05  eta: 2 days, 18:47:45  time: 0.2675  data_time: 0.0041  memory: 4976  grad_norm: 2396.1037  loss: 29.4452  s0.loss_cls: 2.0556  s0.pos_acc: 0.0000  s0.loss_bbox: 1.5337  s0.loss_iou: 1.0983  s1.loss_cls: 2.0007  s1.pos_acc: 0.0000  s1.loss_bbox: 1.5555  s1.loss_iou: 1.1201  s2.loss_cls: 1.8882  s2.pos_acc: 0.0000  s2.loss_bbox: 1.6747  s2.loss_iou: 1.1731  s3.loss_cls: 2.0837  s3.pos_acc: 0.0000  s3.loss_bbox: 1.7015  s3.loss_iou: 1.1799  s4.loss_cls: 2.0472  s4.pos_acc: 0.0000  s4.loss_bbox: 1.8024  s4.loss_iou: 1.2293  s5.loss_cls: 1.9380  s5.pos_acc: 0.0000  s5.loss_bbox: 2.0264  s5.loss_iou: 1.3367
05/14 03:49:12 - mmengine - INFO - Epoch(train)  [1][  350/24827]  lr: 1.7492e-05  eta: 2 days, 18:58:42  time: 0.2744  data_time: 0.0040  memory: 4976  grad_norm: 1078.7325  loss: 30.4194  s0.loss_cls: 2.0584  s0.pos_acc: 25.0000  s0.loss_bbox: 1.7035  s0.loss_iou: 1.0531  s1.loss_cls: 1.9428  s1.pos_acc: 25.0000  s1.loss_bbox: 1.6721  s1.loss_iou: 1.0597  s2.loss_cls: 1.8944  s2.pos_acc: 50.0000  s2.loss_bbox: 1.8162  s2.loss_iou: 1.1353  s3.loss_cls: 1.9066  s3.pos_acc: 50.0000  s3.loss_bbox: 1.8696  s3.loss_iou: 1.1788  s4.loss_cls: 1.9052  s4.pos_acc: 50.0000  s4.loss_bbox: 2.1804  s4.loss_iou: 1.2869  s5.loss_cls: 1.8290  s5.pos_acc: 50.0000  s5.loss_bbox: 2.4960  s5.loss_iou: 1.4313
05/14 03:49:26 - mmengine - INFO - Epoch(train)  [1][  400/24827]  lr: 1.9995e-05  eta: 2 days, 19:12:07  time: 0.2772  data_time: 0.0040  memory: 4976  grad_norm: 699.5818  loss: 28.2455  s0.loss_cls: 1.9717  s0.pos_acc: 33.3333  s0.loss_bbox: 1.5660  s0.loss_iou: 1.0680  s1.loss_cls: 1.8944  s1.pos_acc: 0.0000  s1.loss_bbox: 1.6123  s1.loss_iou: 1.0571  s2.loss_cls: 1.9053  s2.pos_acc: 0.0000  s2.loss_bbox: 1.7205  s2.loss_iou: 1.1096  s3.loss_cls: 1.8906  s3.pos_acc: 0.0000  s3.loss_bbox: 1.6846  s3.loss_iou: 1.1095  s4.loss_cls: 1.9532  s4.pos_acc: 0.0000  s4.loss_bbox: 1.7919  s4.loss_iou: 1.1517  s5.loss_cls: 1.8471  s5.pos_acc: 0.0000  s5.loss_bbox: 1.7708  s5.loss_iou: 1.1413
05/14 03:49:40 - mmengine - INFO - Epoch(train)  [1][  450/24827]  lr: 2.2497e-05  eta: 2 days, 19:11:57  time: 0.2708  data_time: 0.0046  memory: 4976  grad_norm: 557.8445  loss: 28.5367  s0.loss_cls: 1.9698  s0.pos_acc: 0.0000  s0.loss_bbox: 1.5945  s0.loss_iou: 1.0287  s1.loss_cls: 1.8474  s1.pos_acc: 11.1111  s1.loss_bbox: 1.6935  s1.loss_iou: 1.0750  s2.loss_cls: 1.7941  s2.pos_acc: 33.3333  s2.loss_bbox: 1.7802  s2.loss_iou: 1.1364  s3.loss_cls: 1.8645  s3.pos_acc: 22.2222  s3.loss_bbox: 1.8241  s3.loss_iou: 1.1413  s4.loss_cls: 1.8484  s4.pos_acc: 22.2222  s4.loss_bbox: 1.9006  s4.loss_iou: 1.1632  s5.loss_cls: 1.8026  s5.pos_acc: 33.3333  s5.loss_bbox: 1.9130  s5.loss_iou: 1.1594
05/14 03:49:53 - mmengine - INFO - Epoch(train)  [1][  500/24827]  lr: 2.5000e-05  eta: 2 days, 19:05:27  time: 0.2666  data_time: 0.0049  memory: 4976  grad_norm: 551.0620  loss: 27.0889  s0.loss_cls: 1.9275  s0.pos_acc: 0.0000  s0.loss_bbox: 1.4463  s0.loss_iou: 1.0038  s1.loss_cls: 1.8984  s1.pos_acc: 50.0000  s1.loss_bbox: 1.3646  s1.loss_iou: 0.9741  s2.loss_cls: 1.8776  s2.pos_acc: 50.0000  s2.loss_bbox: 1.5527  s2.loss_iou: 1.0446  s3.loss_cls: 1.8683  s3.pos_acc: 50.0000  s3.loss_bbox: 1.8348  s3.loss_iou: 1.2210  s4.loss_cls: 1.8994  s4.pos_acc: 50.0000  s4.loss_bbox: 1.5958  s4.loss_iou: 1.0757  s5.loss_cls: 1.8069  s5.pos_acc: 50.0000  s5.loss_bbox: 1.6165  s5.loss_iou: 1.0810
05/14 03:50:06 - mmengine - INFO - Epoch(train)  [1][  550/24827]  lr: 2.5000e-05  eta: 2 days, 18:57:58  time: 0.2650  data_time: 0.0046  memory: 4976  grad_norm: 389.4244  loss: 28.8665  s0.loss_cls: 1.8029  s0.pos_acc: 0.0000  s0.loss_bbox: 1.6388  s0.loss_iou: 1.1312  s1.loss_cls: 1.8330  s1.pos_acc: 25.0000  s1.loss_bbox: 1.5775  s1.loss_iou: 1.0902  s2.loss_cls: 1.7889  s2.pos_acc: 25.0000  s2.loss_bbox: 1.7223  s2.loss_iou: 1.1504  s3.loss_cls: 1.7328  s3.pos_acc: 25.0000  s3.loss_bbox: 1.8211  s3.loss_iou: 1.1876  s4.loss_cls: 1.7393  s4.pos_acc: 25.0000  s4.loss_bbox: 2.1555  s4.loss_iou: 1.2345  s5.loss_cls: 1.7708  s5.pos_acc: 25.0000  s5.loss_bbox: 2.1393  s5.loss_iou: 1.3504
05/14 03:50:19 - mmengine - INFO - Epoch(train)  [1][  600/24827]  lr: 2.5000e-05  eta: 2 days, 18:52:21  time: 0.2656  data_time: 0.0042  memory: 4976  grad_norm: 288.7447  loss: 26.2022  s0.loss_cls: 1.8306  s0.pos_acc: 0.0000  s0.loss_bbox: 1.4501  s0.loss_iou: 0.9952  s1.loss_cls: 1.7702  s1.pos_acc: 0.0000  s1.loss_bbox: 1.3888  s1.loss_iou: 0.9706  s2.loss_cls: 1.7324  s2.pos_acc: 0.0000  s2.loss_bbox: 1.4753  s2.loss_iou: 1.0443  s3.loss_cls: 1.7354  s3.pos_acc: 0.0000  s3.loss_bbox: 1.5053  s3.loss_iou: 1.0546  s4.loss_cls: 1.7558  s4.pos_acc: 0.0000  s4.loss_bbox: 1.5908  s4.loss_iou: 1.0995  s5.loss_cls: 1.6914  s5.pos_acc: 0.0000  s5.loss_bbox: 1.8893  s5.loss_iou: 1.2223
05/14 03:50:32 - mmengine - INFO - Epoch(train)  [1][  650/24827]  lr: 2.5000e-05  eta: 2 days, 18:43:10  time: 0.2617  data_time: 0.0042  memory: 4976  grad_norm: 275.0748  loss: 28.1404  s0.loss_cls: 1.8654  s0.pos_acc: 50.0000  s0.loss_bbox: 1.4863  s0.loss_iou: 0.9805  s1.loss_cls: 1.8363  s1.pos_acc: 62.5000  s1.loss_bbox: 1.3986  s1.loss_iou: 0.9759  s2.loss_cls: 1.8112  s2.pos_acc: 62.5000  s2.loss_bbox: 1.5418  s2.loss_iou: 1.0280  s3.loss_cls: 1.8029  s3.pos_acc: 62.5000  s3.loss_bbox: 1.7337  s3.loss_iou: 1.0925  s4.loss_cls: 1.7719  s4.pos_acc: 62.5000  s4.loss_bbox: 2.0486  s4.loss_iou: 1.2109  s5.loss_cls: 1.7799  s5.pos_acc: 62.5000  s5.loss_bbox: 2.3846  s5.loss_iou: 1.3912
05/14 03:50:45 - mmengine - INFO - Epoch(train)  [1][  700/24827]  lr: 2.5000e-05  eta: 2 days, 18:33:43  time: 0.2603  data_time: 0.0041  memory: 4976  grad_norm: 244.8044  loss: 26.2945  s0.loss_cls: 1.8161  s0.pos_acc: 0.0000  s0.loss_bbox: 1.3672  s0.loss_iou: 0.9896  s1.loss_cls: 1.8081  s1.pos_acc: 0.0000  s1.loss_bbox: 1.3002  s1.loss_iou: 0.9735  s2.loss_cls: 1.7471  s2.pos_acc: 0.0000  s2.loss_bbox: 1.5030  s2.loss_iou: 1.0550  s3.loss_cls: 1.7978  s3.pos_acc: 0.0000  s3.loss_bbox: 1.5607  s3.loss_iou: 1.1094  s4.loss_cls: 1.7663  s4.pos_acc: 0.0000  s4.loss_bbox: 1.6158  s4.loss_iou: 1.1044  s5.loss_cls: 1.7822  s5.pos_acc: 0.0000  s5.loss_bbox: 1.7808  s5.loss_iou: 1.2173
05/14 03:50:59 - mmengine - INFO - Epoch(train)  [1][  750/24827]  lr: 2.5000e-05  eta: 2 days, 18:30:04  time: 0.2649  data_time: 0.0040  memory: 4976  grad_norm: 218.1291  loss: 25.9554  s0.loss_cls: 1.7719  s0.pos_acc: 0.0000  s0.loss_bbox: 1.4197  s0.loss_iou: 0.9955  s1.loss_cls: 1.7482  s1.pos_acc: 0.0000  s1.loss_bbox: 1.1963  s1.loss_iou: 0.9007  s2.loss_cls: 1.7406  s2.pos_acc: 0.0000  s2.loss_bbox: 1.3567  s2.loss_iou: 0.9749  s3.loss_cls: 1.7691  s3.pos_acc: 0.0000  s3.loss_bbox: 1.5947  s3.loss_iou: 1.1082  s4.loss_cls: 1.7108  s4.pos_acc: 0.0000  s4.loss_bbox: 1.7063  s4.loss_iou: 1.0980  s5.loss_cls: 1.7491  s5.pos_acc: 0.0000  s5.loss_bbox: 1.8927  s5.loss_iou: 1.2220
05/14 03:51:12 - mmengine - INFO - Epoch(train)  [1][  800/24827]  lr: 2.5000e-05  eta: 2 days, 18:24:55  time: 0.2628  data_time: 0.0048  memory: 4976  grad_norm: 223.2642  loss: 24.2636  s0.loss_cls: 1.7751  s0.pos_acc: 66.6667  s0.loss_bbox: 1.3357  s0.loss_iou: 0.9113  s1.loss_cls: 1.7291  s1.pos_acc: 77.7778  s1.loss_bbox: 1.2180  s1.loss_iou: 0.8675  s2.loss_cls: 1.7389  s2.pos_acc: 66.6667  s2.loss_bbox: 1.3412  s2.loss_iou: 0.9479  s3.loss_cls: 1.7468  s3.pos_acc: 77.7778  s3.loss_bbox: 1.3325  s3.loss_iou: 0.9186  s4.loss_cls: 1.7531  s4.pos_acc: 77.7778  s4.loss_bbox: 1.3291  s4.loss_iou: 0.9259  s5.loss_cls: 1.7446  s5.pos_acc: 77.7778  s5.loss_bbox: 1.5997  s5.loss_iou: 1.0487
05/14 03:51:25 - mmengine - INFO - Epoch(train)  [1][  850/24827]  lr: 2.5000e-05  eta: 2 days, 18:19:46  time: 0.2621  data_time: 0.0041  memory: 4976  grad_norm: 215.8046  loss: 23.6801  s0.loss_cls: 1.7721  s0.pos_acc: 0.0000  s0.loss_bbox: 1.1891  s0.loss_iou: 0.8801  s1.loss_cls: 1.7576  s1.pos_acc: 0.0000  s1.loss_bbox: 1.2632  s1.loss_iou: 0.9380  s2.loss_cls: 1.7441  s2.pos_acc: 0.0000  s2.loss_bbox: 1.2633  s2.loss_iou: 0.9261  s3.loss_cls: 1.7323  s3.pos_acc: 0.0000  s3.loss_bbox: 1.2979  s3.loss_iou: 0.9354  s4.loss_cls: 1.7445  s4.pos_acc: 0.0000  s4.loss_bbox: 1.2424  s4.loss_iou: 0.9284  s5.loss_cls: 1.7397  s5.pos_acc: 0.0000  s5.loss_bbox: 1.3382  s5.loss_iou: 0.9876
05/14 03:51:38 - mmengine - INFO - Epoch(train)  [1][  900/24827]  lr: 2.5000e-05  eta: 2 days, 18:17:12  time: 0.2646  data_time: 0.0042  memory: 4976  grad_norm: 200.6772  loss: 24.6912  s0.loss_cls: 1.7857  s0.pos_acc: 38.4615  s0.loss_bbox: 1.1691  s0.loss_iou: 0.8965  s1.loss_cls: 1.8134  s1.pos_acc: 53.8462  s1.loss_bbox: 1.2081  s1.loss_iou: 0.9389  s2.loss_cls: 1.7584  s2.pos_acc: 61.5385  s2.loss_bbox: 1.3167  s2.loss_iou: 0.9885  s3.loss_cls: 1.7686  s3.pos_acc: 53.8462  s3.loss_bbox: 1.3199  s3.loss_iou: 1.0103  s4.loss_cls: 1.7788  s4.pos_acc: 61.5385  s4.loss_bbox: 1.4510  s4.loss_iou: 1.0618  s5.loss_cls: 1.7788  s5.pos_acc: 61.5385  s5.loss_bbox: 1.5518  s5.loss_iou: 1.0948
05/14 03:51:51 - mmengine - INFO - Epoch(train)  [1][  950/24827]  lr: 2.5000e-05  eta: 2 days, 18:15:52  time: 0.2658  data_time: 0.0042  memory: 4976  grad_norm: 219.5301  loss: 24.5991  s0.loss_cls: 1.8002  s0.pos_acc: 100.0000  s0.loss_bbox: 1.2940  s0.loss_iou: 0.9298  s1.loss_cls: 1.8413  s1.pos_acc: 0.0000  s1.loss_bbox: 1.2295  s1.loss_iou: 0.9298  s2.loss_cls: 1.8262  s2.pos_acc: 0.0000  s2.loss_bbox: 1.1925  s2.loss_iou: 0.8887  s3.loss_cls: 1.8126  s3.pos_acc: 0.0000  s3.loss_bbox: 1.2982  s3.loss_iou: 0.9307  s4.loss_cls: 1.8071  s4.pos_acc: 100.0000  s4.loss_bbox: 1.4398  s4.loss_iou: 1.0239  s5.loss_cls: 1.8071  s5.pos_acc: 0.0000  s5.loss_bbox: 1.5130  s5.loss_iou: 1.0347
05/14 03:52:05 - mmengine - INFO - Exp name: sparse_rcnn_r101_voc0712_20240514_034724
05/14 03:52:05 - mmengine - INFO - Epoch(train)  [1][ 1000/24827]  lr: 2.5000e-05  eta: 2 days, 18:12:12  time: 0.2626  data_time: 0.0042  memory: 4976  grad_norm: 196.6229  loss: 24.3694  s0.loss_cls: 1.7704  s0.pos_acc: 0.0000  s0.loss_bbox: 1.1490  s0.loss_iou: 0.8402  s1.loss_cls: 1.7676  s1.pos_acc: 0.0000  s1.loss_bbox: 1.1565  s1.loss_iou: 0.8560  s2.loss_cls: 1.7443  s2.pos_acc: 0.0000  s2.loss_bbox: 1.2264  s2.loss_iou: 0.9029  s3.loss_cls: 1.7306  s3.pos_acc: 0.0000  s3.loss_bbox: 1.3071  s3.loss_iou: 0.9235  s4.loss_cls: 1.6988  s4.pos_acc: 0.0000  s4.loss_bbox: 1.5986  s4.loss_iou: 1.0465  s5.loss_cls: 1.6851  s5.pos_acc: 0.0000  s5.loss_bbox: 1.8038  s5.loss_iou: 1.1622
05/14 03:52:18 - mmengine - INFO - Epoch(train)  [1][ 1050/24827]  lr: 2.5000e-05  eta: 2 days, 18:10:26  time: 0.2648  data_time: 0.0041  memory: 4976  grad_norm: 192.1273  loss: 23.6761  s0.loss_cls: 1.7673  s0.pos_acc: 0.0000  s0.loss_bbox: 1.1613  s0.loss_iou: 0.8598  s1.loss_cls: 1.7415  s1.pos_acc: 0.0000  s1.loss_bbox: 1.1355  s1.loss_iou: 0.8562  s2.loss_cls: 1.7461  s2.pos_acc: 0.0000  s2.loss_bbox: 1.1357  s2.loss_iou: 0.8621  s3.loss_cls: 1.7544  s3.pos_acc: 0.0000  s3.loss_bbox: 1.3094  s3.loss_iou: 0.9364  s4.loss_cls: 1.7012  s4.pos_acc: 0.0000  s4.loss_bbox: 1.4381  s4.loss_iou: 0.9879  s5.loss_cls: 1.7227  s5.pos_acc: 0.0000  s5.loss_bbox: 1.5265  s5.loss_iou: 1.0340
05/14 03:52:31 - mmengine - INFO - Epoch(train)  [1][ 1100/24827]  lr: 2.5000e-05  eta: 2 days, 18:10:09  time: 0.2668  data_time: 0.0041  memory: 4976  grad_norm: 199.2520  loss: 23.5159  s0.loss_cls: 1.7350  s0.pos_acc: 0.0000  s0.loss_bbox: 1.1449  s0.loss_iou: 0.8312  s1.loss_cls: 1.7502  s1.pos_acc: 50.0000  s1.loss_bbox: 1.2342  s1.loss_iou: 0.8783  s2.loss_cls: 1.7889  s2.pos_acc: 50.0000  s2.loss_bbox: 1.1368  s2.loss_iou: 0.8233  s3.loss_cls: 1.7797  s3.pos_acc: 50.0000  s3.loss_bbox: 1.2739  s3.loss_iou: 0.9113  s4.loss_cls: 1.7741  s4.pos_acc: 50.0000  s4.loss_bbox: 1.2409  s4.loss_iou: 0.8996  s5.loss_cls: 1.7716  s5.pos_acc: 50.0000  s5.loss_bbox: 1.5212  s5.loss_iou: 1.0210
05/14 03:52:44 - mmengine - INFO - Epoch(train)  [1][ 1150/24827]  lr: 2.5000e-05  eta: 2 days, 18:07:42  time: 0.2634  data_time: 0.0047  memory: 4976  grad_norm: 175.6707  loss: 23.4674  s0.loss_cls: 1.7321  s0.pos_acc: 28.5714  s0.loss_bbox: 1.0601  s0.loss_iou: 0.8411  s1.loss_cls: 1.6974  s1.pos_acc: 42.8571  s1.loss_bbox: 1.2060  s1.loss_iou: 0.9235  s2.loss_cls: 1.7237  s2.pos_acc: 28.5714  s2.loss_bbox: 1.1862  s2.loss_iou: 0.9223  s3.loss_cls: 1.7066  s3.pos_acc: 28.5714  s3.loss_bbox: 1.2701  s3.loss_iou: 0.9586  s4.loss_cls: 1.7036  s4.pos_acc: 28.5714  s4.loss_bbox: 1.3586  s4.loss_iou: 1.0056  s5.loss_cls: 1.6978  s5.pos_acc: 14.2857  s5.loss_bbox: 1.4166  s5.loss_iou: 1.0575
05/14 03:52:58 - mmengine - INFO - Epoch(train)  [1][ 1200/24827]  lr: 2.5000e-05  eta: 2 days, 18:06:52  time: 0.2657  data_time: 0.0042  memory: 4976  grad_norm: 192.5656  loss: 23.4006  s0.loss_cls: 1.7406  s0.pos_acc: 25.0000  s0.loss_bbox: 1.0469  s0.loss_iou: 0.8720  s1.loss_cls: 1.7379  s1.pos_acc: 0.0000  s1.loss_bbox: 1.0867  s1.loss_iou: 0.9086  s2.loss_cls: 1.7454  s2.pos_acc: 0.0000  s2.loss_bbox: 1.1070  s2.loss_iou: 0.9189  s3.loss_cls: 1.7186  s3.pos_acc: 0.0000  s3.loss_bbox: 1.2126  s3.loss_iou: 0.9778  s4.loss_cls: 1.7046  s4.pos_acc: 0.0000  s4.loss_bbox: 1.3576  s4.loss_iou: 1.0231  s5.loss_cls: 1.7042  s5.pos_acc: 0.0000  s5.loss_bbox: 1.4574  s5.loss_iou: 1.0810
05/14 03:53:11 - mmengine - INFO - Epoch(train)  [1][ 1250/24827]  lr: 2.5000e-05  eta: 2 days, 18:05:29  time: 0.2647  data_time: 0.0046  memory: 4976  grad_norm: 203.2818  loss: 22.7345  s0.loss_cls: 1.7060  s0.pos_acc: 0.0000  s0.loss_bbox: 1.0991  s0.loss_iou: 0.8017  s1.loss_cls: 1.7671  s1.pos_acc: 0.0000  s1.loss_bbox: 1.1112  s1.loss_iou: 0.8267  s2.loss_cls: 1.7562  s2.pos_acc: 0.0000  s2.loss_bbox: 1.1464  s2.loss_iou: 0.8590  s3.loss_cls: 1.7453  s3.pos_acc: 0.0000  s3.loss_bbox: 1.2337  s3.loss_iou: 0.8845  s4.loss_cls: 1.7362  s4.pos_acc: 0.0000  s4.loss_bbox: 1.2069  s4.loss_iou: 0.8754  s5.loss_cls: 1.7275  s5.pos_acc: 0.0000  s5.loss_bbox: 1.3244  s5.loss_iou: 0.9272
05/14 03:53:24 - mmengine - INFO - Epoch(train)  [1][ 1300/24827]  lr: 2.5000e-05  eta: 2 days, 18:03:57  time: 0.2643  data_time: 0.0041  memory: 4976  grad_norm: 181.3260  loss: 23.2062  s0.loss_cls: 1.7576  s0.pos_acc: 33.3333  s0.loss_bbox: 1.1223  s0.loss_iou: 0.8513  s1.loss_cls: 1.7472  s1.pos_acc: 33.3333  s1.loss_bbox: 1.0914  s1.loss_iou: 0.8416  s2.loss_cls: 1.7349  s2.pos_acc: 33.3333  s2.loss_bbox: 1.1934  s2.loss_iou: 0.8902  s3.loss_cls: 1.7680  s3.pos_acc: 33.3333  s3.loss_bbox: 1.2291  s3.loss_iou: 0.9164  s4.loss_cls: 1.7495  s4.pos_acc: 33.3333  s4.loss_bbox: 1.2518  s4.loss_iou: 0.9418  s5.loss_cls: 1.7622  s5.pos_acc: 33.3333  s5.loss_bbox: 1.3769  s5.loss_iou: 0.9806
05/14 03:53:37 - mmengine - INFO - Epoch(train)  [1][ 1350/24827]  lr: 2.5000e-05  eta: 2 days, 18:02:43  time: 0.2646  data_time: 0.0041  memory: 4976  grad_norm: 179.1627  loss: 22.0106  s0.loss_cls: 1.6784  s0.pos_acc: 16.6667  s0.loss_bbox: 0.9979  s0.loss_iou: 0.8086  s1.loss_cls: 1.7074  s1.pos_acc: 50.0000  s1.loss_bbox: 1.0508  s1.loss_iou: 0.8163  s2.loss_cls: 1.7087  s2.pos_acc: 33.3333  s2.loss_bbox: 1.1089  s2.loss_iou: 0.8547  s3.loss_cls: 1.7152  s3.pos_acc: 50.0000  s3.loss_bbox: 1.1338  s3.loss_iou: 0.8710  s4.loss_cls: 1.7050  s4.pos_acc: 50.0000  s4.loss_bbox: 1.1420  s4.loss_iou: 0.8685  s5.loss_cls: 1.7099  s5.pos_acc: 50.0000  s5.loss_bbox: 1.2232  s5.loss_iou: 0.9102
05/14 03:53:51 - mmengine - INFO - Epoch(train)  [1][ 1400/24827]  lr: 2.5000e-05  eta: 2 days, 18:01:12  time: 0.2640  data_time: 0.0041  memory: 4976  grad_norm: 168.6886  loss: 23.1077  s0.loss_cls: 1.7129  s0.pos_acc: 0.0000  s0.loss_bbox: 1.0141  s0.loss_iou: 0.8866  s1.loss_cls: 1.7640  s1.pos_acc: 0.0000  s1.loss_bbox: 1.0914  s1.loss_iou: 0.9289  s2.loss_cls: 1.7564  s2.pos_acc: 0.0000  s2.loss_bbox: 1.1198  s2.loss_iou: 0.9188  s3.loss_cls: 1.7439  s3.pos_acc: 0.0000  s3.loss_bbox: 1.1632  s3.loss_iou: 0.9483  s4.loss_cls: 1.7434  s4.pos_acc: 0.0000  s4.loss_bbox: 1.2293  s4.loss_iou: 1.0047  s5.loss_cls: 1.7388  s5.pos_acc: 0.0000  s5.loss_bbox: 1.2950  s5.loss_iou: 1.0483
05/14 03:54:04 - mmengine - INFO - Epoch(train)  [1][ 1450/24827]  lr: 2.5000e-05  eta: 2 days, 18:00:36  time: 0.2656  data_time: 0.0040  memory: 4976  grad_norm: 169.6894  loss: 22.1764  s0.loss_cls: 1.6650  s0.pos_acc: 50.0000  s0.loss_bbox: 1.0313  s0.loss_iou: 0.8272  s1.loss_cls: 1.6944  s1.pos_acc: 50.0000  s1.loss_bbox: 0.9911  s1.loss_iou: 0.7989  s2.loss_cls: 1.7082  s2.pos_acc: 50.0000  s2.loss_bbox: 1.0592  s2.loss_iou: 0.8386  s3.loss_cls: 1.7066  s3.pos_acc: 50.0000  s3.loss_bbox: 1.1326  s3.loss_iou: 0.8778  s4.loss_cls: 1.6790  s4.pos_acc: 50.0000  s4.loss_bbox: 1.2621  s4.loss_iou: 0.9438  s5.loss_cls: 1.6807  s5.pos_acc: 50.0000  s5.loss_bbox: 1.2933  s5.loss_iou: 0.9870
05/14 03:54:17 - mmengine - INFO - Epoch(train)  [1][ 1500/24827]  lr: 2.5000e-05  eta: 2 days, 18:00:41  time: 0.2669  data_time: 0.0041  memory: 4976  grad_norm: 186.7001  loss: 22.5959  s0.loss_cls: 1.6695  s0.pos_acc: 0.0000  s0.loss_bbox: 1.0090  s0.loss_iou: 0.8334  s1.loss_cls: 1.7490  s1.pos_acc: 0.0000  s1.loss_bbox: 1.0752  s1.loss_iou: 0.8605  s2.loss_cls: 1.7470  s2.pos_acc: 0.0000  s2.loss_bbox: 1.1089  s2.loss_iou: 0.8781  s3.loss_cls: 1.7613  s3.pos_acc: 0.0000  s3.loss_bbox: 1.1709  s3.loss_iou: 0.9297  s4.loss_cls: 1.7409  s4.pos_acc: 0.0000  s4.loss_bbox: 1.1612  s4.loss_iou: 0.9326  s5.loss_cls: 1.7405  s5.pos_acc: 0.0000  s5.loss_bbox: 1.2563  s5.loss_iou: 0.9721
05/14 03:54:30 - mmengine - INFO - Epoch(train)  [1][ 1550/24827]  lr: 2.5000e-05  eta: 2 days, 17:58:59  time: 0.2632  data_time: 0.0041  memory: 4976  grad_norm: 169.2767  loss: 21.9450  s0.loss_cls: 1.6071  s0.pos_acc: 20.0000  s0.loss_bbox: 1.0183  s0.loss_iou: 0.8347  s1.loss_cls: 1.6460  s1.pos_acc: 20.0000  s1.loss_bbox: 1.0272  s1.loss_iou: 0.8463  s2.loss_cls: 1.6505  s2.pos_acc: 20.0000  s2.loss_bbox: 1.1552  s2.loss_iou: 0.9011  s3.loss_cls: 1.6527  s3.pos_acc: 20.0000  s3.loss_bbox: 1.1122  s3.loss_iou: 0.9079  s4.loss_cls: 1.6422  s4.pos_acc: 20.0000  s4.loss_bbox: 1.1818  s4.loss_iou: 0.9276  s5.loss_cls: 1.6231  s5.pos_acc: 20.0000  s5.loss_bbox: 1.2489  s5.loss_iou: 0.9622
05/14 03:54:44 - mmengine - INFO - Epoch(train)  [1][ 1600/24827]  lr: 2.5000e-05  eta: 2 days, 17:59:07  time: 0.2670  data_time: 0.0042  memory: 4976  grad_norm: 170.3409  loss: 21.7277  s0.loss_cls: 1.6800  s0.pos_acc: 25.0000  s0.loss_bbox: 1.0269  s0.loss_iou: 0.8151  s1.loss_cls: 1.6989  s1.pos_acc: 50.0000  s1.loss_bbox: 1.0721  s1.loss_iou: 0.8362  s2.loss_cls: 1.6893  s2.pos_acc: 50.0000  s2.loss_bbox: 1.0251  s2.loss_iou: 0.8037  s3.loss_cls: 1.6967  s3.pos_acc: 50.0000  s3.loss_bbox: 1.0991  s3.loss_iou: 0.8649  s4.loss_cls: 1.6977  s4.pos_acc: 50.0000  s4.loss_bbox: 1.1356  s4.loss_iou: 0.8656  s5.loss_cls: 1.6771  s5.pos_acc: 50.0000  s5.loss_bbox: 1.1608  s5.loss_iou: 0.8829
05/14 03:54:57 - mmengine - INFO - Epoch(train)  [1][ 1650/24827]  lr: 2.5000e-05  eta: 2 days, 17:57:56  time: 0.2641  data_time: 0.0041  memory: 4976  grad_norm: 162.3958  loss: 22.8047  s0.loss_cls: 1.6668  s0.pos_acc: 66.6667  s0.loss_bbox: 1.0560  s0.loss_iou: 0.8310  s1.loss_cls: 1.7374  s1.pos_acc: 66.6667  s1.loss_bbox: 1.0285  s1.loss_iou: 0.8380  s2.loss_cls: 1.7184  s2.pos_acc: 66.6667  s2.loss_bbox: 1.1690  s2.loss_iou: 0.9004  s3.loss_cls: 1.7274  s3.pos_acc: 66.6667  s3.loss_bbox: 1.2029  s3.loss_iou: 0.9269  s4.loss_cls: 1.6965  s4.pos_acc: 100.0000  s4.loss_bbox: 1.2845  s4.loss_iou: 0.9516  s5.loss_cls: 1.6445  s5.pos_acc: 66.6667  s5.loss_bbox: 1.4267  s5.loss_iou: 0.9980
submitit WARNING (2024-05-14 03:55:04,163) - Bypassing signal SIGCONT
submitit ERROR (2024-05-14 03:55:04,198) - Submitted job triggered an exception

============================= JOB FEEDBACK =============================

NodeName=uc2n512
Job ID: 23594868
Cluster: uc2
User/Group: ma_ruweber/ma_ma
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 10
CPU Utilized: 00:08:10
CPU Efficiency: 9.82% of 01:23:10 core-walltime
Job Wall-clock time: 00:08:19
Memory Utilized: 1.66 GB
Memory Efficiency: 1.81% of 91.80 GB
